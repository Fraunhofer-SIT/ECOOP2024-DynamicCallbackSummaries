<java.io.PrintStream: void println(java.lang.String)>
<java.io.PrintStream: void println(java.lang.String)>
<java.io.PrintStream: void println(java.lang.String)>
<java.io.PrintStream: void println(java.lang.String)>
<java.io.PrintStream: void println(java.lang.String)>
<java.io.PrintStream: void println(java.lang.String)>
<java.io.PrintStream: void println(java.lang.String)>
<java.io.PrintStream: void println(java.lang.String)>
<java.io.PrintStream: void println(java.lang.String)>
<java.io.PrintStream: void println(java.lang.String)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.view.GestureDetector: void <init>(android.view.GestureDetector$OnGestureListener)>
<android.view.GestureDetector: void <init>(android.view.GestureDetector$OnGestureListener)>
<android.view.GestureDetector: void <init>(android.view.GestureDetector$OnGestureListener)>
<android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)>
<android.widget.ListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<android.widget.ListView: void setOnScrollListener(android.widget.AbsListView$OnScrollListener)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<java.lang.String: boolean contains(java.lang.CharSequence)>
<java.lang.String: boolean contains(java.lang.CharSequence)>
<java.lang.String: boolean contains(java.lang.CharSequence)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<java.lang.Thread: void <init>(java.lang.Runnable)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<java.util.List: boolean contains(java.lang.Object)>
<java.lang.Thread: void <init>(java.lang.Runnable)>
<java.util.Timer: void schedule(java.util.TimerTask,long,long)>
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>
<org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>
<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>
<org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>
<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>
<org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.Properties: void load(java.io.InputStream)>
<java.util.Properties: void load(java.io.InputStream)>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.io.PrintStream: void println(java.lang.String)>
<java.io.OutputStream: void write(byte[])>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.io.PrintStream: void println(java.lang.String)>
<java.util.Collections: void sort(java.util.List)>
<java.util.Collections: void sort(java.util.List)>
<javax.crypto.Mac: void init(java.security.Key)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.io.PrintStream: void println(java.lang.String)>
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>
<java.io.BufferedReader: void <init>(java.io.Reader)>
<java.io.BufferedReader: java.lang.String readLine()>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.io.PrintStream: void println(java.lang.String)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<java.io.InputStream: int read()>
<java.io.InputStream: int read()>
<java.io.InputStream: int read()>
<java.io.InputStream: int read()>
<java.io.InputStream: int read()>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.InputStream: int read()>
<java.io.InputStream: int read()>
<java.io.InputStream: int read()>
<java.io.InputStream: int read()>
<java.io.InputStream: int read()>
<java.io.InputStream: int read()>
<java.io.InputStream: int read()>
<java.io.OutputStream: void write(byte[])>
<javax.crypto.Cipher: void init(int,java.security.Key)>
<java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>
<java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>
<java.util.List: boolean contains(java.lang.Object)>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.io.OutputStream: void write(byte[])>
<java.util.HashMap: void <init>(java.util.Map)>
<java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>
<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
<java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>
<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>
<org.xml.sax.helpers.AttributesImpl: void <init>(org.xml.sax.Attributes)>
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>
<java.io.Writer: void flush()>
<java.io.Writer: void flush()>
<java.io.Writer: void flush()>
<java.io.Writer: void flush()>
<java.io.Writer: void flush()>
<java.io.Writer: void flush()>
<java.io.Writer: void flush()>
<java.io.Writer: void flush()>
<java.io.Writer: void flush()>
<java.io.Writer: void flush()>
<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>
<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>
