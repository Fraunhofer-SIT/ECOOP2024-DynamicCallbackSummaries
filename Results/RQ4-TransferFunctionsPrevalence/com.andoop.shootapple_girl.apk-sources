<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<java.util.Timer: void schedule(java.util.TimerTask,long)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.VideoView: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<java.util.concurrent.Executor: void execute(java.lang.Runnable)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.io.BufferedWriter: void write(java.lang.String)>
<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>
<android.view.View: void setAnimation(android.view.animation.Animation)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>
<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<java.util.Collections: void sort(java.util.List,java.util.Comparator)>
<org.json.JSONArray: void <init>(java.util.Collection)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>
<java.lang.Thread: void <init>(java.lang.Runnable)>
<java.util.Properties: void load(java.io.InputStream)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<java.util.Timer: void schedule(java.util.TimerTask,long)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.app.Dialog: void <init>(android.content.Context)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>
<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>
<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
<java.io.BufferedReader: void <init>(java.io.Reader,int)>
<java.io.BufferedReader: java.lang.String readLine()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>
<java.io.PrintWriter: void <init>(java.io.Writer)>
<java.io.BufferedReader: void <init>(java.io.Reader)>
<java.io.BufferedReader: java.lang.String readLine()>
<java.lang.String: boolean contains(java.lang.CharSequence)>
<java.lang.String: boolean contains(java.lang.CharSequence)>
<java.io.BufferedReader: void <init>(java.io.Reader,int)>
<java.io.BufferedReader: java.lang.String readLine()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>
<java.io.BufferedReader: void <init>(java.io.Reader)>
<java.io.BufferedReader: java.lang.String readLine()>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<javax.crypto.Mac: void init(java.security.Key)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<java.lang.Thread: void <init>(java.lang.Runnable)>
<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>
<java.io.DataInputStream: int readUnsignedShort()>
<java.io.DataInputStream: int readUnsignedShort()>
<java.io.DataInputStream: java.lang.String readUTF()>
<java.io.DataInputStream: java.lang.String readUTF()>
<java.io.DataInputStream: int readUnsignedShort()>
<java.io.DataInputStream: void readFully(byte[])>
<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>
<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<java.util.List: boolean removeAll(java.util.Collection)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeShort(int)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeInt(int)>
<java.io.DataOutputStream: void writeShort(int)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeInt(int)>
<java.io.DataOutputStream: void writeShort(int)>
<java.io.DataOutputStream: void writeInt(int)>
<java.io.DataOutputStream: void writeShort(int)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeShort(int)>
<java.io.DataOutputStream: void writeShort(int)>
<java.io.DataOutputStream: void writeShort(int)>
<java.io.DataOutputStream: void writeShort(int)>
<java.io.DataOutputStream: void writeShort(int)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeShort(int)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeShort(int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.io.DataOutputStream: void writeShort(int)>
<java.io.DataOutputStream: void writeShort(int)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<java.io.DataOutputStream: void writeShort(int)>
<java.io.DataOutputStream: void writeShort(int)>
<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<java.lang.Thread: void <init>(java.lang.Runnable)>
<java.io.BufferedReader: void <init>(java.io.Reader)>
<java.io.BufferedReader: java.lang.String readLine()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<java.lang.Thread: void <init>(java.lang.Runnable)>
<java.io.BufferedReader: void <init>(java.io.Reader,int)>
<java.io.BufferedReader: java.lang.String readLine()>
<java.io.BufferedReader: java.lang.String readLine()>
<java.lang.Thread: void <init>(java.lang.Runnable)>
<java.util.Timer: void scheduleAtFixedRate(java.util.TimerTask,long,long)>
