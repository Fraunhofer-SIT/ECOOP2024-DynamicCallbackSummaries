<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<android.content.ComponentName: void <init>(android.content.Context,java.lang.String)>
<android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.view.View: void setOnLongClickListener(android.view.View$OnLongClickListener)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.view.LayoutInflater: void setFactory2(android.view.LayoutInflater$Factory2)>
<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>
<android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>
<android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>
<android.os.Parcel: void writeBundle(android.os.Bundle)>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>
<android.os.Parcel: void writeBundle(android.os.Bundle)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>
<android.os.Parcel: void writeBundle(android.os.Bundle)>
<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>
<android.os.Parcel: void writeTypedList(java.util.List)>
<android.os.Parcel: void writeBundle(android.os.Bundle)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.lang.Object[])>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.widget.ListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.view.View: void layout(int,int,int,int)>
<android.view.View: void layout(int,int,int,int)>
<android.view.View: void layout(int,int,int,int)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)>
<android.view.View: void layout(int,int,int,int)>
<java.lang.Runnable: void run()>
<java.lang.Runnable: void run()>
<android.view.View: void layout(int,int,int,int)>
<android.view.View: void layout(int,int,int,int)>
<android.view.View: void layout(int,int,int,int)>
<android.view.View: void layout(int,int,int,int)>
<android.view.View: void layout(int,int,int,int)>
<android.view.View: void layout(int,int,int,int)>
<android.view.View: void layout(int,int,int,int)>
<android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.view.View: void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.view.View: void layout(int,int,int,int)>
<android.view.View: void layout(int,int,int,int)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>
<android.view.View: void layout(int,int,int,int)>
<android.view.View: void layout(int,int,int,int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>
<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>
<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.lang.Object[])>
<android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.widget.SimpleCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[])>
<android.widget.ListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.ListView: void setOnScrollListener(android.widget.AbsListView$OnScrollListener)>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<java.lang.String: boolean contains(java.lang.CharSequence)>
<java.lang.String: boolean contains(java.lang.CharSequence)>
<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>
<android.view.Window: void setCallback(android.view.Window$Callback)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<android.widget.ListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<java.lang.Runnable: void run()>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<android.view.LayoutInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>
<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.view.View: void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>
<android.os.Handler: boolean postAtTime(java.lang.Runnable,java.lang.Object,long)>
<android.view.View: void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>
<android.widget.PopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>
<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<java.lang.Runnable: void run()>
<android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<android.view.MenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)>
<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>
<android.view.View: void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>
<android.view.View: void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>
<android.widget.PopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)>
<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>
<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<android.widget.CheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)>
<android.widget.CheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)>
<android.widget.CompoundButton: void setButtonDrawable(android.graphics.drawable.Drawable)>
<android.widget.CompoundButton: void setButtonDrawable(android.graphics.drawable.Drawable)>
<android.widget.ListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<android.widget.ListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<android.widget.ListView: void setOnScrollListener(android.widget.AbsListView$OnScrollListener)>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.SpannableString: void <init>(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.graphics.drawable.ClipDrawable: void <init>(android.graphics.drawable.Drawable,int,int)>
<android.widget.ProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>
<android.widget.PopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)>
<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<android.view.View: void setOnLongClickListener(android.view.View$OnLongClickListener)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>
<android.view.View: void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>
<java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>
<java.lang.Thread: void <init>(java.lang.Runnable)>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int,java.util.concurrent.ThreadFactory)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.Set: boolean containsAll(java.util.Collection)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.List: boolean removeAll(java.util.Collection)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.io.PrintStream: void println(java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<android.app.Notification$Builder: android.app.Notification$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<java.util.Collections: void sort(java.util.List,java.util.Comparator)>
<java.util.Collections: void sort(java.util.List,java.util.Comparator)>
<java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<java.lang.Runnable: void run()>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent$Callback,android.view.KeyEvent$DispatcherState,java.lang.Object)>
<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent$Callback,android.view.KeyEvent$DispatcherState,java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.view.View: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)>
<android.view.View: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)>
<android.view.View: void postOnAnimationDelayed(java.lang.Runnable,long)>
<java.lang.Runnable: void run()>
<java.lang.Runnable: void run()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>
<java.lang.Runnable: void run()>
<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>
<android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>
<android.os.Parcel: void writeStringList(java.util.List)>
<android.os.Parcel: void writeStringList(java.util.List)>
<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>
<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>
<android.view.View: void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>
<java.lang.Runnable: void run()>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.view.LayoutInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>
<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.io.PrintWriter: void <init>(java.io.Writer)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.lang.Runnable: void run()>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>
<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>
<android.os.Parcel: void writeBundle(android.os.Bundle)>
<android.os.Parcel: void writeBundle(android.os.Bundle)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.io.PrintWriter: void print(java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.Collections: void sort(java.util.List,java.util.Comparator)>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>
<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<android.animation.AnimatorSet: void playTogether(java.util.Collection)>
<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<android.animation.AnimatorSet: void playTogether(java.util.Collection)>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
<android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)>
<android.app.Notification$Builder: android.app.Notification$Builder setSubText(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle setBigContentTitle(java.lang.CharSequence)>
<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle bigText(java.lang.CharSequence)>
<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle setSummaryText(java.lang.CharSequence)>
<android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>
<java.util.List: boolean contains(java.lang.Object)>
<java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>
<java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>
<java.util.HashMap: void <init>(java.util.Map)>
<java.util.HashMap: void <init>(java.util.Map)>
<android.os.Parcel: void writeBundle(android.os.Bundle)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<java.util.Set: boolean addAll(java.util.Collection)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.os.Parcel: void writeBundle(android.os.Bundle)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>
<java.io.BufferedReader: void <init>(java.io.Reader)>
<java.io.BufferedReader: java.lang.String readLine()>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<java.util.List: boolean contains(java.lang.Object)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>
<java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>
<java.util.Collections: void reverse(java.util.List)>
<java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.concurrent.Executor: void execute(java.lang.Runnable)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<java.lang.Thread: void <init>(java.lang.Runnable)>
<java.io.PrintWriter: void <init>(java.io.Writer)>
<java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>
<java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>
<java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>
<java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<java.lang.String: boolean contains(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<java.util.Set: boolean addAll(java.util.Collection)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.facebook.ads.AudienceNetworkAds$InitSettingsBuilder: com.facebook.ads.AudienceNetworkAds$InitSettingsBuilder withInitListener(com.facebook.ads.AudienceNetworkAds$InitListener)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
