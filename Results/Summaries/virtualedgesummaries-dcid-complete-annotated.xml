<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<virtualedges>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.cocos2dx.lib.Cocos2dxActivity" invoketype="instance" subsignature="void runOnUiThread(java.lang.Runnable)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.apache.http.conn.scheme.Scheme" invoketype="instance" subsignature="void &lt;init&gt;(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)"/>
    <targets>
      <direct declaringclass="org.apache.http.conn.scheme.LayeredSocketFactory" index="1" subsignature="java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)" target-position="argument"/>
      <direct declaringclass="org.apache.http.conn.scheme.SocketFactory" index="1" subsignature="boolean isSecure(java.net.Socket)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.animation.TranslateAnimation" invoketype="instance" subsignature="void setInterpolator(android.view.animation.Interpolator)"/>
    <targets>
      <direct declaringclass="android.animation.TimeInterpolator" index="0" subsignature="float getInterpolation(float)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.gson.Gson" invoketype="instance" subsignature="java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)"/>
    <targets>
      <indirect declaringclass="com.google.gson.stream.JsonReader" index="0" subsignature="void &lt;init&gt;(java.io.Reader)" target-position="argument">
        <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.censivn.C3DEngine.core.ᴵˋ" invoketype="instance" subsignature="void setOnTouchListener(android.view.View$OnTouchListener)"/>
    <targets>
      <direct declaringclass="android.view.View$OnTouchListener" index="0" subsignature="boolean onTouch(android.view.View,android.view.MotionEvent)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.appwidget.AppWidgetHostView" invoketype="instance" subsignature="android.graphics.Rect getDefaultPaddingForWidget(android.content.Context,android.content.ComponentName,android.graphics.Rect)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.gms.tasks.Task" invoketype="instance" subsignature="com.google.android.gms.tasks.Task addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener)"/>
    <targets>
      <direct declaringclass="com.google.android.gms.tasks.OnCompleteListener" index="0" subsignature="void onComplete(com.google.android.gms.tasks.Task)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.View" invoketype="instance" subsignature="void setOnSystemUiVisibilityChangeListener(android.view.View$OnSystemUiVisibilityChangeListener)"/>
    <targets>
      <direct declaringclass="android.view.View$OnSystemUiVisibilityChangeListener" index="0" subsignature="void onSystemUiVisibilityChange(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.hardware.SensorManager" invoketype="instance" subsignature="boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)"/>
    <targets>
      <direct declaringclass="android.hardware.SensorEventListener" index="0" subsignature="void onAccuracyChanged(android.hardware.Sensor,int)" target-position="argument"/>
      <direct declaringclass="android.hardware.SensorEventListener" index="0" subsignature="void onSensorChanged(android.hardware.SensorEvent)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.urdukahani.Aapa.TouchImage_Activity" invoketype="instance" subsignature="void postOnAnimation(java.lang.Runnable)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.Handler" invoketype="instance" subsignature="boolean postAtTime(java.lang.Runnable,java.lang.Object,long)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.speech.tts.TextToSpeech" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.pm.PackageManager getPackageManager()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE"  missingEdge="true" >
    <source declaringclass="android.support.v7.app.AlertDialog$Builder" invoketype="instance" subsignature="android.support.v7.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener)"/>
    <targets>
      <direct declaringclass="android.content.DialogInterface$OnClickListener" index="2" subsignature="void onClick(android.content.DialogInterface,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="javax.security.auth.Subject" invoketype="instance" subsignature="void &lt;init&gt;(boolean,java.util.Set,java.util.Set,java.util.Set)"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="3" subsignature="java.lang.Object[] toArray()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="kotlin.io.TextStreamsKt" invoketype="instance" subsignature="java.lang.String readText(java.io.Reader)"/>
    <targets>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.BufferedReader" index="0" subsignature="int read(char[])" target-position="argument"/>
      <direct declaringclass="java.io.BufferedReader" index="0" subsignature="int read(char[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ExpandableListView" invoketype="instance" subsignature="boolean postDelayed(java.lang.Runnable,long)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.AdapterView" invoketype="instance" subsignature="java.lang.Object getItemAtPosition(int)"/>
    <targets>
      <indirect declaringclass="android.widget.ListView" subsignature="void setAdapter(android.widget.ListAdapter)" target-position="base">
        <direct declaringclass="android.widget.Adapter" index="0" subsignature="java.lang.Object getItem(int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.ThreadPoolExecutor" invoketype="instance" subsignature="void &lt;init&gt;(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="4" subsignature="void clear()" target-position="argument"/>
      <direct declaringclass="java.util.concurrent.BlockingQueue" index="4" subsignature="java.lang.Object take()" target-position="argument"/>
      <direct declaringclass="java.util.Queue" index="4" subsignature="boolean offer(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.concurrent.BlockingQueue" index="4" subsignature="java.lang.Object poll(long,java.util.concurrent.TimeUnit)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="4" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.concurrent.ThreadFactory" index="5" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="4" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="mji$a" invoketype="instance" subsignature="void setThreadFactory(java.util.concurrent.ThreadFactory)"/>
    <targets>
      <direct declaringclass="java.util.concurrent.ThreadFactory" index="0" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.TaskStackBuilder" invoketype="instance" subsignature="android.app.TaskStackBuilder create(android.content.Context)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.pm.PackageManager getPackageManager()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.xmlpull.v1.XmlPullParser" invoketype="instance" subsignature="void setInput(java.io.Reader)"/>
    <targets>
      <direct declaringclass="java.io.InputStreamReader" index="0" subsignature="int read(char[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.View" invoketype="instance" subsignature="void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)"/>
    <targets>
      <direct declaringclass="android.view.View$OnCreateContextMenuListener" index="0" subsignature="void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.firebase.remoteconfig.internal.ConfigFetchHttpClient" invoketype="instance" subsignature="b.c.b.o.m.k$a fetch(java.net.HttpURLConnection,java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.util.Map,java.util.Date)"/>
    <targets>
      <direct declaringclass="java.util.Map" index="3" subsignature="java.util.Set entrySet()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.GestureDetector" invoketype="instance" subsignature="void &lt;init&gt;(android.view.GestureDetector$OnGestureListener)"/>
    <targets>
      <direct declaringclass="android.view.GestureDetector$OnGestureListener" index="0" subsignature="boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)" target-position="argument"/>
      <direct declaringclass="android.view.GestureDetector$OnGestureListener" index="0" subsignature="void onShowPress(android.view.MotionEvent)" target-position="argument"/>
      <direct declaringclass="android.view.GestureDetector$OnGestureListener" index="0" subsignature="boolean onDown(android.view.MotionEvent)" target-position="argument"/>
      <direct declaringclass="android.view.GestureDetector$OnGestureListener" index="0" subsignature="boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.Timer" invoketype="instance" subsignature="void schedule(java.util.TimerTask,java.util.Date)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.andengine.opengl.view.RenderSurfaceView" invoketype="instance" subsignature="void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser)"/>
    <targets>
      <direct declaringclass="android.opengl.GLSurfaceView$EGLConfigChooser" index="0" subsignature="javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE"  missingEdge="true">
    <source declaringclass="java.util.concurrent.ThreadPoolExecutor" invoketype="instance" subsignature="void &lt;init&gt;(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.RejectedExecutionHandler)"/>
    <targets>
      <direct declaringclass="java.util.Queue" index="4" subsignature="boolean offer(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="4" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.concurrent.BlockingQueue" index="4" subsignature="java.lang.Object poll(long,java.util.concurrent.TimeUnit)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="4" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.SharedPreferences" invoketype="instance" subsignature="java.util.Set getStringSet(java.lang.String,java.util.Set)"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="1" subsignature="boolean contains(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="1" subsignature="java.lang.Object[] toArray(java.lang.Object[])" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="1" subsignature="boolean add(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="1" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.Properties" invoketype="instance" subsignature="void load(java.io.InputStream)"/>
    <targets>
      <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
      <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read(byte[])" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="kotlin.collections.CollectionsKt" invoketype="instance" subsignature="int collectionSizeOrDefault(java.lang.Iterable,int)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="kotlin.collections.CollectionsKt" invoketype="instance" subsignature="java.util.List distinct(java.lang.Iterable)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.hardware.Camera$Parameters" invoketype="instance" subsignature="void setMeteringAreas(java.util.List)"/>
    <targets>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object get(int)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.apache.http.impl.client.DefaultHttpClient" invoketype="instance" subsignature="java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)"/>
    <targets>
      <direct declaringclass="org.apache.http.HttpRequest" index="1" subsignature="org.apache.http.RequestLine getRequestLine()" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpMessage" index="1" subsignature="org.apache.http.ProtocolVersion getProtocolVersion()" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpMessage" index="1" subsignature="org.apache.http.Header[] getAllHeaders()" target-position="argument"/>
      <direct declaringclass="org.apache.http.client.ResponseHandler" index="2" subsignature="java.lang.Object handleResponse(org.apache.http.HttpResponse)" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpMessage" index="1" subsignature="org.apache.http.params.HttpParams getParams()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.GregorianCalendar" invoketype="instance" subsignature="void &lt;init&gt;(java.util.TimeZone)"/>
    <targets>
      <direct declaringclass="java.util.TimeZone" index="0" subsignature="int getRawOffset()" target-position="argument"/>
      <direct declaringclass="java.util.TimeZone" index="0" subsignature="int getOffset(long)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.Properties" invoketype="instance" subsignature="void save(java.io.OutputStream,java.lang.String)"/>
    <targets>
      <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      <direct declaringclass="java.io.OutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="androidx.room.g" invoketype="instance" subsignature="void &lt;init&gt;(androidx.room.j,java.util.Map,java.util.Map,java.lang.String[])"/>
    <targets>
      <direct declaringclass="java.util.Map" index="1" subsignature="java.util.Set entrySet()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="1" subsignature="java.lang.Object get(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.Set" invoketype="instance" subsignature="boolean containsAll(java.util.Collection)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean contains(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean add(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int hashCode()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.apache.http.impl.client.DefaultHttpClient" invoketype="instance" subsignature="void setCookieStore(org.apache.http.client.CookieStore)"/>
    <targets>
      <direct declaringclass="org.apache.http.client.CookieStore" index="0" subsignature="void addCookie(org.apache.http.cookie.Cookie)" target-position="argument"/>
      <direct declaringclass="org.apache.http.client.CookieStore" index="0" subsignature="java.util.List getCookies()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.ScheduledThreadPoolExecutor" invoketype="instance" subsignature="java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)"/>
    <targets>
      <indirect declaringclass="java.util.concurrent.ScheduledThreadPoolExecutor" subsignature="void &lt;init&gt;(int,java.util.concurrent.ThreadFactory)" target-position="base">
        <direct declaringclass="java.util.concurrent.ThreadFactory" index="1" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
      </indirect>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
      <indirect declaringclass="java.util.concurrent.ThreadPoolExecutor" subsignature="void &lt;init&gt;(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)" target-position="base">
        <direct declaringclass="java.util.concurrent.ThreadFactory" index="5" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" missingEdge="true">
    <source declaringclass="android.support.v7.app.AlertDialog$Builder" invoketype="instance" subsignature="android.support.v7.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener)"/>
    <targets>
      <direct declaringclass="android.content.DialogInterface$OnDismissListener" index="0" subsignature="void onDismiss(android.content.DialogInterface)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.graphics.SurfaceTexture" invoketype="instance" subsignature="void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener,android.os.Handler)"/>
    <targets>
      <direct declaringclass="android.graphics.SurfaceTexture$OnFrameAvailableListener" index="0" subsignature="void onFrameAvailable(android.graphics.SurfaceTexture)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.MenuItem" invoketype="instance" subsignature="android.view.MenuItem setIcon(android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="int getChangingConfigurations()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.apache.http.client.methods.HttpPost" invoketype="instance" subsignature="void setEntity(org.apache.http.HttpEntity)"/>
    <targets>
      <direct declaringclass="org.apache.http.HttpEntity" index="0" subsignature="long getContentLength()" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpEntity" index="0" subsignature="void writeTo(java.io.OutputStream)" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpEntity" index="0" subsignature="boolean isChunked()" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpEntity" index="0" subsignature="org.apache.http.Header getContentEncoding()" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpEntity" index="0" subsignature="java.io.InputStream getContent()" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpEntity" index="0" subsignature="org.apache.http.Header getContentType()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.android.tools.r8.GeneratedOutlineSupport" invoketype="instance" subsignature="void outline42(android.content.SharedPreferences,java.lang.String,boolean)"/>
    <targets>
      <direct declaringclass="android.content.SharedPreferences" index="0" subsignature="boolean getBoolean(java.lang.String,boolean)" target-position="argument"/>
      <direct declaringclass="android.content.SharedPreferences" index="0" subsignature="java.lang.String getString(java.lang.String,java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.content.SharedPreferences" index="0" subsignature="android.content.SharedPreferences$Editor edit()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.ScaleGestureDetector" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.view.ScaleGestureDetector$OnScaleGestureListener)"/>
    <targets>
      <direct declaringclass="android.view.ScaleGestureDetector$OnScaleGestureListener" index="1" subsignature="void onScaleEnd(android.view.ScaleGestureDetector)" target-position="argument"/>
      <direct declaringclass="android.view.ScaleGestureDetector$OnScaleGestureListener" index="1" subsignature="boolean onScale(android.view.ScaleGestureDetector)" target-position="argument"/>
      <direct declaringclass="android.view.ScaleGestureDetector$OnScaleGestureListener" index="1" subsignature="boolean onScaleBegin(android.view.ScaleGestureDetector)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.TextView" invoketype="instance" subsignature="void setImeActionLabel(java.lang.CharSequence,int)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.List" invoketype="instance" subsignature="boolean removeAll(java.util.Collection)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean contains(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="int indexOf(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.logging.XMLFormatter" invoketype="instance" subsignature="java.lang.String getHead(java.util.logging.Handler)"/>
    <targets>
      <direct declaringclass="java.util.logging.Handler" index="0" subsignature="java.lang.String getEncoding()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.PopupWindow" invoketype="instance" subsignature="void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)"/>
    <targets>
      <direct declaringclass="android.widget.PopupWindow$OnDismissListener" index="0" subsignature="void onDismiss()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.RemoteCallbackList" invoketype="instance" subsignature="boolean register(android.os.IInterface,java.lang.Object)"/>
    <targets>
      <direct declaringclass="android.os.IInterface" index="0" subsignature="android.os.IBinder asBinder()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.security.Provider$Service" invoketype="instance" subsignature="void &lt;init&gt;(java.security.Provider,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.Map)"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="4" subsignature="java.lang.Object[] toArray()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.AlertDialog" missingEdge="true" invoketype="instance" subsignature="void setOnDismissListener(android.content.DialogInterface$OnDismissListener)"/>
    <targets>
      <direct declaringclass="android.content.DialogInterface$OnDismissListener" index="0" subsignature="void onDismiss(android.content.DialogInterface)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.Executor" invoketype="instance" subsignature="void execute(java.lang.Runnable)"/>
    <targets>
      <indirect declaringclass="java.util.concurrent.ThreadPoolExecutor" subsignature="void &lt;init&gt;(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)" target-position="base">
        <direct declaringclass="java.util.Queue" index="4" subsignature="boolean offer(java.lang.Object)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.util.concurrent.ScheduledThreadPoolExecutor" subsignature="void &lt;init&gt;(int,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)" target-position="base">
        <direct declaringclass="java.util.concurrent.ThreadFactory" index="1" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
      </indirect>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
      <direct declaringclass="java.util.concurrent.FutureTask" index="0" subsignature="void done()" target-position="argument"/>
      <direct declaringclass="java.lang.Object" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
      <indirect declaringclass="java.util.concurrent.ThreadPoolExecutor" subsignature="void &lt;init&gt;(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)" target-position="base">
        <direct declaringclass="java.util.concurrent.ThreadFactory" index="5" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.util.concurrent.ThreadPoolExecutor" subsignature="void &lt;init&gt;(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)" target-position="base">
        <direct declaringclass="java.util.Queue" index="4" subsignature="boolean offer(java.lang.Object)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.util.concurrent.ThreadPoolExecutor" subsignature="void &lt;init&gt;(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)" target-position="base">
        <direct declaringclass="com.gemius.sdk.internal.utils.concurrent.NamedThreadFactory" index="5" subsignature="java.lang.Thread decorate(java.lang.Thread)" target-position="argument"/>
      </indirect>
      <direct declaringclass="java.util.concurrent.FutureTask" index="0" subsignature="void set(java.lang.Object)" target-position="argument"/>
      <indirect declaringclass="java.util.concurrent.ThreadPoolExecutor" subsignature="void &lt;init&gt;(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)" target-position="base">
        <direct declaringclass="java.util.concurrent.ThreadFactory" index="5" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.util.concurrent.ThreadPoolExecutor" subsignature="void &lt;init&gt;(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)" target-position="base">
        <direct declaringclass="java.util.Queue" index="4" subsignature="boolean offer(java.lang.Object)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.location.LocationManager" invoketype="instance" subsignature="boolean addGpsStatusListener(android.location.GpsStatus$Listener)"/>
    <targets>
      <direct declaringclass="android.location.GpsStatus$Listener" index="0" subsignature="void onGpsStatusChanged(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.RemoteViews" invoketype="instance" subsignature="android.view.View apply(android.content.Context,android.view.ViewGroup)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.LayoutInflater" invoketype="instance" subsignature="android.view.LayoutInflater cloneInContext(android.content.Context)"/>
    <targets>
      <direct declaringclass="android.content.ContextWrapper" index="0" subsignature="android.content.res.Resources$Theme getTheme()" target-position="argument"/>
      <direct declaringclass="android.content.ContextWrapper" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.content.ContextWrapper" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.Switch" invoketype="instance" subsignature="void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)"/>
    <targets>
      <direct declaringclass="android.widget.CompoundButton$OnCheckedChangeListener" index="0" subsignature="void onCheckedChanged(android.widget.CompoundButton,boolean)" target-position="argument"/>
    </targets>
  </edge>

  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.Writer" invoketype="instance" subsignature="java.io.Writer append(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" fp="true">
    <source declaringclass="android.widget.ArrayAdapter" invoketype="instance" subsignature="android.view.View getView(int,android.view.View,android.view.ViewGroup)"/>
    <targets>
      <direct declaringclass="android.widget.AdapterView" index="2" subsignature="void onLayout(boolean,int,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.widget.ListView" index="2" subsignature="void onSizeChanged(int,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.view.View" index="2" subsignature="void onFocusChanged(boolean,int,android.graphics.Rect)" target-position="argument"/>
      <direct declaringclass="android.view.ViewParent" index="2" subsignature="void requestLayout()" target-position="argument"/>
      <direct declaringclass="android.view.View" index="2" subsignature="void onMeasure(int,int)" target-position="argument"/>
      <direct declaringclass="android.view.View" index="2" subsignature="void onWindowFocusChanged(boolean)" target-position="argument"/>
      <direct declaringclass="android.widget.AbsListView" index="2" subsignature="boolean performItemClick(android.view.View,int,long)" target-position="argument"/>
      <direct declaringclass="android.view.KeyEvent$Callback" index="2" subsignature="boolean onKeyDown(int,android.view.KeyEvent)" target-position="argument"/>
      <direct declaringclass="android.widget.AbsListView" index="2" subsignature="boolean onInterceptTouchEvent(android.view.MotionEvent)" target-position="argument"/>
      <direct declaringclass="android.view.ViewGroup" index="2" subsignature="void dispatchDraw(android.graphics.Canvas)" target-position="argument"/>
      <direct declaringclass="android.widget.ListView" index="2" subsignature="void layoutChildren()" target-position="argument"/>
      <direct declaringclass="android.view.KeyEvent$Callback" index="2" subsignature="boolean onKeyUp(int,android.view.KeyEvent)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.media.audiofx.Visualizer" invoketype="instance" subsignature="int setDataCaptureListener(android.media.audiofx.Visualizer$OnDataCaptureListener,int,boolean,boolean)"/>
    <targets>
      <direct declaringclass="android.media.audiofx.Visualizer$OnDataCaptureListener" index="0" subsignature="void onFftDataCapture(android.media.audiofx.Visualizer,byte[],int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE"  missingEdge="true" >
    <source declaringclass="android.support.v7.app.AlertDialog$Builder" invoketype="instance" subsignature="android.support.v7.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)"/>
    <targets>
      <direct declaringclass="android.content.DialogInterface$OnClickListener" index="1" subsignature="void onClick(android.content.DialogInterface,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.airbnb.lottie.LottieDrawable" invoketype="instance" subsignature="void setCallback(android.graphics.drawable.Drawable$Callback)"/>
    <targets>
      <direct declaringclass="android.widget.TextView" index="0" subsignature="void drawableStateChanged()" target-position="argument"/>
      <direct declaringclass="android.view.View" index="0" subsignature="void onAttachedToWindow()" target-position="argument"/>
      <direct declaringclass="android.view.View" index="0" subsignature="void onSizeChanged(int,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.view.View" index="0" subsignature="boolean verifyDrawable(android.graphics.drawable.Drawable)" target-position="argument"/>
      <direct declaringclass="android.view.View" index="0" subsignature="void onVisibilityChanged(android.view.View,int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable$Callback" index="0" subsignature="void invalidateDrawable(android.graphics.drawable.Drawable)" target-position="argument"/>
      <direct declaringclass="android.view.View" index="0" subsignature="android.os.Parcelable onSaveInstanceState()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" missingEdge="true" >
    <source declaringclass="android.app.AlertDialog" invoketype="instance" subsignature="void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)"/>
    <targets>
      <direct declaringclass="android.content.DialogInterface$OnClickListener" index="2" subsignature="void onClick(android.content.DialogInterface,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.Timer" invoketype="instance" subsignature="void schedule(java.util.TimerTask,long,long)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.Notification$BigTextStyle" invoketype="instance" subsignature="android.app.Notification$BigTextStyle setSummaryText(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.gms.maps.GoogleMap" invoketype="instance" subsignature="void setOnMapClickListener(com.google.android.gms.maps.GoogleMap$OnMapClickListener)"/>
    <targets>
      <direct declaringclass="com.google.android.gms.maps.GoogleMap$OnMapClickListener" index="0" subsignature="void onMapClick(com.google.android.gms.maps.model.LatLng)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.animation.ObjectAnimator" invoketype="instance" subsignature="void addListener(android.animation.Animator$AnimatorListener)"/>
    <targets>
      <direct declaringclass="android.animation.Animator$AnimatorListener" index="0" subsignature="void onAnimationEnd(android.animation.Animator)" target-position="argument"/>
      <direct declaringclass="android.animation.Animator$AnimatorListener" index="0" subsignature="void onAnimationCancel(android.animation.Animator)" target-position="argument"/>
      <direct declaringclass="android.animation.Animator$AnimatorListener" index="0" subsignature="void onAnimationStart(android.animation.Animator)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.animation.LayoutAnimationController" invoketype="instance" subsignature="void &lt;init&gt;(android.view.animation.Animation)"/>
    <targets>
      <direct declaringclass="android.view.animation.Animation" index="0" subsignature="void setFillBefore(boolean)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.text.DynamicLayout" invoketype="instance" subsignature="void &lt;init&gt;(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>

  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.HashMap" invoketype="instance" subsignature="void putAll(java.util.Map)"/>
    <targets>
      <direct fp="true" declaringclass="java.util.HashMap" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.lang.Object put(java.lang.Object,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.util.Set entrySet()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="boolean containsKey(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="int size()" target-position="argument"/>
      <direct fp="true" declaringclass="java.util.Map" index="0" subsignature="java.lang.Object remove(java.lang.Object)" target-position="argument"/>
      <direct fp="true" declaringclass="java.util.Map" index="0" subsignature="void clear()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.ksmobile.launcher.theme.base.view.ᵔᵎ" invoketype="instance" subsignature="void setOnKeyListener(android.content.DialogInterface$OnKeyListener)"/>
    <targets>
      <direct declaringclass="android.content.DialogInterface$OnKeyListener" index="0" subsignature="boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.json.JSONArray" invoketype="instance" subsignature="void &lt;init&gt;(java.util.Collection)"/>
    <targets>
      <direct fp="true" declaringclass="java.util.Queue" index="0" subsignature="java.lang.Object peek()" target-position="argument"/>
      <direct fp="true" declaringclass="java.util.Collection" index="0" subsignature="java.lang.Object[] toArray()" target-position="argument"/>
      <direct fp="true" declaringclass="java.util.Collection" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct fp="true" declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
      <direct fp="true" declaringclass="java.util.Collection" index="0" subsignature="boolean contains(java.lang.Object)" target-position="argument"/>
      <direct fp="true" declaringclass="java.util.Collection" index="0" subsignature="boolean remove(java.lang.Object)" target-position="argument"/>
      <direct fp="true" declaringclass="java.util.List" index="0" subsignature="int indexOf(java.lang.Object)" target-position="argument"/>
      <direct fp="true" declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct fp="true" declaringclass="java.util.Collection" index="0" subsignature="boolean removeAll(java.util.Collection)" target-position="argument"/>
      <direct fp="true" declaringclass="java.util.Collection" index="0" subsignature="boolean addAll(java.util.Collection)" target-position="argument"/>
      <direct fp="true" declaringclass="java.util.List" index="0" subsignature="boolean addAll(int,java.util.Collection)" target-position="argument"/>
      <direct fp="true" declaringclass="java.util.List" index="0" subsignature="java.lang.Object get(int)" target-position="argument"/>
      <direct fp="true" declaringclass="java.util.Queue" index="0" subsignature="boolean add(java.lang.Object)" target-position="argument"/>
      <direct fp="true" declaringclass="java.util.Collection" index="0" subsignature="void clear()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.AbsSeekBar" invoketype="instance" subsignature="void setThumb(android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void setBounds(int,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="int getIntrinsicHeight()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="boolean isStateful()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="o.l" invoketype="instance" subsignature="boolean onPreparePanel(int,android.view.View,android.view.Menu)"/>
    <targets>
      <direct declaringclass="android.view.Menu" index="2" subsignature="void setQwertyMode(boolean)" target-position="argument"/>
      <direct declaringclass="android.view.Menu" index="2" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ImageButton" invoketype="instance" subsignature="void startAnimation(android.view.animation.Animation)"/>
    <targets>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="boolean getFillAfter()" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="void applyTransformation(float,android.view.animation.Transformation)" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="void initialize(int,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="boolean willChangeTransformationMatrix()" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="boolean willChangeBounds()" target-position="argument"/>
      <direct declaringclass="android.view.animation.AnimationSet" index="0" subsignature="void ensureInterpolator()" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="boolean isInitialized()" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="void setStartTime(long)" target-position="argument"/>
      <direct declaringclass="android.view.animation.AnimationSet" index="0" subsignature="float getScaleFactor()" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="boolean getTransformation(long,android.view.animation.Transformation,float)" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="void reset()" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="long getStartOffset()" target-position="argument"/>
      <direct declaringclass="android.view.animation.RotateAnimation" index="0" subsignature="float resolveSize(int,float,int,int)" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="boolean getTransformation(long,android.view.animation.Transformation)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="kotlin.collections.CollectionsKt" invoketype="instance" subsignature="java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="0" subsignature="java.lang.Object[] toArray(java.lang.Object[])" target-position="argument"/>
      <direct declaringclass="java.util.Comparator" index="1" subsignature="int compare(java.lang.Object,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.File" invoketype="instance" subsignature="java.io.File[] listFiles(java.io.FileFilter)"/>
    <targets>
      <direct declaringclass="java.io.FileFilter" index="0" subsignature="boolean accept(java.io.File)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.net.http.SslCertificate" invoketype="instance" subsignature="void &lt;init&gt;(java.security.cert.X509Certificate)"/>
    <targets>
      <direct declaringclass="java.security.cert.X509Certificate" index="0" subsignature="java.security.Principal getSubjectDN()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.LoaderManager" invoketype="instance" subsignature="android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)"/>
    <targets>
      <direct declaringclass="android.app.LoaderManager$LoaderCallbacks" index="2" subsignature="android.content.Loader onCreateLoader(int,android.os.Bundle)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.View" invoketype="instance" subsignature="void setContentDescription(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.IntentFilter" invoketype="instance" subsignature="java.lang.String matchCategories(java.util.Set)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.media.AsyncPlayer" invoketype="instance" subsignature="void play(android.content.Context,android.net.Uri,boolean,int)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.movoto.movoto.fragment.BaseMapFragment" invoketype="instance" subsignature="void getMapAsync(com.google.android.gms.maps.OnMapReadyCallback)"/>
    <targets>
      <direct declaringclass="com.google.android.gms.maps.OnMapReadyCallback" index="0" subsignature="void onMapReady(com.google.android.gms.maps.GoogleMap)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.apache.http.client.CookieStore" invoketype="instance" subsignature="void addCookie(org.apache.http.cookie.Cookie)"/>
    <targets>
      <direct declaringclass="org.apache.http.cookie.Cookie" index="0" subsignature="int getVersion()" target-position="argument"/>
      <direct declaringclass="org.apache.http.cookie.Cookie" index="0" subsignature="java.lang.String getValue()" target-position="argument"/>
      <direct declaringclass="org.apache.http.cookie.Cookie" index="0" subsignature="boolean isSecure()" target-position="argument"/>
      <direct declaringclass="org.apache.http.cookie.Cookie" index="0" subsignature="java.lang.String getComment()" target-position="argument"/>
      <direct declaringclass="org.apache.http.cookie.Cookie" index="0" subsignature="java.lang.String getDomain()" target-position="argument"/>
      <direct declaringclass="org.apache.http.cookie.Cookie" index="0" subsignature="java.util.Date getExpiryDate()" target-position="argument"/>
      <direct declaringclass="org.apache.http.cookie.Cookie" index="0" subsignature="java.lang.String getPath()" target-position="argument"/>
      <direct declaringclass="org.apache.http.cookie.Cookie" index="0" subsignature="boolean isExpired(java.util.Date)" target-position="argument"/>
      <direct declaringclass="org.apache.http.cookie.Cookie" index="0" subsignature="java.lang.String getName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.ActivityOptions" invoketype="instance" subsignature="android.app.ActivityOptions makeCustomAnimation(android.content.Context,int,int)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v4.app.LoaderManager" invoketype="instance" subsignature="android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)"/>
    <targets>
      <direct declaringclass="android.support.v4.app.LoaderManager$LoaderCallbacks" index="2" subsignature="void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="android.support.v4.app.LoaderManager$LoaderCallbacks" index="2" subsignature="android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ArrayAdapter" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,int,int,java.util.List)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageCodePath()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.ConcurrentSkipListMap" invoketype="instance" subsignature="void &lt;init&gt;(java.util.SortedMap)"/>
    <targets>
      <direct declaringclass="java.util.SortedMap" index="0" subsignature="java.util.Comparator comparator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.Notification$Builder" invoketype="instance" subsignature="android.app.Notification$Builder setTicker(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.SequenceInputStream" invoketype="instance" subsignature="void &lt;init&gt;(java.util.Enumeration)"/>
    <targets>
      <direct declaringclass="java.util.Enumeration" index="0" subsignature="boolean hasMoreElements()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.jar.JarOutputStream" invoketype="instance" subsignature="void &lt;init&gt;(java.io.OutputStream,java.util.jar.Manifest)"/>
    <targets>
      <direct declaringclass="java.io.OutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
      <direct declaringclass="java.io.OutputStream" index="0" subsignature="void write(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.DialogFragment" invoketype="instance" subsignature="int show(android.app.FragmentTransaction,java.lang.String)"/>
    <targets>
      <direct declaringclass="android.app.FragmentTransaction" index="0" subsignature="int commit()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.animation.AnimationSet" invoketype="instance" subsignature="void setAnimationListener(android.view.animation.Animation$AnimationListener)"/>
    <targets>
      <direct declaringclass="android.view.animation.Animation$AnimationListener" index="0" subsignature="void onAnimationStart(android.view.animation.Animation)" target-position="argument"/>
      <direct declaringclass="android.view.animation.Animation$AnimationListener" index="0" subsignature="void onAnimationEnd(android.view.animation.Animation)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.preference.Preference" invoketype="instance" subsignature="void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)"/>
    <targets>
      <direct declaringclass="android.preference.Preference$OnPreferenceClickListener" index="0" subsignature="boolean onPreferenceClick(android.preference.Preference)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.SimpleAdapter" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,java.util.List,int,java.lang.String[],int[])"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="1" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.List" index="1" subsignature="java.lang.Object get(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.database.sqlite.SQLiteDatabase" invoketype="instance" subsignature="android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)"/>
    <targets>
      <direct declaringclass="android.database.sqlite.SQLiteDatabase$CursorFactory" index="0" subsignature="android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.PrintWriter" invoketype="instance" subsignature="java.io.PrintWriter append(java.lang.CharSequence,int,int)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.CharSequence subSequence(int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.ClipData" invoketype="instance" subsignature="android.content.ClipData newHtmlText(java.lang.CharSequence,java.lang.CharSequence,java.lang.String)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="io.reactivex.Observable" invoketype="instance" subsignature="io.reactivex.Observable doOnSubscribe(io.reactivex.functions.Consumer)"/>
    <targets>
      <direct declaringclass="io.reactivex.functions.Consumer" index="0" subsignature="void accept(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.WindowManager$LayoutParams" invoketype="instance" subsignature="void setTitle(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="java.lang.Object[] getSpans(int,int,java.lang.Class)" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.location.LocationManager" invoketype="instance" subsignature="void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)"/>
    <targets>
      <direct declaringclass="android.location.LocationListener" index="3" subsignature="void onLocationChanged(android.location.Location)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v4.widget.ScrollerCompat" invoketype="instance" subsignature="android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator)"/>
    <targets>
      <direct declaringclass="android.animation.TimeInterpolator" index="1" subsignature="float getInterpolation(float)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.database.CursorWrapper" invoketype="instance" subsignature="void &lt;init&gt;(android.database.Cursor)"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="android.os.Bundle getExtras()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v4.view.ViewPager" invoketype="instance" subsignature="boolean onTouchEvent(android.view.MotionEvent)"/>
    <targets>
      <indirect declaringclass="android.support.v4.view.ViewPager" subsignature="void setAdapter(android.support.v4.view.PagerAdapter)" target-position="base">
        <direct declaringclass="android.support.v4.view.PagerAdapter" index="0" subsignature="void destroyItem(android.view.ViewGroup,int,java.lang.Object)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="android.support.v4.view.ViewPager" subsignature="void setAdapter(android.support.v4.view.PagerAdapter)" target-position="base"/>
      <indirect declaringclass="android.support.v4.view.ViewPager" subsignature="void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)" target-position="base">
        <direct declaringclass="android.support.v4.view.ViewPager$OnPageChangeListener" index="0" subsignature="void onPageSelected(int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.badlogic.gdx.Input" invoketype="instance" subsignature="void setInputProcessor(com.badlogic.gdx.InputProcessor)"/>
    <targets>
      <direct declaringclass="com.badlogic.gdx.InputProcessor" index="0" subsignature="boolean keyDown(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.Dialog" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context)"/>
    <targets>
      <direct declaringclass="android.app.Activity" index="0" subsignature="void onNewIntent(android.content.Intent)" target-position="argument"/>
      <direct declaringclass="android.support.v4.app.q" index="0" subsignature="void onBackPressed()" target-position="argument"/>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="java.lang.ClassLoader getClassLoader()" target-position="argument"/>
      <direct declaringclass="android.preference.PreferenceActivity" index="0" subsignature="boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)" target-position="argument"/>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="android.content.Context getApplicationContext()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.io.File getDir(java.lang.String,int)" target-position="argument"/>
      <direct declaringclass="android.app.Activity" index="0" subsignature="boolean onCreateOptionsMenu(android.view.Menu)" target-position="argument"/>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="android.content.res.Resources$Theme getTheme()" target-position="argument"/>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
      <direct declaringclass="android.app.Activity" index="0" subsignature="boolean onTouchEvent(android.view.MotionEvent)" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.pm.ApplicationInfo getApplicationInfo()" target-position="argument"/>
      <direct declaringclass="android.app.Activity" index="0" subsignature="boolean onPrepareOptionsMenu(android.view.Menu)" target-position="argument"/>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="android.content.pm.PackageManager getPackageManager()" target-position="argument"/>
      <direct declaringclass="android.app.Activity" index="0" subsignature="boolean onOptionsItemSelected(android.view.MenuItem)" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.io.File getObbDir()" target-position="argument"/>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="android.content.Context getBaseContext()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="androidx.lifecycle.ViewModelProvider" invoketype="instance" subsignature="androidx.lifecycle.ViewModel get(java.lang.Class)"/>
    <targets>
      <indirect declaringclass="androidx.lifecycle.ViewModelProvider" subsignature="void &lt;init&gt;(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)" target-position="base">
        <direct declaringclass="androidx.lifecycle.ViewModelProvider$Factory" index="1" subsignature="androidx.lifecycle.ViewModel create(java.lang.Class)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.gms.ads.AdView" invoketype="instance" subsignature="void setAdListener(com.google.android.gms.ads.AdListener)"/>
    <targets>
      <direct declaringclass="com.google.android.gms.ads.AdListener" index="0" subsignature="void onAdFailedToLoad(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.StringBuffer" invoketype="instance" subsignature="java.lang.StringBuffer insert(int,java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.animation.GridLayoutAnimationController" invoketype="instance" subsignature="void &lt;init&gt;(android.view.animation.Animation,float,float)"/>
    <targets>
      <direct declaringclass="android.view.animation.Animation" index="0" subsignature="void setFillBefore(boolean)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.OverScroller" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.view.animation.Interpolator,float,float,boolean)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.CheckedTextView" invoketype="instance" subsignature="void setCheckMarkDrawable(android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="boolean setState(int[])" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="int getIntrinsicWidth()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="int getIntrinsicHeight()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="kotlin.collections.CollectionsKt" invoketype="instance" subsignature="java.util.Set toMutableSet(java.lang.Iterable)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.Notification$BigPictureStyle" invoketype="instance" subsignature="android.app.Notification$BigPictureStyle setSummaryText(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.Thread" invoketype="instance" subsignature="void setContextClassLoader(java.lang.ClassLoader)"/>
    <targets>
      <direct declaringclass="dalvik.system.BaseDexClassLoader" index="0" subsignature="java.lang.Class findClass(java.lang.String)" target-position="argument"/>
      <direct declaringclass="java.lang.ClassLoader" index="0" subsignature="java.lang.Class loadClass(java.lang.String,boolean)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.security.cert.X509CRLSelector" invoketype="instance" subsignature="void setIssuers(java.util.Collection)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.Spinner" invoketype="instance" subsignature="void setAdapter(android.widget.SpinnerAdapter)"/>
    <targets>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="boolean hasStableIds()" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="long getItemId(int)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="void registerDataSetObserver(android.database.DataSetObserver)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="int getCount()" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="android.view.View getView(int,android.view.View,android.view.ViewGroup)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="void unregisterDataSetObserver(android.database.DataSetObserver)" target-position="argument"/>
      <direct declaringclass="android.widget.SpinnerAdapter" index="0" subsignature="android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="java.lang.Object getItem(int)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="int getViewTypeCount()" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="int getItemViewType(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.PrintWriter" invoketype="instance" subsignature="void println()"/>
    <targets>
      <indirect declaringclass="java.io.PrintWriter" subsignature="void &lt;init&gt;(java.io.Writer)" target-position="base">
        <direct declaringclass="java.io.Writer" index="0" subsignature="void write(java.lang.String)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.Handler" invoketype="instance" subsignature="boolean postAtFrontOfQueue(java.lang.Runnable)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.gms.ads.f" invoketype="instance" subsignature="void setAdListener(com.google.android.gms.ads.a)"/>
    <targets>
      <direct declaringclass="com.google.android.gms.ads.a" index="0" subsignature="void onAdLoaded()" target-position="argument"/>
      <direct declaringclass="com.google.android.gms.ads.a" index="0" subsignature="void onAdFailedToLoad(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.animation.ValueAnimator" invoketype="instance" subsignature="void start()"/>
    <targets>
      <indirect declaringclass="android.animation.ValueAnimator" subsignature="void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)" target-position="base">
        <direct declaringclass="android.animation.ValueAnimator$AnimatorUpdateListener" index="0" subsignature="void onAnimationUpdate(android.animation.ValueAnimator)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="android.animation.ValueAnimator" subsignature="void setInterpolator(android.animation.TimeInterpolator)" target-position="base">
        <direct declaringclass="android.animation.TimeInterpolator" index="0" subsignature="float getInterpolation(float)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="android.animation.Animator" subsignature="void addListener(android.animation.Animator$AnimatorListener)" target-position="base">
        <direct declaringclass="android.animation.Animator$AnimatorListener" index="0" subsignature="void onAnimationStart(android.animation.Animator)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.View" invoketype="instance" subsignature="void postOnAnimationDelayed(java.lang.Runnable,long)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="javax.crypto.Mac" invoketype="instance" subsignature="void init(java.security.Key)"/>
    <targets>
      <direct declaringclass="java.security.Key" index="0" subsignature="byte[] getEncoded()" target-position="argument"/>
      <direct declaringclass="java.security.Key" index="0" subsignature="java.lang.String getFormat()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.TreeSet" invoketype="instance" subsignature="void &lt;init&gt;(java.util.SortedSet)"/>
    <targets>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.util.Comparator comparator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="okhttp3.JavaNetCookieJar" invoketype="instance" subsignature="void &lt;init&gt;(java.net.CookieHandler)"/>
    <targets>
      <direct declaringclass="java.net.CookieManager" index="0" subsignature="java.util.Map get(java.net.URI,java.util.Map)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.apache.http.conn.ssl.AbstractVerifier" invoketype="instance" subsignature="void verify(java.lang.String,java.security.cert.X509Certificate)"/>
    <targets>
      <direct declaringclass="java.security.cert.X509Certificate" index="1" subsignature="javax.security.auth.x500.X500Principal getSubjectX500Principal()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.SurfaceHolder" invoketype="instance" subsignature="void addCallback(android.view.SurfaceHolder$Callback)"/>
    <targets>
      <direct declaringclass="android.view.SurfaceHolder$Callback" index="0" subsignature="void surfaceDestroyed(android.view.SurfaceHolder)" target-position="argument"/>
      <direct declaringclass="android.view.SurfaceHolder$Callback" index="0" subsignature="void surfaceCreated(android.view.SurfaceHolder)" target-position="argument"/>
      <direct declaringclass="android.view.SurfaceHolder$Callback" index="0" subsignature="void surfaceChanged(android.view.SurfaceHolder,int,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="kotlinx.coroutines.flow.Flow" invoketype="instance" subsignature="java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)"/>
    <targets>
      <direct declaringclass="kotlinx.coroutines.flow.FlowCollector" index="0" subsignature="java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.apache.http.impl.client.AbstractHttpClient" invoketype="instance" subsignature="java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)"/>
    <targets>
      <direct declaringclass="org.apache.http.client.methods.HttpUriRequest" index="0" subsignature="java.net.URI getURI()" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpMessage" index="0" subsignature="org.apache.http.params.HttpParams getParams()" target-position="argument"/>
      <direct declaringclass="org.apache.http.protocol.HttpContext" index="2" subsignature="void setAttribute(java.lang.String,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpMessage" index="0" subsignature="org.apache.http.Header[] getAllHeaders()" target-position="argument"/>
      <direct declaringclass="org.apache.http.client.methods.HttpUriRequest" index="0" subsignature="java.lang.String getMethod()" target-position="argument"/>
      <direct declaringclass="org.apache.http.protocol.HttpContext" index="2" subsignature="java.lang.Object getAttribute(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="javax.crypto.CipherInputStream" invoketype="instance" subsignature="void &lt;init&gt;(java.io.InputStream,javax.crypto.Cipher)"/>
    <targets>
      <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read(byte[])" target-position="argument"/>
      <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.PrintStream" invoketype="instance" subsignature="void println(java.lang.String)"/>
    <targets>
      <indirect declaringclass="java.io.PrintWriter" subsignature="void &lt;init&gt;(java.io.Writer)" target-position="base">
        <direct declaringclass="java.io.FileWriter" index="0" subsignature="void write(java.lang.String,int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.PrintStream" subsignature="void &lt;init&gt;(java.io.OutputStream,boolean,java.lang.String)" target-position="base">
        <direct declaringclass="java.io.FileOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.PrintWriter" subsignature="void &lt;init&gt;(java.io.Writer)" target-position="base">
        <direct declaringclass="java.io.FileWriter" index="0" subsignature="void write(java.lang.String)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.preference.ListPreference" invoketype="instance" subsignature="void setSummary(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.gms.ads.MobileAds" invoketype="instance" subsignature="void initialize(android.content.Context,com.google.android.gms.ads.initialization.OnInitializationCompleteListener)"/>
    <targets>
      <direct declaringclass="com.google.android.gms.ads.initialization.OnInitializationCompleteListener" index="1" subsignature="void onInitializationComplete(com.google.android.gms.ads.initialization.InitializationStatus)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.speech.tts.TextToSpeech" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.pm.PackageManager getPackageManager()" target-position="argument"/>
      <direct declaringclass="android.speech.tts.TextToSpeech$OnInitListener" index="1" subsignature="void onInit(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="kotlin.LazyKt" invoketype="instance" subsignature="kotlin.Lazy lazy(kotlin.jvm.functions.Function0)"/>
    <targets>
      <direct declaringclass="kotlin.jvm.functions.Function0" index="0" subsignature="java.lang.Object invoke()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.Thread" invoketype="instance" subsignature="void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)"/>
    <targets>
      <direct declaringclass="java.lang.Thread$UncaughtExceptionHandler" index="0" subsignature="void uncaughtException(java.lang.Thread,java.lang.Throwable)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.Intent" invoketype="instance" subsignature="java.lang.String resolveType(android.content.Context)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.Set" invoketype="instance" subsignature="boolean addAll(java.util.Collection)"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="0" subsignature="java.lang.Object[] toArray()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" fp="true" subsignature="boolean remove(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="java.util.ListIterator listIterator(int)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int hashCode()" target-position="argument"/>
      <direct declaringclass="java.util.ArrayList" index="0" subsignature="java.lang.Object clone()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean contains(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="int indexOf(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Queue" index="0" fp="true" subsignature="java.lang.Object remove()" target-position="argument"/>
      <direct declaringclass="java.util.Deque" fp="true" index="0" subsignature="java.lang.Object removeFirst()" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object get(int)" target-position="argument"/>
      <direct declaringclass="java.util.Queue" index="0" subsignature="boolean add(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" fp="true" index="0" subsignature="void clear()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.CompoundButton" invoketype="instance" subsignature="void setButtonDrawable(android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="boolean setVisible(boolean,boolean)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void draw(android.graphics.Canvas)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void setBounds(int,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="int getIntrinsicHeight()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.graphics.drawable.LevelListDrawable" invoketype="instance" subsignature="void addLevel(int,int,android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.Drawable" index="2" subsignature="boolean setVisible(boolean,boolean)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="2" subsignature="int getChangingConfigurations()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="2" subsignature="void setDither(boolean)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="2" subsignature="boolean setState(int[])" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="2" subsignature="void setBounds(android.graphics.Rect)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="2" subsignature="android.graphics.drawable.Drawable$Callback getCallback()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.ExecutorService" invoketype="instance" subsignature="java.util.concurrent.Future submit(java.util.concurrent.Callable)"/>
    <targets>
      <direct declaringclass="java.util.concurrent.Callable" index="0" subsignature="java.lang.Object call()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.sax.Element" invoketype="instance" subsignature="void setStartElementListener(android.sax.StartElementListener)"/>
    <targets>
      <direct declaringclass="android.sax.StartElementListener" index="0" subsignature="void start(org.xml.sax.Attributes)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.PopupMenu" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.view.View)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources$Theme getTheme()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.TextView" invoketype="instance" subsignature="void setMovementMethod(android.text.method.MovementMethod)"/>
    <targets>
      <direct declaringclass="android.text.method.MovementMethod" index="0" subsignature="boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)" target-position="argument"/>
      <direct declaringclass="android.text.method.MovementMethod" index="0" subsignature="void initialize(android.widget.TextView,android.text.Spannable)" target-position="argument"/>
      <direct declaringclass="android.text.method.MovementMethod" index="0" subsignature="boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)" target-position="argument"/>
      <direct declaringclass="android.text.method.MovementMethod" index="0" subsignature="boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)" target-position="argument"/>
      <direct declaringclass="android.text.method.MovementMethod" index="0" subsignature="boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)" target-position="argument"/>
      <direct declaringclass="android.text.method.MovementMethod" index="0" subsignature="boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="kotlin.collections.CollectionsKt" invoketype="instance" subsignature="java.util.List filterNotNull(java.lang.Iterable)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ExpandableListView" invoketype="instance" subsignature="void setAdapter(android.widget.ExpandableListAdapter)"/>
    <targets>
      <direct declaringclass="android.widget.ExpandableListAdapter" index="0" subsignature="android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)" target-position="argument"/>
      <direct declaringclass="android.widget.ExpandableListAdapter" index="0" subsignature="long getChildId(int,int)" target-position="argument"/>
      <direct declaringclass="android.widget.ExpandableListAdapter" index="0" subsignature="java.lang.Object getGroup(int)" target-position="argument"/>
      <direct declaringclass="android.widget.ExpandableListAdapter" index="0" subsignature="int getChildrenCount(int)" target-position="argument"/>
      <direct declaringclass="android.widget.ExpandableListAdapter" index="0" subsignature="long getGroupId(int)" target-position="argument"/>
      <direct declaringclass="android.widget.ExpandableListAdapter" index="0" subsignature="android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)" target-position="argument"/>
      <direct declaringclass="android.widget.ExpandableListAdapter" index="0" subsignature="int getGroupCount()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.king.core.GameView" invoketype="instance" subsignature="void queueEvent(java.lang.Runnable)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.preference.Preference" invoketype="instance" subsignature="android.view.View getView(android.view.View,android.view.ViewGroup)"/>
    <targets>
      <direct declaringclass="android.view.ViewGroup" index="1" subsignature="int getChildCount()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.text.Editable$Factory" invoketype="instance" subsignature="android.text.Editable newEditable(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.animation.AnimationSet" invoketype="instance" subsignature="void addAnimation(android.view.animation.Animation)"/>
    <targets>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="void applyTransformation(float,android.view.animation.Transformation)" target-position="argument"/>
      <direct declaringclass="android.view.animation.ScaleAnimation" index="0" subsignature="boolean willChangeTransformationMatrix()" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="void initialize(int,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="void setDuration(long)" target-position="argument"/>
      <direct declaringclass="android.view.animation.ScaleAnimation" index="0" subsignature="boolean willChangeBounds()" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="boolean hasStarted()" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="long getDuration()" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="void setStartTime(long)" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="void setInterpolator(android.view.animation.Interpolator)" target-position="argument"/>
      <direct declaringclass="android.view.animation.ScaleAnimation" index="0" subsignature="float getScaleFactor()" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="boolean getTransformation(long,android.view.animation.Transformation,float)" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="void reset()" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="boolean isFillEnabled()" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="long getStartOffset()" target-position="argument"/>
      <direct declaringclass="android.view.animation.TranslateAnimation" index="0" subsignature="float resolveSize(int,float,int,int)" target-position="argument"/>
      <direct declaringclass="android.view.animation.ScaleAnimation" index="0" subsignature="void setFillAfter(boolean)" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="boolean hasEnded()" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="boolean getTransformation(long,android.view.animation.Transformation)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.net.ServerSocket" invoketype="instance" subsignature="void &lt;init&gt;(int)"/>
    <targets>
      <indirect declaringclass="java.net.ServerSocket" subsignature="void setSocketFactory(java.net.SocketImplFactory)" target-position="base">
        <direct declaringclass="java.net.SocketImplFactory" index="0" subsignature="java.net.SocketImpl createSocketImpl()" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.ScheduledThreadPoolExecutor" invoketype="instance" subsignature="java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"/>
    <targets>
      <indirect declaringclass="java.util.concurrent.ScheduledThreadPoolExecutor" subsignature="void &lt;init&gt;(int,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)" target-position="base">
        <direct declaringclass="java.util.concurrent.ThreadFactory" index="1" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
      </indirect>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
      <indirect declaringclass="java.util.concurrent.ThreadPoolExecutor" subsignature="void &lt;init&gt;(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)" target-position="base">
        <direct declaringclass="java.util.concurrent.ThreadFactory" index="5" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.util.concurrent.ThreadPoolExecutor" subsignature="void &lt;init&gt;(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)" target-position="base">
        <direct declaringclass="java.util.concurrent.ThreadFactory" index="5" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" missingEdge="true">
    <source declaringclass="android.app.AlertDialog$Builder" invoketype="instance" subsignature="android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="char charAt(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.SimpleExpandableListAdapter" invoketype="instance" subsignature="android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)"/>
    <targets>
      <indirect declaringclass="android.widget.SimpleExpandableListAdapter" subsignature="void &lt;init&gt;(android.content.Context,java.util.List,int,java.lang.String[],int[],java.util.List,int,java.lang.String[],int[])" target-position="base">
        <direct declaringclass="java.util.List" index="5" subsignature="java.lang.Object get(int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.appwidget.AppWidgetHost" invoketype="instance" subsignature="android.appwidget.AppWidgetHostView createView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.ViewPropertyAnimator" invoketype="instance" subsignature="android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)"/>
    <targets>
      <direct declaringclass="android.animation.TimeInterpolator" index="0" subsignature="float getInterpolation(float)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="cbs" invoketype="instance" subsignature="android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])"/>
    <targets>
      <direct declaringclass="java.util.concurrent.ThreadPoolExecutor" index="0" subsignature="void afterExecute(java.lang.Runnable,java.lang.Throwable)" target-position="argument"/>
      <direct declaringclass="java.util.concurrent.ThreadPoolExecutor" index="0" subsignature="void beforeExecute(java.lang.Thread,java.lang.Runnable)" target-position="argument"/>
      <direct declaringclass="java.util.concurrent.Executor" index="0" subsignature="void execute(java.lang.Runnable)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.Notification$Builder" invoketype="instance" subsignature="android.app.Notification$Builder setSubText(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.xml.sax.helpers.AttributesImpl" invoketype="instance" subsignature="void &lt;init&gt;(org.xml.sax.Attributes)"/>
    <targets>
      <direct declaringclass="org.xml.sax.Attributes" index="0" subsignature="int getLength()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.LayoutInflater" invoketype="instance" subsignature="android.view.View inflate(int,android.view.ViewGroup,boolean)"/>
    <targets>
      <direct declaringclass="android.widget.AbsListView" index="1" subsignature="boolean performItemClick(android.view.View,int,long)" target-position="argument"/>
      <direct declaringclass="android.view.ViewGroup" index="1" subsignature="void onLayout(boolean,int,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.view.ViewGroup" index="1" subsignature="void onDetachedFromWindow()" target-position="argument"/>
      <direct declaringclass="android.view.ViewGroup" index="1" subsignature="void onAttachedToWindow()" target-position="argument"/>
      <direct declaringclass="android.view.View" index="1" subsignature="boolean onTouchEvent(android.view.MotionEvent)" target-position="argument"/>
      <direct declaringclass="android.view.ViewGroup" index="1" subsignature="boolean dispatchTouchEvent(android.view.MotionEvent)" target-position="argument"/>
      <direct declaringclass="android.widget.LinearLayout" index="1" subsignature="android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)" target-position="argument"/>
      <direct declaringclass="android.view.View" index="1" subsignature="void onMeasure(int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="io.branch.referral.Branch" invoketype="instance" subsignature="boolean initSession(io.branch.referral.Branch$BranchReferralInitListener,android.net.Uri,android.app.Activity)"/>
    <targets>
      <direct declaringclass="io.branch.referral.Branch$BranchReferralInitListener" index="0" subsignature="void onInitFinished(org.json.JSONObject,io.branch.referral.BranchError)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.LinkedBlockingQueue" invoketype="instance" subsignature="int drainTo(java.util.Collection)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="java.lang.Object[] toArray()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean add(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.animation.ValueAnimator" invoketype="instance" subsignature="void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)"/>
    <targets>
      <direct declaringclass="android.animation.ValueAnimator$AnimatorUpdateListener" index="0" subsignature="void onAnimationUpdate(android.animation.ValueAnimator)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.RemoteCallbackList" invoketype="instance" subsignature="boolean register(android.os.IInterface)"/>
    <targets>
      <direct declaringclass="android.os.IInterface" index="0" subsignature="android.os.IBinder asBinder()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="io.reactivex.Observable" invoketype="instance" subsignature="io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function3)"/>
    <targets>
      <direct declaringclass="io.reactivex.functions.Function3" index="3" subsignature="java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.jar.Manifest" invoketype="instance" subsignature="void read(java.io.InputStream)"/>
    <targets>
      <direct declaringclass="java.io.InputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.Calendar" invoketype="instance" subsignature="int compareTo(java.util.Calendar)"/>
    <targets>
      <direct declaringclass="java.util.Calendar" index="0" subsignature="java.lang.Object clone()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.Properties" invoketype="instance" subsignature="void store(java.io.Writer,java.lang.String)"/>
    <targets>
      <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.Thread" invoketype="instance" subsignature="void &lt;init&gt;(java.lang.Runnable,java.lang.String)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.graphics.drawable.PaintDrawable" invoketype="instance" subsignature="void setShaderFactory(android.graphics.drawable.ShapeDrawable$ShaderFactory)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.ShapeDrawable$ShaderFactory" index="0" subsignature="android.graphics.Shader resize(int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.String" invoketype="instance" subsignature="java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.text.DynamicLayout" invoketype="instance" subsignature="void &lt;init&gt;(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="1" subsignature="int nextSpanTransition(int,int,java.lang.Class)" target-position="argument"/>
      <direct declaringclass="android.text.GetChars" index="1" subsignature="void getChars(int,int,char[],int)" target-position="argument"/>
      <direct declaringclass="android.text.Spannable" index="1" subsignature="void setSpan(java.lang.Object,int,int,int)" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="char charAt(int)" target-position="argument"/>
      <direct declaringclass="android.text.Spanned" index="1" subsignature="java.lang.Object[] getSpans(int,int,java.lang.Class)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="io.reactivex.Completable" invoketype="instance" subsignature="io.reactivex.Completable fromRunnable(java.lang.Runnable)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.openfeint.internal.request.Client" invoketype="instance" subsignature="void addResponseInterceptor(org.apache.http.HttpResponseInterceptor)"/>
    <targets>
      <direct declaringclass="org.apache.http.HttpResponseInterceptor" index="0" subsignature="void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ArrayAdapter" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,int,java.util.List)"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="2" subsignature="boolean addAll(java.util.Collection)" target-position="argument"/>
      <direct declaringclass="java.lang.Iterable" index="2" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="2" subsignature="void clear()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="2" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.List" index="2" subsignature="java.lang.Object get(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.Intent" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,java.lang.Class)"/>
    <targets>
      <direct declaringclass="android.app.Activity" index="0" subsignature="void onActivityResult(int,int,android.content.Intent)" target-position="argument"/>
      <direct declaringclass="android.app.Activity" index="0" subsignature="boolean onCreateOptionsMenu(android.view.Menu)" target-position="argument"/>
      <direct declaringclass="android.app.Activity" index="0" subsignature="void onBackPressed()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
      <direct declaringclass="android.app.Activity" index="0" subsignature="android.app.Dialog onCreateDialog(int)" target-position="argument"/>
      <direct declaringclass="android.app.Activity" index="0" subsignature="boolean onOptionsItemSelected(android.view.MenuItem)" target-position="argument"/>
      <direct declaringclass="android.support.v7.app.AppCompatActivity" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.apache.http.impl.client.AbstractHttpClient" invoketype="instance" subsignature="org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)"/>
    <targets>
      <direct declaringclass="org.apache.http.client.methods.HttpUriRequest" index="0" subsignature="java.net.URI getURI()" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpMessage" index="0" subsignature="org.apache.http.params.HttpParams getParams()" target-position="argument"/>
      <direct declaringclass="org.apache.http.protocol.HttpContext" index="1" subsignature="void setAttribute(java.lang.String,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpMessage" index="0" subsignature="org.apache.http.Header[] getAllHeaders()" target-position="argument"/>
      <direct declaringclass="org.apache.http.client.methods.HttpUriRequest" index="0" subsignature="java.lang.String getMethod()" target-position="argument"/>
      <direct declaringclass="org.apache.http.protocol.HttpContext" index="1" subsignature="java.lang.Object getAttribute(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="androidx.recyclerview.widget.h" invoketype="instance" subsignature="androidx.recyclerview.widget.h$c calculateDiff(androidx.recyclerview.widget.h$b)"/>
    <targets>
      <direct declaringclass="androidx.recyclerview.widget.h$b" index="0" subsignature="int getOldListSize()" target-position="argument"/>
      <direct declaringclass="androidx.recyclerview.widget.h$b" index="0" subsignature="int getNewListSize()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.StringBuilder" invoketype="instance" subsignature="java.lang.StringBuilder insert(int,java.lang.CharSequence,int,int)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.database.CursorJoiner" invoketype="instance" subsignature="void &lt;init&gt;(android.database.Cursor,java.lang.String[],android.database.Cursor,java.lang.String[])"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean moveToFirst()" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndexOrThrow(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.firebase.iid.FirebaseInstanceId" invoketype="instance" subsignature="void &lt;init&gt;(com.google.firebase.FirebaseApp,k.h.g.l.r,java.util.concurrent.Executor,java.util.concurrent.Executor,k.h.g.j.d,k.h.g.r.f,k.h.g.k.c,k.h.g.o.h)"/>
    <targets>
      <direct declaringclass="java.util.concurrent.ThreadPoolExecutor" index="3" subsignature="void afterExecute(java.lang.Runnable,java.lang.Throwable)" target-position="argument"/>
      <direct declaringclass="java.util.concurrent.ThreadPoolExecutor" index="3" subsignature="java.util.concurrent.ThreadFactory getThreadFactory()" target-position="argument"/>
      <direct declaringclass="java.util.concurrent.Executor" index="3" subsignature="void execute(java.lang.Runnable)" target-position="argument"/>
      <direct declaringclass="java.util.concurrent.ThreadPoolExecutor" index="3" subsignature="void beforeExecute(java.lang.Thread,java.lang.Runnable)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="javax.net.ssl.CertPathTrustManagerParameters" invoketype="instance" subsignature="void &lt;init&gt;(java.security.cert.CertPathParameters)"/>
    <targets>
      <direct declaringclass="java.security.cert.CertPathParameters" index="0" subsignature="java.lang.Object clone()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.TextView" invoketype="instance" subsignature="void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="2" subsignature="boolean setState(int[])" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="2" subsignature="void setBounds(int,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="3" subsignature="void setBounds(int,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="3" subsignature="int getIntrinsicHeight()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="2" subsignature="boolean isStateful()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="2" subsignature="void draw(android.graphics.Canvas)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.xml.sax.SAXParseException" invoketype="instance" subsignature="void &lt;init&gt;(java.lang.String,org.xml.sax.Locator,java.lang.Exception)"/>
    <targets>
      <direct declaringclass="org.xml.sax.Locator" index="1" subsignature="int getLineNumber()" target-position="argument"/>
      <direct declaringclass="org.xml.sax.Locator" index="1" subsignature="java.lang.String getPublicId()" target-position="argument"/>
      <direct declaringclass="org.xml.sax.Locator" index="1" subsignature="int getColumnNumber()" target-position="argument"/>
      <direct declaringclass="org.xml.sax.Locator" index="1" subsignature="java.lang.String getSystemId()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.View" invoketype="instance" subsignature="void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)"/>
    <targets>
      <direct declaringclass="android.view.View$OnAttachStateChangeListener" index="0" subsignature="void onViewAttachedToWindow(android.view.View)" target-position="argument"/>
      <direct declaringclass="android.view.View$OnAttachStateChangeListener" index="0" subsignature="void onViewDetachedFromWindow(android.view.View)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.AbstractExecutorService" invoketype="instance" subsignature="java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.apache.http.entity.InputStreamEntity" invoketype="instance" subsignature="void &lt;init&gt;(java.io.InputStream,long)"/>
    <targets>
      <direct declaringclass="java.io.ByteArrayInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.Thread" invoketype="instance" subsignature="void &lt;init&gt;(java.lang.Runnable)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="common.F" invoketype="instance" subsignature="void execute(android.os.AsyncTask)"/>
    <targets>
      <direct declaringclass="android.os.AsyncTask" index="0" subsignature="java.lang.Object doInBackground(java.lang.Object[])" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.inputmethodservice.Keyboard" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,int,int)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="net.sourceforge.opencamera.preview.camerasurface.MyTextureView" invoketype="instance" subsignature="void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener)"/>
    <targets>
      <direct declaringclass="android.view.TextureView$SurfaceTextureListener" index="0" subsignature="void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)" target-position="argument"/>
      <direct declaringclass="android.view.TextureView$SurfaceTextureListener" index="0" subsignature="void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)" target-position="argument"/>
      <direct declaringclass="android.view.TextureView$SurfaceTextureListener" index="0" subsignature="void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.accounts.AccountManager" invoketype="instance" subsignature="void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)"/>
    <targets>
      <direct declaringclass="android.accounts.OnAccountsUpdateListener" index="0" subsignature="void onAccountsUpdated(android.accounts.Account[])" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.LayoutInflater" invoketype="instance" subsignature="void &lt;init&gt;(android.view.LayoutInflater,android.content.Context)"/>
    <targets>
      <direct declaringclass="android.view.LayoutInflater" index="0" subsignature="android.view.View onCreateView(android.view.View,java.lang.String,android.util.AttributeSet)" target-position="argument"/>
      <direct declaringclass="android.view.LayoutInflater" index="0" subsignature="android.view.View onCreateView(java.lang.String,android.util.AttributeSet)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.net.URL" invoketype="instance" subsignature="void &lt;init&gt;(java.net.URL,java.lang.String,java.net.URLStreamHandler)"/>
    <targets>
      <direct declaringclass="java.net.URLStreamHandler" index="2" subsignature="void parseURL(java.net.URL,java.lang.String,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.graphics.drawable.ClipDrawable" invoketype="instance" subsignature="void &lt;init&gt;(android.graphics.drawable.Drawable,int,int)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="android.graphics.drawable.Drawable$ConstantState getConstantState()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="boolean setState(int[])" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.Intent" invoketype="instance" subsignature="android.content.Intent setClass(android.content.Context,java.lang.Class)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.Parcel" invoketype="instance" subsignature="java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)"/>
    <targets>
      <direct declaringclass="android.os.Parcelable$Creator" index="0" subsignature="java.lang.Object createFromParcel(android.os.Parcel)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.security.DigestOutputStream" invoketype="instance" subsignature="void &lt;init&gt;(java.io.OutputStream,java.security.MessageDigest)"/>
    <targets>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="byte[] toByteArray()" target-position="argument"/>
      <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      <direct declaringclass="java.security.MessageDigestSpi" index="1" subsignature="byte[] engineDigest()" target-position="argument"/>
      <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
      <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="void write(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ExpandableListView" invoketype="instance" subsignature="void setOnChildClickListener(android.widget.ExpandableListView$OnChildClickListener)"/>
    <targets>
      <direct declaringclass="android.widget.ExpandableListView$OnChildClickListener" index="0" subsignature="boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.BufferedOutputStream" invoketype="instance" subsignature="void write(byte[],int,int)"/>
    <targets>
      <indirect declaringclass="java.io.BufferedOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="base">
        <direct declaringclass="java.io.FileOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v4.widget.DrawerLayout" invoketype="instance" subsignature="void setDrawerListener(android.support.v4.widget.p)"/>
    <targets>
      <direct declaringclass="android.support.v4.widget.p" index="0" subsignature="void onDrawerClosed(android.view.View)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.ViewTreeObserver" invoketype="instance" subsignature="void addOnDrawListener(android.view.ViewTreeObserver$OnDrawListener)"/>
    <targets>
      <direct declaringclass="android.view.ViewTreeObserver$OnDrawListener" index="0" subsignature="void onDraw()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.text.Editable" invoketype="instance" subsignature="android.text.Editable insert(int,java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.graphics.drawable.PaintDrawable" invoketype="instance" subsignature="void setShape(android.graphics.drawable.shapes.Shape)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.shapes.RectShape" index="0" subsignature="void draw(android.graphics.Canvas,android.graphics.Paint)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.shapes.RectShape" index="0" subsignature="void onResize(float,float)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.chromium.base.ResourceExtractor" invoketype="instance" subsignature="void addCompletionCallback(java.lang.Runnable)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.media.MediaExtractor" invoketype="instance" subsignature="void setDataSource(java.lang.String,java.util.Map)"/>
    <targets>
      <direct declaringclass="java.util.Map" index="1" subsignature="java.util.Set entrySet()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="1" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.MessageQueue" invoketype="instance" subsignature="void addIdleHandler(android.os.MessageQueue$IdleHandler)"/>
    <targets>
      <direct declaringclass="android.os.MessageQueue$IdleHandler" index="0" subsignature="boolean queueIdle()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v7.widget.RecyclerView" invoketype="instance" subsignature="void addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration)"/>
    <targets>
      <direct declaringclass="android.support.v7.widget.RecyclerView$ItemDecoration" index="0" subsignature="void getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.TimePicker" invoketype="instance" subsignature="void setOnTimeChangedListener(android.widget.TimePicker$OnTimeChangedListener)"/>
    <targets>
      <direct declaringclass="android.widget.TimePicker$OnTimeChangedListener" index="0" subsignature="void onTimeChanged(android.widget.TimePicker,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.net.sip.SipAudioCall" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.net.sip.SipProfile)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.ViewTreeObserver" invoketype="instance" subsignature="void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)"/>
    <targets>
      <direct declaringclass="android.view.ViewTreeObserver$OnGlobalLayoutListener" index="0" subsignature="void onGlobalLayout()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.Instrumentation" invoketype="instance" subsignature="android.app.Application newApplication(java.lang.ClassLoader,java.lang.String,android.content.Context)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="2" subsignature="java.lang.String getPackageName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.EditText" invoketype="instance" subsignature="void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)"/>
    <targets>
      <direct declaringclass="android.widget.TextView$OnEditorActionListener" index="0" subsignature="boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.Gallery" invoketype="instance" subsignature="void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)"/>
    <targets>
      <direct declaringclass="android.widget.AdapterView$OnItemSelectedListener" index="0" subsignature="void onItemSelected(android.widget.AdapterView,android.view.View,int,long)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.Properties" invoketype="instance" subsignature="void load(java.io.InputStream)"/>
    <targets>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.apache.http.protocol.SyncBasicHttpContext" invoketype="instance" subsignature="void &lt;init&gt;(org.apache.http.protocol.HttpContext)"/>
    <targets>
      <direct declaringclass="org.apache.http.protocol.HttpContext" index="0" subsignature="java.lang.Object getAttribute(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ImageSwitcher" invoketype="instance" subsignature="void setFactory(android.widget.ViewSwitcher$ViewFactory)"/>
    <targets>
      <direct declaringclass="android.widget.ViewSwitcher$ViewFactory" index="0" subsignature="android.view.View makeView()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.ScheduledThreadPoolExecutor" invoketype="instance" subsignature="java.util.concurrent.Future submit(java.lang.Runnable)"/>
    <targets>
      <indirect declaringclass="java.util.concurrent.ScheduledThreadPoolExecutor" subsignature="void &lt;init&gt;(int,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)" target-position="base">
        <direct declaringclass="java.util.concurrent.ThreadFactory" index="1" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
      </indirect>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.ads.AdView" invoketype="instance" subsignature="void setAdListener(com.google.ads.AdListener)"/>
    <targets>
      <direct declaringclass="com.google.ads.AdListener" index="0" subsignature="void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="kotlin.collections.CollectionsKt" invoketype="instance" subsignature="java.util.List toList(java.lang.Iterable)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="java.lang.Object[] toArray(java.lang.Object[])" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="java.lang.Object[] toArray()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean add(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean remove(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="void clear()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.hardware.Camera" invoketype="instance" subsignature="void setAutoFocusMoveCallback(android.hardware.Camera$AutoFocusMoveCallback)"/>
    <targets>
      <direct declaringclass="android.hardware.Camera$AutoFocusMoveCallback" index="0" subsignature="void onAutoFocusMoving(boolean,android.hardware.Camera)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.OutputStreamWriter" invoketype="instance" subsignature="void &lt;init&gt;(java.io.OutputStream,java.lang.String)"/>
    <targets>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.logging.Handler" invoketype="instance" subsignature="void setFormatter(java.util.logging.Formatter)"/>
    <targets>
      <direct declaringclass="java.util.logging.Formatter" index="0" subsignature="java.lang.String format(java.util.logging.LogRecord)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.View" invoketype="instance" subsignature="void setOnClickListener(android.view.View$OnClickListener)"/>
    <targets>
      <direct declaringclass="butterknife.internal.DebouncingOnClickListener" index="0" subsignature="void doClick(android.view.View)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ListView" invoketype="instance" subsignature="void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)"/>
    <targets>
      <direct declaringclass="android.widget.AdapterView$OnItemClickListener" index="0" subsignature="void onItemClick(android.widget.AdapterView,android.view.View,int,long)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.good.gd.ui.br" invoketype="instance" subsignature="boolean post(java.lang.Runnable)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
      <direct declaringclass="java.util.concurrent.FutureTask" index="0" subsignature="void done()" target-position="argument"/>
      <direct declaringclass="java.util.concurrent.FutureTask" index="0" subsignature="void set(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.OutputStream" invoketype="instance" subsignature="void write(byte[])"/>
    <targets>
      <indirect declaringclass="javax.crypto.CipherOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream,javax.crypto.Cipher)" target-position="base">
        <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="void write(byte[])" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.DataOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="base">
        <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.util.zip.DeflaterOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream,java.util.zip.Deflater)" target-position="base">
        <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="javax.crypto.CipherOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream,javax.crypto.Cipher)" target-position="base">
        <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.cr.speed.game.CarRace" invoketype="instance" subsignature="void setScreen(com.badlogic.gdx.Screen)"/>
    <targets>
      <direct declaringclass="com.badlogic.gdx.Screen" index="0" subsignature="void render(float)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="javax.crypto.SecretKeyFactory" invoketype="instance" subsignature="javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)"/>
    <targets>
      <direct declaringclass="javax.crypto.spec.DESKeySpec" index="0" subsignature="byte[] getKey()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.gms.internal.common.zzi" invoketype="instance" subsignature="void &lt;init&gt;(android.os.Looper,android.os.Handler$Callback)"/>
    <targets>
      <direct declaringclass="android.os.Handler$Callback" index="1" subsignature="boolean handleMessage(android.os.Message)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" missingEdge="true">
    <source declaringclass="android.app.AlertDialog$Builder" invoketype="instance" subsignature="android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.AdapterViewFlipper" invoketype="instance" subsignature="void setAdapter(android.widget.Adapter)"/>
    <targets>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="void registerDataSetObserver(android.database.DataSetObserver)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.TextView" invoketype="instance" subsignature="void setTextKeepState(java.lang.CharSequence,android.widget.TextView$BufferType)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.DataOutputStream" invoketype="instance" subsignature="void writeUTF(java.lang.String)"/>
    <targets>
      <indirect declaringclass="java.io.DataOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="base">
        <direct declaringclass="java.util.zip.GZIPOutputStream" index="0" subsignature="void write(int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.DataOutput" subsignature="void writeUTF(java.lang.String)" target-position="base">
        <indirect declaringclass="java.io.DataOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="base">
          <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="byte[] toByteArray()" target-position="argument"/>
        </indirect>
      </indirect>
      <indirect declaringclass="java.io.DataOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="base">
        <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="byte[] toByteArray()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.DataOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="base">
        <indirect declaringclass="java.io.DataOutputStream" index="0" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="argument">
          <direct declaringclass="java.util.zip.GZIPOutputStream" index="0" subsignature="void write(int)" target-position="argument"/>
        </indirect>
      </indirect>
      <indirect declaringclass="java.io.DataOutput" subsignature="void writeUTF(java.lang.String)" target-position="base">
        <indirect declaringclass="java.io.DataOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="base">
          <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
        </indirect>
      </indirect>
      <indirect declaringclass="java.io.DataOutput" subsignature="void writeUTF(java.lang.String)" target-position="base">
        <indirect declaringclass="java.io.DataOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="base">
          <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
        </indirect>
      </indirect>
      <indirect declaringclass="java.io.DataOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="base">
        <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.DataOutput" subsignature="void writeUTF(java.lang.String)" target-position="base">
        <indirect declaringclass="java.io.DataOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="base">
          <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="void write(int)" target-position="argument"/>
        </indirect>
      </indirect>
      <indirect declaringclass="java.io.DataOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="base">
        <direct declaringclass="java.util.zip.GZIPOutputStream" index="0" subsignature="void deflate()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.DataOutput" subsignature="void writeUTF(java.lang.String)" target-position="base"/>
      <indirect declaringclass="java.io.DataOutput" subsignature="void writeUTF(java.lang.String)" target-position="base">
        <indirect declaringclass="java.io.DataOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="base">
          <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
        </indirect>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.Properties" invoketype="instance" subsignature="void storeToXML(java.io.OutputStream,java.lang.String,java.lang.String)"/>
    <targets>
      <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      <direct declaringclass="java.io.OutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.Writer" invoketype="instance" subsignature="void flush()"/>
    <targets>
      <indirect declaringclass="java.io.BufferedWriter" subsignature="void &lt;init&gt;(java.io.Writer,int)" target-position="base">
        <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.BufferedWriter" subsignature="void &lt;init&gt;(java.io.Writer)" target-position="base">
        <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.OutputStreamWriter" subsignature="void &lt;init&gt;(java.io.OutputStream,java.nio.charset.Charset)" target-position="base">
        <direct declaringclass="java.io.BufferedOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.OutputStreamWriter" subsignature="void &lt;init&gt;(java.io.OutputStream,java.lang.String)" target-position="base">
        <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.BufferedWriter" subsignature="void &lt;init&gt;(java.io.Writer,int)" target-position="base">
        <direct declaringclass="java.io.FileWriter" index="0" subsignature="void write(char[],int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.BufferedWriter" subsignature="void &lt;init&gt;(java.io.Writer)" target-position="base">
        <direct declaringclass="java.io.OutputStreamWriter" index="0" subsignature="void write(char[],int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.OutputStreamWriter" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="base">
        <direct declaringclass="java.util.zip.GZIPOutputStream" index="0" subsignature="void deflate()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.OutputStreamWriter" subsignature="void &lt;init&gt;(java.io.OutputStream,java.lang.String)" target-position="base">
        <direct declaringclass="java.io.BufferedOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.OutputStreamWriter" subsignature="void &lt;init&gt;(java.io.OutputStream,java.nio.charset.Charset)" target-position="base">
        <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.OutputStreamWriter" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="base">
        <direct declaringclass="java.util.zip.GZIPOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.PrintWriter" subsignature="void &lt;init&gt;(java.io.Writer,boolean)" target-position="base">
        <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.security.cert.PKIXParameters" invoketype="instance" subsignature="void &lt;init&gt;(java.util.Set)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.SearchView" invoketype="instance" subsignature="void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)"/>
    <targets>
      <direct declaringclass="android.view.View$OnFocusChangeListener" index="0" subsignature="void onFocusChange(android.view.View,boolean)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.FutureTask" invoketype="instance" subsignature="void &lt;init&gt;(java.lang.Runnable,java.lang.Object)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
      <direct declaringclass="java.util.concurrent.FutureTask" index="0" subsignature="void done()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.String" invoketype="instance" subsignature="boolean contains(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" missingEdge="true">
    <source declaringclass="com.google.common.collect.Multimaps" invoketype="instance" subsignature="com.google.common.collect.SetMultimap newSetMultimap(java.util.Map,com.google.common.base.Supplier)"/>
    <targets>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.lang.Object put(java.lang.Object,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="com.google.common.base.Supplier" index="1" subsignature="java.lang.Object get()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.util.Set entrySet()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.lang.Object get(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.Bundle" invoketype="instance" subsignature="void putParcelable(java.lang.String,android.os.Parcelable)"/>
    <targets>
      <direct declaringclass="android.os.Parcelable" index="1" subsignature="void writeToParcel(android.os.Parcel,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.movoto.movoto.widget.MovotoEditTextWithFont" invoketype="instance" subsignature="void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)"/>
    <targets>
      <direct declaringclass="android.view.View$OnFocusChangeListener" index="0" subsignature="void onFocusChange(android.view.View,boolean)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.RemoteCallbackList" invoketype="instance" subsignature="boolean unregister(android.os.IInterface)"/>
    <targets>
      <direct declaringclass="android.os.IInterface" index="0" subsignature="android.os.IBinder asBinder()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v7.widget.RecyclerView" invoketype="instance" subsignature="void setOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener)"/>
    <targets>
      <direct declaringclass="android.support.v7.widget.RecyclerView$OnScrollListener" index="0" subsignature="void onScrolled(android.support.v7.widget.RecyclerView,int,int)" target-position="argument"/>
      <direct declaringclass="android.support.v7.widget.RecyclerView$OnScrollListener" index="0" subsignature="void onScrollStateChanged(android.support.v7.widget.RecyclerView,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.hardware.Camera" invoketype="instance" subsignature="void setPreviewDisplay(android.view.SurfaceHolder)"/>
    <targets>
      <direct declaringclass="android.view.SurfaceHolder" index="0" subsignature="android.view.Surface getSurface()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ImageView" invoketype="instance" subsignature="void setImageDrawable(android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="boolean setVisible(boolean,boolean)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="void setHotspot(float,float)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="int getIntrinsicWidth()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="void jumpToCurrentState()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="void onBoundsChange(android.graphics.Rect)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="boolean onStateChange(int[])" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="int getIntrinsicHeight()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="android.graphics.drawable.Drawable$Callback getCallback()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.TransitionDrawable" index="0" subsignature="void startTransition(int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="boolean isStateful()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="void invalidateSelf()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="int getOpacity()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="void draw(android.graphics.Canvas)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="int getLayoutDirection()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="void setBounds(int,int,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.android.billingclient.api.BillingClient" invoketype="instance" subsignature="void startConnection(com.android.billingclient.api.BillingClientStateListener)"/>
    <targets>
      <direct declaringclass="com.android.billingclient.api.BillingClientStateListener" index="0" subsignature="void onBillingSetupFinished(com.android.billingclient.api.BillingResult)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.DownloadManager$Request" invoketype="instance" subsignature="android.app.DownloadManager$Request setDestinationInExternalFilesDir(android.content.Context,java.lang.String,java.lang.String)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.io.File getExternalFilesDir(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.movoto.movoto.adapter.PropertyTypesAdapter" invoketype="instance" subsignature="void addAll(java.util.Collection)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="java.lang.Object[] toArray()" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object get(int)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="javax.net.ssl.KeyStoreBuilderParameters" invoketype="instance" subsignature="void &lt;init&gt;(java.util.List)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="java.lang.Object[] toArray()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="java.lang.Object[] toArray(java.lang.Object[])" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.View" invoketype="instance" subsignature="android.view.ActionMode startActionMode(android.view.ActionMode$Callback)"/>
    <targets>
      <direct declaringclass="android.view.ActionMode$Callback" index="0" subsignature="boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.View" invoketype="instance" subsignature="void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)"/>
    <targets>
      <direct declaringclass="android.view.View$OnApplyWindowInsetsListener" index="0" subsignature="android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ListView" invoketype="instance" subsignature="void setAdapter(android.widget.ListAdapter)"/>
    <targets>
      <direct declaringclass="android.widget.ListAdapter" index="0" subsignature="boolean areAllItemsEnabled()" target-position="argument"/>
      <direct declaringclass="android.widget.SimpleAdapter" index="0" subsignature="void setViewImage(android.widget.ImageView,java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="long getItemId(int)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="void registerDataSetObserver(android.database.DataSetObserver)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="android.view.View getView(int,android.view.View,android.view.ViewGroup)" target-position="argument"/>
      <direct declaringclass="android.widget.ListAdapter" index="0" subsignature="boolean isEnabled(int)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="java.lang.Object getItem(int)" target-position="argument"/>
      <direct declaringclass="android.widget.SimpleCursorAdapter" index="0" subsignature="android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="boolean hasStableIds()" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="int getViewTypeCount()" target-position="argument"/>
      <direct declaringclass="android.widget.SimpleCursorAdapter" index="0" subsignature="void bindView(android.view.View,android.content.Context,android.database.Cursor)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="int getCount()" target-position="argument"/>
      <direct declaringclass="android.widget.SimpleCursorAdapter" index="0" subsignature="void changeCursor(android.database.Cursor)" target-position="argument"/>
      <direct declaringclass="android.widget.SimpleAdapter" index="0" subsignature="void setViewText(android.widget.TextView,java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="int getItemViewType(int)" target-position="argument"/>
      <direct declaringclass="android.widget.ArrayAdapter" index="0" subsignature="void notifyDataSetChanged()" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="void unregisterDataSetObserver(android.database.DataSetObserver)" target-position="argument"/>
      <direct declaringclass="android.widget.ArrayAdapter" index="0" subsignature="void notifyDataSetInvalidated()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.TabHost" invoketype="instance" subsignature="void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)"/>
    <targets>
      <direct declaringclass="android.widget.TabHost$OnTabChangeListener" index="0" subsignature="void onTabChanged(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.ObjectOutputStream" invoketype="instance" subsignature="void writeObject(java.lang.Object)"/>
    <targets>
      <indirect declaringclass="java.io.ObjectOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="base">
        <direct declaringclass="java.io.FileOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.logging.Logger" invoketype="instance" subsignature="void addHandler(java.util.logging.Handler)"/>
    <targets>
      <direct declaringclass="java.util.logging.Handler" index="0" subsignature="void publish(java.util.logging.LogRecord)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="javax.net.ssl.HttpsURLConnection" invoketype="instance" subsignature="void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)"/>
    <targets>
      <direct declaringclass="javax.net.ssl.SSLSocketFactory" index="0" subsignature="java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.graphics.Bitmap" invoketype="instance" subsignature="boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)"/>
    <targets>
      <direct declaringclass="java.io.ByteArrayOutputStream" index="2" subsignature="byte[] toByteArray()" target-position="argument"/>
      <direct declaringclass="java.lang.AutoCloseable" index="2" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.Flushable" index="2" subsignature="void flush()" target-position="argument"/>
      <direct declaringclass="java.io.ByteArrayOutputStream" index="2" subsignature="void write(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.Parcel" invoketype="instance" subsignature="java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)"/>
    <targets>
      <direct declaringclass="android.os.Parcelable$Creator" index="0" subsignature="java.lang.Object createFromParcel(android.os.Parcel)" target-position="argument"/>
      <direct declaringclass="android.os.Parcelable$Creator" index="0" subsignature="java.lang.Object[] newArray(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" missingEdge="true">
    <source declaringclass="android.app.AlertDialog" invoketype="instance" subsignature="void setOnShowListener(android.content.DialogInterface$OnShowListener)"/>
    <targets>
      <direct declaringclass="android.content.DialogInterface$OnShowListener" index="0" subsignature="void onShow(android.content.DialogInterface)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.xml.sax.InputSource" invoketype="instance" subsignature="void setCharacterStream(java.io.Reader)"/>
    <targets>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.StringReader" index="0" subsignature="int read(char[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.BufferedReader" invoketype="instance" subsignature="java.lang.String readLine()"/>
    <targets>
      <indirect declaringclass="java.io.BufferedReader" subsignature="void &lt;init&gt;(java.io.Reader,int)" target-position="base">
        <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.BufferedReader" subsignature="void &lt;init&gt;(java.io.Reader)" target-position="base">
        <direct declaringclass="java.io.InputStreamReader" index="0" subsignature="int read(char[],int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.BufferedReader" subsignature="void &lt;init&gt;(java.io.Reader,int)" target-position="base">
        <direct declaringclass="java.io.InputStreamReader" index="0" subsignature="int read(char[],int,int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.Presentation" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.view.Display)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.Context createDisplayContext(android.view.Display)" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.gms.maps.GoogleMap" invoketype="instance" subsignature="void setOnCameraChangeListener(com.google.android.gms.maps.GoogleMap$OnCameraChangeListener)"/>
    <targets>
      <direct declaringclass="com.google.android.gms.maps.GoogleMap$OnCameraChangeListener" index="0" subsignature="void onCameraChange(com.google.android.gms.maps.model.CameraPosition)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.common.collect.Sets" invoketype="instance" subsignature="com.google.common.collect.Sets$SetView union(java.util.Set,java.util.Set)"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="1" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" fp="true">
    <source declaringclass="android.widget.ArrayAdapter" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,int,int,java.lang.Object[])"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="void sendOrderedBroadcast(android.content.Intent,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.TextView" invoketype="instance" subsignature="void setText(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="android.text.GetChars" index="0" subsignature="void getChars(int,int,char[],int)" target-position="argument"/>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanFlags(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanEnd(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v7.view.menu.MenuBuilder" invoketype="instance" subsignature="boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int)"/>
    <targets>
      <direct declaringclass="android.support.v7.view.menu.MenuPresenter" index="1" subsignature="void updateMenuView(boolean)" target-position="argument"/>
      <direct declaringclass="android.support.v7.view.menu.MenuPresenter" index="1" subsignature="int getId()" target-position="argument"/>
      <direct declaringclass="android.support.v7.view.menu.MenuPresenter" index="1" subsignature="android.os.Parcelable onSaveInstanceState()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.Notification$InboxStyle" invoketype="instance" subsignature="android.app.Notification$InboxStyle setSummaryText(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.PendingIntent" invoketype="instance" subsignature="android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.ScheduledThreadPoolExecutor" invoketype="instance" subsignature="void &lt;init&gt;(int,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)"/>
    <targets>
      <direct declaringclass="java.util.concurrent.ThreadFactory" index="1" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.preference.ListPreference" invoketype="instance" subsignature="void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)"/>
    <targets>
      <direct declaringclass="android.preference.Preference$OnPreferenceChangeListener" index="0" subsignature="boolean onPreferenceChange(android.preference.Preference,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v7.widget.RecyclerView" invoketype="instance" subsignature="void setAdapter(android.support.v7.widget.RecyclerView$Adapter)"/>
    <targets>
      <direct declaringclass="android.support.v7.widget.RecyclerView$Adapter" index="0" subsignature="void onAttachedToRecyclerView(android.support.v7.widget.RecyclerView)" target-position="argument"/>
      <direct declaringclass="android.support.v7.widget.RecyclerView$Adapter" index="0" subsignature="long getItemId(int)" target-position="argument"/>
      <direct declaringclass="android.support.v7.widget.RecyclerView$Adapter" index="0" subsignature="int getItemCount()" target-position="argument"/>
      <direct declaringclass="android.support.v7.widget.RecyclerView$Adapter" index="0" subsignature="android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)" target-position="argument"/>
      <direct declaringclass="android.support.v7.widget.RecyclerView$Adapter" index="0" subsignature="void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)" target-position="argument"/>
      <direct declaringclass="android.support.v7.widget.RecyclerView$Adapter" index="0" subsignature="int getItemViewType(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.provider.Telephony$Threads" invoketype="instance" subsignature="long getOrCreateThreadId(android.content.Context,java.util.Set)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="1" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.TableRow$LayoutParams" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.util.AttributeSet)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources$Theme getTheme()" target-position="argument"/>
      <direct declaringclass="android.content.ContextWrapper" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.app.Activity" index="0" subsignature="void stopLocalVoiceInteraction()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.media.MediaPlayer" invoketype="instance" subsignature="void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)"/>
    <targets>
      <direct declaringclass="android.media.MediaPlayer$OnInfoListener" index="0" subsignature="boolean onInfo(android.media.MediaPlayer,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.HashMap" invoketype="instance" subsignature="void &lt;init&gt;(java.util.Map)"/>
    <targets>
      <direct declaringclass="java.util.HashMap" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.lang.Object put(java.lang.Object,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.util.Set entrySet()" target-position="argument"/>
      <direct declaringclass="java.util.SortedMap" index="0" subsignature="java.util.Comparator comparator()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.util.Set keySet()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="boolean containsKey(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.lang.Object get(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.lang.Object remove(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="void clear()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.CharArrayWriter" invoketype="instance" subsignature="java.io.CharArrayWriter append(java.lang.CharSequence,int,int)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.CharSequence subSequence(int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.OverScroller" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.view.animation.Interpolator,float,float)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.adobe.marketing.mobile.MobileCore" invoketype="instance" subsignature="void start(com.adobe.marketing.mobile.AdobeCallback)"/>
    <targets>
      <direct declaringclass="com.adobe.marketing.mobile.AdobeCallback" index="0" subsignature="void call(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.ScheduledThreadPoolExecutor" invoketype="instance" subsignature="java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)"/>
    <targets>
      <direct declaringclass="java.util.concurrent.Callable" index="0" subsignature="java.lang.Object call()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.AlertDialog$Builder" invoketype="instance" subsignature="android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)"/>
    <targets>
      <direct declaringclass="android.content.DialogInterface$OnClickListener" index="1" subsignature="void onClick(android.content.DialogInterface,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.TextView" invoketype="instance" subsignature="void setTextKeepState(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.ViewTreeObserver" invoketype="instance" subsignature="void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)"/>
    <targets>
      <direct declaringclass="android.view.ViewTreeObserver$OnPreDrawListener" index="0" subsignature="boolean onPreDraw()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ArrayAdapter" invoketype="instance" subsignature="android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)"/>
    <targets>
      <direct declaringclass="android.view.View" index="2" subsignature="void onWindowFocusChanged(boolean)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.j256.ormlite.misc.TransactionManager" invoketype="instance" subsignature="java.lang.Object callInTransaction(com.j256.ormlite.support.ConnectionSource,java.util.concurrent.Callable)"/>
    <targets>
     <direct declaringclass="java.util.concurrent.Callable" index="1" subsignature="java.lang.Object call()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.xml.sax.XMLReader" invoketype="instance" subsignature="void setContentHandler(org.xml.sax.ContentHandler)"/>
    <targets>
      <direct declaringclass="org.xml.sax.ContentHandler" index="0" subsignature="void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)" target-position="argument"/>
      <direct declaringclass="org.xml.sax.ContentHandler" index="0" subsignature="void endElement(java.lang.String,java.lang.String,java.lang.String)" target-position="argument"/>
      <direct declaringclass="org.xml.sax.ContentHandler" index="0" subsignature="void characters(char[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.Looper" invoketype="instance" subsignature="void setMessageLogging(android.util.Printer)"/>
    <targets>
      <direct declaringclass="android.util.Printer" index="0" subsignature="void println(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v4.view.ViewCompat" invoketype="instance" subsignature="void postOnAnimation(android.view.View,java.lang.Runnable)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="1" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.Runnable" invoketype="instance" subsignature="void run()"/>
    <targets>
      <indirect declaringclass="java.util.concurrent.FutureTask" subsignature="void &lt;init&gt;(java.util.concurrent.Callable)" target-position="base">
        <direct declaringclass="java.util.concurrent.Callable" index="0" subsignature="java.lang.Object call()" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.text.style.SuggestionSpan" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,java.lang.String[],int)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources$Theme getTheme()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.SeekBar" invoketype="instance" subsignature="void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)"/>
    <targets>
      <direct declaringclass="android.widget.SeekBar$OnSeekBarChangeListener" index="0" subsignature="void onProgressChanged(android.widget.SeekBar,int,boolean)" target-position="argument"/>
      <direct declaringclass="android.widget.SeekBar$OnSeekBarChangeListener" index="0" subsignature="void onStopTrackingTouch(android.widget.SeekBar)" target-position="argument"/>
      <direct declaringclass="android.widget.SeekBar$OnSeekBarChangeListener" index="0" subsignature="void onStartTrackingTouch(android.widget.SeekBar)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.media.MediaExtractor" invoketype="instance" subsignature="void setDataSource(android.content.Context,android.net.Uri,java.util.Map)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="2" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="2" subsignature="java.util.Set entrySet()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.IntentFilter" invoketype="instance" subsignature="void readFromXml(org.xmlpull.v1.XmlPullParser)"/>
    <targets>
      <direct declaringclass="org.xmlpull.v1.XmlPullParser" index="0" subsignature="java.lang.String getAttributeValue(java.lang.String,java.lang.String)" target-position="argument"/>
      <direct declaringclass="org.xmlpull.v1.XmlPullParser" index="0" subsignature="int next()" target-position="argument"/>
      <direct declaringclass="org.xmlpull.v1.XmlPullParser" index="0" subsignature="int getDepth()" target-position="argument"/>
      <direct declaringclass="org.xmlpull.v1.XmlPullParser" index="0" subsignature="java.lang.String getName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.launchdarkly.eventsource.f$a" invoketype="instance" subsignature="void &lt;init&gt;(com.launchdarkly.eventsource.d,java.net.URI)"/>
    <targets>
      <direct declaringclass="com.launchdarkly.eventsource.d" index="0" subsignature="void onMessage(java.lang.String,com.launchdarkly.eventsource.g)" target-position="argument"/>
      <direct declaringclass="com.launchdarkly.eventsource.d" index="0" subsignature="void onOpen()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.xmlpull.v1.XmlPullParserException" invoketype="instance" subsignature="void &lt;init&gt;(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)"/>
    <targets>
      <direct declaringclass="org.xmlpull.v1.XmlPullParser" index="1" subsignature="int getLineNumber()" target-position="argument"/>
      <direct declaringclass="org.xmlpull.v1.XmlPullParser" index="1" subsignature="java.lang.String getPositionDescription()" target-position="argument"/>
      <direct declaringclass="org.xmlpull.v1.XmlPullParser" index="1" subsignature="int getColumnNumber()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.pm.ShortcutManager" invoketype="instance" subsignature="boolean setDynamicShortcuts(java.util.List)"/>
    <targets>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object get(int)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.common.collect.Iterables" invoketype="instance" subsignature="java.lang.Iterable filter(java.lang.Iterable,com.google.common.base.Predicate)"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" fp="true" index="0" subsignature="boolean add(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" fp="true" index="0" subsignature="boolean remove(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.Parcel" invoketype="instance" subsignature="void writeParcelable(android.os.Parcelable,int)"/>
    <targets>
      <direct declaringclass="android.os.Parcelable" index="0" subsignature="void writeToParcel(android.os.Parcel,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.security.cert.PKIXBuilderParameters" invoketype="instance" subsignature="void &lt;init&gt;(java.util.Set,java.security.cert.CertSelector)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.SharedPreferences" invoketype="instance" subsignature="void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)"/>
    <targets>
      <direct declaringclass="android.content.SharedPreferences$OnSharedPreferenceChangeListener" index="0" subsignature="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.View" invoketype="instance" subsignature="void setAnimation(android.view.animation.Animation)"/>
    <targets>
      <direct declaringclass="android.view.animation.TranslateAnimation" index="0" subsignature="void applyTransformation(float,android.view.animation.Transformation)" target-position="argument"/>
      <direct declaringclass="android.view.animation.ScaleAnimation" index="0" subsignature="boolean getFillAfter()" target-position="argument"/>
      <direct declaringclass="android.view.animation.TranslateAnimation" index="0" subsignature="boolean willChangeTransformationMatrix()" target-position="argument"/>
      <direct declaringclass="android.view.animation.ScaleAnimation" index="0" subsignature="void initialize(int,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.view.animation.TranslateAnimation" index="0" subsignature="boolean willChangeBounds()" target-position="argument"/>
      <direct declaringclass="android.view.animation.ScaleAnimation" index="0" subsignature="boolean isInitialized()" target-position="argument"/>
      <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="void setStartTime(long)" target-position="argument"/>
      <direct declaringclass="android.view.animation.ScaleAnimation" index="0" subsignature="float getScaleFactor()" target-position="argument"/>
      <direct declaringclass="android.view.animation.TranslateAnimation" index="0" subsignature="boolean getTransformation(long,android.view.animation.Transformation,float)" target-position="argument"/>
      <direct declaringclass="android.view.animation.Animation" index="0" subsignature="void reset()" target-position="argument"/>
      <direct declaringclass="android.view.animation.AnimationSet" index="0" subsignature="void start()" target-position="argument"/>
      <direct declaringclass="android.view.animation.TranslateAnimation" index="0" subsignature="float resolveSize(int,float,int,int)" target-position="argument"/>
      <direct declaringclass="android.view.animation.TranslateAnimation" index="0" subsignature="long getStartOffset()" target-position="argument"/>
      <direct declaringclass="android.view.animation.TranslateAnimation" index="0" subsignature="boolean getTransformation(long,android.view.animation.Transformation)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.DataOutputStream" invoketype="instance" subsignature="void writeInt(int)"/>
    <targets>
      <indirect declaringclass="java.io.DataOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="base">
        <direct declaringclass="java.util.zip.GZIPOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.common.io.Closeables" invoketype="instance" subsignature="void closeQuietly(java.io.Reader)"/>
    <targets>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="bolts.Task" invoketype="instance" subsignature="bolts.Task whenAll(java.util.Collection)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" missingEdge="true">
    <source declaringclass="android.app.AlertDialog$Builder" invoketype="instance" subsignature="android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="android.content.DialogInterface$OnClickListener" index="1" subsignature="void onClick(android.content.DialogInterface,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.hardware.Camera" invoketype="instance" subsignature="void autoFocus(android.hardware.Camera$AutoFocusCallback)"/>
    <targets>
      <direct declaringclass="android.hardware.Camera$AutoFocusCallback" index="0" subsignature="void onAutoFocus(boolean,android.hardware.Camera)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl" invoketype="instance" subsignature="void dispatchKeyEvent(int,android.view.KeyEvent,android.view.inputmethod.InputMethodSession$EventCallback)"/>
    <targets>
      <direct declaringclass="android.view.inputmethod.InputMethodSession$EventCallback" index="2" subsignature="void finishedEvent(int,boolean)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="io.reactivex.Observable" invoketype="instance" subsignature="io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)"/>
    <targets>
      <direct declaringclass="io.reactivex.functions.BiFunction" index="2" subsignature="java.lang.Object apply(java.lang.Object,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.security.cert.CertPathValidatorException" invoketype="instance" subsignature="void &lt;init&gt;(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)"/>
    <targets>
      <direct declaringclass="java.security.cert.CertPath" index="2" subsignature="java.util.List getCertificates()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.zip.ZipInputStream" invoketype="instance" subsignature="java.util.zip.ZipEntry getNextEntry()"/>
    <targets>
      <indirect declaringclass="java.util.zip.ZipInputStream" subsignature="void &lt;init&gt;(java.io.InputStream)" target-position="base">
        <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.Switch" invoketype="instance" subsignature="void setThumbDrawable(android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="boolean getPadding(android.graphics.Rect)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="int getIntrinsicWidth()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void jumpToCurrentState()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void draw(android.graphics.Canvas)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="int getIntrinsicHeight()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void setBounds(int,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="boolean isStateful()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.openfeint.internal.request.Client" invoketype="instance" subsignature="void addRequestInterceptor(org.apache.http.HttpRequestInterceptor)"/>
    <targets>
      <direct declaringclass="org.apache.http.HttpRequestInterceptor" index="0" subsignature="void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v4.view.ViewPager" invoketype="instance" subsignature="void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)"/>
    <targets>
      <direct declaringclass="android.support.v4.view.ViewPager$OnPageChangeListener" index="0" subsignature="void onPageScrolled(int,float,int)" target-position="argument"/>
      <direct declaringclass="android.support.v4.view.ViewPager$OnPageChangeListener" index="0" subsignature="void onPageSelected(int)" target-position="argument"/>
      <direct declaringclass="android.support.v4.view.ViewPager$OnPageChangeListener" index="0" subsignature="void onPageScrollStateChanged(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.View" invoketype="instance" subsignature="void setBackgroundDrawable(android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="boolean setVisible(boolean,boolean)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.ColorDrawable" index="0" subsignature="void getOutline(android.graphics.Outline)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="boolean getPadding(android.graphics.Rect)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.ColorDrawable" index="0" subsignature="boolean setState(int[])" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="int getIntrinsicWidth()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.NinePatchDrawable" index="0" subsignature="void jumpToCurrentState()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="void onBoundsChange(android.graphics.Rect)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="void setGravity(int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="void setColorFilter(android.graphics.ColorFilter)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="boolean onStateChange(int[])" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="int getMinimumWidth()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.ColorDrawable" index="0" subsignature="void setBounds(android.graphics.Rect)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="int getIntrinsicHeight()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.NinePatchDrawable" index="0" subsignature="android.graphics.drawable.Drawable$Callback getCallback()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.ColorDrawable" index="0" subsignature="android.graphics.drawable.Drawable$ConstantState getConstantState()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.ColorDrawable" index="0" subsignature="void setColor(int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.ColorDrawable" index="0" subsignature="boolean onLevelChange(int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.ColorDrawable" index="0" subsignature="int getAlpha()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="int getMinimumHeight()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="boolean isStateful()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="android.graphics.drawable.Drawable getCurrent()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.ColorDrawable" index="0" subsignature="int getColor()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.NinePatchDrawable" index="0" subsignature="void invalidateSelf()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.ColorDrawable" index="0" subsignature="android.graphics.drawable.Drawable mutate()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="int getOpacity()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void draw(android.graphics.Canvas)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="int getLayoutDirection()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void setBounds(int,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.ColorDrawable" index="0" subsignature="android.graphics.Rect getDirtyBounds()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.PaintDrawable" index="0" subsignature="void onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.xml.sax.ext.Locator2Impl" invoketype="instance" subsignature="void &lt;init&gt;(org.xml.sax.Locator)"/>
    <targets>
      <direct declaringclass="org.xml.sax.Locator" index="0" subsignature="int getLineNumber()" target-position="argument"/>
      <direct declaringclass="org.xml.sax.Locator" index="0" subsignature="java.lang.String getPublicId()" target-position="argument"/>
      <direct declaringclass="org.xml.sax.Locator" index="0" subsignature="int getColumnNumber()" target-position="argument"/>
      <direct declaringclass="org.xml.sax.Locator" index="0" subsignature="java.lang.String getSystemId()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="pictures.videos.boatardepv.views.PhotoPager" invoketype="instance" subsignature="void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer)"/>
    <targets>
      <direct declaringclass="android.support.v4.view.ViewPager$PageTransformer" index="1" subsignature="void transformPage(android.view.View,float)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.GestureDetector" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.view.GestureDetector$OnGestureListener)"/>
    <targets>
      <direct declaringclass="android.view.GestureDetector$OnGestureListener" index="1" subsignature="void onShowPress(android.view.MotionEvent)" target-position="argument"/>
      <direct declaringclass="android.view.GestureDetector$OnGestureListener" index="1" subsignature="void onLongPress(android.view.MotionEvent)" target-position="argument"/>
      <direct declaringclass="android.view.GestureDetector$OnGestureListener" index="1" subsignature="boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)" target-position="argument"/>
      <direct declaringclass="android.view.GestureDetector$OnGestureListener" index="1" subsignature="boolean onDown(android.view.MotionEvent)" target-position="argument"/>
      <direct declaringclass="android.view.GestureDetector$OnGestureListener" index="1" subsignature="boolean onSingleTapUp(android.view.MotionEvent)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.apache.http.conn.ssl.AbstractVerifier" invoketype="instance" subsignature="void verify(java.lang.String,javax.net.ssl.SSLSocket)"/>
    <targets>
      <direct declaringclass="javax.net.ssl.SSLSocket" index="1" subsignature="javax.net.ssl.SSLSession getSession()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.FutureTask" invoketype="instance" subsignature="void &lt;init&gt;(java.util.concurrent.Callable)"/>
    <targets>
      <direct declaringclass="java.util.concurrent.Callable" index="0" subsignature="java.lang.Object call()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.location.Geocoder" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,java.util.Locale)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.text.Spannable$Factory" invoketype="instance" subsignature="android.text.Spannable newSpannable(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.DataInputStream" invoketype="instance" subsignature="java.lang.String readUTF()"/>
    <targets>
      <indirect declaringclass="java.io.DataInputStream" subsignature="void &lt;init&gt;(java.io.InputStream)" target-position="base">
        <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.DataInputStream" subsignature="void &lt;init&gt;(java.io.InputStream)" target-position="base">
        <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.DataInputStream" subsignature="void &lt;init&gt;(java.io.InputStream)" target-position="base">
        <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.DataInputStream" subsignature="void &lt;init&gt;(java.io.InputStream)" target-position="base">
        <direct declaringclass="java.util.zip.GZIPInputStream" index="0" subsignature="void fill()" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.king.core.GameView" invoketype="instance" subsignature="void setEGLContextFactory(android.opengl.GLSurfaceView$EGLContextFactory)"/>
    <targets>
      <direct declaringclass="android.opengl.GLSurfaceView$EGLContextFactory" index="0" subsignature="javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.TwoLineListItem" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources$Theme getTheme()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="void sendOrderedBroadcast(android.content.Intent,java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.app.NativeActivity" index="0" subsignature="android.content.Intent getIntent()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.gms.ads.InterstitialAd" invoketype="instance" subsignature="void loadAd(com.google.android.gms.ads.AdRequest)"/>
    <targets>
      <indirect declaringclass="com.google.android.gms.ads.InterstitialAd" subsignature="void setAdListener(com.google.android.gms.ads.AdListener)" target-position="base">
        <direct declaringclass="com.google.android.gms.ads.AdListener" index="0" subsignature="void onAdFailedToLoad(int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="com.google.android.gms.ads.InterstitialAd" subsignature="void setAdListener(com.google.android.gms.ads.AdListener)" target-position="base">
        <direct declaringclass="com.google.android.gms.ads.AdListener" index="0" subsignature="void onAdLoaded()" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" missingEdge="true">
    <source declaringclass="android.app.AlertDialog$Builder" invoketype="instance" subsignature="android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="android.content.DialogInterface$OnClickListener" index="1" subsignature="void onClick(android.content.DialogInterface,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" missingEdge="true">
    <source declaringclass="org.apache.http.impl.client.DefaultHttpClient" invoketype="instance" subsignature="void &lt;init&gt;(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)"/>
    <targets>
      <direct declaringclass="org.apache.http.conn.ClientConnectionManager" index="0" subsignature="void closeExpiredConnections()" target-position="argument"/>
      <direct declaringclass="org.apache.http.conn.ClientConnectionManager" index="0" subsignature="void shutdown()" target-position="argument"/>
      <direct declaringclass="org.apache.http.conn.ClientConnectionManager" index="0" subsignature="org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()" target-position="argument"/>
      <direct declaringclass="org.apache.http.conn.ClientConnectionManager" index="0" subsignature="void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit)" target-position="argument"/>
      <direct declaringclass="org.apache.http.conn.ClientConnectionManager" index="0" subsignature="org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="org.apache.http.impl.conn.SingleClientConnManager" index="0" subsignature="org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.Parcel" invoketype="instance" subsignature="void writeBundle(android.os.Bundle)"/>
    <targets>
      <indirect declaringclass="android.os.Parcel" subsignature="void writeStrongBinder(android.os.IBinder)" target-position="base">
        <direct declaringclass="ffm" index="0" subsignature="boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" missingEdge="true">
    <source declaringclass="android.app.AlertDialog$Builder" invoketype="instance" subsignature="android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)"/>
    <targets>
      <direct declaringclass="android.content.DialogInterface$OnCancelListener" index="0" subsignature="void onCancel(android.content.DialogInterface)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.NotificationManager" invoketype="instance" subsignature="void createNotificationChannelGroups(java.util.List)"/>
    <targets>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object get(int)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.database.sqlite.SQLiteDatabase" invoketype="instance" subsignature="android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String)"/>
    <targets>
      <direct declaringclass="android.database.sqlite.SQLiteDatabase$CursorFactory" index="0" subsignature="android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.appcelerator.titanium.view.TiCompositeLayout" invoketype="instance" subsignature="void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)"/>
    <targets>
      <direct declaringclass="android.view.ViewGroup$OnHierarchyChangeListener" index="0" subsignature="void onChildViewAdded(android.view.View,android.view.View)" target-position="argument"/>
      <direct declaringclass="android.view.ViewGroup$OnHierarchyChangeListener" index="0" subsignature="void onChildViewRemoved(android.view.View,android.view.View)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.text.Layout" invoketype="instance" subsignature="void getCursorPath(int,android.graphics.Path,java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.Intent" invoketype="instance" subsignature="android.content.Intent putExtra(java.lang.String,android.os.Parcelable)"/>
    <targets>
      <direct declaringclass="android.os.Parcelable" index="1" subsignature="void writeToParcel(android.os.Parcel,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.LayoutInflater" invoketype="instance" subsignature="android.view.View inflate(int,android.view.ViewGroup)"/>
    <targets>
      <direct declaringclass="android.view.ViewGroup" index="1" subsignature="void onAttachedToWindow()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.MenuItem" invoketype="instance" subsignature="android.view.MenuItem setTitle(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.Presentation" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.view.Display,int)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="io.reactivex.Observable" invoketype="instance" subsignature="io.reactivex.Observable filter(io.reactivex.functions.Predicate)"/>
    <targets>
      <direct declaringclass="io.reactivex.functions.Predicate" index="0" subsignature="boolean test(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="androidx.lifecycle.a" invoketype="instance" subsignature="void $default$onDestroy(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)"/>
    <targets>
      <direct declaringclass="androidx.lifecycle.FullLifecycleObserver" index="0" subsignature="void onDestroy(androidx.lifecycle.LifecycleOwner)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.moji.mjweather.activity.main.MainActivity" invoketype="instance" subsignature="com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)"/>
    <targets>
      <direct declaringclass="com.actionbarsherlock.view.ActionMode$Callback" index="0" subsignature="boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.CursorLoader" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.Context getApplicationContext()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.Button" invoketype="instance" subsignature="void setBackground(android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="void getOutline(android.graphics.Outline)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="boolean setVisible(boolean,boolean)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="boolean getPadding(android.graphics.Rect)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.InsetDrawable" index="0" subsignature="boolean setState(int[])" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="void setHotspot(float,float)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="int getIntrinsicWidth()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="void jumpToCurrentState()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="void onBoundsChange(android.graphics.Rect)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="boolean onStateChange(int[])" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="int getMinimumWidth()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="int getIntrinsicHeight()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="void setStroke(int,int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="android.graphics.drawable.Drawable$Callback getCallback()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="void setColor(int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="int getAlpha()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="int getMinimumHeight()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.TransitionDrawable" index="0" subsignature="void startTransition(int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="boolean isStateful()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="android.graphics.drawable.Drawable getCurrent()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="void invalidateSelf()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="int getOpacity()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="void draw(android.graphics.Canvas)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.TransitionDrawable" index="0" subsignature="android.graphics.drawable.Drawable getDrawable(int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.BitmapDrawable" index="0" subsignature="int getLayoutDirection()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="android.graphics.Rect getDirtyBounds()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.GradientDrawable" index="0" subsignature="void setBounds(int,int,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.security.KeyFactory" invoketype="instance" subsignature="java.security.PublicKey generatePublic(java.security.spec.KeySpec)"/>
    <targets>
      <direct declaringclass="java.security.spec.X509EncodedKeySpec" index="0" subsignature="byte[] getEncoded()" target-position="argument"/>
      <direct declaringclass="java.security.spec.RSAPublicKeySpec" index="0" subsignature="java.math.BigInteger getModulus()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="okio.Okio" invoketype="instance" subsignature="okio.BufferedSource buffer(okio.Source)"/>
    <targets>
      <direct declaringclass="okio.Source" index="0" subsignature="long read(okio.Buffer,long)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.text.SpannableStringBuilder" invoketype="instance" subsignature="android.text.SpannableStringBuilder append(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.media.SoundPool" invoketype="instance" subsignature="void setOnLoadCompleteListener(android.media.SoundPool$OnLoadCompleteListener)"/>
    <targets>
      <direct declaringclass="android.media.SoundPool$OnLoadCompleteListener" index="0" subsignature="void onLoadComplete(android.media.SoundPool,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v4.view.ViewPager" invoketype="instance" subsignature="void setAdapter(android.support.v4.view.PagerAdapter)"/>
    <targets>
      <direct declaringclass="android.support.v4.view.PagerAdapter" index="0" subsignature="int getCount()" target-position="argument"/>
      <direct declaringclass="android.support.v4.view.PagerAdapter" index="0" subsignature="java.lang.CharSequence getPageTitle(int)" target-position="argument"/>
      <direct declaringclass="android.support.v4.view.PagerAdapter" index="0" subsignature="boolean isViewFromObject(android.view.View,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="android.support.v4.view.PagerAdapter" index="0" subsignature="java.lang.Object instantiateItem(android.view.View,int)" target-position="argument"/>
      <direct declaringclass="android.support.v4.view.PagerAdapter" index="0" subsignature="int getItemPosition(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="android.support.v4.view.PagerAdapter" index="0" subsignature="java.lang.Object instantiateItem(android.view.ViewGroup,int)" target-position="argument"/>
      <direct declaringclass="android.support.v4.view.PagerAdapter" index="0" subsignature="void destroyItem(android.view.ViewGroup,int,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.apache.commons.lang3.StringUtils" invoketype="instance" subsignature="java.lang.String join(java.lang.Iterable,java.lang.String)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.NumberPicker" invoketype="instance" subsignature="void setOnScrollListener(android.widget.NumberPicker$OnScrollListener)"/>
    <targets>
      <direct declaringclass="android.widget.NumberPicker$OnScrollListener" index="0" subsignature="void onScrollStateChange(android.widget.NumberPicker,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" missingEdge="true">
    <source declaringclass="android.app.AlertDialog$Builder" invoketype="instance" subsignature="android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)"/>
    <targets>
      <direct declaringclass="android.content.DialogInterface$OnClickListener" index="1" subsignature="void onClick(android.content.DialogInterface,int)" target-position="argument"/>
    </targets>
  </edge>

  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.ViewGroup" invoketype="instance" subsignature="void dispatchDraw(android.graphics.Canvas)"/>
    <targets>
      <indirect declaringclass="android.view.View" subsignature="void setAnimation(android.view.animation.Animation)" target-position="base">
        <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="boolean getTransformation(long,android.view.animation.Transformation)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="android.view.View" subsignature="void startAnimation(android.view.animation.Animation)" target-position="base">
        <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="long getStartOffset()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="android.view.View" subsignature="void startAnimation(android.view.animation.Animation)" target-position="base">
        <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="boolean getTransformation(long,android.view.animation.Transformation)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="android.view.View" subsignature="void setAnimation(android.view.animation.Animation)" target-position="base">
        <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="long getStartOffset()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="android.view.View" subsignature="void setAnimation(android.view.animation.Animation)" target-position="base">
        <direct declaringclass="android.view.animation.AlphaAnimation" index="0" subsignature="void applyTransformation(float,android.view.animation.Transformation)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.ViewPropertyAnimator" invoketype="instance" subsignature="android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)"/>
    <targets>
      <direct declaringclass="android.animation.Animator$AnimatorListener" index="0" subsignature="void onAnimationEnd(android.animation.Animator)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.DatePicker" invoketype="instance" subsignature="void init(int,int,int,android.widget.DatePicker$OnDateChangedListener)"/>
    <targets>
      <direct declaringclass="android.widget.DatePicker$OnDateChangedListener" index="3" subsignature="void onDateChanged(android.widget.DatePicker,int,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.fasterxml.jackson.databind.ObjectMapper" invoketype="instance" subsignature="void writeValue(java.io.OutputStream,java.lang.Object)"/>
    <targets>
      <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="byte[] toByteArray()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.ForkJoinPool" invoketype="instance" subsignature="java.lang.Object invoke(java.util.concurrent.ForkJoinTask)"/>
    <targets>
      <direct declaringclass="java.util.concurrent.ForkJoinTask" index="0" subsignature="boolean exec()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v4.widget.DrawerLayout" invoketype="instance" subsignature="void openDrawer(android.view.View)"/>
    <targets>
      <indirect declaringclass="android.support.v4.widget.DrawerLayout" subsignature="void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener)" target-position="base">
        <direct declaringclass="android.support.v4.widget.DrawerLayout$DrawerListener" index="0" subsignature="void onDrawerOpened(android.view.View)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.ThreadFactory" invoketype="instance" subsignature="java.lang.Thread newThread(java.lang.Runnable)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v4.widget.DrawerLayout" invoketype="instance" subsignature="void addDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener)"/>
    <targets>
      <direct declaringclass="android.support.v4.widget.DrawerLayout$DrawerListener" index="0" subsignature="void onDrawerClosed(android.view.View)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.database.sqlite.SQLiteOpenHelper" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)"/>
    <targets>
      <direct declaringclass="android.app.Activity" index="0" subsignature="void finish()" target-position="argument"/>
      <direct declaringclass="android.app.Activity" index="0" subsignature="boolean onTouchEvent(android.view.MotionEvent)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.parse.ParseAnonymousUtils" invoketype="instance" subsignature="void logIn(com.parse.LogInCallback)"/>
    <targets>
      <direct declaringclass="com.parse.ParseCallback2" index="0" subsignature="void done(java.lang.Object,java.lang.Throwable)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.Scroller" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.view.animation.Interpolator)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.pm.ApplicationInfo getApplicationInfo()" target-position="argument"/>
      <direct declaringclass="android.animation.TimeInterpolator" index="1" subsignature="float getInterpolation(float)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="androidx.viewpager.widget.ViewPager" invoketype="instance" subsignature="void setCurrentItem(int)"/>
    <targets>
      <indirect declaringclass="androidx.viewpager.widget.ViewPager" subsignature="void setAdapter(androidx.viewpager.widget.PagerAdapter)" target-position="base">
        <direct declaringclass="androidx.viewpager.widget.PagerAdapter" index="0" subsignature="boolean isViewFromObject(android.view.View,java.lang.Object)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="android.support.v4.view.ViewPager" subsignature="void setAdapter(android.support.v4.view.PagerAdapter)" target-position="base">
        <direct declaringclass="android.support.v4.view.PagerAdapter" index="0" subsignature="int getCount()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="androidx.viewpager.widget.ViewPager" subsignature="void setAdapter(androidx.viewpager.widget.PagerAdapter)" target-position="base">
        <direct declaringclass="androidx.viewpager.widget.PagerAdapter" index="0" subsignature="java.lang.Object instantiateItem(android.view.ViewGroup,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="android.support.v4.view.ViewPager" subsignature="void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)" target-position="base">
        <direct declaringclass="android.support.v4.view.ViewPager$OnPageChangeListener" index="0" subsignature="void onPageSelected(int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.PrintStream" invoketype="instance" subsignature="java.io.PrintStream append(java.lang.CharSequence,int,int)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.CharSequence subSequence(int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.xmlpull.v1.XmlSerializer" invoketype="instance" subsignature="org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)"/>
    <targets>
      <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)" target-position="base">
        <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)" target-position="base">
          <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="void setOutput(java.io.OutputStream,java.lang.String)" target-position="base">
            <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
          </indirect>
        </indirect>
      </indirect>
      <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)" target-position="base">
        <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)" target-position="base">
          <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)" target-position="base">
            <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="void setOutput(java.io.OutputStream,java.lang.String)" target-position="base">
              <direct declaringclass="java.io.FileOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
            </indirect>
          </indirect>
        </indirect>
      </indirect>
      <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)" target-position="base">
        <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)" target-position="base">
          <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)" target-position="base">
            <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="void setOutput(java.io.OutputStream,java.lang.String)" target-position="base">
              <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
            </indirect>
          </indirect>
        </indirect>
      </indirect>
      <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)" target-position="base">
        <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)" target-position="base">
          <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="void setOutput(java.io.OutputStream,java.lang.String)" target-position="base">
            <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
          </indirect>
        </indirect>
      </indirect>
      <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)" target-position="base">
        <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)" target-position="base">
          <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)" target-position="base">
            <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="void setOutput(java.io.OutputStream,java.lang.String)" target-position="base">
              <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
            </indirect>
          </indirect>
        </indirect>
      </indirect>
      <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)" target-position="base">
        <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)" target-position="base">
          <indirect declaringclass="org.xmlpull.v1.XmlSerializer" subsignature="void setOutput(java.io.OutputStream,java.lang.String)" target-position="base">
            <direct declaringclass="java.io.FileOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
          </indirect>
        </indirect>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.MultiAutoCompleteTextView$CommaTokenizer" invoketype="instance" subsignature="java.lang.CharSequence terminateToken(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ListView" invoketype="instance" subsignature="void setOnScrollListener(android.widget.AbsListView$OnScrollListener)"/>
    <targets>
      <indirect declaringclass="android.widget.AbsListView" subsignature="void setOnScrollListener(android.widget.AbsListView$OnScrollListener)" target-position="base">
        <direct declaringclass="android.widget.AbsListView$OnScrollListener" index="0" subsignature="void onScroll(android.widget.AbsListView,int,int,int)" target-position="argument"/>
      </indirect>
      <direct declaringclass="android.widget.AbsListView$OnScrollListener" index="0" subsignature="void onScroll(android.widget.AbsListView,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.widget.AbsListView$OnScrollListener" index="0" subsignature="void onScrollStateChanged(android.widget.AbsListView,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.facebook.login.LoginManager" invoketype="instance" subsignature="void logInWithReadPermissions(androidx.fragment.app.Fragment,java.util.Collection)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="1" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="1" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.hardware.Camera$Parameters" invoketype="instance" subsignature="void setFocusAreas(java.util.List)"/>
    <targets>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object get(int)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ResourceCursorAdapter" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,int,android.database.Cursor,boolean)"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="2" subsignature="void registerDataSetObserver(android.database.DataSetObserver)" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="2" subsignature="void registerContentObserver(android.database.ContentObserver)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="2" subsignature="int getColumnIndexOrThrow(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.graphics.Paint" invoketype="instance" subsignature="int getTextWidths(java.lang.CharSequence,int,int,float[])"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.apache.http.client.entity.UrlEncodedFormEntity" invoketype="instance" subsignature="void &lt;init&gt;(java.util.List,java.lang.String)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean add(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="void clear()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.PrintWriter" invoketype="instance" subsignature="void print(java.lang.String)"/>
    <targets>
      <indirect declaringclass="java.io.PrintWriter" subsignature="void &lt;init&gt;(java.io.Writer)" target-position="base">
        <direct declaringclass="java.io.StringWriter" index="0" subsignature="void write(java.lang.String,int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.PrintWriter" subsignature="void &lt;init&gt;(java.io.Writer,boolean)" target-position="base">
        <direct declaringclass="java.io.OutputStreamWriter" index="0" subsignature="void write(java.lang.String,int,int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.gesture.GestureStore" invoketype="instance" subsignature="void save(java.io.OutputStream)"/>
    <targets>
      <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      <direct declaringclass="java.io.OutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.security.cert.X509CertSelector" invoketype="instance" subsignature="void setPathToNames(java.util.Collection)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="edu.appstate.luncefordbr.droidBanks.Transactions" invoketype="instance" subsignature="void setListAdapter(android.widget.ListAdapter)"/>
    <targets>
      <direct declaringclass="android.widget.ListAdapter" index="0" subsignature="boolean areAllItemsEnabled()" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="long getItemId(int)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="int getCount()" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="void registerDataSetObserver(android.database.DataSetObserver)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="android.view.View getView(int,android.view.View,android.view.ViewGroup)" target-position="argument"/>
      <direct declaringclass="android.widget.ListAdapter" index="0" subsignature="boolean isEnabled(int)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="android.widget.SimpleCursorAdapter" index="0" subsignature="void setViewText(android.widget.TextView,java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="java.lang.Object getItem(int)" target-position="argument"/>
      <direct declaringclass="android.widget.SimpleCursorAdapter" index="0" subsignature="android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="int getItemViewType(int)" target-position="argument"/>
      <direct declaringclass="android.widget.SimpleCursorAdapter" index="0" subsignature="void setViewBinder(android.widget.SimpleCursorAdapter$ViewBinder)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="boolean hasStableIds()" target-position="argument"/>
      <direct declaringclass="android.widget.SimpleAdapter" index="0" subsignature="void notifyDataSetChanged()" target-position="argument"/>
      <direct declaringclass="android.widget.SimpleCursorAdapter" index="0" subsignature="void notifyDataSetInvalidated()" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="void unregisterDataSetObserver(android.database.DataSetObserver)" target-position="argument"/>
      <direct declaringclass="android.widget.Adapter" index="0" subsignature="int getViewTypeCount()" target-position="argument"/>
      <direct declaringclass="android.widget.SimpleCursorAdapter" index="0" subsignature="void bindView(android.view.View,android.content.Context,android.database.Cursor)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.SimpleCursorAdapter" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,int,android.database.Cursor,java.lang.String[],int[])"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="2" subsignature="void registerDataSetObserver(android.database.DataSetObserver)" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.app.ListActivity" index="0" subsignature="void onListItemClick(android.widget.ListView,android.view.View,int,long)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="2" subsignature="void registerContentObserver(android.database.ContentObserver)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="2" subsignature="int getColumnIndexOrThrow(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v4.view.ViewPager" invoketype="instance" subsignature="void setCurrentItem(int,boolean)"/>
    <targets>
      <indirect declaringclass="androidx.viewpager.widget.ViewPager" subsignature="void setAdapter(androidx.viewpager.widget.PagerAdapter)" target-position="base">
        <direct declaringclass="androidx.viewpager.widget.PagerAdapter" index="0" subsignature="boolean isViewFromObject(android.view.View,java.lang.Object)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="android.support.v4.view.ViewPager" subsignature="void setAdapter(android.support.v4.view.PagerAdapter)" target-position="base">
        <direct declaringclass="android.support.v4.view.PagerAdapter" index="0" subsignature="int getCount()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="androidx.viewpager.widget.ViewPager" subsignature="void setAdapter(androidx.viewpager.widget.PagerAdapter)" target-position="base">
        <direct declaringclass="androidx.viewpager.widget.PagerAdapter" index="0" subsignature="java.lang.Object instantiateItem(android.view.ViewGroup,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="androidx.viewpager.widget.ViewPager" subsignature="void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)" target-position="base">
        <direct declaringclass="androidx.viewpager.widget.ViewPager$OnPageChangeListener" index="0" subsignature="void onPageSelected(int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="androidx.viewpager.widget.ViewPager" subsignature="void setAdapter(androidx.viewpager.widget.PagerAdapter)" target-position="base">
        <direct declaringclass="androidx.fragment.app.FragmentPagerAdapter" index="0" subsignature="androidx.fragment.app.Fragment getItem(int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.EditText" invoketype="instance" subsignature="void setKeyListener(android.text.method.KeyListener)"/>
    <targets>
      <direct declaringclass="android.text.method.KeyListener" index="0" subsignature="int getInputType()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.EditText" invoketype="instance" subsignature="void addTextChangedListener(android.text.TextWatcher)"/>
    <targets>
      <direct declaringclass="android.text.TextWatcher" index="0" subsignature="void onTextChanged(java.lang.CharSequence,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.text.TextWatcher" index="0" subsignature="void afterTextChanged(android.text.Editable)" target-position="argument"/>
      <direct declaringclass="android.text.TextWatcher" index="0" subsignature="void beforeTextChanged(java.lang.CharSequence,int,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.fasterxml.jackson.jr.ob.JSON" invoketype="instance" subsignature="com.fasterxml.jackson.jr.private_.TreeNode treeFrom(java.lang.Object)"/>
    <targets>
      <indirect declaringclass="com.fasterxml.jackson.jr.ob.JSON" subsignature="com.fasterxml.jackson.jr.ob.JSON with(com.fasterxml.jackson.jr.private_.TreeCodec)" target-position="base">
        <direct declaringclass="com.fasterxml.jackson.jr.stree.JacksonJrsTreeCodec" index="0" subsignature="com.fasterxml.jackson.jr.private_.TreeNode readTree(com.fasterxml.jackson.jr.private_.JsonParser)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.InputStreamReader" invoketype="instance" subsignature="void &lt;init&gt;(java.io.InputStream,java.nio.charset.Charset)"/>
    <targets>
      <direct declaringclass="java.io.BufferedInputStream" index="0" subsignature="int available()" target-position="argument"/>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.BufferedInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.Notification$BigTextStyle" invoketype="instance" subsignature="android.app.Notification$BigTextStyle setBigContentTitle(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v4.media.session.MediaSessionCompat" invoketype="instance" subsignature="void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback)"/>
    <targets>
      <direct declaringclass="android.support.v4.media.session.MediaSessionCompat$Callback" index="0" subsignature="boolean onMediaButtonEvent(android.content.Intent)" target-position="argument"/>
      <direct declaringclass="android.support.v4.media.session.MediaSessionCompat$Callback" index="0" subsignature="void onPlay()" target-position="argument"/>
      <direct declaringclass="android.support.v4.media.session.MediaSessionCompat$Callback" index="0" subsignature="void onSkipToPrevious()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="androidx.viewpager.widget.ViewPager" invoketype="instance" subsignature="void setAdapter(androidx.viewpager.widget.PagerAdapter)"/>
    <targets>
      <direct declaringclass="androidx.fragment.app.FragmentStatePagerAdapter" index="0" subsignature="androidx.fragment.app.Fragment getItem(int)" target-position="argument"/>
      <direct declaringclass="androidx.viewpager.widget.PagerAdapter" index="0" subsignature="int getCount()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v4.widget.DrawerLayout" invoketype="instance" subsignature="void closeDrawer(android.view.View)"/>
    <targets>
      <indirect declaringclass="android.support.v4.widget.DrawerLayout" subsignature="void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener)" target-position="base">
        <direct declaringclass="android.support.v4.widget.DrawerLayout$DrawerListener" index="0" subsignature="void onDrawerClosed(android.view.View)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.Messenger" invoketype="instance" subsignature="void &lt;init&gt;(android.os.IBinder)"/>
    <targets>
      <direct declaringclass="android.os.IBinder" index="0" subsignature="android.os.IInterface queryLocalInterface(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" missingEdge="true">
    <source declaringclass="java.util.zip.GZIPOutputStream" invoketype="instance" subsignature="void &lt;init&gt;(java.io.OutputStream)"/>
    <targets>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.util.zip.GZIPOutputStream" index="0" subsignature="void finish()" target-position="argument"/>
      <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="byte[] toByteArray()" target-position="argument"/>
      <direct declaringclass="java.util.zip.GZIPOutputStream" index="0" subsignature="void deflate()" target-position="argument"/>
      <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="void write(byte[])" target-position="argument"/>
      <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
      <direct declaringclass="java.util.zip.GZIPOutputStream" index="0" subsignature="void write(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.media.MediaPlayer" invoketype="instance" subsignature="void setDataSource(android.content.Context,android.net.Uri)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.ContentResolver" invoketype="instance" subsignature="void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)"/>
    <targets>
      <direct declaringclass="android.database.ContentObserver" index="2" subsignature="void onChange(boolean)" target-position="argument"/>
      <direct declaringclass="android.database.ContentObserver" index="2" subsignature="void onChange(boolean,android.net.Uri)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.StringBuilder" invoketype="instance" subsignature="java.lang.StringBuilder append(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="char charAt(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.MultiAutoCompleteTextView$CommaTokenizer" invoketype="instance" subsignature="int findTokenEnd(java.lang.CharSequence,int)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.DataOutputStream" invoketype="instance" subsignature="void writeShort(int)"/>
    <targets>
      <indirect declaringclass="java.io.DataOutputStream" subsignature="void &lt;init&gt;(java.io.OutputStream)" target-position="base">
        <direct declaringclass="java.io.FileOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.TextView" invoketype="instance" subsignature="void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.Drawable" index="3" subsignature="void setBounds(int,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="3" subsignature="int getIntrinsicHeight()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="3" subsignature="boolean isStateful()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.SharedPreferences$Editor" invoketype="instance" subsignature="android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="1" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="1" subsignature="boolean contains(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="1" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v7.widget.Toolbar" invoketype="instance" subsignature="void setOnMenuItemClickListener(android.support.v7.widget.Toolbar$OnMenuItemClickListener)"/>
    <targets>
      <direct declaringclass="android.support.v7.widget.Toolbar$OnMenuItemClickListener" index="0" subsignature="boolean onMenuItemClick(android.view.MenuItem)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.Properties" invoketype="instance" subsignature="void store(java.io.OutputStream,java.lang.String)"/>
    <targets>
      <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      <direct declaringclass="java.io.FileOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" missingEdge="true">
    <source declaringclass="android.app.AlertDialog$Builder" invoketype="instance" subsignature="android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)"/>
    <targets>
      <direct declaringclass="android.content.DialogInterface$OnClickListener" index="2" subsignature="void onClick(android.content.DialogInterface,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.LayoutInflater" invoketype="instance" subsignature="void setFactory2(android.view.LayoutInflater$Factory2)"/>
    <targets>
      <direct declaringclass="android.view.LayoutInflater$Factory2" index="0" subsignature="android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.gms.internal.zzemd" invoketype="instance" subsignature="void &lt;init&gt;(java.util.Map,long,java.util.List)"/>
    <targets>
      <direct declaringclass="java.util.Map" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.util.Set keySet()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.lang.Object get(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.xml.sax.helpers.AttributeListImpl" invoketype="instance" subsignature="void &lt;init&gt;(org.xml.sax.AttributeList)"/>
    <targets>
      <direct declaringclass="org.xml.sax.AttributeList" index="0" subsignature="int getLength()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.Parcel" invoketype="instance" subsignature="void writeTypedList(java.util.List)"/>
    <targets>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object get(int)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.ObjectInputStream" invoketype="instance" subsignature="void close()"/>
    <targets>
      <indirect declaringclass="java.io.BufferedReader" subsignature="void &lt;init&gt;(java.io.Reader,int)" target-position="base">
        <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.BufferedReader" subsignature="void &lt;init&gt;(java.io.Reader)" target-position="base">
        <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.ObjectInputStream" subsignature="void &lt;init&gt;(java.io.InputStream)" target-position="base">
        <direct declaringclass="java.io.Closeable" index="0" subsignature="void close()" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.media.audiofx.AudioEffect" invoketype="instance" subsignature="void setControlStatusListener(android.media.audiofx.AudioEffect$OnControlStatusChangeListener)"/>
    <targets>
      <direct declaringclass="android.media.audiofx.AudioEffect$OnControlStatusChangeListener" index="0" subsignature="void onControlStatusChange(android.media.audiofx.AudioEffect,boolean)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="javax.xml.parsers.DocumentBuilder" invoketype="instance" subsignature="org.w3c.dom.Document parse(java.io.InputStream)"/>
    <targets>
      <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int available()" target-position="argument"/>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read()" target-position="argument"/>
      <direct declaringclass="java.io.ByteArrayInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.text.SpannableStringBuilder" invoketype="instance" subsignature="android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="javax.crypto.Cipher" invoketype="instance" subsignature="void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)"/>
    <targets>
      <direct declaringclass="javax.crypto.spec.IvParameterSpec" index="2" subsignature="byte[] getIV()" target-position="argument"/>
      <direct declaringclass="java.security.Key" index="1" subsignature="byte[] getEncoded()" target-position="argument"/>
      <direct declaringclass="javax.crypto.spec.PBEParameterSpec" index="2" subsignature="int getIterationCount()" target-position="argument"/>
      <direct declaringclass="java.security.Key" index="1" subsignature="java.lang.String getFormat()" target-position="argument"/>
      <direct declaringclass="javax.crypto.spec.PBEParameterSpec" index="2" subsignature="byte[] getSalt()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.xmlpull.v1.XmlPullParser" invoketype="instance" subsignature="void setInput(java.io.InputStream,java.lang.String)"/>
    <targets>
      <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int available()" target-position="argument"/>
      <direct declaringclass="java.io.Closeable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read()" target-position="argument"/>
      <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.bumptech.glide.load.model.ModelLoader$LoadData" invoketype="instance" subsignature="void &lt;init&gt;(com.bumptech.glide.load.Key,com.bumptech.glide.load.data.DataFetcher)"/>
    <targets>
      <direct declaringclass="com.bumptech.glide.load.data.DataFetcher" index="1" subsignature="void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)" target-position="argument"/>
      <direct declaringclass="com.bumptech.glide.load.data.DataFetcher" index="1" subsignature="com.bumptech.glide.load.DataSource getDataSource()" target-position="argument"/>
      <direct declaringclass="com.bumptech.glide.load.Key" index="0" subsignature="void updateDiskCacheKey(java.security.MessageDigest)" target-position="argument"/>
      <direct declaringclass="com.bumptech.glide.load.Key" index="0" subsignature="int hashCode()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.Notification$Builder" invoketype="instance" subsignature="android.app.Notification$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="javax.xml.parsers.SAXParser" invoketype="instance" subsignature="void parse(java.io.InputStream,org.xml.sax.helpers.DefaultHandler)"/>
    <targets>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.ByteArrayInputStream" index="0" subsignature="int read(byte[])" target-position="argument"/>
      <direct declaringclass="java.io.ByteArrayInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.gesture.GestureStore" invoketype="instance" subsignature="void load(java.io.InputStream,boolean)"/>
    <targets>
      <direct declaringclass="java.io.InputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.RelativeLayout" invoketype="instance" subsignature="void draw(android.graphics.Canvas)"/>
    <targets>
      <indirect declaringclass="android.view.View" subsignature="void setBackgroundDrawable(android.graphics.drawable.Drawable)" target-position="base">
        <direct declaringclass="android.graphics.drawable.DrawableContainer" index="0" subsignature="void draw(android.graphics.Canvas)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>

  <edge type="GENERIC_FAKE">
    <source declaringclass="okhttp3.OkHttpClient$Builder" invoketype="instance" subsignature="okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)"/>
    <targets>
      <direct declaringclass="okhttp3.Interceptor" index="0" subsignature="okhttp3.Response intercept(okhttp3.Interceptor$Chain)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.ScheduledExecutorService" invoketype="instance" subsignature="java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)"/>
    <targets>
      <indirect declaringclass="java.util.concurrent.ScheduledThreadPoolExecutor" subsignature="void &lt;init&gt;(int,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)" target-position="base">
        <direct declaringclass="java.util.concurrent.ThreadFactory" index="1" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
      </indirect>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" invoketype="instance" subsignature="void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.NotificationChannel" invoketype="instance" subsignature="void &lt;init&gt;(java.lang.String,java.lang.CharSequence,int)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.security.KeyStore" invoketype="instance" subsignature="void load(java.io.InputStream,char[])"/>
    <targets>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.util.zip.GZIPInputStream" index="0" subsignature="int read()" target-position="argument"/>
      <direct declaringclass="java.util.zip.GZIPInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.View" invoketype="instance" subsignature="void layout(int,int,int,int)"/>
    <targets>
      <indirect declaringclass="android.view.View" subsignature="void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)" target-position="base">
        <direct declaringclass="android.view.View$OnLayoutChangeListener" index="0" subsignature="void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.hardware.input.InputManager" invoketype="instance" subsignature="void registerInputDeviceListener(android.hardware.input.InputManager$InputDeviceListener,android.os.Handler)"/>
    <targets>
      <direct declaringclass="android.hardware.input.InputManager$InputDeviceListener" index="0" subsignature="void onInputDeviceAdded(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" missingEdge="true">
    <source declaringclass="android.app.AlertDialog$Builder" invoketype="instance" subsignature="android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.View" invoketype="instance" subsignature="void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)"/>
    <targets>
      <direct declaringclass="android.view.View$OnLayoutChangeListener" index="0" subsignature="void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.gson.stream.JsonReader" invoketype="instance" subsignature="void beginObject()"/>
    <targets>
      <indirect declaringclass="com.google.gson.stream.JsonReader" subsignature="void &lt;init&gt;(java.io.Reader)" target-position="base">
        <direct declaringclass="java.io.BufferedReader" index="0" subsignature="int read(char[],int,int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.ThreadPoolExecutor" invoketype="instance" subsignature="void &lt;init&gt;(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)"/>
    <targets>
      <direct declaringclass="java.util.concurrent.BlockingQueue" index="4" subsignature="java.lang.Object take()" target-position="argument"/>
      <direct declaringclass="java.util.Queue" index="4" subsignature="boolean offer(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.concurrent.BlockingDeque" index="4" subsignature="java.lang.Object takeFirst()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="4" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.concurrent.BlockingQueue" index="4" subsignature="java.lang.Object poll(long,java.util.concurrent.TimeUnit)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="4" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="4" subsignature="boolean add(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.StringBuffer" invoketype="instance" subsignature="java.lang.StringBuffer append(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.jar.Manifest" invoketype="instance" subsignature="void write(java.io.OutputStream)"/>
    <targets>
      <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      <direct declaringclass="java.io.OutputStream" index="0" subsignature="void write(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.DataInputStream" invoketype="instance" subsignature="void readFully(byte[])"/>
    <targets>
      <indirect declaringclass="java.io.DataInputStream" subsignature="void &lt;init&gt;(java.io.InputStream)" target-position="base">
        <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.Menu" invoketype="instance" subsignature="android.view.MenuItem add(int,int,int,java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="3" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="3" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.BufferedWriter" invoketype="instance" subsignature="void write(java.lang.String)"/>
    <targets>
      <indirect declaringclass="java.io.BufferedWriter" subsignature="void &lt;init&gt;(java.io.Writer)" target-position="base">
        <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.BufferedWriter" subsignature="void &lt;init&gt;(java.io.Writer)" target-position="base">
        <direct declaringclass="java.io.FileWriter" index="0" subsignature="void write(char[],int,int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.Parcel" invoketype="instance" subsignature="void writeStringList(java.util.List)"/>
    <targets>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object get(int)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.Notification$BigPictureStyle" invoketype="instance" subsignature="android.app.Notification$BigPictureStyle setBigContentTitle(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ProgressBar" invoketype="instance" subsignature="void setProgressDrawable(android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="boolean setVisible(boolean,boolean)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="int getMinimumHeight()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void setBounds(int,int,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.android.tools.r8.GeneratedOutlineSupport" invoketype="instance" subsignature="void outline41(android.content.SharedPreferences,java.lang.String,java.lang.String)"/>
    <targets>
      <direct declaringclass="android.content.SharedPreferences" index="0" subsignature="android.content.SharedPreferences$Editor edit()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.Window" invoketype="instance" subsignature="void setCallback(android.view.Window$Callback)"/>
    <targets>
      <direct declaringclass="android.view.Window$Callback" index="0" subsignature="boolean dispatchKeyEvent(android.view.KeyEvent)" target-position="argument"/>
      <direct declaringclass="android.view.Window$Callback" index="0" subsignature="void onDetachedFromWindow()" target-position="argument"/>
      <direct declaringclass="android.view.Window$Callback" index="0" subsignature="void onWindowFocusChanged(boolean)" target-position="argument"/>
      <direct declaringclass="android.view.Window$Callback" index="0" subsignature="void onAttachedToWindow()" target-position="argument"/>
      <direct declaringclass="android.view.Window$Callback" index="0" subsignature="boolean onMenuOpened(int,android.view.Menu)" target-position="argument"/>
      <direct declaringclass="android.view.Window$Callback" index="0" subsignature="boolean dispatchTouchEvent(android.view.MotionEvent)" target-position="argument"/>
      <direct declaringclass="android.view.Window$Callback" index="0" subsignature="boolean onCreatePanelMenu(int,android.view.Menu)" target-position="argument"/>
      <direct declaringclass="android.view.Window$Callback" index="0" subsignature="boolean onPreparePanel(int,android.view.View,android.view.Menu)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="io.reactivex.Single" invoketype="instance" subsignature="io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)"/>
    <targets>
      <direct declaringclass="io.reactivex.functions.Consumer" index="0" subsignature="void accept(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.media.SoundPool" invoketype="instance" subsignature="int load(android.content.Context,int,int)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.CursorAdapter" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.database.Cursor,int)"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="1" subsignature="int getColumnIndexOrThrow(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.GridView" invoketype="instance" subsignature="void setSelector(android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="boolean setVisible(boolean,boolean)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="boolean setState(int[])" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="boolean getPadding(android.graphics.Rect)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="void setHotspot(float,float)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="void jumpToCurrentState()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="void onBoundsChange(android.graphics.Rect)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="boolean selectDrawable(int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="int[] getState()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="boolean onStateChange(int[])" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="void setBounds(android.graphics.Rect)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="android.graphics.drawable.Drawable$Callback getCallback()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="boolean isAutoMirrored()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="boolean isStateful()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="android.graphics.drawable.Drawable getCurrent()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="int getLayoutDirection()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="void setBounds(int,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.StateListDrawable" index="0" subsignature="android.graphics.Rect getDirtyBounds()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.GestureDetector" invoketype="instance" subsignature="void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)"/>
    <targets>
      <direct declaringclass="android.view.GestureDetector$OnDoubleTapListener" index="0" subsignature="boolean onSingleTapConfirmed(android.view.MotionEvent)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.facebook.Session" invoketype="instance" subsignature="com.facebook.Session openActiveSession(android.app.Activity,boolean,com.facebook.Session$StatusCallback)"/>
    <targets>
      <direct declaringclass="com.facebook.Session$StatusCallback" index="2" subsignature="void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.xmlpull.v1.XmlSerializer" invoketype="instance" subsignature="void setOutput(java.io.OutputStream,java.lang.String)"/>
    <targets>
      <direct declaringclass="java.io.Closeable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      <direct declaringclass="java.io.FileOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.WallpaperInfo" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.content.pm.ResolveInfo)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.pm.PackageManager getPackageManager()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.provider.UserDictionary$Words" invoketype="instance" subsignature="void addWord(android.content.Context,java.lang.String,int,java.lang.String,java.util.Locale)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.StringBuffer" invoketype="instance" subsignature="java.lang.StringBuffer insert(int,java.lang.CharSequence,int,int)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.material.tabs.TabLayout" invoketype="instance" subsignature="void addOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)"/>
    <targets>
      <direct declaringclass="com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener" index="0" subsignature="void onTabSelected(com.google.android.material.tabs.TabLayout$Tab)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ListAdapter" invoketype="instance" subsignature="void registerDataSetObserver(android.database.DataSetObserver)"/>
    <targets>
      <direct declaringclass="android.database.DataSetObserver" index="0" subsignature="void onChanged()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.Thread" invoketype="instance" subsignature="void &lt;init&gt;(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="1" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.location.Location" invoketype="instance" subsignature="void dump(android.util.Printer,java.lang.String)"/>
    <targets>
      <direct declaringclass="android.util.Printer" index="0" subsignature="void println(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.ScheduledThreadPoolExecutor" invoketype="instance" subsignature="void &lt;init&gt;(int,java.util.concurrent.ThreadFactory)"/>
    <targets>
      <direct declaringclass="java.util.concurrent.ThreadFactory" index="1" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.ThreadPoolExecutor" invoketype="instance" subsignature="void &lt;init&gt;(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)"/>
    <targets>
      <direct declaringclass="java.util.concurrent.BlockingQueue" index="4" subsignature="java.lang.Object take()" target-position="argument"/>
      <direct declaringclass="java.util.Queue" index="4" subsignature="boolean offer(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="4" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.concurrent.BlockingQueue" index="4" subsignature="java.lang.Object poll(long,java.util.concurrent.TimeUnit)" target-position="argument"/>
      <direct declaringclass="java.util.concurrent.ThreadFactory" index="5" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="4" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.List" invoketype="instance" subsignature="boolean contains(java.lang.Object)"/>
    <targets>
      <direct declaringclass="java.util.List" index="0" subsignature="int indexOf(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.media.MediaPlayer" invoketype="instance" subsignature="void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)"/>
    <targets>
      <direct declaringclass="android.media.MediaPlayer$OnCompletionListener" index="0" subsignature="void onCompletion(android.media.MediaPlayer)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl" invoketype="instance" subsignature="void dispatchTrackballEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession$EventCallback)"/>
    <targets>
      <direct declaringclass="android.view.inputmethod.InputMethodSession$EventCallback" index="2" subsignature="void finishedEvent(int,boolean)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.design.widget.NavigationView" invoketype="instance" subsignature="void setNavigationItemSelectedListener(android.support.design.widget.NavigationView$OnNavigationItemSelectedListener)"/>
    <targets>
      <direct declaringclass="android.support.design.widget.NavigationView$OnNavigationItemSelectedListener" index="0" subsignature="boolean onNavigationItemSelected(android.view.MenuItem)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.animation.LayoutAnimationController" invoketype="instance" subsignature="void setAnimation(android.content.Context,int)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.DataInputStream" invoketype="instance" subsignature="int readUnsignedShort()"/>
    <targets>
      <indirect declaringclass="java.io.DataInputStream" subsignature="void &lt;init&gt;(java.io.InputStream)" target-position="base">
        <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="dg" invoketype="instance" subsignature="boolean onMenuOpened(int,android.view.Menu)"/>
    <targets>
      <direct declaringclass="android.view.Menu" index="1" subsignature="void close()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.gson.GsonBuilder" invoketype="instance" subsignature="com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory)"/>
    <targets>
      <direct declaringclass="com.google.gson.TypeAdapterFactory" index="0" subsignature="com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.gl.GLView" invoketype="instance" subsignature="void setRenderer(android.opengl.GLSurfaceView$Renderer)"/>
    <targets>
      <direct declaringclass="android.opengl.GLSurfaceView$Renderer" index="0" subsignature="void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)" target-position="argument"/>
      <direct declaringclass="android.opengl.GLSurfaceView$Renderer" index="0" subsignature="void onDrawFrame(javax.microedition.khronos.opengles.GL10)" target-position="argument"/>
      <direct declaringclass="android.opengl.GLSurfaceView$Renderer" index="0" subsignature="void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.gms.ads.reward.RewardedVideoAd" invoketype="instance" subsignature="void setRewardedVideoAdListener(com.google.android.gms.ads.reward.RewardedVideoAdListener)"/>
    <targets>
      <direct declaringclass="com.google.android.gms.ads.reward.RewardedVideoAdListener" index="0" subsignature="void onRewardedVideoAdFailedToLoad(int)" target-position="argument"/>
      <direct declaringclass="com.google.android.gms.ads.reward.RewardedVideoAdListener" index="0" subsignature="void onRewardedVideoAdLoaded()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ListView" invoketype="instance" subsignature="void setDivider(android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="int getOpacity()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.animation.ObjectAnimator" invoketype="instance" subsignature="void setInterpolator(android.animation.TimeInterpolator)"/>
    <targets>
      <direct declaringclass="android.animation.TimeInterpolator" index="0" subsignature="float getInterpolation(float)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.BufferedReader" invoketype="instance" subsignature="void &lt;init&gt;(java.io.Reader)"/>
    <targets>
      <direct declaringclass="java.io.Closeable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.FileReader" index="0" subsignature="boolean ready()" target-position="argument"/>
      <direct declaringclass="java.io.FileReader" index="0" subsignature="int read(char[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.location.LocationManager" invoketype="instance" subsignature="boolean registerGnssStatusCallback(android.location.GnssStatus$Callback)"/>
    <targets>
      <direct declaringclass="android.location.GnssStatus$Callback" index="0" subsignature="void onSatelliteStatusChanged(android.location.GnssStatus)" target-position="argument"/>
      <direct declaringclass="android.location.GnssStatus$Callback" index="0" subsignature="void onFirstFix(int)" target-position="argument"/>
      <direct declaringclass="android.location.GnssStatus$Callback" index="0" subsignature="void onStarted()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="io.reactivex.Single" invoketype="instance" subsignature="io.reactivex.Single compose(io.reactivex.SingleTransformer)"/>
    <targets>
      <direct declaringclass="io.reactivex.SingleTransformer" index="0" subsignature="io.reactivex.SingleSource apply(io.reactivex.Single)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.TextView" invoketype="instance" subsignature="void setHint(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.CursorLoader" invoketype="instance" subsignature="void onCanceled(android.database.Cursor)"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean isClosed()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.text.BoringLayout" invoketype="instance" subsignature="android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="kotlin.collections.CollectionsKt" invoketype="instance" subsignature="java.util.Set toSet(java.lang.Iterable)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object get(int)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.Handler" invoketype="instance" subsignature="void &lt;init&gt;(android.os.Handler$Callback)"/>
    <targets>
      <direct declaringclass="android.os.Handler$Callback" index="0" subsignature="boolean handleMessage(android.os.Message)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.SimpleCursorAdapter" invoketype="instance" subsignature="void setViewBinder(android.widget.SimpleCursorAdapter$ViewBinder)"/>
    <targets>
      <direct declaringclass="android.widget.SimpleCursorAdapter$ViewBinder" index="0" subsignature="boolean setViewValue(android.view.View,android.database.Cursor,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.inputmethodservice.Keyboard" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,int,java.lang.CharSequence,int,int)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.Handler" invoketype="instance" subsignature="boolean postAtTime(java.lang.Runnable,long)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.BufferedInputStream" invoketype="instance" subsignature="void &lt;init&gt;(java.io.InputStream)"/>
    <targets>
      <direct declaringclass="java.io.BufferedInputStream" index="0" subsignature="int available()" target-position="argument"/>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.InputStream" index="0" subsignature="long skip(long)" target-position="argument"/>
      <direct declaringclass="java.io.InputStream" index="0" subsignature="int read()" target-position="argument"/>
      <direct declaringclass="java.io.BufferedInputStream" index="0" subsignature="int read(byte[])" target-position="argument"/>
      <direct declaringclass="java.io.BufferedInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
      <indirect declaringclass="java.util.zip.GZIPInputStream" index="0" subsignature="void &lt;init&gt;(java.io.InputStream)" target-position="argument">
        <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      </indirect>
      <direct declaringclass="java.util.zip.GZIPInputStream" index="0" subsignature="void fill()" target-position="argument"/>
      <direct declaringclass="java.io.InputStream" index="0" subsignature="boolean markSupported()" target-position="argument"/>
      <direct declaringclass="java.io.InputStream" index="0" subsignature="void mark(int)" target-position="argument"/>
      <direct declaringclass="java.io.InputStream" index="0" subsignature="void reset()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.NotificationManager" invoketype="instance" subsignature="void createNotificationChannels(java.util.List)"/>
    <targets>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object get(int)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="kotlin.collections.CollectionsKt" invoketype="instance" subsignature="java.util.Set subtract(java.lang.Iterable,java.lang.Iterable)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean contains(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.apache.http.client.HttpClient" invoketype="instance" subsignature="org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"/>
    <targets>
      <direct declaringclass="org.apache.http.client.methods.HttpUriRequest" index="0" subsignature="java.net.URI getURI()" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpMessage" index="0" subsignature="org.apache.http.params.HttpParams getParams()" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpMessage" index="0" subsignature="org.apache.http.Header[] getAllHeaders()" target-position="argument"/>
      <direct declaringclass="org.apache.http.client.methods.HttpUriRequest" index="0" subsignature="java.lang.String getMethod()" target-position="argument"/>
      <indirect declaringclass="org.apache.http.impl.client.DefaultHttpClient" subsignature="void &lt;init&gt;(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)" target-position="base">
        <direct declaringclass="org.apache.http.conn.ClientConnectionManager" index="0" subsignature="void closeExpiredConnections()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="org.apache.http.impl.client.DefaultHttpClient" subsignature="void &lt;init&gt;(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)" target-position="base">
        <direct declaringclass="org.apache.http.conn.ClientConnectionManager" index="0" subsignature="org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()" target-position="argument"/>
      </indirect>
      <direct declaringclass="org.apache.http.client.methods.HttpUriRequest" index="0" subsignature="void abort()" target-position="argument"/>
      <indirect declaringclass="org.apache.http.impl.client.DefaultHttpClient" subsignature="void &lt;init&gt;(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)" target-position="base">
        <direct declaringclass="org.apache.http.conn.ClientConnectionManager" index="0" subsignature="void closeIdleConnections(long,java.util.concurrent.TimeUnit)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="javax.xml.transform.dom.DOMSource" invoketype="instance" subsignature="void &lt;init&gt;(org.w3c.dom.Node)"/>
    <targets>
      <direct declaringclass="org.w3c.dom.Node" index="0" subsignature="short getNodeType()" target-position="argument"/>
      <direct declaringclass="org.w3c.dom.Node" index="0" subsignature="org.w3c.dom.Node getFirstChild()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.CalendarView" invoketype="instance" subsignature="void setOnDateChangeListener(android.widget.CalendarView$OnDateChangeListener)"/>
    <targets>
      <direct declaringclass="android.widget.CalendarView$OnDateChangeListener" index="0" subsignature="void onSelectedDayChange(android.widget.CalendarView,int,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.apps.docs.database.sql.SqlWhereClause" invoketype="instance" subsignature="void &lt;init&gt;(java.lang.String,java.util.Collection)"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="1" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.webkit.WebChromeClient" invoketype="instance" subsignature="void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater)"/>
    <targets>
      <direct declaringclass="android.webkit.WebStorage$QuotaUpdater" index="2" subsignature="void updateQuota(long)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.protobuf.GeneratedMessageLite" invoketype="instance" subsignature="yve toBuilder()"/>
    <targets>
      <indirect declaringclass="com.google.protobuf.GeneratedMessageLite" subsignature="java.lang.Object newMessageInfo(yvz,java.lang.String,java.lang.Object[])" target-position="base"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.security.cert.X509CertSelector" invoketype="instance" subsignature="void setSubjectAlternativeNames(java.util.Collection)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>

  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.InputStreamReader" invoketype="instance" subsignature="void &lt;init&gt;(java.io.InputStream,java.lang.String)"/>
    <targets>
      <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int available()" target-position="argument"/>
      <direct declaringclass="java.io.Closeable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
      <direct declaringclass="java.util.zip.GZIPInputStream" index="0" subsignature="void fill()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="androidx.recyclerview.widget.ItemTouchHelper" invoketype="instance" subsignature="void startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder)"/>
    <targets>
      <indirect declaringclass="androidx.recyclerview.widget.ItemTouchHelper" subsignature="void &lt;init&gt;(androidx.recyclerview.widget.ItemTouchHelper$Callback)" target-position="base">
        <direct declaringclass="androidx.recyclerview.widget.ItemTouchHelper$Callback" index="0" subsignature="int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="o.l" invoketype="instance" subsignature="android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)"/>
    <targets>
      <direct declaringclass="android.content.ContextWrapper" index="1" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.content.ContextWrapper" index="1" subsignature="android.content.res.Resources$Theme getTheme()" target-position="argument"/>
      <direct declaringclass="android.content.ContextWrapper" index="1" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.MultiAutoCompleteTextView" invoketype="instance" subsignature="void setTokenizer(android.widget.MultiAutoCompleteTextView$Tokenizer)"/>
    <targets>
      <direct declaringclass="android.widget.MultiAutoCompleteTextView$Tokenizer" index="0" subsignature="int findTokenEnd(java.lang.CharSequence,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.text.SpannableString" invoketype="instance" subsignature="void &lt;init&gt;(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanFlags(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanEnd(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.net.http.SslError" invoketype="instance" subsignature="void &lt;init&gt;(int,java.security.cert.X509Certificate,java.lang.String)"/>
    <targets>
      <direct declaringclass="java.security.cert.X509Certificate" index="1" subsignature="java.security.Principal getSubjectDN()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.media.MediaPlayer" invoketype="instance" subsignature="void setDisplay(android.view.SurfaceHolder)"/>
    <targets>
      <direct declaringclass="android.view.SurfaceHolder" index="0" subsignature="android.view.Surface getSurface()" target-position="argument"/>
      <direct declaringclass="android.view.SurfaceHolder" index="0" subsignature="void setKeepScreenOn(boolean)" target-position="argument"/>
      <direct declaringclass="android.view.SurfaceHolder" index="0" subsignature="void setFixedSize(int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.Choreographer" invoketype="instance" subsignature="void postFrameCallback(android.view.Choreographer$FrameCallback)"/>
    <targets>
      <direct declaringclass="android.view.Choreographer$FrameCallback" index="0" subsignature="void doFrame(long)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.vending.expansion.downloader.DownloaderClientMarshaller" invoketype="instance" subsignature="com.google.android.vending.expansion.downloader.IStub CreateStub(com.google.android.vending.expansion.downloader.IDownloaderClient,java.lang.Class)"/>
    <targets>
      <direct declaringclass="com.google.android.vending.expansion.downloader.IDownloaderClient" index="0" subsignature="void onServiceConnected(android.os.Messenger)" target-position="argument"/>
      <direct declaringclass="com.google.android.vending.expansion.downloader.IDownloaderClient" index="0" subsignature="void onDownloadStateChanged(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.Intent" invoketype="instance" subsignature="android.content.ComponentName resolveActivity(android.content.pm.PackageManager)"/>
    <targets>
      <direct declaringclass="android.content.pm.PackageManager" index="0" subsignature="android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.Switch" invoketype="instance" subsignature="void setTrackDrawable(android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="boolean getPadding(android.graphics.Rect)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void jumpToCurrentState()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void draw(android.graphics.Canvas)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="int getIntrinsicHeight()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void setBounds(int,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="boolean isStateful()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.ComponentName" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,java.lang.String)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.RatingBar" invoketype="instance" subsignature="void setOnRatingBarChangeListener(android.widget.RatingBar$OnRatingBarChangeListener)"/>
    <targets>
      <direct declaringclass="android.widget.RatingBar$OnRatingBarChangeListener" index="0" subsignature="void onRatingChanged(android.widget.RatingBar,float,boolean)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.TextView" invoketype="instance" subsignature="void append(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="androidx.recyclerview.widget.RecyclerView" invoketype="instance" subsignature="void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)"/>
    <targets>
      <direct declaringclass="androidx.recyclerview.widget.RecyclerView$Adapter" index="0" subsignature="void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List)" target-position="argument"/>
      <direct declaringclass="androidx.recyclerview.widget.RecyclerView$Adapter" index="0" subsignature="long getItemId(int)" target-position="argument"/>
      <direct declaringclass="androidx.recyclerview.widget.RecyclerView$Adapter" index="0" subsignature="void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)" target-position="argument"/>
      <direct declaringclass="androidx.recyclerview.widget.RecyclerView$Adapter" index="0" subsignature="int getItemCount()" target-position="argument"/>
      <direct declaringclass="androidx.recyclerview.widget.RecyclerView$Adapter" index="0" subsignature="void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)" target-position="argument"/>
      <direct declaringclass="androidx.recyclerview.widget.RecyclerView$Adapter" index="0" subsignature="void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)" target-position="argument"/>
      <direct declaringclass="androidx.recyclerview.widget.RecyclerView$Adapter" index="0" subsignature="int getItemViewType(int)" target-position="argument"/>
      <direct declaringclass="androidx.recyclerview.widget.RecyclerView$Adapter" index="0" subsignature="androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="dagger.internal.DoubleCheck" invoketype="instance" subsignature="javax.inject.Provider provider(javax.inject.Provider)"/>
    <targets>
      <direct declaringclass="javax.inject.Provider" index="0" subsignature="java.lang.Object get()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.apache.http.impl.client.DefaultHttpClient" invoketype="instance" subsignature="org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)"/>
    <targets>
      <direct declaringclass="org.apache.http.HttpRequest" index="1" subsignature="org.apache.http.RequestLine getRequestLine()" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpMessage" index="1" subsignature="org.apache.http.ProtocolVersion getProtocolVersion()" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpMessage" index="1" subsignature="org.apache.http.Header[] getAllHeaders()" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpEntityEnclosingRequest" index="1" subsignature="org.apache.http.HttpEntity getEntity()" target-position="argument"/>
      <direct declaringclass="org.apache.http.HttpMessage" index="1" subsignature="org.apache.http.params.HttpParams getParams()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.gms.common.internal.safeparcel.SafeParcelWriter" invoketype="instance" subsignature="void writeTypedList(android.os.Parcel,int,java.util.List,boolean)"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="2" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.List" index="2" subsignature="java.lang.Object get(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.media.ImageReader" invoketype="instance" subsignature="void setOnImageAvailableListener(android.media.ImageReader$OnImageAvailableListener,android.os.Handler)"/>
    <targets>
      <direct declaringclass="android.media.ImageReader$OnImageAvailableListener" index="0" subsignature="void onImageAvailable(android.media.ImageReader)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.PrintWriter" invoketype="instance" subsignature="void &lt;init&gt;(java.io.Writer)"/>
    <targets>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.lang.Object" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="java.io.StringWriter" index="0" subsignature="java.lang.StringBuffer getBuffer()" target-position="argument"/>
      <direct declaringclass="java.io.OutputStreamWriter" index="0" subsignature="void write(java.lang.String,int,int)" target-position="argument"/>
      <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      <direct declaringclass="java.io.Writer" index="0" subsignature="void write(java.lang.String)" target-position="argument"/>
      <direct declaringclass="java.io.StringWriter" index="0" subsignature="java.io.StringWriter append(java.lang.CharSequence)" target-position="argument"/>
      <direct declaringclass="java.io.StringWriter" index="0" subsignature="void write(int)" target-position="argument"/>
      <direct declaringclass="java.io.OutputStreamWriter" index="0" subsignature="void write(char[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.View" invoketype="instance" subsignature="void setOnLongClickListener(android.view.View$OnLongClickListener)"/>
    <targets>
      <direct declaringclass="android.view.View$OnLongClickListener" index="0" subsignature="boolean onLongClick(android.view.View)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.animation.LayoutAnimationController" invoketype="instance" subsignature="void &lt;init&gt;(android.view.animation.Animation,float)"/>
    <targets>
      <direct declaringclass="android.view.animation.Animation" index="0" subsignature="void setFillBefore(boolean)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.media.MediaScannerConnection" invoketype="instance" subsignature="void connect()"/>
    <targets>
      <indirect declaringclass="android.media.MediaScannerConnection" subsignature="void &lt;init&gt;(android.content.Context,android.media.MediaScannerConnection$MediaScannerConnectionClient)" target-position="base">
        <direct declaringclass="android.media.MediaScannerConnection$MediaScannerConnectionClient" index="1" subsignature="void onMediaScannerConnected()" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ResourceCursorAdapter" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,int,android.database.Cursor,int)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="2" subsignature="int getColumnIndexOrThrow(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ListView" invoketype="instance" subsignature="void setOverscrollFooter(android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void draw(android.graphics.Canvas)" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="int getMinimumHeight()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void setBounds(android.graphics.Rect)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.BufferedReader" invoketype="instance" subsignature="int read(char[])"/>
    <targets>
      <indirect declaringclass="java.io.InputStreamReader" subsignature="void &lt;init&gt;(java.io.InputStream)" target-position="base">
        <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.BufferedReader" subsignature="void &lt;init&gt;(java.io.Reader)" target-position="base">
        <direct declaringclass="java.io.InputStreamReader" index="0" subsignature="boolean ready()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.BufferedReader" subsignature="void &lt;init&gt;(java.io.Reader)" target-position="base">
        <direct declaringclass="java.io.InputStreamReader" index="0" subsignature="int read(char[],int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.BufferedReader" subsignature="void &lt;init&gt;(java.io.Reader,int)" target-position="base">
        <direct declaringclass="java.io.InputStreamReader" index="0" subsignature="int read(char[],int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.BufferedReader" subsignature="void &lt;init&gt;(java.io.Reader,int)" target-position="base">
        <direct declaringclass="java.io.InputStreamReader" index="0" subsignature="boolean ready()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.InputStreamReader" subsignature="void &lt;init&gt;(java.io.InputStream)" target-position="base">
        <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int available()" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="kotlin.collections.MapsKt" invoketype="instance" subsignature="java.util.Map toMutableMap(java.util.Map)"/>
    <targets>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.util.Collection values()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.util.Set keySet()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="boolean containsKey(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.lang.Object get(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="void clear()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.AbstractMap$SimpleEntry" invoketype="instance" subsignature="void &lt;init&gt;(java.util.Map$Entry)"/>
    <targets>
      <direct declaringclass="java.util.Map$Entry" index="0" subsignature="java.lang.Object getKey()" target-position="argument"/>
      <direct declaringclass="java.util.Map$Entry" index="0" subsignature="java.lang.Object getValue()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="androidx.browser.customtabs.CustomTabsClient" invoketype="instance" subsignature="boolean bindCustomTabsService(android.content.Context,java.lang.String,androidx.browser.customtabs.CustomTabsServiceConnection)"/>
    <targets>
      <direct declaringclass="androidx.browser.customtabs.CustomTabsServiceConnection" index="2" subsignature="void onCustomTabsServiceConnected(android.content.ComponentName,androidx.browser.customtabs.CustomTabsClient)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.animation.AnimatorSet" invoketype="instance" subsignature="void playTogether(java.util.Collection)"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.StringBuilder" invoketype="instance" subsignature="java.lang.StringBuilder append(java.lang.Object)"/>
    <targets>
      <direct declaringclass="java.util.ArrayList" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.webkit.CookieManager" invoketype="instance" subsignature="void removeSessionCookies(android.webkit.ValueCallback)"/>
    <targets>
      <direct declaringclass="android.webkit.ValueCallback" index="0" subsignature="void onReceiveValue(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.Reader" invoketype="instance" subsignature="int read(char[],int,int)"/>
    <targets>
      <indirect declaringclass="java.io.BufferedReader" subsignature="void &lt;init&gt;(java.io.Reader,int)" target-position="base">
        <direct declaringclass="java.io.InputStreamReader" index="0" subsignature="int read(char[],int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.BufferedReader" subsignature="void &lt;init&gt;(java.io.Reader,int)" target-position="base">
        <direct declaringclass="java.io.InputStreamReader" index="0" subsignature="boolean ready()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.io.InputStreamReader" subsignature="void &lt;init&gt;(java.io.InputStream)" target-position="base">
        <direct declaringclass="java.io.BufferedInputStream" index="0" subsignature="int available()" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="androidx.lifecycle.LifecycleCoroutineScope" invoketype="instance" subsignature="kotlinx.coroutines.Job launchWhenResumed(kotlin.jvm.functions.Function2)"/>
    <targets>
      <direct declaringclass="kotlin.coroutines.jvm.internal.BaseContinuationImpl" index="0" subsignature="kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.inputmethodservice.Keyboard" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,int,int,int,int)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.design.widget.TabLayout" invoketype="instance" subsignature="void addTab(android.support.design.widget.TabLayout$Tab)"/>
    <targets>
      <indirect declaringclass="android.support.design.widget.TabLayout" subsignature="void setOnTabSelectedListener(android.support.design.widget.TabLayout$OnTabSelectedListener)" target-position="base">
        <direct declaringclass="android.support.design.widget.TabLayout$OnTabSelectedListener" index="0" subsignature="void onTabSelected(android.support.design.widget.TabLayout$Tab)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.File" invoketype="instance" subsignature="java.io.File[] listFiles(java.io.FilenameFilter)"/>
    <targets>
      <direct declaringclass="java.io.FilenameFilter" index="0" subsignature="boolean accept(java.io.File,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v7.app.AlertDialog$Builder" invoketype="instance" subsignature="android.support.v7.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)"/>
    <targets>
      <direct declaringclass="android.content.DialogInterface$OnClickListener" index="1" subsignature="void onClick(android.content.DialogInterface,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.provider.Telephony$Threads" invoketype="instance" subsignature="long getOrCreateThreadId(android.content.Context,java.lang.String)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.ByteArrayOutputStream" invoketype="instance" subsignature="void writeTo(java.io.OutputStream)"/>
    <targets>
      <indirect declaringclass="java.io.ByteArrayOutputStream" subsignature="void writeTo(java.io.OutputStream)" target-position="base">
        <direct declaringclass="java.io.OutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.security.cert.CertificateFactory" invoketype="instance" subsignature="java.security.cert.Certificate generateCertificate(java.io.InputStream)"/>
    <targets>
      <direct declaringclass="java.io.ByteArrayInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
      <direct declaringclass="java.io.ByteArrayInputStream" index="0" subsignature="boolean markSupported()" target-position="argument"/>
      <direct declaringclass="java.io.ByteArrayInputStream" index="0" subsignature="void mark(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.gesture.GestureStore" invoketype="instance" subsignature="void save(java.io.OutputStream,boolean)"/>
    <targets>
      <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      <direct declaringclass="java.io.OutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.xmlpull.v1.sax2.Driver" invoketype="instance" subsignature="void parseSubTree(org.xmlpull.v1.XmlPullParser)"/>
    <targets>
      <direct declaringclass="org.xmlpull.v1.XmlPullParser" index="0" subsignature="int getEventType()" target-position="argument"/>
      <direct declaringclass="org.xmlpull.v1.XmlPullParser" index="0" subsignature="java.lang.String getPositionDescription()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.ObjectInputStream" invoketype="instance" subsignature="int readInt()"/>
    <targets>
      <indirect declaringclass="java.io.ObjectInputStream" subsignature="void &lt;init&gt;(java.io.InputStream)" target-position="base">
        <direct declaringclass="java.io.ByteArrayInputStream" index="0" subsignature="int read()" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v7.app.AlertDialog$Builder" invoketype="instance" subsignature="android.support.v7.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)"/>
    <targets>
      <direct declaringclass="android.content.DialogInterface$OnClickListener" index="2" subsignature="void onClick(android.content.DialogInterface,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.PendingIntent" invoketype="instance" subsignature="android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.graphics.drawable.ScaleDrawable" invoketype="instance" subsignature="void &lt;init&gt;(android.graphics.drawable.Drawable,int,float,float)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="android.graphics.drawable.Drawable$ConstantState getConstantState()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="boolean setState(int[])" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void setBounds(android.graphics.Rect)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.android.installreferrer.api.InstallReferrerClient" invoketype="instance" subsignature="void startConnection(com.android.installreferrer.api.InstallReferrerStateListener)"/>
    <targets>
      <direct declaringclass="com.android.installreferrer.api.InstallReferrerStateListener" index="0" subsignature="void onInstallReferrerSetupFinished(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.bumptech.glide.load.Option" invoketype="instance" subsignature="com.bumptech.glide.load.Option disk(java.lang.String,java.lang.Object,com.bumptech.glide.load.Option$CacheKeyUpdater)"/>
    <targets>
      <direct declaringclass="com.bumptech.glide.load.Option$CacheKeyUpdater" index="2" subsignature="void update(byte[],java.lang.Object,java.security.MessageDigest)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v7.graphics.Palette$Builder" invoketype="instance" subsignature="android.os.AsyncTask generate(android.support.v7.graphics.Palette$PaletteAsyncListener)"/>
    <targets>
      <direct declaringclass="android.support.v7.graphics.Palette$PaletteAsyncListener" index="0" subsignature="void onGenerated(android.support.v7.graphics.Palette)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.text.BoringLayout" invoketype="instance" subsignature="void &lt;init&gt;(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.preference.MultiSelectListPreference" invoketype="instance" subsignature="void setValues(java.util.Set)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.Intent" invoketype="instance" subsignature="android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager,int)"/>
    <targets>
      <direct declaringclass="android.content.pm.PackageManager" index="0" subsignature="android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.text.Editable" invoketype="instance" subsignature="android.text.Editable replace(int,int,java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.graphics.drawable.InsetDrawable" invoketype="instance" subsignature="void &lt;init&gt;(android.graphics.drawable.Drawable,int,int,int,int)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="android.graphics.drawable.Drawable$ConstantState getConstantState()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="boolean setState(int[])" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.hardware.Camera" invoketype="instance" subsignature="void setPreviewCallbackWithBuffer(android.hardware.Camera$PreviewCallback)"/>
    <targets>
      <direct declaringclass="android.hardware.Camera$PreviewCallback" index="0" subsignature="void onPreviewFrame(byte[],android.hardware.Camera)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="kotlinx.coroutines.BuildersKt" invoketype="instance" subsignature="kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)"/>
    <targets>
      <direct declaringclass="kotlin.coroutines.jvm.internal.BaseContinuationImpl" index="3" subsignature="kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.String" invoketype="instance" subsignature="boolean contentEquals(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.database.sqlite.SQLiteQueryBuilder" invoketype="instance" subsignature="void appendWhere(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.common.collect.ImmutableSet$Builder" invoketype="instance" subsignature="com.google.common.collect.ImmutableSet$Builder addAll(java.lang.Iterable)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="kotlin.collections.MapsKt" invoketype="instance" subsignature="void putAll(java.util.Map,java.lang.Iterable)"/>
    <targets>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.util.Collection values()" target-position="argument"/>
      <direct declaringclass="java.lang.Iterable" index="1" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.lang.Object put(java.lang.Object,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="boolean containsValue(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.util.Set keySet()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="boolean containsKey(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.lang.Object get(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.LinkedHashMap" index="0" subsignature="boolean removeEldestEntry(java.util.Map$Entry)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.gms.common.api.GoogleApiClient$Builder" invoketype="instance" subsignature="com.google.android.gms.common.api.GoogleApiClient$Builder addConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)"/>
    <targets>
      <direct declaringclass="com.google.android.gms.common.api.internal.ConnectionCallbacks" index="0" subsignature="void onConnected(android.os.Bundle)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.hardware.Camera" invoketype="instance" subsignature="void setFaceDetectionListener(android.hardware.Camera$FaceDetectionListener)"/>
    <targets>
      <direct declaringclass="android.hardware.Camera$FaceDetectionListener" index="0" subsignature="void onFaceDetection(android.hardware.Camera$Face[],android.hardware.Camera)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="androidx.recyclerview.widget.RecyclerView" invoketype="instance" subsignature="void setAdapter(androidx.recyclerview.widget.bd)"/>
    <targets>
      <direct declaringclass="androidx.recyclerview.widget.bd" index="0" subsignature="void onBindViewHolder(androidx.recyclerview.widget.ci,int)" target-position="argument"/>
      <direct declaringclass="androidx.recyclerview.widget.bd" index="0" subsignature="int getItemCount()" target-position="argument"/>
      <direct declaringclass="androidx.recyclerview.widget.bd" index="0" subsignature="androidx.recyclerview.widget.ci onCreateViewHolder(android.view.ViewGroup,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.apache.http.conn.ssl.AbstractVerifier" invoketype="instance" subsignature="boolean verify(java.lang.String,javax.net.ssl.SSLSession)"/>
    <targets>
      <direct declaringclass="javax.net.ssl.SSLSession" index="1" subsignature="java.security.cert.Certificate[] getPeerCertificates()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl" invoketype="instance" subsignature="void dispatchGenericMotionEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession$EventCallback)"/>
    <targets>
      <direct declaringclass="android.view.inputmethod.InputMethodSession$EventCallback" index="2" subsignature="void finishedEvent(int,boolean)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.gms.security.ProviderInstaller" invoketype="instance" subsignature="void installIfNeededAsync(android.content.Context,com.google.android.gms.security.ProviderInstaller$ProviderInstallListener)"/>
    <targets>
      <direct declaringclass="com.google.android.gms.security.ProviderInstaller$ProviderInstallListener" index="1" subsignature="void onProviderInstalled()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.Scroller" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.view.animation.Interpolator,boolean)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" fp="true">
    <source declaringclass="com.google.protobuf.GeneratedMessageLite" invoketype="instance" subsignature="com.google.protobuf.GeneratedMessageLite$Builder createBuilder()"/>
    <targets>
      <indirect declaringclass="com.google.protobuf.GeneratedMessageLite" subsignature="void registerDefaultInstance(java.lang.Class,com.google.protobuf.GeneratedMessageLite)" target-position="base">
        <direct declaringclass="com.google.protobuf.GeneratedMessageLite" index="1" subsignature="java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.appwidget.AppWidgetHost" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,int)"/>
    <targets>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="java.lang.ClassLoader getClassLoader()" target-position="argument"/>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="java.lang.String getSystemServiceName(java.lang.Class)" target-position="argument"/>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="boolean isRestricted()" target-position="argument"/>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.os.Looper getMainLooper()" target-position="argument"/>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="android.content.res.Resources$Theme getTheme()" target-position="argument"/>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="android.content.pm.ApplicationInfo getApplicationInfo()" target-position="argument"/>
      <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.DataInputStream" invoketype="instance" subsignature="short readShort()"/>
    <targets>
      <indirect declaringclass="java.io.DataInputStream" subsignature="void &lt;init&gt;(java.io.InputStream)" target-position="base">
        <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.graphics.Picture" invoketype="instance" subsignature="void writeToStream(java.io.OutputStream)"/>
    <targets>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      <direct declaringclass="java.io.FileOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.protobuf.CodedOutputStream" invoketype="instance" subsignature="void writeMessage(int,com.google.protobuf.MessageLite)"/>
    <targets>
      <direct declaringclass="com.google.protobuf.MessageLite" index="1" subsignature="int getSerializedSize()" target-position="argument"/>
      <direct declaringclass="com.google.protobuf.MessageLite" index="1" subsignature="void writeTo(com.google.protobuf.CodedOutputStream)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.GregorianCalendar" invoketype="instance" subsignature="void &lt;init&gt;(java.util.TimeZone,java.util.Locale)"/>
    <targets>
      <direct declaringclass="java.util.TimeZone" index="0" subsignature="int getRawOffset()" target-position="argument"/>
      <direct declaringclass="java.util.TimeZone" index="0" subsignature="int getOffset(long)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.Notification$Builder" invoketype="instance" subsignature="android.app.Notification$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.Properties" invoketype="instance" subsignature="void storeToXML(java.io.OutputStream,java.lang.String)"/>
    <targets>
      <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      <direct declaringclass="java.io.OutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.SearchView" invoketype="instance" subsignature="void setOnQueryTextListener(android.widget.SearchView$OnQueryTextListener)"/>
    <targets>
      <direct declaringclass="android.widget.SearchView$OnQueryTextListener" index="0" subsignature="boolean onQueryTextChange(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.widget.SearchView$OnQueryTextListener" index="0" subsignature="boolean onQueryTextSubmit(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.BroadcastReceiver" invoketype="instance" subsignature="android.os.IBinder peekService(android.content.Context,android.content.Intent)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.StringBuffer" invoketype="instance" subsignature="java.lang.StringBuffer append(java.lang.CharSequence,int,int)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.OutputStreamWriter" invoketype="instance" subsignature="void &lt;init&gt;(java.io.OutputStream,java.nio.charset.Charset)"/>
    <targets>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.Flushable" index="0" subsignature="void flush()" target-position="argument"/>
      <direct declaringclass="java.io.FileOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.ContentQueryMap" invoketype="instance" subsignature="void &lt;init&gt;(android.database.Cursor,java.lang.String,boolean,android.os.Handler)"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean moveToNext()" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="java.lang.String[] getColumnNames()" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndexOrThrow(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.ContentProvider" invoketype="instance" subsignature="android.os.ParcelFileDescriptor openPipeHelper(android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object,android.content.ContentProvider$PipeDataWriter)"/>
    <targets>
      <direct declaringclass="android.content.ContentProvider$PipeDataWriter" index="4" subsignature="void writeDataToPipe(android.os.ParcelFileDescriptor,android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.Notification$InboxStyle" invoketype="instance" subsignature="android.app.Notification$InboxStyle setBigContentTitle(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.graphics.drawable.InsetDrawable" invoketype="instance" subsignature="void &lt;init&gt;(android.graphics.drawable.Drawable,int)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="android.graphics.drawable.Drawable$ConstantState getConstantState()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="boolean setState(int[])" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void setBounds(android.graphics.Rect)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="uk.co.senab.actionbarpulltorefresh.library.ActionBarPullToRefresh$SetupWizard" invoketype="instance" subsignature="uk.co.senab.actionbarpulltorefresh.library.ActionBarPullToRefresh$SetupWizard listener(uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener)"/>
    <targets>
      <direct declaringclass="uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener" index="0" subsignature="void onRefreshStarted(android.view.View)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.gms.common.api.PendingResult" invoketype="instance" subsignature="void setResultCallback(com.google.android.gms.common.api.ResultCallback)"/>
    <targets>
      <direct declaringclass="com.google.android.gms.common.api.ResultCallback" index="0" subsignature="void onResult(com.google.android.gms.common.api.Result)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.graphics.Paint" invoketype="instance" subsignature="float measureText(java.lang.CharSequence,int,int)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.InputStream" invoketype="instance" subsignature="int read()"/>
    <targets>
      <indirect declaringclass="java.io.BufferedInputStream" subsignature="void &lt;init&gt;(java.io.InputStream,int)" target-position="base">
        <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="java.util.zip.GZIPInputStream" subsignature="void &lt;init&gt;(java.io.InputStream)" target-position="base">
        <direct declaringclass="java.io.ByteArrayInputStream" index="0" subsignature="int available()" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.hardware.SensorManager" invoketype="instance" subsignature="void unregisterListener(android.hardware.SensorEventListener,android.hardware.Sensor)"/>
    <targets>
      <direct declaringclass="android.hardware.SensorEventListener" index="0" subsignature="void onSensorChanged(android.hardware.SensorEvent)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.cr.speed.game.AndroidLauncher" invoketype="instance" subsignature="android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)"/>
    <targets>
      <direct declaringclass="com.badlogic.gdx.ApplicationListener" index="0" subsignature="void create()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.text.Editable" invoketype="instance" subsignature="android.text.Editable append(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.animation.ValueAnimator" invoketype="instance" subsignature="void setEvaluator(android.animation.TypeEvaluator)"/>
    <targets>
      <direct declaringclass="android.animation.TypeEvaluator" index="0" subsignature="java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.animation.AnimatorSet" invoketype="instance" subsignature="void playSequentially(java.util.List)"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.AutoCompleteTextView" invoketype="instance" subsignature="void setValidator(android.widget.AutoCompleteTextView$Validator)"/>
    <targets>
      <direct declaringclass="android.widget.AutoCompleteTextView$Validator" index="0" subsignature="java.lang.CharSequence fixText(java.lang.CharSequence)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.Intent" invoketype="instance" subsignature="android.content.Intent setClassName(android.content.Context,java.lang.String)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v7.widget.AppCompatImageView" invoketype="instance" subsignature="void invalidateDrawable(android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void invalidateSelf()" target-position="argument"/>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="void draw(android.graphics.Canvas)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.Intent" invoketype="instance" subsignature="void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="2" subsignature="java.lang.String getPackageName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.Timer" invoketype="instance" subsignature="void scheduleAtFixedRate(java.util.TimerTask,long,long)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.webkit.WebChromeClient" invoketype="instance" subsignature="void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)"/>
    <targets>
      <direct declaringclass="android.webkit.WebStorage$QuotaUpdater" index="5" subsignature="void updateQuota(long)" target-position="argument"/>
    </targets>
  </edge>
   <edge type="GENERIC_FAKE">
    <source declaringclass="javax.crypto.CipherOutputStream" invoketype="instance" subsignature="void &lt;init&gt;(java.io.OutputStream,javax.crypto.Cipher)"/>
    <targets>
      <direct fp="true" declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="byte[] toByteArray()" target-position="argument"/>
      <direct declaringclass="java.io.FileOutputStream" index="0" subsignature="void write(byte[])" target-position="argument"/>
      <direct declaringclass="java.io.FileOutputStream" index="0" subsignature="void write(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.File" invoketype="instance" subsignature="java.lang.String[] list(java.io.FilenameFilter)"/>
    <targets>
      <direct declaringclass="java.io.FilenameFilter" index="0" subsignature="boolean accept(java.io.File,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="okhttp3.Call" invoketype="instance" subsignature="void enqueue(okhttp3.Callback)"/>
    <targets>
      <direct declaringclass="okhttp3.Callback" index="0" subsignature="void onFailure(okhttp3.Call,java.io.IOException)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.security.cert.X509CertSelector" invoketype="instance" subsignature="void setExtendedKeyUsage(java.util.Set)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.View" invoketype="instance" subsignature="void setOnKeyListener(android.view.View$OnKeyListener)"/>
    <targets>
      <direct declaringclass="android.view.View$OnKeyListener" index="0" subsignature="boolean onKey(android.view.View,int,android.view.KeyEvent)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.zip.DeflaterOutputStream" invoketype="instance" subsignature="void &lt;init&gt;(java.io.OutputStream,java.util.zip.Deflater)"/>
    <targets>
      <direct declaringclass="java.io.ByteArrayOutputStream" index="0" subsignature="byte[] toByteArray()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.protobuf.GeneratedMessageLite$Builder" invoketype="instance" subsignature="com.google.protobuf.GeneratedMessageLite build()"/>
    <targets>
      <indirect declaringclass="com.google.protobuf.GeneratedMessageLite$Builder" subsignature="void &lt;init&gt;(com.google.protobuf.GeneratedMessageLite)" target-position="base">
        <direct declaringclass="com.google.protobuf.GeneratedMessageLite" index="0" subsignature="java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="rx.internal.operators.OnSubscribeMap" invoketype="instance" subsignature="void &lt;init&gt;(rx.Observable,rx.functions.Func1)"/>
    <targets>
      <direct declaringclass="rx.functions.Func1" index="1" subsignature="java.lang.Object call(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.StringBuilder" invoketype="instance" subsignature="java.lang.StringBuilder insert(int,java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.gms.tasks.Task" invoketype="instance" subsignature="com.google.android.gms.tasks.Task addOnSuccessListener(com.google.android.gms.tasks.OnSuccessListener)"/>
    <targets>
      <direct declaringclass="com.google.android.gms.tasks.OnSuccessListener" index="0" subsignature="void onSuccess(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.android.gms.location.FusedLocationProviderApi" invoketype="instance" subsignature="com.google.android.gms.common.api.PendingResult requestLocationUpdates(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.LocationRequest,com.google.android.gms.location.LocationListener)"/>
    <targets>
      <direct declaringclass="com.google.android.gms.location.LocationListener" index="2" subsignature="void onLocationChanged(android.location.Location)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.actionbarsherlock.app.ActionBar" invoketype="instance" subsignature="void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener)"/>
    <targets>
      <direct declaringclass="com.actionbarsherlock.app.ActionBar$OnNavigationListener" index="1" subsignature="boolean onNavigationItemSelected(int,long)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.ContextWrapper" invoketype="instance" subsignature="void setWallpaper(java.io.InputStream)"/>
    <targets>
      <direct declaringclass="java.io.InputStream" index="0" subsignature="int read(byte[])" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="oauth.signpost.OAuthConsumer" invoketype="instance" subsignature="oauth.signpost.http.HttpRequest sign(java.lang.Object)"/>
    <targets>
      <indirect declaringclass="oauth.signpost.OAuthConsumer" subsignature="void setSigningStrategy(oauth.signpost.signature.SigningStrategy)" target-position="base">
        <direct declaringclass="oauth.signpost.signature.SigningStrategy" index="0" subsignature="java.lang.String writeSignature(java.lang.String,oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="javax.xml.transform.Transformer" invoketype="instance" subsignature="void transform(javax.xml.transform.Source,javax.xml.transform.Result)"/>
    <targets>
      <direct declaringclass="javax.xml.transform.stream.StreamResult" index="1" subsignature="java.io.Writer getWriter()" target-position="argument"/>
      <direct declaringclass="javax.xml.transform.Source" index="0" subsignature="java.lang.String getSystemId()" target-position="argument"/>
      <direct declaringclass="javax.xml.transform.dom.DOMSource" index="0" subsignature="org.w3c.dom.Node getNode()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.Notification$BigTextStyle" invoketype="instance" subsignature="android.app.Notification$BigTextStyle bigText(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.text.method.CharacterPickerDialog" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,android.view.View,android.text.Editable,java.lang.String,boolean)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.Notification$Builder" invoketype="instance" subsignature="android.app.Notification$Builder setStyle(android.app.Notification$Style)"/>
    <targets>
      <direct declaringclass="android.app.Notification$Style" index="0" subsignature="void setBuilder(android.app.Notification$Builder)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.EditText" invoketype="instance" subsignature="void setText(java.lang.CharSequence,android.widget.TextView$BufferType)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.movoto.movoto.widget.InfiniteViewPager" invoketype="instance" subsignature="void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)"/>
    <targets>
      <direct declaringclass="androidx.viewpager.widget.ViewPager$OnPageChangeListener" index="0" subsignature="void onPageScrolled(int,float,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="o.l" invoketype="instance" subsignature="boolean onMenuItemSelected(int,android.view.MenuItem)"/>
    <targets>
      <direct declaringclass="android.view.MenuItem" index="1" subsignature="java.lang.CharSequence getTitleCondensed()" target-position="argument"/>
      <direct declaringclass="android.view.MenuItem" index="1" subsignature="int getItemId()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.text.DynamicLayout" invoketype="instance" subsignature="void &lt;init&gt;(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="char charAt(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.google.protobuf.CodedOutputStream" invoketype="instance" subsignature="int computeMessageSize(int,com.google.protobuf.MessageLite)"/>
    <targets>
      <direct declaringclass="com.google.protobuf.MessageLite" index="1" subsignature="int getSerializedSize()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.security.cert.X509CertSelector" invoketype="instance" subsignature="void setPolicy(java.util.Set)"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.concurrent.ThreadPoolExecutor" invoketype="instance" subsignature="void beforeExecute(java.lang.Thread,java.lang.Runnable)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="1" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.FocusFinder" invoketype="instance" subsignature="android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)"/>
    <targets>
      <direct declaringclass="android.view.ViewGroup" index="0" subsignature="void onLayout(boolean,int,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.view.ViewGroup" index="0" subsignature="boolean dispatchKeyEvent(android.view.KeyEvent)" target-position="argument"/>
      <direct declaringclass="android.view.View" index="0" subsignature="void computeScroll()" target-position="argument"/>
      <direct declaringclass="android.view.ViewGroup" index="0" subsignature="boolean onInterceptTouchEvent(android.view.MotionEvent)" target-position="argument"/>
      <direct declaringclass="android.view.View" index="0" subsignature="boolean onTouchEvent(android.view.MotionEvent)" target-position="argument"/>
      <direct declaringclass="android.view.View" index="0" subsignature="void onMeasure(int,int)" target-position="argument"/>
      <direct declaringclass="android.view.ViewGroup" index="0" subsignature="void dispatchDraw(android.graphics.Canvas)" target-position="argument"/>
      <direct declaringclass="android.view.View" index="0" subsignature="void scrollTo(int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.AutoCompleteTextView" invoketype="instance" subsignature="void setCompletionHint(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.chromium.net.RequestFinishedInfo$Listener" invoketype="instance" subsignature="void &lt;init&gt;(java.util.concurrent.Executor)"/>
    <targets>
      <direct declaringclass="java.util.concurrent.Executor" index="0" subsignature="void execute(java.lang.Runnable)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.facebook.ads.AudienceNetworkAds$InitSettingsBuilder" invoketype="instance" subsignature="com.facebook.ads.AudienceNetworkAds$InitSettingsBuilder withInitListener(com.facebook.ads.AudienceNetworkAds$InitListener)"/>
    <targets>
      <direct declaringclass="com.facebook.ads.AudienceNetworkAds$InitListener" index="0" subsignature="void onInitialized(com.facebook.ads.AudienceNetworkAds$InitResult)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodImpl" invoketype="instance" subsignature="void createSession(android.view.inputmethod.InputMethod$SessionCallback)"/>
    <targets>
      <direct declaringclass="android.view.inputmethod.InputMethod$SessionCallback" index="0" subsignature="void sessionCreated(android.view.inputmethod.InputMethodSession)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.ContentResolver" invoketype="instance" subsignature="void unregisterContentObserver(android.database.ContentObserver)"/>
    <targets>
      <direct declaringclass="android.database.ContentObserver" index="0" subsignature="void onChange(boolean,android.net.Uri)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.sax.Element" invoketype="instance" subsignature="void setEndTextElementListener(android.sax.EndTextElementListener)"/>
    <targets>
      <direct declaringclass="android.sax.EndTextElementListener" index="0" subsignature="void end(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.KeyEvent" invoketype="instance" subsignature="boolean dispatch(android.view.KeyEvent$Callback)"/>
    <targets>
      <direct declaringclass="android.view.KeyEvent$Callback" index="0" subsignature="boolean onKeyDown(int,android.view.KeyEvent)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.support.v7.widget.SearchView" invoketype="instance" subsignature="void setOnQueryTextListener(android.support.v7.widget.SearchView$OnQueryTextListener)"/>
    <targets>
      <direct declaringclass="android.support.v7.widget.SearchView$OnQueryTextListener" index="0" subsignature="boolean onQueryTextChange(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.VideoView" invoketype="instance" subsignature="void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)"/>
    <targets>
      <direct declaringclass="android.media.MediaPlayer$OnPreparedListener" index="0" subsignature="void onPrepared(android.media.MediaPlayer)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.xml.sax.SAXParseException" invoketype="instance" subsignature="void &lt;init&gt;(java.lang.String,org.xml.sax.Locator)"/>
    <targets>
      <direct declaringclass="org.xml.sax.Locator" index="1" subsignature="int getLineNumber()" target-position="argument"/>
      <direct declaringclass="org.xml.sax.Locator" index="1" subsignature="java.lang.String getPublicId()" target-position="argument"/>
      <direct declaringclass="org.xml.sax.Locator" index="1" subsignature="int getColumnNumber()" target-position="argument"/>
      <direct declaringclass="org.xml.sax.Locator" index="1" subsignature="java.lang.String getSystemId()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.AbsListView$OnScrollListener" invoketype="instance" subsignature="void onScroll(android.widget.AbsListView,int,int,int)"/>
    <targets>
      <direct declaringclass="android.view.View" index="0" subsignature="void computeScroll()" target-position="argument"/>
      <direct declaringclass="android.widget.AbsListView" index="0" subsignature="boolean onTouchEvent(android.view.MotionEvent)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.Switch" invoketype="instance" subsignature="void setTextOff(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.ArrayList" invoketype="instance" subsignature="boolean addAll(int,java.util.Collection)"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="1" subsignature="java.lang.Object[] toArray()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.content.Intent" invoketype="instance" subsignature="android.content.Intent putExtra(java.lang.String,int)"/>
    <targets>
      <direct declaringclass="android.os.Parcelable" index="1" subsignature="void writeToParcel(android.os.Parcel,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.os.Parcel" invoketype="instance" subsignature="void readTypedList(java.util.List,android.os.Parcelable$Creator)"/>
    <targets>
      <direct declaringclass="android.os.Parcelable$Creator" index="1" subsignature="java.lang.Object createFromParcel(android.os.Parcel)" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object get(int)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean add(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.BufferedReader" invoketype="instance" subsignature="void &lt;init&gt;(java.io.Reader,int)"/>
    <targets>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.FileReader" index="0" subsignature="int read(char[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.KeyEvent" invoketype="instance" subsignature="boolean dispatch(android.view.KeyEvent$Callback,android.view.KeyEvent$DispatcherState,java.lang.Object)"/>
    <targets>
      <direct declaringclass="android.view.KeyEvent$Callback" index="0" subsignature="boolean onKeyDown(int,android.view.KeyEvent)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="io.reactivex.Observable" invoketype="instance" subsignature="io.reactivex.Observable doOnNext(io.reactivex.functions.Consumer)"/>
    <targets>
      <direct declaringclass="io.reactivex.functions.Consumer" index="0" subsignature="void accept(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.Timer" invoketype="instance" subsignature="void schedule(java.util.TimerTask,long)"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.sax.Element" invoketype="instance" subsignature="void setEndElementListener(android.sax.EndElementListener)"/>
    <targets>
      <direct declaringclass="android.sax.EndElementListener" index="0" subsignature="void end()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="io.reactivex.Maybe" invoketype="instance" subsignature="io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)"/>
    <targets>
      <direct declaringclass="io.reactivex.functions.Consumer" index="0" subsignature="void accept(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.util.Properties" invoketype="instance" subsignature="void loadFromXML(java.io.InputStream)"/>
    <targets>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.InputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.PrintWriter" invoketype="instance" subsignature="void &lt;init&gt;(java.io.Writer,boolean)"/>
    <targets>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.OutputStreamWriter" index="0" subsignature="void write(java.lang.String,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.security.cert.X509CRLSelector" invoketype="instance" subsignature="void setIssuerNames(java.util.Collection)"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.graphics.Paint" invoketype="instance" subsignature="int breakText(java.lang.CharSequence,int,int,boolean,float,float[])"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.LinearLayout" invoketype="instance" subsignature="void setDividerDrawable(android.graphics.drawable.Drawable)"/>
    <targets>
      <direct declaringclass="android.graphics.drawable.Drawable" index="0" subsignature="int getIntrinsicHeight()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="okhttp3.OkHttpClient$Builder" invoketype="instance" subsignature="okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager)"/>
    <targets>
      <direct declaringclass="javax.net.ssl.X509TrustManager" index="1" subsignature="java.security.cert.X509Certificate[] getAcceptedIssuers()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.lang.StringBuilder" invoketype="instance" subsignature="java.lang.StringBuilder append(java.lang.CharSequence,int,int)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="org.apache.http.impl.client.DefaultHttpClient" invoketype="instance" subsignature="void setRedirectHandler(org.apache.http.client.RedirectHandler)"/>
    <targets>
      <direct declaringclass="org.apache.http.client.RedirectHandler" index="0" subsignature="boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="androidx.drawerlayout.widget.DrawerLayout" invoketype="instance" subsignature="void openDrawer(int)"/>
    <targets>
      <indirect declaringclass="androidx.drawerlayout.widget.DrawerLayout" subsignature="void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)" target-position="base">
        <direct declaringclass="androidx.drawerlayout.widget.DrawerLayout$DrawerListener" index="0" subsignature="void onDrawerStateChanged(int)" target-position="argument"/>
      </indirect>
      <indirect declaringclass="androidx.drawerlayout.widget.DrawerLayout" subsignature="void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)" target-position="base">
        <direct declaringclass="androidx.drawerlayout.widget.DrawerLayout$DrawerListener" index="0" subsignature="void onDrawerOpened(android.view.View)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.TabHost$TabSpec" invoketype="instance" subsignature="android.widget.TabHost$TabSpec setContent(android.widget.TabHost$TabContentFactory)"/>
    <targets>
      <direct declaringclass="android.widget.TabHost$TabContentFactory" index="0" subsignature="android.view.View createTabContent(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.view.View" invoketype="instance" subsignature="void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)"/>
    <targets>
      <direct declaringclass="android.view.View$OnAttachStateChangeListener" index="0" subsignature="void onViewAttachedToWindow(android.view.View)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="androidx.recyclerview.widget.RecyclerView" invoketype="instance" subsignature="void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)"/>
    <targets>
      <direct declaringclass="androidx.recyclerview.widget.RecyclerView$OnScrollListener" index="0" subsignature="void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int)" target-position="argument"/>
      <direct declaringclass="androidx.recyclerview.widget.RecyclerView$OnScrollListener" index="0" subsignature="void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.text.Html" invoketype="instance" subsignature="java.lang.String escapeHtml(java.lang.CharSequence)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.util.JsonWriter" invoketype="instance" subsignature="android.util.JsonWriter name(java.lang.String)"/>
    <targets>
      <indirect declaringclass="android.util.JsonWriter" subsignature="void &lt;init&gt;(java.io.Writer)" target-position="base">
        <direct declaringclass="java.io.StringWriter" index="0" subsignature="java.io.StringWriter append(java.lang.CharSequence)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="java.io.StringWriter" invoketype="instance" subsignature="java.io.StringWriter append(java.lang.CharSequence,int,int)"/>
    <targets>
      <indirect declaringclass="java.io.StringWriter" subsignature="java.io.StringWriter append(java.lang.CharSequence,int,int)" target-position="base">
        <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.CharSequence subSequence(int,int)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.media.MediaPlayer" invoketype="instance" subsignature="void setWakeMode(android.content.Context,int)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.widget.ResourceCursorAdapter" invoketype="instance" subsignature="void &lt;init&gt;(android.content.Context,int,android.database.Cursor)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.admin.DeviceAdminReceiver" invoketype="instance" subsignature="android.app.admin.DevicePolicyManager getManager(android.content.Context)"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.app.AlertDialog$Builder" invoketype="instance" subsignature="android.app.AlertDialog show()"/>
    <targets>
      <indirect declaringclass="android.app.AlertDialog$Builder" subsignature="void &lt;init&gt;(android.content.Context)" target-position="base">
        <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="android.content.Context getBaseContext()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="android.app.AlertDialog$Builder" subsignature="void &lt;init&gt;(android.content.Context)" target-position="base">
        <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="android.app.AlertDialog$Builder" subsignature="void &lt;init&gt;(android.content.Context)" target-position="base">
        <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="android.content.pm.ApplicationInfo getApplicationInfo()" target-position="argument"/>
      </indirect>
      <indirect declaringclass="android.app.AlertDialog$Builder" subsignature="void &lt;init&gt;(android.content.Context)" target-position="base">
        <direct declaringclass="android.view.ContextThemeWrapper" index="0" subsignature="void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)" target-position="argument"/>
      </indirect>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="android.graphics.Canvas" invoketype="instance" subsignature="void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="com.bumptech.glide.RequestBuilder" invoketype="instance" subsignature="com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)"/>
    <targets>
      <direct declaringclass="com.bumptech.glide.request.target.Target" index="0" subsignature="void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source declaringclass="javax.crypto.Cipher" invoketype="instance" subsignature="void init(int,java.security.Key)"/>
    <targets>
      <direct declaringclass="java.security.Key" index="1" subsignature="byte[] getEncoded()" target-position="argument"/>
      <direct declaringclass="java.security.Key" index="1" subsignature="java.lang.String getFormat()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.view.animation.AnimationUtils: android.view.animation.Animation makeInAnimation(android.content.Context,boolean)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources$Theme getTheme()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.util.Rfc822Tokenizer: void tokenize(java.lang.CharSequence,java.util.Collection)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="java.lang.String getString(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndexOrThrow(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.telephony.gsm.SmsMessage: int[] calculateLength(java.lang.CharSequence,boolean)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Selection: void selectAll(android.text.Spannable)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String,java.security.Provider)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.security.Provider$Service getService(java.lang.String,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Comparator" index="2" subsignature="int compare(java.lang.Object,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: int indexOf(java.lang.CharSequence,char)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.security.Provider$Service getService(java.lang.String,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)&gt;"/>
    <targets>
      <direct declaringclass="org.apache.http.params.HttpParams" index="0" subsignature="org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.Context getApplicationContext()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;org.apache.http.params.HttpConnectionParams: void setLinger(org.apache.http.params.HttpParams,int)&gt;"/>
    <targets>
      <direct declaringclass="org.apache.http.params.HttpParams" index="0" subsignature="org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.net.VpnService: android.content.Intent prepare(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.pm.PackageManager getPackageManager()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Map" index="0" subsignature="boolean containsKey(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.lang.Object get(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Selection: boolean extendRight(android.text.Spannable,android.text.Layout)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int nextSpanTransition(int,int,java.lang.Class)" target-position="argument"/>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void setSpan(java.lang.Object,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void removeSpan(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.ContactsContract$CommonDataKinds$SipAddress: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Selection: boolean extendUp(android.text.Spannable,android.text.Layout)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void removeSpan(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: int binarySearch(java.util.List,java.lang.Object)&gt;"/>
    <targets>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object get(int)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.os.AsyncTask: void execute(java.lang.Runnable)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)&gt;"/>
    <targets>
      <direct declaringclass="java.io.InputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Selection: boolean moveLeft(android.text.Spannable,android.text.Layout)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.security.Provider$Service getService(java.lang.String,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.lang.Object max(java.util.Collection)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.net.ProxySelector: void setDefault(java.net.ProxySelector)&gt;"/>
    <targets>
      <direct declaringclass="java.net.ProxySelector" index="0" subsignature="java.util.List select(java.net.URI)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="java.lang.Object[] getSpans(int,int,java.lang.Class)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="1" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;org.json.JSONObject: java.lang.String numberToString(java.lang.Number)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Number" index="0" subsignature="long longValue()" target-position="argument"/>
      <direct declaringclass="java.lang.Number" index="0" subsignature="double doubleValue()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void cursorRowToContentValues(android.database.Cursor,android.content.ContentValues)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="java.lang.String[] getColumnNames()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void createDbFromSqlStatements(android.content.Context,java.lang.String,int,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: int lastIndexOfSubList(java.util.List,java.util.List)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="1" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndex(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean isNull(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="long getLong(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback)&gt;"/>
    <targets>
      <direct declaringclass="android.text.TextUtils$EllipsizeCallback" index="5" subsignature="void ellipsized(int,int)" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)&gt;"/>
    <targets>
      <direct declaringclass="java.io.DataInput" index="0" subsignature="void readFully(byte[],int,int)" target-position="argument"/>
      <direct declaringclass="java.io.DataInput" index="0" subsignature="int readUnsignedShort()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean,android.content.DialogInterface$OnCancelListener)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources$Theme getTheme()" target-position="argument"/>
      <direct declaringclass="android.content.DialogInterface$OnCancelListener" index="5" subsignature="void onCancel(android.content.DialogInterface)" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)&gt;"/>
    <targets>
      <direct declaringclass="java.util.TimeZone" index="0" subsignature="int getRawOffset()" target-position="argument"/>
      <direct declaringclass="java.util.TimeZone" index="0" subsignature="java.lang.Object clone()" target-position="argument"/>
      <direct declaringclass="java.util.TimeZone" index="0" subsignature="int getOffset(long)" target-position="argument"/>
      <direct declaringclass="java.util.TimeZone" index="0" subsignature="boolean inDaylightTime(java.util.Date)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.List synchronizedList(java.util.List)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean add(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean contains(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="int indexOf(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Selection: void removeSelection(android.text.Spannable)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void removeSpan(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(android.util.Property,int[])&gt;"/>
    <targets>
      <direct declaringclass="android.util.Property" index="0" subsignature="java.lang.String getName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.SpannableStringBuilder: android.text.SpannableStringBuilder valueOf(java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Selection: boolean moveRight(android.text.Spannable,android.text.Layout)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="java.lang.Object[] getSpans(int,int,java.lang.Class)" target-position="argument"/>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int nextSpanTransition(int,int,java.lang.Class)" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void setSpan(java.lang.Object,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void removeSpan(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)&gt;"/>
    <targets>
      <direct declaringclass="org.apache.http.params.HttpParams" index="0" subsignature="org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Selection: boolean moveDown(android.text.Spannable,android.text.Layout)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(android.util.Property,float[])&gt;"/>
    <targets>
      <direct declaringclass="android.util.Property" index="0" subsignature="java.lang.String getName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.SortedMap unmodifiableSortedMap(java.util.SortedMap)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Map" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;org.apache.http.params.HttpConnectionParams: boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)&gt;"/>
    <targets>
      <direct declaringclass="org.apache.http.params.HttpParams" index="0" subsignature="boolean getBooleanParameter(java.lang.String,boolean)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.Contacts$Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.CallLog$Calls: java.lang.String getLastOutgoingCall(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.format.Formatter: java.lang.String formatShortFileSize(android.content.Context,long)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)&gt;"/>
    <targets>
      <direct declaringclass="java.security.cert.X509Certificate" index="0" subsignature="javax.security.auth.x500.X500Principal getSubjectX500Principal()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String,java.security.Provider)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.security.Provider$Service getService(java.lang.String,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.net.Socket: void setSocketImplFactory(java.net.SocketImplFactory)&gt;"/>
    <targets>
      <direct declaringclass="java.net.SocketImplFactory" index="0" subsignature="java.net.SocketImpl createSocketImpl()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,int[])&gt;"/>
    <targets>
      <direct declaringclass="android.util.Property" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)&gt;"/>
    <targets>
      <direct declaringclass="org.apache.http.params.HttpParams" index="0" subsignature="org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String[] databaseList()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.lang.Object max(java.util.Collection,java.util.Comparator)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.concurrent.Executors: java.util.concurrent.ExecutorService unconfigurableExecutorService(java.util.concurrent.ExecutorService)&gt;"/>
    <targets>
      <direct declaringclass="java.util.concurrent.ThreadPoolExecutor" index="0" subsignature="void beforeExecute(java.lang.Thread,java.lang.Runnable)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources$Theme getTheme()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int,int)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])&gt;"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean add(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Html: android.text.Spanned fromHtml(java.lang.String,android.text.Html$ImageGetter,android.text.Html$TagHandler)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Html$TagHandler" index="2" subsignature="void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int,android.database.DatabaseErrorHandler)&gt;"/>
    <targets>
      <direct declaringclass="android.database.sqlite.SQLiteDatabase$CursorFactory" index="1" subsignature="android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.Map synchronizedMap(java.util.Map)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.lang.Object put(java.lang.Object,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="boolean containsKey(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.lang.Object get(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri,android.view.SurfaceHolder)&gt;"/>
    <targets>
      <direct declaringclass="android.view.SurfaceHolder" index="2" subsignature="void setKeepScreenOn(boolean)" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
      <direct declaringclass="android.view.SurfaceHolder" index="2" subsignature="android.view.Surface getSurface()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: void sort(java.util.List,java.util.Comparator)&gt;"/>
    <targets>
      <direct declaringclass="java.util.List" index="0" subsignature="void sort(java.util.Comparator)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance(java.lang.String,java.lang.ClassLoader)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.ClassLoader" index="1" subsignature="java.lang.Class loadClass(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndex(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean isNull(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getInt(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.text.Normalizer: boolean isNormalized(java.lang.CharSequence,java.text.Normalizer$Form)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.io.PrintStream)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getPosition()" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="java.lang.String[] getColumnNames()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.Security: int addProvider(java.security.Provider)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="0" subsignature="java.lang.String getName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.nio.channels.Channels: java.io.OutputStream newOutputStream(java.nio.channels.WritableByteChannel)&gt;"/>
    <targets>
      <direct declaringclass="java.nio.channels.WritableByteChannel" index="0" subsignature="int write(java.nio.ByteBuffer)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.AccessController: java.lang.Object doPrivilegedWithCombiner(java.security.PrivilegedAction)&gt;"/>
    <targets>
      <direct declaringclass="java.security.PrivilegedAction" index="0" subsignature="java.lang.Object run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.app.DownloadManager: java.lang.Long getMaxBytesOverMobile(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.MediaStore: java.lang.String getVersion(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: void swap(java.util.List,int,int)&gt;"/>
    <targets>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object get(int)" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object set(int,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: boolean isDigitsOnly(java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.Context,java.lang.String,int)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.pm.PackageManager getPackageManager()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.ContactsContract$CommonDataKinds$StructuredPostal: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndex(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean isNull(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="java.lang.String getString(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.os.RecoverySystem: void rebootWipeCache(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)&gt;"/>
    <targets>
      <direct declaringclass="java.security.PrivilegedAction" index="0" subsignature="java.lang.Object run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int,int)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources$Theme getTheme()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence,int,int)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.os.RecoverySystem: void rebootWipeUserData(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.speech.SpeechRecognizer: boolean isRecognitionAvailable(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.pm.PackageManager getPackageManager()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.ContactsContract$Groups: android.content.EntityIterator newEntityIterator(android.database.Cursor)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean moveToFirst()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.os.Message: android.os.Message obtain(android.os.Handler,java.lang.Runnable)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="1" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: void sort(java.util.List)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="0" subsignature="java.lang.Object[] toArray()" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="java.util.ListIterator listIterator()" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object set(int,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.reflect.InvocationHandler" index="2" subsignature="java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Comparator" index="1" subsignature="int compare(java.lang.Object,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.lang.Object min(java.util.Collection,java.util.Comparator)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.ArrayList list(java.util.Enumeration)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Enumeration" index="0" subsignature="boolean hasMoreElements()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.opengl.ETC1Util: android.opengl.ETC1Util$ETC1Texture createTexture(java.io.InputStream)&gt;"/>
    <targets>
      <direct declaringclass="java.io.InputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.lang.Object min(java.util.Collection)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: void shuffle(java.util.List,java.util.Random)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)&gt;"/>
    <targets>
      <direct declaringclass="java.security.PrivilegedExceptionAction" index="0" subsignature="java.lang.Object run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Selection: boolean extendLeft(android.text.Spannable,android.text.Layout)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void removeSpan(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.CalendarContract$EventsEntity: android.content.EntityIterator newEntityIterator(android.database.Cursor,android.content.ContentResolver)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean moveToFirst()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.Browser: void sendString(android.content.Context,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="void startActivity(android.content.Intent)" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.Contacts$Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.security.KeyChain: java.security.cert.X509Certificate[] getCertificateChain(android.content.Context,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.Context getApplicationContext()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Selection: void extendSelection(android.text.Spannable,int)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="java.lang.Object[] getSpans(int,int,java.lang.Class)" target-position="argument"/>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void setSpan(java.lang.Object,int,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Date)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="java.lang.String getString(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndexOrThrow(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int,java.util.concurrent.ThreadFactory)&gt;"/>
    <targets>
      <direct declaringclass="java.util.concurrent.ThreadFactory" index="1" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.Security: java.security.Provider[] getProviders(java.util.Map)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.util.Set keySet()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)&gt;"/>
    <targets>
      <direct declaringclass="java.io.ByteArrayInputStream" index="0" subsignature="int read()" target-position="argument"/>
      <direct declaringclass="java.io.ByteArrayInputStream" index="0" subsignature="boolean markSupported()" target-position="argument"/>
      <direct declaringclass="java.io.ByteArrayInputStream" index="0" subsignature="void mark(int)" target-position="argument"/>
      <direct declaringclass="java.io.ByteArrayInputStream" index="0" subsignature="void reset()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.lang.Character: int codePointBefore(java.lang.CharSequence,int)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="char charAt(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndex(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean isNull(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="long getLong(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Selection: boolean extendToLeftEdge(android.text.Spannable,android.text.Layout)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void removeSpan(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.lang.Character: int offsetByCodePoints(java.lang.CharSequence,int,int)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.media.RingtoneManager: android.net.Uri getValidRingtoneUri(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)&gt;"/>
    <targets>
      <direct declaringclass="org.apache.http.params.HttpParams" index="0" subsignature="org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void cursorDoubleToCursorValues(android.database.Cursor,java.lang.String,android.content.ContentValues)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndex(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean isNull(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="double getDouble(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.ContactsContract$RawContacts: android.content.EntityIterator newEntityIterator(android.database.Cursor)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean moveToFirst()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.Set newSetFromMap(java.util.Map)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.lang.Object put(java.lang.Object,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.util.Set keySet()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="void clear()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;javax.xml.validation.SchemaFactory: javax.xml.validation.SchemaFactory newInstance(java.lang.String,java.lang.String,java.lang.ClassLoader)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.ClassLoader" index="2" subsignature="java.lang.Class loadClass(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;javax.net.ssl.HttpsURLConnection: void setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)&gt;"/>
    <targets>
      <direct declaringclass="org.apache.http.conn.ssl.AllowAllHostnameVerifier" index="0" subsignature="int hashCode()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.SharedPreferences getSharedPreferences(java.lang.String,int)" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.KeyStore$Builder: java.security.KeyStore$Builder newInstance(java.lang.String,java.security.Provider,java.security.KeyStore$ProtectionParameter)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.security.Provider$Service getService(java.lang.String,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Selection: boolean moveUp(android.text.Spannable,android.text.Layout)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.SortedMap checkedSortedMap(java.util.SortedMap,java.lang.Class,java.lang.Class)&gt;"/>
    <targets>
      <direct declaringclass="java.util.SortedMap" index="0" subsignature="java.util.SortedMap tailMap(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.SortedMap" index="0" subsignature="java.util.Comparator comparator()" target-position="argument"/>
      <direct declaringclass="java.util.SortedMap" index="0" subsignature="java.lang.Object lastKey()" target-position="argument"/>
      <direct declaringclass="java.util.SortedMap" index="0" subsignature="java.lang.Object firstKey()" target-position="argument"/>
      <direct declaringclass="java.util.SortedMap" index="0" subsignature="java.util.SortedMap headMap(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.SortedMap" index="0" subsignature="java.util.SortedMap subMap(java.lang.Object,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Selection: boolean extendDown(android.text.Spannable,android.text.Layout)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void removeSpan(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Selection: boolean moveToLeftEdge(android.text.Spannable,android.text.Layout)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.ContactsContract$CommonDataKinds$Im: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.security.Provider)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.security.Provider$Service getService(java.lang.String,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.opengl.GLU: void gluLookAt(javax.microedition.khronos.opengles.GL10,float,float,float,float,float,float,float,float,float)&gt;"/>
    <targets>
      <direct declaringclass="javax.microedition.khronos.opengles.GL10" index="0" subsignature="void glMultMatrixf(float[],int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void cursorFloatToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndex(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean isNull(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="float getFloat(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance(java.lang.String,java.lang.ClassLoader)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.ClassLoader" index="1" subsignature="java.lang.Class loadClass(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.method.Touch: void scrollTo(android.widget.TextView,android.text.Layout,int,int)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Layout" index="1" subsignature="int getLineForVertical(int)" target-position="argument"/>
      <direct declaringclass="android.text.Layout" index="1" subsignature="int getParagraphDirection(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])&gt;"/>
    <targets>
      <direct declaringclass="android.animation.TypeEvaluator" index="2" subsignature="java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.security.KeyChain: java.security.PrivateKey getPrivateKey(android.content.Context,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.Context getApplicationContext()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.view.animation.AnimationUtils: android.view.animation.Animation makeOutAnimation(android.content.Context,boolean)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources$Theme getTheme()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: void shuffle(java.util.List)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)&gt;"/>
    <targets>
      <direct declaringclass="android.database.sqlite.SQLiteDatabase$CursorFactory" index="1" subsignature="android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.graphics.BitmapFactory: android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)&gt;"/>
    <targets>
      <direct declaringclass="java.io.InputStream" index="2" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="char charAt(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.content.res.ColorStateList: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)&gt;"/>
    <targets>
      <direct declaringclass="org.xmlpull.v1.XmlPullParser" index="1" subsignature="int next()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void cursorStringToInsertHelper(android.database.Cursor,java.lang.String,android.database.DatabaseUtils$InsertHelper,int)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="java.lang.String getString(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndexOrThrow(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.AlteredCharSequence: android.text.AlteredCharSequence make(java.lang.CharSequence,char[],int,int)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="char charAt(int)" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.CharSequence subSequence(int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: void reverse(java.util.List)&gt;"/>
    <targets>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object get(int)" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object set(int,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.ContactsContract$QuickContact: void showQuickContact(android.content.Context,android.view.View,android.net.Uri,int,java.lang.String[])&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndex(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean isNull(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getInt(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.opengl.GLU: void gluOrtho2D(javax.microedition.khronos.opengles.GL10,float,float,float,float)&gt;"/>
    <targets>
      <direct declaringclass="javax.microedition.khronos.opengles.GL10" index="0" subsignature="void glOrthof(float,float,float,float,float,float)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.concurrent.ForkJoinTask: void invokeAll(java.util.concurrent.ForkJoinTask,java.util.concurrent.ForkJoinTask)&gt;"/>
    <targets>
      <direct declaringclass="java.util.concurrent.ForkJoinTask" index="0" subsignature="boolean exec()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.util.Xml: void parse(java.io.InputStream,android.util.Xml$Encoding,org.xml.sax.ContentHandler)&gt;"/>
    <targets>
      <direct declaringclass="org.xml.sax.ContentHandler" index="2" subsignature="void characters(char[],int,int)" target-position="argument"/>
      <direct declaringclass="org.xml.sax.ContentHandler" index="2" subsignature="void endDocument()" target-position="argument"/>
      <direct declaringclass="org.xml.sax.ContentHandler" index="2" subsignature="void startDocument()" target-position="argument"/>
      <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read(byte[])" target-position="argument"/>
      <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
      <direct declaringclass="org.xml.sax.ContentHandler" index="2" subsignature="void endElement(java.lang.String,java.lang.String,java.lang.String)" target-position="argument"/>
      <direct declaringclass="org.xml.sax.ContentHandler" index="2" subsignature="void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.Contacts$Organizations: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: java.lang.CharSequence replace(java.lang.CharSequence,java.lang.String[],java.lang.CharSequence[])&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])&gt;"/>
    <targets>
      <direct declaringclass="android.util.Property" index="0" subsignature="java.lang.String getName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.ClassLoader getClassLoader()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getPosition()" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="java.lang.String[] getColumnNames()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)&gt;"/>
    <targets>
      <direct declaringclass="org.apache.http.params.HttpParams" index="0" subsignature="int getIntParameter(java.lang.String,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.Contacts$ContactMethods: java.lang.CharSequence getDisplayLabel(android.content.Context,int,int,java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;javax.security.auth.Subject: java.lang.Object doAs(javax.security.auth.Subject,java.security.PrivilegedExceptionAction)&gt;"/>
    <targets>
      <direct declaringclass="java.security.PrivilegedExceptionAction" index="1" subsignature="java.lang.Object run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)&gt;"/>
    <targets>
      <direct declaringclass="java.security.PrivilegedAction" index="0" subsignature="java.lang.Object run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.content.ContentResolver: java.lang.Object addStatusChangeListener(int,android.content.SyncStatusObserver)&gt;"/>
    <targets>
      <direct declaringclass="android.content.SyncStatusObserver" index="1" subsignature="void onStatusChanged(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.SortedSet unmodifiableSortedSet(java.util.SortedSet)&gt;"/>
    <targets>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.lang.Object first()" target-position="argument"/>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.util.Comparator comparator()" target-position="argument"/>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.util.SortedSet subSet(java.lang.Object,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.util.SortedSet headSet(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.lang.Object last()" target-position="argument"/>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.util.SortedSet tailSet(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndex(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean isNull(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getInt(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase create(android.database.sqlite.SQLiteDatabase$CursorFactory)&gt;"/>
    <targets>
      <direct declaringclass="android.database.sqlite.SQLiteDatabase$CursorFactory" index="0" subsignature="android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)&gt;"/>
    <targets>
      <direct declaringclass="java.io.Closeable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.FileInputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources$Theme getTheme()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.pm.ApplicationInfo getApplicationInfo()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)&gt;"/>
    <targets>
      <direct declaringclass="android.app.Activity" index="0" subsignature="void onNewIntent(android.content.Intent)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])&gt;"/>
    <targets>
      <direct declaringclass="android.util.Property" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance(java.lang.String,java.lang.ClassLoader)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.ClassLoader" index="1" subsignature="java.lang.Class loadClass(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void cursorDoubleToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndex(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean isNull(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="double getDouble(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Calendar)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.security.Provider$Service getService(java.lang.String,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.method.MetaKeyKeyListener: void resetMetaState(android.text.Spannable)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void removeSpan(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.TimeZone: void setDefault(java.util.TimeZone)&gt;"/>
    <targets>
      <direct declaringclass="java.util.TimeZone" index="0" subsignature="java.lang.Object clone()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator)&gt;"/>
    <targets>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object get(int)" target-position="argument"/>
      <direct declaringclass="java.util.Comparator" index="2" subsignature="int compare(java.lang.Object,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object remove(int)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="void add(int,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler)&gt;"/>
    <targets>
      <direct declaringclass="android.database.sqlite.SQLiteDatabase$CursorFactory" index="1" subsignature="android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.ContactsContract$CommonDataKinds$Organization: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Arrays: void sort(java.lang.Object[],int,int,java.util.Comparator)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Comparator" index="3" subsignature="int compare(java.lang.Object,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.SortedSet checkedSortedSet(java.util.SortedSet,java.lang.Class)&gt;"/>
    <targets>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.lang.Object first()" target-position="argument"/>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.util.Comparator comparator()" target-position="argument"/>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.util.SortedSet subSet(java.lang.Object,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.util.SortedSet headSet(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.lang.Object last()" target-position="argument"/>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.util.SortedSet tailSet(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void removeSpan(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.Set checkedSet(java.util.Set,java.lang.Class)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean containsAll(java.util.Collection)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="java.lang.Object[] toArray(java.lang.Object[])" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="java.lang.Object[] toArray()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean retainAll(java.util.Collection)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean contains(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean remove(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean removeAll(java.util.Collection)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean add(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int hashCode()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="void clear()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="java.io.InputStream" index="2" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.os.RecoverySystem: void installPackage(android.content.Context,java.io.File)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.view.animation.AnimationUtils: android.view.animation.Animation makeInChildBottomAnimation(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources$Theme getTheme()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Selection: boolean extendToRightEdge(android.text.Spannable,android.text.Layout)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="java.lang.Object[] getSpans(int,int,java.lang.Class)" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void setSpan(java.lang.Object,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void removeSpan(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)&gt;"/>
    <targets>
      <direct declaringclass="org.apache.http.params.HttpParams" index="0" subsignature="boolean getBooleanParameter(java.lang.String,boolean)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void cursorDoubleToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndex(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean isNull(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="double getDouble(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)&gt;"/>
    <targets>
      <direct declaringclass="org.xmlpull.v1.XmlPullParser" index="1" subsignature="int next()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.format.DateFormat: char[] getDateFormatOrder(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.ContactsContract$CommonDataKinds$Email: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)&gt;"/>
    <targets>
      <direct declaringclass="org.apache.http.params.HttpParams" index="0" subsignature="int getIntParameter(java.lang.String,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="java.io.InputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.opengl.GLU: void gluPerspective(javax.microedition.khronos.opengles.GL10,float,float,float,float)&gt;"/>
    <targets>
      <direct declaringclass="javax.microedition.khronos.opengles.GL10" index="0" subsignature="void glFrustumf(float,float,float,float,float,float)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: boolean disjoint(java.util.Collection,java.util.Collection)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="1" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.security.Provider)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.security.Provider$Service getService(java.lang.String,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.AccessController: java.lang.Object doPrivilegedWithCombiner(java.security.PrivilegedExceptionAction)&gt;"/>
    <targets>
      <direct declaringclass="java.security.PrivilegedExceptionAction" index="0" subsignature="java.lang.Object run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.concurrent.Executors: java.util.concurrent.Callable callable(java.lang.Runnable,java.lang.Object)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Runnable" index="0" subsignature="void run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: java.lang.String dumpCurrentRowToString(android.database.Cursor)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getPosition()" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="java.lang.String[] getColumnNames()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.Comparator reverseOrder(java.util.Comparator)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Comparator" index="0" subsignature="int compare(java.lang.Object,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.SortedSet synchronizedSortedSet(java.util.SortedSet)&gt;"/>
    <targets>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.lang.Object first()" target-position="argument"/>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.util.Comparator comparator()" target-position="argument"/>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.util.SortedSet subSet(java.lang.Object,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.util.SortedSet headSet(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.lang.Object last()" target-position="argument"/>
      <direct declaringclass="java.util.SortedSet" index="0" subsignature="java.util.SortedSet tailSet(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)&gt;"/>
    <targets>
      <direct declaringclass="org.apache.http.params.HttpParams" index="0" subsignature="int getIntParameter(java.lang.String,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String,java.security.Provider)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.security.Provider$Service getService(java.lang.String,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.gesture.GestureLibraries: android.gesture.GestureLibrary fromPrivateFile(android.content.Context,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.io.File getFileStreamPath(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.nio.channels.Channels: java.io.Reader newReader(java.nio.channels.ReadableByteChannel,java.nio.charset.CharsetDecoder,int)&gt;"/>
    <targets>
      <direct declaringclass="java.nio.channels.ReadableByteChannel" index="0" subsignature="int read(java.nio.ByteBuffer)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.media.MediaScannerConnection: void scanFile(android.content.Context,java.lang.String[],java.lang.String[],android.media.MediaScannerConnection$OnScanCompletedListener)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: boolean isGraphic(java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Thread$UncaughtExceptionHandler" index="0" subsignature="void uncaughtException(java.lang.Thread,java.lang.Throwable)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.List unmodifiableList(java.util.List)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean contains(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.security.Provider$Service getService(java.lang.String,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.security.Provider$Service getService(java.lang.String,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.Map checkedMap(java.util.Map,java.lang.Class,java.lang.Class)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.util.Collection values()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.lang.Object put(java.lang.Object,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.util.Set entrySet()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="boolean containsValue(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.util.Set keySet()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="boolean containsKey(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.lang.Object get(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="java.lang.Object remove(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="int hashCode()" target-position="argument"/>
      <direct declaringclass="java.util.Map" index="0" subsignature="void clear()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.lang.Character: int codePointCount(java.lang.CharSequence,int,int)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;javax.security.auth.Subject: java.lang.Object doAsPrivileged(javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext)&gt;"/>
    <targets>
      <direct declaringclass="java.security.PrivilegedExceptionAction" index="1" subsignature="java.lang.Object run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.content.Intent$ShortcutIconResource: android.content.Intent$ShortcutIconResource fromContext(android.content.Context,int)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.String getPackageName()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)&gt;"/>
    <targets>
      <direct declaringclass="java.security.PrivilegedExceptionAction" index="0" subsignature="java.lang.Object run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.Contacts$People: android.graphics.Bitmap loadContactPhoto(android.content.Context,android.net.Uri,int,android.graphics.BitmapFactory$Options)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.BoringLayout$Metrics)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: int frequency(java.util.Collection,java.lang.Object)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.lang.StringBuilder)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getPosition()" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean moveToPosition(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean moveToNext()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)&gt;"/>
    <targets>
      <direct declaringclass="java.util.TimeZone" index="0" subsignature="int getRawOffset()" target-position="argument"/>
      <direct declaringclass="java.util.TimeZone" index="0" subsignature="java.lang.Object clone()" target-position="argument"/>
      <direct declaringclass="java.util.TimeZone" index="0" subsignature="int getOffset(long)" target-position="argument"/>
      <direct declaringclass="java.util.TimeZone" index="0" subsignature="boolean inDaylightTime(java.util.Date)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.Queue asLifoQueue(java.util.Deque)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Deque" index="0" subsignature="java.lang.Object pollFirst()" target-position="argument"/>
      <direct declaringclass="java.util.Deque" index="0" subsignature="java.lang.Object getFirst()" target-position="argument"/>
      <direct declaringclass="java.util.Deque" index="0" subsignature="java.lang.Object removeFirst()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean contains(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.Deque" index="0" subsignature="boolean offerFirst(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean remove(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Deque" index="0" subsignature="java.lang.Object peekFirst()" target-position="argument"/>
      <direct declaringclass="java.util.Deque" index="0" subsignature="void addFirst(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)&gt;"/>
    <targets>
      <direct declaringclass="org.apache.http.params.HttpParams" index="0" subsignature="int getIntParameter(java.lang.String,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: void rotate(java.util.List,int)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.telephony.PhoneNumberUtils: boolean compare(android.content.Context,java.lang.String,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.Set synchronizedSet(java.util.Set)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean addAll(java.util.Collection)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean add(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: java.lang.String dumpCursorToString(android.database.Cursor)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getPosition()" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean moveToPosition(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean moveToNext()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)&gt;"/>
    <targets>
      <direct declaringclass="android.text.util.Linkify$MatchFilter" index="3" subsignature="boolean acceptMatch(java.lang.CharSequence,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;javax.security.auth.Subject: java.lang.Object doAs(javax.security.auth.Subject,java.security.PrivilegedAction)&gt;"/>
    <targets>
      <direct declaringclass="java.security.PrivilegedAction" index="1" subsignature="java.lang.Object run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.ClassLoader getClassLoader()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor(java.util.concurrent.ThreadFactory)&gt;"/>
    <targets>
      <direct declaringclass="java.util.concurrent.ThreadFactory" index="0" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.widget.ArrayAdapter: android.widget.ArrayAdapter createFromResource(android.content.Context,int,int)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.CalendarContract$CalendarEntity: android.content.EntityIterator newEntityIterator(android.database.Cursor)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndex(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean isNull(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean isAfterLast()" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean moveToNext()" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="long getLong(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getInt(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="java.lang.String getString(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean moveToFirst()" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndexOrThrow(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: int indexOfSubList(java.util.List,java.util.List)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="1" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)&gt;"/>
    <targets>
      <direct declaringclass="java.security.cert.X509Certificate" index="0" subsignature="java.util.Collection getSubjectAlternativeNames()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;javax.xml.datatype.DatatypeFactory: javax.xml.datatype.DatatypeFactory newInstance(java.lang.String,java.lang.ClassLoader)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.ClassLoader" index="1" subsignature="java.lang.Class loadClass(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory$Options)&gt;"/>
    <targets>
      <direct declaringclass="java.io.InputStream" index="2" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.lang.Character: int codePointAt(java.lang.CharSequence,int)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="char charAt(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String,java.security.Provider)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.security.Provider$Service getService(java.lang.String,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.content.ClipData: android.content.ClipData newRawUri(java.lang.CharSequence,android.net.Uri)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.CalendarContract$EventsEntity: android.content.EntityIterator newEntityIterator(android.database.Cursor,android.content.ContentProviderClient)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean moveToFirst()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.content.ClipData: android.content.ClipData newUri(android.content.ContentResolver,java.lang.CharSequence,android.net.Uri)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="java.lang.String toString()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="1" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.security.Provider$Service getService(java.lang.String,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.SpannedString: android.text.SpannedString valueOf(java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.net.URLClassLoader: java.net.URLClassLoader newInstance(java.net.URL[],java.lang.ClassLoader)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.ClassLoader" index="1" subsignature="java.lang.Class loadClass(java.lang.String,boolean)" target-position="argument"/>
      <direct declaringclass="java.lang.ClassLoader" index="1" subsignature="java.net.URL getResource(java.lang.String)" target-position="argument"/>
      <direct declaringclass="java.lang.ClassLoader" index="1" subsignature="java.util.Enumeration getResources(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.format.DateFormat: java.text.DateFormat getDateFormat(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: void fill(java.util.List,java.lang.Object)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.util.Xml: void parse(java.io.Reader,org.xml.sax.ContentHandler)&gt;"/>
    <targets>
      <direct declaringclass="java.io.Reader" index="0" subsignature="int read(char[])" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.app.Activity" index="0" subsignature="void finish()" target-position="argument"/>
      <direct declaringclass="android.app.Activity" index="0" subsignature="boolean onTouchEvent(android.view.MotionEvent)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: void copy(java.util.List,java.util.List)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="1" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.UserDictionary$Words: void addWord(android.content.Context,java.lang.String,int,int)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.provider.ContactsContract$CommonDataKinds$Relation: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="2" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.security.Provider$Service getService(java.lang.String,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void cursorShortToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndex(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean isNull(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="short getShort(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.method.TextKeyListener: void clear(android.text.Editable)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Editable" index="0" subsignature="void clear()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Selection: void setSelection(android.text.Spannable,int)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void removeSpan(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.speech.RecognizerIntent: android.content.Intent getVoiceDetailsIntent(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.pm.PackageManager getPackageManager()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.security.KeyChain: void choosePrivateKeyAlias(android.app.Activity,android.security.KeyChainAliasCallback,java.lang.String[],java.security.Principal[],java.lang.String,int,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="android.security.KeyChainAliasCallback" index="1" subsignature="void alias(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: void dumpSpans(java.lang.CharSequence,android.util.Printer,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.Collection checkedCollection(java.util.Collection,java.lang.Class)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean containsAll(java.util.Collection)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean removeAll(java.util.Collection)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="java.lang.Object[] toArray(java.lang.Object[])" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="java.lang.Object[] toArray()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean retainAll(java.util.Collection)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean contains(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean add(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean remove(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="void clear()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.app.WallpaperManager: android.app.WallpaperManager getInstance(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="java.lang.Object getSystemService(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.security.Provider)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="2" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="java.security.Provider" index="2" subsignature="java.security.Provider$Service getService(java.lang.String,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.util.Xml: void parse(java.lang.String,org.xml.sax.ContentHandler)&gt;"/>
    <targets>
      <direct declaringclass="org.xml.sax.ContentHandler" index="1" subsignature="void startDocument()" target-position="argument"/>
      <direct declaringclass="org.xml.sax.ContentHandler" index="1" subsignature="void setDocumentLocator(org.xml.sax.Locator)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.opengl.ETC1Util: void loadTexture(int,int,int,int,int,java.io.InputStream)&gt;"/>
    <targets>
      <direct declaringclass="java.io.InputStream" index="5" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.io.InputStream,boolean)&gt;"/>
    <targets>
      <direct declaringclass="java.io.InputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Selection: void setSelection(android.text.Spannable,int,int)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void setSpan(java.lang.Object,int,int,int)" target-position="argument"/>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void removeSpan(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.prefs.Preferences: void importPreferences(java.io.InputStream)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.AutoCloseable" index="0" subsignature="void close()" target-position="argument"/>
      <direct declaringclass="java.io.InputStream" index="0" subsignature="int read()" target-position="argument"/>
      <direct declaringclass="java.io.InputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)&gt;"/>
    <targets>
      <direct declaringclass="android.database.sqlite.SQLiteDatabase$CursorFactory" index="1" subsignature="android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" missingEdge="true">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.Collection synchronizedCollection(java.util.Collection)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean removeAll(java.util.Collection)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean addAll(java.util.Collection)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean containsAll(java.util.Collection)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="java.lang.Object[] toArray(java.lang.Object[])" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean retainAll(java.util.Collection)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean add(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean contains(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean remove(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="void clear()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.Security: int insertProviderAt(java.security.Provider,int)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="0" subsignature="java.lang.String getName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.lang.StringBuilder)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getPosition()" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="java.lang.String[] getColumnNames()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;javax.security.auth.Subject: java.lang.Object doAsPrivileged(javax.security.auth.Subject,java.security.PrivilegedAction,java.security.AccessControlContext)&gt;"/>
    <targets>
      <direct declaringclass="java.security.PrivilegedAction" index="1" subsignature="java.lang.Object run()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.security.Provider)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.security.Provider$Service getService(java.lang.String,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.SortedMap synchronizedSortedMap(java.util.SortedMap)&gt;"/>
    <targets>
      <direct declaringclass="java.util.SortedMap" index="0" subsignature="java.util.SortedMap tailMap(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.SortedMap" index="0" subsignature="java.util.Comparator comparator()" target-position="argument"/>
      <direct declaringclass="java.util.SortedMap" index="0" subsignature="java.lang.Object lastKey()" target-position="argument"/>
      <direct declaringclass="java.util.SortedMap" index="0" subsignature="java.lang.Object firstKey()" target-position="argument"/>
      <direct declaringclass="java.util.SortedMap" index="0" subsignature="java.util.SortedMap headMap(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.SortedMap" index="0" subsignature="java.util.SortedMap subMap(java.lang.Object,java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)&gt;"/>
    <targets>
      <direct declaringclass="java.util.concurrent.ThreadFactory" index="0" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.ClassLoader" index="2" subsignature="java.lang.Class loadClass(java.lang.String)" target-position="argument"/>
      <direct declaringclass="java.lang.ClassLoader" index="2" subsignature="java.io.InputStream getResourceAsStream(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.app.DownloadManager: java.lang.Long getRecommendedMaxBytesOverMobile(android.content.Context)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.Selection: boolean moveToRightEdge(android.text.Spannable,android.text.Layout)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="int getSpanStart(java.lang.Object)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.telephony.SmsMessage: int[] calculateLength(java.lang.CharSequence,boolean)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.text.Normalizer: java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])&gt;"/>
    <targets>
      <direct declaringclass="android.util.Property" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.ContentResolver getContentResolver()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.net.CookieHandler: void setDefault(java.net.CookieHandler)&gt;"/>
    <targets>
      <direct declaringclass="java.net.CookieManager" index="0" subsignature="java.util.Map get(java.net.URI,java.util.Map)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool(java.util.concurrent.ThreadFactory)&gt;"/>
    <targets>
      <direct declaringclass="java.util.concurrent.ThreadFactory" index="0" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)&gt;"/>
    <targets>
      <direct declaringclass="org.apache.http.params.HttpParams" index="0" subsignature="org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;javax.security.cert.X509Certificate: javax.security.cert.X509Certificate getInstance(java.io.InputStream)&gt;"/>
    <targets>
      <direct declaringclass="java.io.InputStream" index="0" subsignature="int read(byte[],int,int)" target-position="argument"/>
      <direct declaringclass="java.io.InputStream" index="0" subsignature="boolean markSupported()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)&gt;"/>
    <targets>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="java.security.Provider" index="1" subsignature="java.security.Provider$Service getService(java.lang.String,java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;org.apache.http.impl.auth.BasicScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,java.lang.String,boolean)&gt;"/>
    <targets>
      <direct declaringclass="org.apache.http.auth.Credentials" index="0" subsignature="java.lang.String getPassword()" target-position="argument"/>
      <direct declaringclass="org.apache.http.auth.Credentials" index="0" subsignature="java.security.Principal getUserPrincipal()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.content.ClipData: android.content.ClipData newIntent(java.lang.CharSequence,android.content.Intent)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="java.lang.String toString()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int,java.util.concurrent.ThreadFactory)&gt;"/>
    <targets>
      <direct declaringclass="java.util.concurrent.ThreadFactory" index="1" subsignature="java.lang.Thread newThread(java.lang.Runnable)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.TextUtils: java.lang.CharSequence commaEllipsize(java.lang.CharSequence,android.text.TextPaint,float,java.lang.String,java.lang.String)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.preference.PreferenceManager: void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.SharedPreferences getSharedPreferences(java.lang.String,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.net.URL: void setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory)&gt;"/>
    <targets>
      <direct declaringclass="java.net.URLStreamHandlerFactory" index="0" subsignature="java.net.URLStreamHandler createURLStreamHandler(java.lang.String)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)&gt;"/>
    <targets>
      <direct declaringclass="android.text.Spanned" index="0" subsignature="java.lang.Object[] getSpans(int,int,java.lang.Class)" target-position="argument"/>
      <direct declaringclass="android.text.Spannable" index="0" subsignature="void setSpan(java.lang.Object,int,int,int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.io.PrintStream)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getPosition()" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean moveToPosition(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean moveToNext()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)&gt;"/>
    <targets>
      <direct declaringclass="org.xmlpull.v1.XmlPullParser" index="0" subsignature="int next()" target-position="argument"/>
      <direct declaringclass="org.xmlpull.v1.XmlPullParser" index="0" subsignature="java.lang.String nextText()" target-position="argument"/>
      <direct declaringclass="org.xmlpull.v1.XmlPullParser" index="0" subsignature="java.lang.String getAttributeName(int)" target-position="argument"/>
      <direct declaringclass="org.xmlpull.v1.XmlPullParser" index="0" subsignature="java.lang.String getName()" target-position="argument"/>
      <direct declaringclass="org.xmlpull.v1.XmlPullParser" index="0" subsignature="java.lang.String getAttributeValue(int)" target-position="argument"/>
      <direct declaringclass="org.xmlpull.v1.XmlPullParser" index="0" subsignature="int getAttributeCount()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)&gt;"/>
    <targets>
      <direct declaringclass="android.content.Context" index="0" subsignature="android.content.res.Resources getResources()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.nio.channels.Channels: java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel)&gt;"/>
    <targets>
      <direct declaringclass="java.nio.channels.ReadableByteChannel" index="0" subsignature="int read(java.nio.ByteBuffer)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void dumpCursor(android.database.Cursor)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getPosition()" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean moveToPosition(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean moveToNext()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.style.CharacterStyle: android.text.style.CharacterStyle wrap(android.text.style.CharacterStyle)&gt;"/>
    <targets>
      <direct declaringclass="android.text.style.CharacterStyle" index="0" subsignature="android.text.style.CharacterStyle getUnderlying()" target-position="argument"/>
      <direct declaringclass="android.text.style.CharacterStyle" index="0" subsignature="void updateDrawState(android.text.TextPaint)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE" missingEdge="true">
    <source invoketype="static" signature="&lt;java.util.Collections: java.util.List checkedList(java.util.List,java.lang.Class)&gt;"/>
    <targets>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean containsAll(java.util.Collection)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean isEmpty()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="java.lang.Object[] toArray(java.lang.Object[])" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="java.lang.Object[] toArray()" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="int lastIndexOf(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean retainAll(java.util.Collection)" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object remove(int)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean contains(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int size()" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="void add(int,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean remove(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="int indexOf(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="java.util.ListIterator listIterator(int)" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object set(int,java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.lang.Iterable" index="0" subsignature="java.util.Iterator iterator()" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean removeAll(java.util.Collection)" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="java.lang.Object get(int)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="boolean add(java.lang.Object)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="int hashCode()" target-position="argument"/>
      <direct declaringclass="java.util.List" index="0" subsignature="java.util.List subList(int,int)" target-position="argument"/>
      <direct declaringclass="java.util.Collection" index="0" subsignature="void clear()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)&gt;"/>
    <targets>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="int getColumnIndex(java.lang.String)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="boolean isNull(int)" target-position="argument"/>
      <direct declaringclass="android.database.Cursor" index="0" subsignature="long getLong(int)" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;android.text.util.Rfc822Tokenizer: android.text.util.Rfc822Token[] tokenize(java.lang.CharSequence)&gt;"/>
    <targets>
      <direct declaringclass="java.lang.CharSequence" index="0" subsignature="int length()" target-position="argument"/>
    </targets>
  </edge>
  <edge type="GENERIC_FAKE">
    <source invoketype="static" signature="&lt;java.nio.file.Files: void delete(java.nio.file.Path)&gt;"/>
    <targets>
      <direct declaringclass="java.nio.file.Path" index="0" subsignature="java.nio.file.FileSystem getFileSystem()" target-position="argument"/>
    </targets>
  </edge>
</virtualedges>
