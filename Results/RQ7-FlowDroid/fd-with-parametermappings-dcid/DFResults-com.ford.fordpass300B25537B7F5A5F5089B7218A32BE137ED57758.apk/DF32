Source: $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>()
$i0 = virtualinvoke $r1.<java.io.InputStream: int read()>() in <org.bouncycastle.asn1.IndefiniteLengthInputStream: void <init>(java.io.InputStream,int)>
Sink: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i1) in <org.bouncycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>

<org.bouncycastle.asn1.IndefiniteLengthInputStream: void <init>(java.io.InputStream,int)>: $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>()
<org.bouncycastle.asn1.IndefiniteLengthInputStream: void <init>(java.io.InputStream,int)>: r0.<org.bouncycastle.asn1.IndefiniteLengthInputStream: int _b1> = $i0
<org.bouncycastle.asn1.IndefiniteLengthInputStream: void <init>(java.io.InputStream,int)>: return
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>: specialinvoke $r10.<org.bouncycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream,int)>($r9, $i2)
<org.bouncycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream,int)>: r0.<org.bouncycastle.asn1.ASN1StreamParser: java.io.InputStream _in> = $r1
<org.bouncycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream,int)>: return
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>: $r3 = virtualinvoke $r10.<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readIndef(int)>($i1)
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readIndef(int)>: specialinvoke $r7.<org.bouncycastle.asn1.BEROctetStringParser: void <init>(org.bouncycastle.asn1.ASN1StreamParser)>(r0)
<org.bouncycastle.asn1.BEROctetStringParser: void <init>(org.bouncycastle.asn1.ASN1StreamParser)>: r0.<org.bouncycastle.asn1.BEROctetStringParser: org.bouncycastle.asn1.ASN1StreamParser _parser> = $r1
<org.bouncycastle.asn1.BEROctetStringParser: void <init>(org.bouncycastle.asn1.ASN1StreamParser)>: return
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readIndef(int)>: return $r7
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>: return $r3
<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1OctetStringParser getNextParser()>: $r5 = (org.bouncycastle.asn1.ASN1OctetStringParser) $r4
<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1OctetStringParser getNextParser()>: return $r5
<org.bouncycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: $r4 = $r3
<org.bouncycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: $r2 = interfaceinvoke $r4.<org.bouncycastle.asn1.ASN1OctetStringParser: java.io.InputStream getOctetStream()>()
<org.bouncycastle.asn1.BEROctetStringParser: java.io.InputStream getOctetStream()>: $r1 = r0.<org.bouncycastle.asn1.BEROctetStringParser: org.bouncycastle.asn1.ASN1StreamParser _parser>
<org.bouncycastle.asn1.BEROctetStringParser: java.io.InputStream getOctetStream()>: specialinvoke $r2.<org.bouncycastle.asn1.ConstructedOctetStream: void <init>(org.bouncycastle.asn1.ASN1StreamParser)>($r1)
<org.bouncycastle.asn1.ConstructedOctetStream: void <init>(org.bouncycastle.asn1.ASN1StreamParser)>: r0.<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1StreamParser _parser> = $r1
<org.bouncycastle.asn1.ConstructedOctetStream: void <init>(org.bouncycastle.asn1.ASN1StreamParser)>: return
<org.bouncycastle.asn1.BEROctetStringParser: java.io.InputStream getOctetStream()>: return $r2
<org.bouncycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: r0.<org.bouncycastle.asn1.ConstructedOctetStream: java.io.InputStream _currentStream> = $r2
<org.bouncycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: $r3 = specialinvoke r0.<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1OctetStringParser getNextParser()>()
<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1OctetStringParser getNextParser()>: $r3 = r0.<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1StreamParser _parser>
<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1OctetStringParser getNextParser()>: $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>()
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>: specialinvoke r0.<org.bouncycastle.asn1.ASN1StreamParser: void set00Check(boolean)>(0)
<org.bouncycastle.asn1.ASN1StreamParser: void set00Check(boolean)>: return
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>: $r1 = r0.<org.bouncycastle.asn1.ASN1StreamParser: java.io.InputStream _in>
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>: $r1 = r0.<org.bouncycastle.asn1.ASN1StreamParser: java.io.InputStream _in>
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>: return null
<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1OctetStringParser getNextParser()>: $r3 = r0.<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1StreamParser _parser>
<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1OctetStringParser getNextParser()>: r0 := @this: org.bouncycastle.asn1.ConstructedOctetStream
<org.bouncycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: r0 := @this: org.bouncycastle.asn1.ConstructedOctetStream
<org.bouncycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>: $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
<org.bouncycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i1)
