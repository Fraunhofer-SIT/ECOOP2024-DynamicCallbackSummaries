    public final void a(java.lang.String, java.lang.String)
    {
        java.io.File $r3;
        java.lang.Exception $r7;
        a.a.a.c.h $r4;
        java.lang.StringBuilder $r6;
        java.lang.String $r1, $r2, $r5;
        a.a.a.f.b r0;
        boolean $z0;

        r0 := @this: a.a.a.f.b;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>($r1, "tag");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>($r2, "msg");

        $z0 = r0.<a.a.a.f.b: boolean a>;

        if $z0 == 0 goto label9;

     label1:
        $r4 = r0.<a.a.a.f.b: a.a.a.c.h e>;

        $r5 = virtualinvoke $r4.<a.a.a.c.h: java.lang.String c()>();

        $r3 = r0.<a.a.a.f.b: java.io.File b>;

     label2:
        $r6 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

     label4:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label5:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label6:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.io.FilesKt: void appendText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)>($r3, $r1, null, 2, null);

     label7:
        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

     label9:
        return;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label5 to label6 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }
