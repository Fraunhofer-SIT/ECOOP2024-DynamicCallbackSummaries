Source: $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>()
$i0 = virtualinvoke $r1.<java.io.InputStream: int read()>() in <org.bouncycastle.asn1.IndefiniteLengthInputStream: int read()>
Sink: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i1) in <org.bouncycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>

<org.bouncycastle.asn1.IndefiniteLengthInputStream: int read()>: $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>()
<org.bouncycastle.asn1.IndefiniteLengthInputStream: int read()>: r0.<org.bouncycastle.asn1.IndefiniteLengthInputStream: int _b2> = $i0
<org.bouncycastle.asn1.IndefiniteLengthInputStream: int read()>: return i2
<org.bouncycastle.asn1.IndefiniteLengthInputStream: void <init>(java.io.InputStream,int)>: r0 := @this: org.bouncycastle.asn1.IndefiniteLengthInputStream
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>: $r1 = r0.<org.bouncycastle.asn1.ASN1StreamParser: java.io.InputStream _in>
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>: r0 := @this: org.bouncycastle.asn1.ASN1StreamParser
<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1OctetStringParser getNextParser()>: $r3 = r0.<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1StreamParser _parser>
<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1OctetStringParser getNextParser()>: r0 := @this: org.bouncycastle.asn1.ConstructedOctetStream
<org.bouncycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: r0 := @this: org.bouncycastle.asn1.ConstructedOctetStream
<org.bouncycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>: $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
<org.bouncycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i1)
