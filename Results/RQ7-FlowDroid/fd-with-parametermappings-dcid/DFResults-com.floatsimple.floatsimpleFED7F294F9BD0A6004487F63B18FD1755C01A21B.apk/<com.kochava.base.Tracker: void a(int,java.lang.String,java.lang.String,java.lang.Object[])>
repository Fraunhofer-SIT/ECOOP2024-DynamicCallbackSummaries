    static transient void a(int, java.lang.String, java.lang.String, java.lang.Object[])
    {
        java.lang.Throwable $r1, $r10, $r14;
        java.lang.Object[] $r4;
        java.lang.String[] $r13;
        org.json.JSONObject $r8;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r3;
        com.kochava.base.Tracker $r5;
        boolean $z0;
        com.kochava.base.LogListener $r12;
        java.lang.Object $r0, $r7;
        java.lang.StringBuilder $r6, $r11;
        org.json.JSONArray $r9;

        $i0 := @parameter0: int;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.Object[];

        $r0 = <com.kochava.base.Tracker: java.lang.Object a>;

        entermonitor $r0;

        if $i0 == 0 goto label31;

     label01:
        $r5 = <com.kochava.base.Tracker: com.kochava.base.Tracker b>;

        $i1 = $r5.<com.kochava.base.Tracker: int e>;

        if $i1 == 0 goto label02;

        if $i1 >= $i0 goto label03;

     label02:
        $i1 = $r5.<com.kochava.base.Tracker: int g>;

        if $i1 == 0 goto label31;

        if $i1 < $i0 goto label31;

     label03:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KO/");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TR/");

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 3);

        $i1 = 0;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r2, 0, $i2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, 13);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r3, 0, $i2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        if $r4 == null goto label18;

        $i2 = 0;

     label04:
        $i3 = lengthof $r4;

        if $i2 >= $i3 goto label18;

        $r7 = $r4[$i2];

     label05:
        if $r7 == null goto label17;

        $r3 = null;

     label06:
        $r7 = $r4[$i2];

        $z0 = $r7 instanceof java.lang.String;

        if $z0 == 0 goto label09;

        $r7 = $r4[$i2];

        $r8 = staticinvoke <com.kochava.base.ab: org.json.JSONObject f(java.lang.Object)>($r7);

        $r7 = $r4[$i2];

        $r9 = staticinvoke <com.kochava.base.ab: org.json.JSONArray g(java.lang.Object)>($r7);

        if $r8 == null goto label07;

        $r3 = virtualinvoke $r8.<org.json.JSONObject: java.lang.String toString(int)>(2);

     label07:
        if $r3 != null goto label16;

        if $r9 == null goto label08;

        $r3 = virtualinvoke $r9.<org.json.JSONArray: java.lang.String toString(int)>(2);

     label08:
        if $r3 != null goto label16;

        $r7 = $r4[$i2];

        $r3 = (java.lang.String) $r7;

        goto label16;

     label09:
        $r7 = $r4[$i2];

        $z0 = $r7 instanceof org.json.JSONObject;

        if $z0 == 0 goto label10;

        $r7 = $r4[$i2];

        $r8 = (org.json.JSONObject) $r7;

        $r3 = virtualinvoke $r8.<org.json.JSONObject: java.lang.String toString(int)>(2);

        goto label16;

     label10:
        $r7 = $r4[$i2];

        $z0 = $r7 instanceof org.json.JSONArray;

        if $z0 == 0 goto label11;

        $r7 = $r4[$i2];

        $r9 = (org.json.JSONArray) $r7;

        $r3 = virtualinvoke $r9.<org.json.JSONArray: java.lang.String toString(int)>(2);

        goto label16;

     label11:
        $r7 = $r4[$i2];

        $z0 = $r7 instanceof java.lang.Throwable;

        if $z0 == 0 goto label12;

        $r7 = $r4[$i2];

        $r10 = (java.lang.Throwable) $r7;

        $r3 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r10);

        goto label16;

     label12:
        $r7 = $r4[$i2];

        $r3 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

     label13:
        goto label16;

     label14:
        $r10 := @caughtexception;

     label15:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to build message.\n");

        $r3 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r10);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        if $r3 == null goto label17;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i3 = lengthof $r4;

        $i3 = $i3 - 1;

        if $i2 >= $i3 goto label17;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label17:
        $i2 = $i2 + 1;

        goto label04;

     label18:
        $i2 = virtualinvoke $r6.<java.lang.StringBuilder: int length()>();

        if $i2 != 0 goto label19;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label19:
        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = <com.kochava.base.Tracker: com.kochava.base.Tracker b>;

        $i2 = $r5.<com.kochava.base.Tracker: int g>;

        if $i2 <= 0 goto label22;

        if $i0 > $i2 goto label22;

        $r12 = $r5.<com.kochava.base.Tracker: com.kochava.base.LogListener f>;

     label20:
        if $r12 == null goto label22;

     label21:
        interfaceinvoke $r12.<com.kochava.base.LogListener: void onLog(int,java.lang.String,java.lang.String)>($i0, $r2, $r3);

     label22:
        $r5 = <com.kochava.base.Tracker: com.kochava.base.Tracker b>;

        $i2 = $r5.<com.kochava.base.Tracker: int e>;

        if $i2 <= 0 goto label29;

        if $i0 > $i2 goto label29;

        $r13 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        $i2 = lengthof $r13;

     label23:
        if $i1 >= $i2 goto label29;

        $r3 = $r13[$i1];

        if $i0 == 1 goto label27;

        if $i0 == 2 goto label26;

        if $i0 == 3 goto label25;

        if $i0 == 4 goto label24;

        if $i0 != 5 goto label28;

        staticinvoke <com.fullstory.instrumentation.InstrumentInjector: int log_v(java.lang.String,java.lang.String)>($r2, $r3);

        goto label28;

     label24:
        staticinvoke <com.fullstory.instrumentation.InstrumentInjector: int log_d(java.lang.String,java.lang.String)>($r2, $r3);

        goto label28;

     label25:
        staticinvoke <com.fullstory.instrumentation.InstrumentInjector: int log_i(java.lang.String,java.lang.String)>($r2, $r3);

        goto label28;

     label26:
        staticinvoke <com.fullstory.instrumentation.InstrumentInjector: int log_w(java.lang.String,java.lang.String)>($r2, $r3);

        goto label28;

     label27:
        staticinvoke <com.fullstory.instrumentation.InstrumentInjector: int log_e(java.lang.String,java.lang.String)>($r2, $r3);

     label28:
        $i1 = $i1 + 1;

        goto label23;

     label29:
        exitmonitor $r0;

     label30:
        return;

     label31:
        exitmonitor $r0;

     label32:
        return;

     label33:
        $r14 := @caughtexception;

        exitmonitor $r0;

     label34:
        throw $r14;

     label35:
        $r1 := @caughtexception;

        goto label22;

        catch java.lang.Throwable from label01 to label05 with label33;
        catch java.lang.Throwable from label06 to label13 with label14;
        catch java.lang.Throwable from label15 to label20 with label33;
        catch java.lang.Throwable from label21 to label22 with label35;
        catch java.lang.Throwable from label22 to label30 with label33;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label33 to label34 with label33;
    }
