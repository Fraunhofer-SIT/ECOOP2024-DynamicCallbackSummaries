    private java.lang.String a(java.lang.Object)
    {
        java.io.IOException $r5;
        org.json.JSONObject $r2;
        int $i0, $i1;
        com.kochava.base.n r0;
        java.lang.Object $r1;
        java.lang.String $r3;
        org.json.JSONArray $r4;
        boolean $z0;

        r0 := @this: com.kochava.base.n;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.json.JSONObject;

        if $z0 == 0 goto label1;

        $r2 = (org.json.JSONObject) $r1;

        specialinvoke r0.<com.kochava.base.n: void b(org.json.JSONObject)>($r2);

        $r3 = staticinvoke <com.kochava.base.ab: java.lang.String a(org.json.JSONObject)>($r2);

        return $r3;

     label1:
        $z0 = $r1 instanceof org.json.JSONArray;

        if $z0 == 0 goto label4;

        $r4 = (org.json.JSONArray) $r1;

        $i0 = 0;

     label2:
        $i1 = virtualinvoke $r4.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label3;

        $r1 = virtualinvoke $r4.<org.json.JSONArray: java.lang.Object opt(int)>($i0);

        $r2 = staticinvoke <com.kochava.base.ab: org.json.JSONObject b(java.lang.Object,boolean)>($r1, 1);

        specialinvoke r0.<com.kochava.base.n: void b(org.json.JSONObject)>($r2);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $r3 = staticinvoke <com.kochava.base.ab: java.lang.String a(org.json.JSONArray)>($r4);

        return $r3;

     label4:
        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Invalid Payload Type");

        throw $r5;
    }
