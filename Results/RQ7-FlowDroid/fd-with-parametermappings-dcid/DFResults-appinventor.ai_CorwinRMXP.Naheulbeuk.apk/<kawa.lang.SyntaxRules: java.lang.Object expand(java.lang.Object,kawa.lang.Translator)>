    public java.lang.Object expand(java.lang.Object, kawa.lang.Translator)
    {
        kawa.lang.SyntaxRule r4;
        java.lang.Object[] r5;
        kawa.lang.Syntax $r6;
        gnu.expr.ErrorExp r9;
        kawa.lang.Translator $r2;
        kawa.lang.SyntaxRule[] $r8;
        int $i0, $i1;
        java.lang.String $r11;
        boolean $z0;
        gnu.expr.Expression $r13;
        kawa.lang.SyntaxRules r0;
        kawa.lang.SyntaxPattern r3;
        kawa.lang.TemplateScope $r12;
        java.lang.Object $r1;
        java.lang.StringBuilder $r10;
        kawa.lang.Macro r7;

        r0 := @this: kawa.lang.SyntaxRules;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kawa.lang.Translator;

        $i0 = r0.<kawa.lang.SyntaxRules: int maxVars>;

        r5 = newarray (java.lang.Object)[$i0];

        $r6 = virtualinvoke $r2.<kawa.lang.Translator: kawa.lang.Syntax getCurrentSyntax()>();

        r7 = (kawa.lang.Macro) $r6;

        $i0 = 0;

     label1:
        $r8 = r0.<kawa.lang.SyntaxRules: kawa.lang.SyntaxRule[] rules>;

        $i1 = lengthof $r8;

        if $i0 >= $i1 goto label4;

        $r8 = r0.<kawa.lang.SyntaxRules: kawa.lang.SyntaxRule[] rules>;

        r4 = $r8[$i0];

        if r4 != null goto label2;

        r9 = new gnu.expr.ErrorExp;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error defining ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<gnu.expr.ErrorExp: void <init>(java.lang.String)>($r11);

        return r9;

     label2:
        r3 = r4.<kawa.lang.SyntaxRule: kawa.lang.SyntaxPattern pattern>;

        $z0 = virtualinvoke r3.<kawa.lang.Pattern: boolean match(java.lang.Object,java.lang.Object[],int)>($r1, r5, 0);

        if $z0 == 0 goto label3;

        $r12 = staticinvoke <kawa.lang.TemplateScope: kawa.lang.TemplateScope make(kawa.lang.Translator)>($r2);

        $r1 = virtualinvoke r4.<kawa.lang.SyntaxRule: java.lang.Object execute(java.lang.Object[],kawa.lang.Translator,kawa.lang.TemplateScope)>(r5, $r2, $r12);

        return $r1;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no matching syntax-rule for ");

        r5 = r0.<kawa.lang.SyntaxRules: java.lang.Object[] literal_identifiers>;

        $r1 = r5[0];

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r2.<kawa.lang.Translator: gnu.expr.Expression syntaxError(java.lang.String)>($r11);

        return $r13;
    }
