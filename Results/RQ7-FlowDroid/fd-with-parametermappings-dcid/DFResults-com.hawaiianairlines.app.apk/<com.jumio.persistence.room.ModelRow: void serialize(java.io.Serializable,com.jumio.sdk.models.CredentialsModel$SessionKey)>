    public void serialize(java.io.Serializable, com.jumio.sdk.models.CredentialsModel$SessionKey) throws java.io.IOException
    {
        java.lang.Throwable $r11;
        byte[] $r10;
        java.io.ByteArrayOutputStream $r7;
        com.jumio.sdk.models.CredentialsModel$SessionKey $r2;
        java.io.IOException $r13;
        javax.crypto.Cipher $r4;
        java.lang.Exception $r12;
        java.io.Serializable $r1;
        javax.crypto.spec.IvParameterSpec $r6;
        com.jumio.persistence.room.ModelRow r0;
        java.io.ObjectOutputStream $r3, $r8;
        javax.crypto.SecretKey $r5;
        javax.crypto.CipherOutputStream $r9;

        r0 := @this: com.jumio.persistence.room.ModelRow;

        $r1 := @parameter0: java.io.Serializable;

        $r2 := @parameter1: com.jumio.sdk.models.CredentialsModel$SessionKey;

        $r3 = null;

     label01:
        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        $r5 = virtualinvoke $r2.<com.jumio.sdk.models.CredentialsModel$SessionKey: javax.crypto.SecretKey getKey()>();

        $r6 = virtualinvoke $r2.<com.jumio.sdk.models.CredentialsModel$SessionKey: javax.crypto.spec.IvParameterSpec getVector()>();

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r5, $r6);

     label02:
        $r7 = new java.io.ByteArrayOutputStream;

     label03:
        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

     label04:
        $r8 = new java.io.ObjectOutputStream;

        $r9 = new javax.crypto.CipherOutputStream;

     label05:
        specialinvoke $r9.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r7, $r4);

        specialinvoke $r8.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r9);

     label06:
        virtualinvoke $r8.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1);

        virtualinvoke $r8.<java.io.ObjectOutputStream: void flush()>();

        virtualinvoke $r8.<java.io.ObjectOutputStream: void close()>();

        $r10 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r0.<com.jumio.persistence.room.ModelRow: byte[] binaryData> = $r10;

     label07:
        staticinvoke <com.jumio.commons.utils.IOUtils: void closeQuietly(java.io.Closeable)>($r8);

        return;

     label08:
        $r11 := @caughtexception;

        $r3 = $r8;

        goto label13;

     label09:
        $r12 := @caughtexception;

        $r3 = $r8;

        goto label12;

     label10:
        $r11 := @caughtexception;

        goto label13;

     label11:
        $r12 := @caughtexception;

     label12:
        staticinvoke <com.jumio.commons.log.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("ModelRow", "error in serialize()", $r12);

        $r13 = new java.io.IOException;

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.Throwable)>($r12);

        throw $r13;

     label13:
        if $r3 == null goto label14;

        staticinvoke <com.jumio.commons.utils.IOUtils: void closeQuietly(java.io.Closeable)>($r3);

     label14:
        throw $r11;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Throwable from label01 to label06 with label10;
        catch java.lang.Exception from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label12 to label13 with label10;
    }
