    public static boolean b(java.io.File, java.lang.String)
    {
        java.lang.Throwable $r5;
        byte[] $r1;
        java.io.FileOutputStream $r0, $r4;
        java.lang.String $r3;
        java.io.File $r2;
        java.lang.Exception $r6;

        $r2 := @parameter0: java.io.File;

        $r3 := @parameter1: java.lang.String;

        $r4 = null;

     label01:
        $r0 = new java.io.FileOutputStream;

     label02:
        specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>($r2);

     label03:
        $r1 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r0.<java.io.FileOutputStream: void write(byte[])>($r1);

     label04:
        staticinvoke <pz.g: void d(java.lang.Class,java.io.Closeable)>(class "Lqz/b;", $r0);

        return 1;

     label05:
        $r5 := @caughtexception;

        $r4 = $r0;

        goto label11;

     label06:
        $r6 := @caughtexception;

        $r4 = $r0;

        goto label09;

     label07:
        $r5 := @caughtexception;

        goto label11;

     label08:
        $r6 := @caughtexception;

     label09:
        staticinvoke <rz.a: void b(java.lang.Class,int,java.lang.Throwable)>(class "Lqz/b;", 3, $r6);

     label10:
        staticinvoke <pz.g: void d(java.lang.Class,java.io.Closeable)>(class "Lqz/b;", $r4);

        return 0;

     label11:
        staticinvoke <pz.g: void d(java.lang.Class,java.io.Closeable)>(class "Lqz/b;", $r4);

        throw $r5;

        catch java.lang.Exception from label02 to label03 with label08;
        catch java.lang.Throwable from label01 to label03 with label07;
        catch java.lang.Exception from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label09 to label10 with label07;
    }
