Source: $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0)
$i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0) in <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
Sink: virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, i3) in <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()>

<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>: $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0)
<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>: $r1 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: byte[] buf>
<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>: throw $r4
<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()>: $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: byte[] buf>
<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()>: virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, i3)
