    public static java.io.File j(android.content.Context, java.lang.String, java.lang.String, java.lang.String)
    {
        java.net.HttpURLConnection $r9;
        byte[] $r16;
        javax.net.ssl.SSLContext $r10;
        java.io.BufferedInputStream $r14, $r31;
        java.net.URL $r27;
        java.util.Date $r29;
        boolean $z0;
        java.lang.Exception $r0, $r20, $r22;
        javax.net.ssl.SSLSocketFactory $r12;
        java.lang.StringBuilder $r5, $r25;
        java.lang.Throwable $r17, $r18, $r19, $r21, $r23, $r24;
        android.content.Context $r1;
        java.text.SimpleDateFormat $r28;
        java.net.URLConnection $r8;
        int $i0, $i1;
        java.lang.String $r2, $r3, $r4, $r7;
        javax.net.ssl.HttpsURLConnection $r11;
        java.io.FileOutputStream $r13, $r30;
        java.io.IOException $r32;
        java.io.File $r6, $r26;
        java.io.InputStream $r15;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

     label01:
        $r25 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r1.<android.content.Context: java.io.File getFilesDir()>();

        $r7 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, $r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r26 = new java.io.File;

     label04:
        specialinvoke $r26.<java.io.File: void <init>(java.lang.String)>($r7);

        virtualinvoke $r26.<java.io.File: boolean mkdirs()>();

     label05:
        $r25 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, $r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r27 = new java.net.URL;

     label08:
        $r25 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, $r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.net.URL: void <init>(java.lang.String)>($r3);

        $r8 = virtualinvoke $r27.<java.net.URL: java.net.URLConnection openConnection()>();

        $r9 = (java.net.HttpURLConnection) $r8;

        $r3 = staticinvoke <com.raonsecure.mvaccine.crypto.b: java.lang.String anyValidIdentifierName(java.lang.String)>("\u001f&\f");

        virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3);

        virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r9.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(3000);

     label10:
        $z0 = $r9 instanceof javax.net.ssl.HttpsURLConnection;

     label11:
        if $z0 == 0 goto label18;

     label12:
        $r3 = staticinvoke <com.raonsecure.mvaccine.crypto.xb: java.lang.String anyValidIdentifierName(java.lang.String)>("A?R>I?D4\u000b\"D?K#@3P\"@~F?H");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>($r3);

     label13:
        if $z0 == 0 goto label18;

     label14:
        $r3 = staticinvoke <com.raonsecure.mvaccine.crypto.b: java.lang.String anyValidIdentifierName(java.lang.String)>("\f/\u000b\u0015iMj");

        $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r3);

     label15:
        goto label17;

     label16:
        $r3 = staticinvoke <com.raonsecure.mvaccine.crypto.xb: java.lang.String anyValidIdentifierName(java.lang.String)>("q\u001cv&\u0014");

        $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r3);

     label17:
        virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(null, null, null);

        $r11 = (javax.net.ssl.HttpsURLConnection) $r9;

        $r12 = virtualinvoke $r10.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        virtualinvoke $r11.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r12);

     label18:
        $r3 = staticinvoke <com.raonsecure.mvaccine.crypto.b: java.lang.String anyValidIdentifierName(java.lang.String)>("\'9\u0017=");

        $r3 = virtualinvoke $r9.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r3);

     label19:
        $r28 = new java.text.SimpleDateFormat;

     label20:
        $r7 = staticinvoke <com.raonsecure.mvaccine.crypto.xb: java.lang.String anyValidIdentifierName(java.lang.String)>(")\\)\\\u001dh4A");

        specialinvoke $r28.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r7);

     label21:
        $r29 = new java.util.Date;

     label22:
        specialinvoke $r29.<java.util.Date: void <init>(java.lang.String)>($r3);

        $r3 = virtualinvoke $r28.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r29);

        staticinvoke <com.secureland.smartmedic.core.Util: void l(java.lang.String)>($r3);

     label23:
        $r26 = new java.io.File;

     label24:
        $r6 = $r26;

     label25:
        specialinvoke $r26.<java.io.File: void <init>(java.lang.String)>($r4);

     label26:
        $r30 = new java.io.FileOutputStream;

     label27:
        $r13 = $r30;

     label28:
        specialinvoke $r30.<java.io.FileOutputStream: void <init>(java.io.File)>($r26);

     label29:
        $r31 = new java.io.BufferedInputStream;

     label30:
        $r14 = $r31;

     label31:
        $r15 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r31.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r15);

     label32:
        $r16 = newarray (byte)[1024];

        $i0 = 0;

     label33:
        $i1 = virtualinvoke $r31.<java.io.BufferedInputStream: int read(byte[])>($r16);

     label34:
        if $i1 <= 0 goto label45;

     label35:
        virtualinvoke $r30.<java.io.FileOutputStream: void write(byte[],int,int)>($r16, 0, $i1);

        virtualinvoke $r30.<java.io.FileOutputStream: void flush()>();

     label36:
        $i0 = $i0 + $i1;

     label37:
        $z0 = <com.secureland.smartmedic.core.Constants: boolean anyValidIdentifierName>;

     label38:
        if $z0 == 0 goto label33;

     label39:
        $r3 = staticinvoke <com.raonsecure.mvaccine.crypto.b: java.lang.String anyValidIdentifierName(java.lang.String)>("\u0008\"\f");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>($r3);

     label40:
        if $z0 != 0 goto label43;

     label41:
        $r3 = staticinvoke <com.raonsecure.mvaccine.crypto.xb: java.lang.String anyValidIdentifierName(java.lang.String)>("`\u001eb");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>($r3);

     label42:
        if $z0 == 0 goto label33;

     label43:
        $i1 = virtualinvoke $r9.<java.net.HttpURLConnection: int getContentLength()>();

        staticinvoke <com.secureland.smartmedic.core.SmartMedicUpdaterImpl: void anyValidIdentifierName(java.lang.String,int,int)>("", $i0, $i1);

     label44:
        goto label33;

     label45:
        $z0 = <com.secureland.smartmedic.core.Constants: boolean debug>;

     label46:
        if $z0 == 0 goto label50;

     label47:
        $r2 = staticinvoke <com.raonsecure.mvaccine.crypto.b: java.lang.String anyValidIdentifierName(java.lang.String)>("\r\n4");

     label48:
        $r25 = new java.lang.StringBuilder;

     label49:
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <com.raonsecure.mvaccine.crypto.xb: java.lang.String anyValidIdentifierName(java.lang.String)>("W5V J>V5\u000b7@$v$D$P#i9K5\ry\u000b7@$v$D$P#f?A5\ry\u001f");

        $r5 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, $r3);

        $i1 = virtualinvoke $r9.<java.net.HttpURLConnection: int getResponseCode()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, $r3);

     label50:
        $i1 = virtualinvoke $r9.<java.net.HttpURLConnection: int getResponseCode()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        staticinvoke <com.secureland.smartmedic.core.Util: void h(java.lang.String)>($r2);

        virtualinvoke $r30.<java.io.FileOutputStream: void close()>();

        virtualinvoke $r31.<java.io.BufferedInputStream: void close()>();

        $i1 = virtualinvoke $r9.<java.net.HttpURLConnection: int getContentLength()>();

     label51:
        if $i0 != $i1 goto label57;

     label52:
        $i0 = virtualinvoke $r9.<java.net.HttpURLConnection: int getResponseCode()>();

     label53:
        if $i0 == 404 goto label57;

     label54:
        virtualinvoke $r30.<java.io.FileOutputStream: void close()>();

        virtualinvoke $r31.<java.io.BufferedInputStream: void close()>();

     label55:
        return $r6;

     label56:
        $r17 := @caughtexception;

        $r32 = (java.io.IOException) $r17;

        virtualinvoke $r32.<java.io.IOException: void printStackTrace()>();

        return null;

     label57:
        virtualinvoke $r30.<java.io.FileOutputStream: void close()>();

        virtualinvoke $r31.<java.io.BufferedInputStream: void close()>();

     label58:
        return null;

     label59:
        $r18 := @caughtexception;

        $r32 = (java.io.IOException) $r18;

        virtualinvoke $r32.<java.io.IOException: void printStackTrace()>();

        return null;

     label60:
        $r19 := @caughtexception;

        goto label63;

     label61:
        $r20 := @caughtexception;

        goto label65;

     label62:
        $r19 := @caughtexception;

        $r14 = null;

     label63:
        $r21 = $r19;

        goto label78;

     label64:
        $r20 := @caughtexception;

        $r14 = null;

     label65:
        $r22 = $r20;

        goto label68;

     label66:
        $r21 := @caughtexception;

        $r13 = null;

        $r14 = null;

        goto label78;

     label67:
        $r22 := @caughtexception;

        $r13 = null;

        $r14 = null;

     label68:
        virtualinvoke $r22.<java.lang.Exception: void printStackTrace()>();

     label69:
        if $r13 == null goto label73;

     label70:
        virtualinvoke $r13.<java.io.FileOutputStream: void close()>();

     label71:
        goto label73;

     label72:
        $r23 := @caughtexception;

        goto label76;

     label73:
        if $r14 == null goto label88;

     label74:
        virtualinvoke $r14.<java.io.BufferedInputStream: void close()>();

     label75:
        return null;

     label76:
        $r32 = (java.io.IOException) $r23;

        virtualinvoke $r32.<java.io.IOException: void printStackTrace()>();

        return null;

     label77:
        $r21 := @caughtexception;

     label78:
        if $r13 == null goto label82;

     label79:
        virtualinvoke $r13.<java.io.FileOutputStream: void close()>();

     label80:
        goto label82;

     label81:
        $r24 := @caughtexception;

        goto label85;

     label82:
        if $r14 == null goto label86;

     label83:
        virtualinvoke $r14.<java.io.BufferedInputStream: void close()>();

     label84:
        goto label86;

     label85:
        $r32 = (java.io.IOException) $r24;

        virtualinvoke $r32.<java.io.IOException: void printStackTrace()>();

        return null;

     label86:
        throw $r21;

     label87:
        $r0 := @caughtexception;

        goto label16;

     label88:
        return null;

        catch java.lang.Exception from label02 to label03 with label67;
        catch java.lang.Exception from label04 to label05 with label67;
        catch java.lang.Exception from label06 to label07 with label67;
        catch java.lang.Exception from label09 to label10 with label67;
        catch java.lang.Exception from label12 to label13 with label67;
        catch java.lang.Throwable from label01 to label02 with label66;
        catch java.lang.Throwable from label02 to label04 with label66;
        catch java.lang.Throwable from label04 to label06 with label66;
        catch java.lang.Throwable from label06 to label08 with label66;
        catch java.lang.Throwable from label08 to label09 with label66;
        catch java.lang.Throwable from label09 to label11 with label66;
        catch java.lang.Throwable from label12 to label13 with label66;
        catch java.lang.Exception from label14 to label15 with label87;
        catch java.lang.Throwable from label14 to label15 with label66;
        catch java.lang.Exception from label16 to label17 with label67;
        catch java.lang.Exception from label17 to label19 with label67;
        catch java.lang.Exception from label20 to label21 with label67;
        catch java.lang.Exception from label22 to label23 with label67;
        catch java.lang.Exception from label25 to label26 with label67;
        catch java.lang.Exception from label28 to label29 with label67;
        catch java.lang.Throwable from label16 to label17 with label66;
        catch java.lang.Throwable from label17 to label20 with label66;
        catch java.lang.Throwable from label20 to label22 with label66;
        catch java.lang.Throwable from label22 to label24 with label66;
        catch java.lang.Throwable from label25 to label27 with label66;
        catch java.lang.Throwable from label28 to label29 with label66;
        catch java.lang.Exception from label31 to label32 with label64;
        catch java.lang.Throwable from label29 to label30 with label62;
        catch java.lang.Throwable from label31 to label32 with label62;
        catch java.lang.Exception from label33 to label34 with label61;
        catch java.lang.Exception from label35 to label36 with label61;
        catch java.lang.Exception from label39 to label40 with label61;
        catch java.lang.Exception from label41 to label42 with label61;
        catch java.lang.Exception from label43 to label44 with label61;
        catch java.lang.Exception from label47 to label48 with label61;
        catch java.lang.Exception from label49 to label51 with label61;
        catch java.lang.Exception from label52 to label53 with label61;
        catch java.lang.Throwable from label33 to label34 with label60;
        catch java.lang.Throwable from label35 to label36 with label60;
        catch java.lang.Throwable from label37 to label38 with label60;
        catch java.lang.Throwable from label39 to label40 with label60;
        catch java.lang.Throwable from label41 to label42 with label60;
        catch java.lang.Throwable from label43 to label44 with label60;
        catch java.lang.Throwable from label45 to label46 with label60;
        catch java.lang.Throwable from label47 to label49 with label60;
        catch java.lang.Throwable from label49 to label51 with label60;
        catch java.lang.Throwable from label52 to label53 with label60;
        catch java.io.IOException from label54 to label55 with label56;
        catch java.io.IOException from label57 to label58 with label59;
        catch java.lang.Throwable from label68 to label69 with label77;
        catch java.io.IOException from label70 to label71 with label72;
        catch java.io.IOException from label74 to label75 with label72;
        catch java.io.IOException from label79 to label80 with label81;
        catch java.io.IOException from label83 to label84 with label81;
    }
