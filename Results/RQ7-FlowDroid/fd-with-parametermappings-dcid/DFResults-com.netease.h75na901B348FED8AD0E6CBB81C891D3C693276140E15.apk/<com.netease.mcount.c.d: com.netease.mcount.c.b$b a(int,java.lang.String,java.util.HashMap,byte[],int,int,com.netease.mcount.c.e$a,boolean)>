    protected com.netease.mcount.c.b$b a(int, java.lang.String, java.util.HashMap, byte[], int, int, com.netease.mcount.c.e$a, boolean)
    {
        java.net.HttpURLConnection $r11;
        byte[] $r5;
        com.netease.mcount.c.n $r7, $r29;
        java.lang.IllegalStateException $r36;
        com.netease.mcount.c.g $r9;
        com.netease.mcount.c.h $r10;
        java.lang.NullPointerException $r24;
        java.io.DataOutputStream $r31;
        java.util.Map $r18;
        boolean $z0;
        com.netease.mcount.c.b$b $r32;
        com.netease.mcount.c.b$a $r35;
        java.util.Set $r12;
        java.lang.Exception $r17;
        javax.net.ssl.SSLException $r39;
        java.lang.IllegalAccessError $r25;
        java.lang.StringBuilder $r30;
        java.io.UnsupportedEncodingException $r38;
        java.lang.Throwable $r2, $r22, $r23, $r26, $r27, $r28;
        java.util.HashMap $r4, $r33;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r3, $r8;
        com.netease.mcount.c.e$a $r6;
        java.io.OutputStream $r15;
        java.util.Map$Entry $r19;
        java.util.Iterator $r13;
        java.io.IOException $r21, $r34;
        java.net.ProtocolException $r37;
        java.lang.Object $r14, $r20;
        com.netease.mcount.c.d r0;
        java.io.InputStream $r16;

        r0 := @this: com.netease.mcount.c.d;

        $i0 := @parameter0: int;

        $r3 := @parameter1: java.lang.String;

        $r4 := @parameter2: java.util.HashMap;

        $r5 := @parameter3: byte[];

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $r6 := @parameter6: com.netease.mcount.c.e$a;

        $z0 := @parameter7: boolean;

        $r7 = null;

        if $r6 == null goto label01;

        $r29 = new com.netease.mcount.c.n;

        $r7 = $r29;

        $z0 = $r6.<com.netease.mcount.c.e$a: boolean c>;

        $r1 = $r6.<com.netease.mcount.c.e$a: java.lang.String a>;

        $r8 = $r6.<com.netease.mcount.c.e$a: java.lang.String b>;

        specialinvoke $r29.<com.netease.mcount.c.n: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String)>($z0, $r3, $r1, $r8);

        goto label02;

     label01:
        if $z0 == 0 goto label02;

        $r9 = staticinvoke <com.netease.mcount.c.g: com.netease.mcount.c.g a()>();

        $r10 = virtualinvoke $r9.<com.netease.mcount.c.g: com.netease.mcount.c.h a(java.lang.String)>($r3);

        if $r10 == null goto label02;

        $z0 = $r10.<com.netease.mcount.c.h: boolean b>;

        if $z0 == 0 goto label02;

        $r9 = staticinvoke <com.netease.mcount.c.g: com.netease.mcount.c.g a()>();

        $r7 = virtualinvoke $r9.<com.netease.mcount.c.g: com.netease.mcount.c.n b(java.lang.String)>($r3);

     label02:
        if $r7 == null goto label03;

        $r3 = $r7.<com.netease.mcount.c.n: java.lang.String b>;

     label03:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fetchUrlRaw: ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.netease.mcount.d.g: void a(java.lang.String)>($r1);

     label04:
        $r11 = specialinvoke r0.<com.netease.mcount.c.d: java.net.HttpURLConnection a(java.lang.String,int,int)>($r3, $i1, $i2);

     label05:
        if $r7 == null goto label07;

     label06:
        virtualinvoke $r7.<com.netease.mcount.c.n: void a(java.net.HttpURLConnection)>($r11);

     label07:
        if $i0 != 0 goto label10;

        $r3 = "GET";

     label08:
        virtualinvoke $r11.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3);

     label09:
        goto label11;

     label10:
        if 1 != $i0 goto label11;

        $r3 = "POST";

        goto label08;

     label11:
        if $r4 == null goto label23;

     label12:
        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();

     label13:
        if $i0 <= 0 goto label23;

     label14:
        $r12 = virtualinvoke $r4.<java.util.HashMap: java.util.Set keySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label15:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

     label16:
        if $z0 == 0 goto label23;

     label17:
        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

     label18:
        $r3 = (java.lang.String) $r14;

     label19:
        $r14 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

     label20:
        $r1 = (java.lang.String) $r14;

     label21:
        virtualinvoke $r11.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r3, $r1);

     label22:
        goto label15;

     label23:
        if $r5 == null goto label27;

     label24:
        virtualinvoke $r11.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

     label25:
        $r31 = new java.io.DataOutputStream;

     label26:
        $r15 = virtualinvoke $r11.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r31.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r15);

        virtualinvoke $r31.<java.io.DataOutputStream: void write(byte[])>($r5);

        virtualinvoke $r31.<java.io.DataOutputStream: void close()>();

     label27:
        $r32 = new com.netease.mcount.c.b$b;

     label28:
        specialinvoke $r32.<com.netease.mcount.c.b$b: void <init>()>();

        $i0 = virtualinvoke $r11.<java.net.HttpURLConnection: int getResponseCode()>();

     label29:
        $r32.<com.netease.mcount.c.b$b: int a> = $i0;

        $i0 = $r32.<com.netease.mcount.c.b$b: int a>;

     label30:
        if $i0 == -1 goto label55;

     label31:
        $r16 = virtualinvoke $r11.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label32:
        goto label34;

     label33:
        $r16 = virtualinvoke $r11.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

     label34:
        if $r16 == null goto label41;

     label35:
        $r5 = staticinvoke <com.netease.mcount.c.m: byte[] a(java.io.InputStream)>($r16);

     label36:
        $r32.<com.netease.mcount.c.b$b: byte[] b> = $r5;

     label37:
        virtualinvoke $r16.<java.io.InputStream: void close()>();

     label38:
        goto label41;

     label39:
        $r17 := @caughtexception;

     label40:
        staticinvoke <com.netease.mcount.d.g: void a(java.lang.Throwable)>($r17);

     label41:
        $r33 = new java.util.HashMap;

     label42:
        specialinvoke $r33.<java.util.HashMap: void <init>()>();

     label43:
        $r32.<com.netease.mcount.c.b$b: java.util.HashMap c> = $r33;

     label44:
        $r18 = virtualinvoke $r11.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        $r12 = interfaceinvoke $r18.<java.util.Map: java.util.Set entrySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label45:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

     label46:
        if $z0 == 0 goto label54;

     label47:
        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

     label48:
        $r19 = (java.util.Map$Entry) $r14;

     label49:
        $r4 = $r32.<com.netease.mcount.c.b$b: java.util.HashMap c>;

     label50:
        $r14 = interfaceinvoke $r19.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r20 = interfaceinvoke $r19.<java.util.Map$Entry: java.lang.Object getKey()>();

     label51:
        $r3 = (java.lang.String) $r20;

     label52:
        $r3 = virtualinvoke $r11.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r3);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r3);

     label53:
        goto label45;

     label54:
        return $r32;

     label55:
        $r34 = new java.io.IOException;

     label56:
        specialinvoke $r34.<java.io.IOException: void <init>(java.lang.String)>("Could not retrieve response code from HttpUrlConnection.");

     label57:
        throw $r34;

     label58:
        $r22 := @caughtexception;

        $r35 = new com.netease.mcount.c.b$a;

        $r36 = (java.lang.IllegalStateException) $r22;

        $r3 = virtualinvoke $r36.<java.lang.IllegalStateException: java.lang.String getMessage()>();

        specialinvoke $r35.<com.netease.mcount.c.b$a: void <init>(int,java.lang.String)>(2, $r3);

        throw $r35;

     label59:
        $r23 := @caughtexception;

        $r35 = new com.netease.mcount.c.b$a;

        $r21 = (java.io.IOException) $r23;

        $r3 = virtualinvoke $r21.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r35.<com.netease.mcount.c.b$a: void <init>(int,java.lang.String)>(3, $r3);

        throw $r35;

     label60:
        $r24 := @caughtexception;

        $r35 = new com.netease.mcount.c.b$a;

        $r3 = virtualinvoke $r24.<java.lang.NullPointerException: java.lang.String getMessage()>();

        specialinvoke $r35.<com.netease.mcount.c.b$a: void <init>(int,java.lang.String)>(9, $r3);

        throw $r35;

     label61:
        $r25 := @caughtexception;

        $r35 = new com.netease.mcount.c.b$a;

        $r3 = virtualinvoke $r25.<java.lang.IllegalAccessError: java.lang.String getMessage()>();

        specialinvoke $r35.<com.netease.mcount.c.b$a: void <init>(int,java.lang.String)>(3, $r3);

        throw $r35;

     label62:
        $r26 := @caughtexception;

        $r35 = new com.netease.mcount.c.b$a;

        $r37 = (java.net.ProtocolException) $r26;

        $r3 = virtualinvoke $r37.<java.net.ProtocolException: java.lang.String getMessage()>();

        specialinvoke $r35.<com.netease.mcount.c.b$a: void <init>(int,java.lang.String)>(4, $r3);

        throw $r35;

     label63:
        $r27 := @caughtexception;

        $r35 = new com.netease.mcount.c.b$a;

        $r38 = (java.io.UnsupportedEncodingException) $r27;

        $r3 = virtualinvoke $r38.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        specialinvoke $r35.<com.netease.mcount.c.b$a: void <init>(int,java.lang.String)>(1, $r3);

        throw $r35;

     label64:
        $r28 := @caughtexception;

        $r35 = new com.netease.mcount.c.b$a;

        $r39 = (javax.net.ssl.SSLException) $r28;

        $r3 = virtualinvoke $r39.<javax.net.ssl.SSLException: java.lang.String getMessage()>();

        specialinvoke $r35.<com.netease.mcount.c.b$a: void <init>(int,java.lang.String)>(6, $r3);

        throw $r35;

     label65:
        $r2 := @caughtexception;

        goto label33;

        catch javax.net.ssl.SSLException from label04 to label05 with label64;
        catch javax.net.ssl.SSLException from label06 to label07 with label64;
        catch javax.net.ssl.SSLException from label08 to label09 with label64;
        catch javax.net.ssl.SSLException from label12 to label13 with label64;
        catch javax.net.ssl.SSLException from label14 to label16 with label64;
        catch javax.net.ssl.SSLException from label17 to label18 with label64;
        catch javax.net.ssl.SSLException from label19 to label20 with label64;
        catch javax.net.ssl.SSLException from label21 to label22 with label64;
        catch javax.net.ssl.SSLException from label24 to label25 with label64;
        catch javax.net.ssl.SSLException from label26 to label27 with label64;
        catch javax.net.ssl.SSLException from label28 to label29 with label64;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label63;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label63;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label63;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label63;
        catch java.io.UnsupportedEncodingException from label14 to label16 with label63;
        catch java.io.UnsupportedEncodingException from label17 to label18 with label63;
        catch java.io.UnsupportedEncodingException from label19 to label20 with label63;
        catch java.io.UnsupportedEncodingException from label21 to label22 with label63;
        catch java.io.UnsupportedEncodingException from label24 to label25 with label63;
        catch java.io.UnsupportedEncodingException from label26 to label27 with label63;
        catch java.io.UnsupportedEncodingException from label28 to label29 with label63;
        catch java.net.ProtocolException from label04 to label05 with label62;
        catch java.net.ProtocolException from label06 to label07 with label62;
        catch java.net.ProtocolException from label08 to label09 with label62;
        catch java.net.ProtocolException from label12 to label13 with label62;
        catch java.net.ProtocolException from label14 to label16 with label62;
        catch java.net.ProtocolException from label17 to label18 with label62;
        catch java.net.ProtocolException from label19 to label20 with label62;
        catch java.net.ProtocolException from label21 to label22 with label62;
        catch java.net.ProtocolException from label24 to label25 with label62;
        catch java.net.ProtocolException from label26 to label27 with label62;
        catch java.net.ProtocolException from label28 to label29 with label62;
        catch java.lang.IllegalAccessError from label04 to label05 with label61;
        catch java.lang.IllegalAccessError from label06 to label07 with label61;
        catch java.lang.IllegalAccessError from label08 to label09 with label61;
        catch java.lang.IllegalAccessError from label12 to label13 with label61;
        catch java.lang.IllegalAccessError from label14 to label16 with label61;
        catch java.lang.IllegalAccessError from label17 to label22 with label61;
        catch java.lang.IllegalAccessError from label24 to label26 with label61;
        catch java.lang.IllegalAccessError from label26 to label28 with label61;
        catch java.lang.IllegalAccessError from label28 to label30 with label61;
        catch java.lang.NullPointerException from label04 to label05 with label60;
        catch java.lang.NullPointerException from label06 to label07 with label60;
        catch java.lang.NullPointerException from label08 to label09 with label60;
        catch java.lang.NullPointerException from label12 to label13 with label60;
        catch java.lang.NullPointerException from label14 to label16 with label60;
        catch java.lang.NullPointerException from label17 to label18 with label60;
        catch java.lang.NullPointerException from label19 to label20 with label60;
        catch java.lang.NullPointerException from label21 to label22 with label60;
        catch java.lang.NullPointerException from label24 to label25 with label60;
        catch java.lang.NullPointerException from label26 to label27 with label60;
        catch java.lang.NullPointerException from label28 to label30 with label60;
        catch java.io.IOException from label04 to label05 with label59;
        catch java.io.IOException from label06 to label07 with label59;
        catch java.io.IOException from label08 to label09 with label59;
        catch java.io.IOException from label12 to label13 with label59;
        catch java.io.IOException from label14 to label16 with label59;
        catch java.io.IOException from label17 to label18 with label59;
        catch java.io.IOException from label19 to label20 with label59;
        catch java.io.IOException from label21 to label22 with label59;
        catch java.io.IOException from label24 to label25 with label59;
        catch java.io.IOException from label26 to label27 with label59;
        catch java.io.IOException from label28 to label29 with label59;
        catch java.lang.IllegalStateException from label04 to label05 with label58;
        catch java.lang.IllegalStateException from label06 to label07 with label58;
        catch java.lang.IllegalStateException from label08 to label09 with label58;
        catch java.lang.IllegalStateException from label12 to label13 with label58;
        catch java.lang.IllegalStateException from label14 to label16 with label58;
        catch java.lang.IllegalStateException from label17 to label18 with label58;
        catch java.lang.IllegalStateException from label19 to label20 with label58;
        catch java.lang.IllegalStateException from label21 to label22 with label58;
        catch java.lang.IllegalStateException from label24 to label25 with label58;
        catch java.lang.IllegalStateException from label26 to label27 with label58;
        catch java.lang.IllegalStateException from label28 to label29 with label58;
        catch java.io.IOException from label31 to label32 with label65;
        catch java.lang.IllegalAccessError from label31 to label32 with label61;
        catch java.lang.NullPointerException from label31 to label32 with label60;
        catch java.lang.IllegalStateException from label31 to label32 with label58;
        catch javax.net.ssl.SSLException from label33 to label34 with label64;
        catch javax.net.ssl.SSLException from label35 to label36 with label64;
        catch java.io.UnsupportedEncodingException from label33 to label34 with label63;
        catch java.io.UnsupportedEncodingException from label35 to label36 with label63;
        catch java.net.ProtocolException from label33 to label34 with label62;
        catch java.net.ProtocolException from label35 to label36 with label62;
        catch java.lang.IllegalAccessError from label33 to label34 with label61;
        catch java.lang.IllegalAccessError from label35 to label37 with label61;
        catch java.lang.NullPointerException from label33 to label34 with label60;
        catch java.lang.NullPointerException from label35 to label37 with label60;
        catch java.io.IOException from label33 to label34 with label59;
        catch java.io.IOException from label35 to label36 with label59;
        catch java.lang.IllegalStateException from label33 to label34 with label58;
        catch java.lang.IllegalStateException from label35 to label36 with label58;
        catch java.lang.Exception from label37 to label38 with label39;
        catch java.lang.IllegalAccessError from label37 to label38 with label61;
        catch javax.net.ssl.SSLException from label40 to label41 with label64;
        catch javax.net.ssl.SSLException from label42 to label43 with label64;
        catch javax.net.ssl.SSLException from label44 to label46 with label64;
        catch javax.net.ssl.SSLException from label47 to label48 with label64;
        catch javax.net.ssl.SSLException from label50 to label51 with label64;
        catch javax.net.ssl.SSLException from label52 to label53 with label64;
        catch javax.net.ssl.SSLException from label56 to label58 with label64;
        catch java.io.UnsupportedEncodingException from label40 to label41 with label63;
        catch java.io.UnsupportedEncodingException from label42 to label43 with label63;
        catch java.io.UnsupportedEncodingException from label44 to label46 with label63;
        catch java.io.UnsupportedEncodingException from label47 to label48 with label63;
        catch java.io.UnsupportedEncodingException from label50 to label51 with label63;
        catch java.io.UnsupportedEncodingException from label52 to label53 with label63;
        catch java.io.UnsupportedEncodingException from label56 to label58 with label63;
        catch java.net.ProtocolException from label40 to label41 with label62;
        catch java.net.ProtocolException from label42 to label43 with label62;
        catch java.net.ProtocolException from label44 to label46 with label62;
        catch java.net.ProtocolException from label47 to label48 with label62;
        catch java.net.ProtocolException from label50 to label51 with label62;
        catch java.net.ProtocolException from label52 to label53 with label62;
        catch java.net.ProtocolException from label56 to label58 with label62;
        catch java.lang.IllegalAccessError from label40 to label42 with label61;
        catch java.lang.IllegalAccessError from label42 to label46 with label61;
        catch java.lang.IllegalAccessError from label47 to label53 with label61;
        catch java.lang.IllegalAccessError from label55 to label56 with label61;
        catch java.lang.IllegalAccessError from label56 to label57 with label61;
        catch java.lang.NullPointerException from label40 to label41 with label60;
        catch java.lang.NullPointerException from label42 to label46 with label60;
        catch java.lang.NullPointerException from label47 to label48 with label60;
        catch java.lang.NullPointerException from label49 to label51 with label60;
        catch java.lang.NullPointerException from label52 to label53 with label60;
        catch java.lang.NullPointerException from label56 to label58 with label60;
        catch java.io.IOException from label40 to label41 with label59;
        catch java.io.IOException from label42 to label43 with label59;
        catch java.io.IOException from label44 to label46 with label59;
        catch java.io.IOException from label47 to label48 with label59;
        catch java.io.IOException from label50 to label51 with label59;
        catch java.io.IOException from label52 to label53 with label59;
        catch java.io.IOException from label56 to label58 with label59;
        catch java.lang.IllegalStateException from label40 to label41 with label58;
        catch java.lang.IllegalStateException from label42 to label43 with label58;
        catch java.lang.IllegalStateException from label44 to label46 with label58;
        catch java.lang.IllegalStateException from label47 to label48 with label58;
        catch java.lang.IllegalStateException from label50 to label51 with label58;
        catch java.lang.IllegalStateException from label52 to label53 with label58;
        catch java.lang.IllegalStateException from label56 to label57 with label58;
    }
