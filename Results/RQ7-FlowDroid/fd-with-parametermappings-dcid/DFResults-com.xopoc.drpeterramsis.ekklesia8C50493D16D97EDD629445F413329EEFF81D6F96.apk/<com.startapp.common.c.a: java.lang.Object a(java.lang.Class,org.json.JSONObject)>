    private java.lang.Object a(java.lang.Class, org.json.JSONObject)
    {
        com.startapp.common.c.c $r5;
        java.lang.Float $r42;
        com.startapp.common.c.a r0;
        java.lang.Integer $r40;
        com.startapp.common.c.e $r21;
        com.startapp.common.c.d $r8;
        org.json.JSONException $r27, $r31;
        org.json.JSONObject $r2, $r3;
        java.lang.Enum $r37;
        java.lang.Long $r43;
        java.util.Map $r33;
        boolean $z0, $z1, $z2;
        java.util.Set $r36;
        java.lang.Exception $r26, $r30, $r45;
        java.util.List $r35;
        java.lang.'annotation'.Annotation $r7;
        float $f0;
        java.lang.StringBuilder $r24;
        java.lang.Throwable $r46;
        java.lang.Object[] $r11;
        java.lang.Double $r44;
        long $l3;
        java.lang.'annotation'.Annotation[] $r19;
        java.lang.reflect.Constructor $r10;
        java.lang.reflect.Constructor[] $r9;
        int $i0, $i1, $i2;
        java.lang.String $r4, $r22, $r23;
        java.lang.Number $r41;
        double $d0;
        java.util.Iterator $r32;
        java.lang.Class[] $r28;
        java.lang.reflect.Field $r15;
        java.lang.reflect.Field[] $r12, $r13, $r14;
        java.lang.Class $r1, $r16, $r17, $r18, $r20;
        java.lang.Object $r6, $r25, $r38, $r39;
        java.lang.ClassNotFoundException $r29;
        org.json.JSONArray $r34;

        r0 := @this: com.startapp.common.c.a;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: org.json.JSONObject;

        $r3 = $r2;

        $r4 = r0.<com.startapp.common.c.a: java.lang.String b>;

        if $r4 != null goto label001;

        $r5 = new com.startapp.common.c.c;

        specialinvoke $r5.<com.startapp.common.c.c: void <init>(java.lang.String)>("Can\'t read object, the input is null.");

        throw $r5;

     label001:
        $r4 = r0.<com.startapp.common.c.a: java.lang.String b>;

        if $r4 != null goto label003;

     label002:
        $r4 = staticinvoke <com.startapp.common.c.a: java.lang.String a()>();

        r0.<com.startapp.common.c.a: java.lang.String b> = $r4;

     label003:
        if $r2 != null goto label006;

        $r2 = new org.json.JSONObject;

        $r4 = r0.<com.startapp.common.c.a: java.lang.String b>;

     label004:
        specialinvoke $r2.<org.json.JSONObject: void <init>(java.lang.String)>($r4);

     label005:
        $r3 = $r2;

     label006:
        $r6 = null;

     label007:
        $r7 = virtualinvoke $r1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/startapp/common/c/d;");

        $r8 = (com.startapp.common.c.d) $r7;

     label008:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 9 goto label039;

     label009:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/net/HttpCookie;");

     label010:
        if $z0 == 0 goto label039;

     label011:
        $r9 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>();

        $r10 = $r9[0];

        virtualinvoke $r10.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

     label012:
        $r11 = newarray (java.lang.Object)[2];

     label013:
        $r11[0] = "name";

        $r11[1] = "value";

        $r6 = virtualinvoke $r10.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r11);

     label014:
        $r12 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $r13 = $r12;

        if $r8 == null goto label015;

        $z0 = interfaceinvoke $r8.<com.startapp.common.c.d: boolean c()>();

        if $z0 == 0 goto label015;

        $i0 = lengthof $r12;

        $r1 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r13 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $i1 = lengthof $r13;

        $i2 = $i0 + $i1;

        $r14 = newarray (java.lang.reflect.Field)[$i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, $r14, 0, $i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, $r14, $i0, $i1);

        $r13 = $r14;

     label015:
        $r12 = $r13;

        $i0 = lengthof $r13;

        $i1 = 0;

     label016:
        if $i1 >= $i0 goto label162;

        $r15 = $r12[$i1];

        $i2 = virtualinvoke $r15.<java.lang.reflect.Field: int getModifiers()>();

        $z1 = 0;

        $z0 = 0;

        $r1 = null;

        $r16 = null;

        $r17 = null;

        $r18 = null;

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i2);

        if $z2 != 0 goto label036;

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isTransient(int)>($i2);

        if $z2 != 0 goto label036;

        $r4 = staticinvoke <com.b.a.a.a.b: java.lang.String a(java.lang.reflect.Field)>($r15);

     label017:
        $z2 = virtualinvoke $r3.<org.json.JSONObject: boolean has(java.lang.String)>($r4);

     label018:
        if $z2 == 0 goto label036;

     label019:
        virtualinvoke $r15.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r19 = virtualinvoke $r15.<java.lang.reflect.Field: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>();

     label020:
        $i2 = lengthof $r19;

     label021:
        if $i2 <= 0 goto label031;

     label022:
        $r19 = virtualinvoke $r15.<java.lang.reflect.Field: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>();

     label023:
        $r7 = $r19[0];

     label024:
        $r20 = interfaceinvoke $r7.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $z2 = virtualinvoke $r20.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lcom/startapp/common/c/e;");

     label025:
        if $z2 == 0 goto label031;

        $z0 = 1;

     label026:
        $r21 = (com.startapp.common.c.e) $r7;

        $r1 = interfaceinvoke $r21.<com.startapp.common.c.e: java.lang.Class b()>();

     label027:
        $r16 = interfaceinvoke $r21.<com.startapp.common.c.e: java.lang.Class d()>();

     label028:
        $r17 = interfaceinvoke $r21.<com.startapp.common.c.e: java.lang.Class c()>();

     label029:
        $z1 = interfaceinvoke $r21.<com.startapp.common.c.e: boolean a()>();

     label030:
        $r18 = interfaceinvoke $r21.<com.startapp.common.c.e: java.lang.Class e()>();

     label031:
        $r20 = virtualinvoke $r15.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r7 = virtualinvoke $r20.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/startapp/common/c/d;");

     label032:
        if $r7 == null goto label063;

     label033:
        $r1 = virtualinvoke $r15.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r7 = virtualinvoke $r1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/startapp/common/c/d;");

        $r8 = (com.startapp.common.c.d) $r7;

        $r2 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>($r4);

        $r22 = interfaceinvoke $r8.<com.startapp.common.c.d: java.lang.String a()>();

        $r22 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r22);

        $r23 = interfaceinvoke $r8.<com.startapp.common.c.d: java.lang.String b()>();

     label034:
        $r24 = new java.lang.StringBuilder;

     label035:
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r22);

        $r2 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>($r4);

        $r25 = specialinvoke r0.<com.startapp.common.c.a: java.lang.Object a(java.lang.Class,org.json.JSONObject)>($r1, $r2);

        virtualinvoke $r15.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r6, $r25);

     label036:
        $i1 = $i1 + 1;

        goto label016;

     label037:
        $r26 := @caughtexception;

        $r5 = new com.startapp.common.c.c;

        specialinvoke $r5.<com.startapp.common.c.c: void <init>(java.lang.String,java.lang.Throwable)>("Can\'t read input stream.", $r26);

        throw $r5;

     label038:
        $r27 := @caughtexception;

        $r5 = new com.startapp.common.c.c;

        specialinvoke $r5.<com.startapp.common.c.c: void <init>(java.lang.String,java.lang.Throwable)>("Can\'t deserialize the object. Failed to create JSON object.", $r27);

        throw $r5;

     label039:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isPrimitive()>();

     label040:
        if $z0 == 0 goto label043;

     label041:
        $r6 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

     label042:
        return $r6;

     label043:
        $r7 = virtualinvoke $r1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/startapp/common/c/d;");

     label044:
        if $r7 == null goto label047;

     label045:
        $z0 = interfaceinvoke $r8.<com.startapp.common.c.d: boolean c()>();

     label046:
        if $z0 == 0 goto label052;

     label047:
        $r28 = newarray (java.lang.Class)[0];

     label048:
        $r10 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r28);

        virtualinvoke $r10.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

     label049:
        $r11 = newarray (java.lang.Object)[0];

     label050:
        $r6 = virtualinvoke $r10.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r11);

     label051:
        goto label014;

     label052:
        $z0 = interfaceinvoke $r8.<com.startapp.common.c.d: boolean c()>();

     label053:
        if $z0 != 0 goto label014;

     label054:
        $r4 = interfaceinvoke $r8.<com.startapp.common.c.d: java.lang.String a()>();

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r4);

        $r22 = interfaceinvoke $r8.<com.startapp.common.c.d: java.lang.String b()>();

     label055:
        $r24 = new java.lang.StringBuilder;

     label056:
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r4);

        $r6 = specialinvoke r0.<com.startapp.common.c.a: java.lang.Object a(java.lang.Class,org.json.JSONObject)>($r1, $r3);

     label057:
        return $r6;

     label058:
        $r29 := @caughtexception;

        $r5 = new com.startapp.common.c.c;

     label059:
        specialinvoke $r5.<com.startapp.common.c.c: void <init>(java.lang.String,java.lang.Throwable)>("Problem instantiating object class ", $r29);

        throw $r5;

     label060:
        $r30 := @caughtexception;

        $r5 = new com.startapp.common.c.c;

        specialinvoke $r5.<com.startapp.common.c.c: void <init>(java.lang.String,java.lang.Throwable)>("Can\'t deserialize the object. Failed to instantiate object.", $r30);

        throw $r5;

     label061:
        $r31 := @caughtexception;

        $r5 = new com.startapp.common.c.c;

     label062:
        specialinvoke $r5.<com.startapp.common.c.c: void <init>(java.lang.String,java.lang.Throwable)>("Problem instantiating object class ", $r31);

        throw $r5;

     label063:
        if $z1 == 0 goto label066;

     label064:
        $r1 = virtualinvoke $r15.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r2 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>($r4);

        $r25 = specialinvoke r0.<com.startapp.common.c.a: java.lang.Object a(java.lang.Class,org.json.JSONObject)>($r1, $r2);

        virtualinvoke $r15.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r6, $r25);

     label065:
        goto label036;

     label066:
        if $z0 == 0 goto label087;

        $r20 = class "Ljava/util/Map;";

     label067:
        $z0 = virtualinvoke $r20.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

     label068:
        if $z0 != 0 goto label071;

        $r20 = class "Ljava/util/Collection;";

     label069:
        $z0 = virtualinvoke $r20.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

     label070:
        if $z0 == 0 goto label087;

     label071:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/util/HashMap;");

     label072:
        if $z0 == 0 goto label075;

     label073:
        $r2 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>($r4);

        $r32 = virtualinvoke $r2.<org.json.JSONObject: java.util.Iterator keys()>();

        $r33 = specialinvoke r0.<com.startapp.common.c.a: java.util.Map a(java.lang.Class,java.lang.Class,java.lang.Class,org.json.JSONObject,java.util.Iterator)>($r16, $r17, $r18, $r2, $r32);

        virtualinvoke $r15.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r6, $r33);

     label074:
        goto label036;

     label075:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/util/ArrayList;");

     label076:
        if $z0 == 0 goto label079;

     label077:
        $r34 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>($r4);

        $r35 = specialinvoke r0.<com.startapp.common.c.a: java.util.List c(java.lang.Class,org.json.JSONArray)>($r17, $r34);

        virtualinvoke $r15.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r6, $r35);

     label078:
        goto label036;

     label079:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/util/HashSet;");

     label080:
        if $z0 == 0 goto label083;

     label081:
        $r34 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>($r4);

        $r36 = specialinvoke r0.<com.startapp.common.c.a: java.util.Set a(java.lang.Class,org.json.JSONArray)>($r17, $r34);

        virtualinvoke $r15.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r6, $r36);

     label082:
        goto label036;

     label083:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/util/EnumSet;");

     label084:
        if $z0 == 0 goto label036;

     label085:
        $r34 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>($r4);

        $r36 = staticinvoke <com.startapp.common.c.a: java.util.Set b(java.lang.Class,org.json.JSONArray)>($r17, $r34);

        virtualinvoke $r15.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r6, $r36);

     label086:
        goto label036;

     label087:
        $r16 = virtualinvoke $r15.<java.lang.reflect.Field: java.lang.Class getType()>();

        $z0 = virtualinvoke $r16.<java.lang.Class: boolean isEnum()>();

     label088:
        if $z0 == 0 goto label091;

     label089:
        $r25 = virtualinvoke $r3.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r4);

        $r22 = (java.lang.String) $r25;

        $r37 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>($r1, $r22);

        virtualinvoke $r15.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r6, $r37);

     label090:
        goto label036;

     label091:
        $r16 = virtualinvoke $r15.<java.lang.reflect.Field: java.lang.Class getType()>();

        $z0 = virtualinvoke $r16.<java.lang.Class: boolean isPrimitive()>();

     label092:
        if $z0 == 0 goto label126;

        $r25 = $r6;

     label093:
        $r38 = virtualinvoke $r3.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r4);

        $r1 = virtualinvoke $r15.<java.lang.reflect.Field: java.lang.Class getType()>();

     label094:
        $r39 = $r38;

     label095:
        $r16 = virtualinvoke $r38.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r16.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

     label096:
        if $z0 != 0 goto label104;

     label097:
        $r16 = virtualinvoke $r38.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r16.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/String;");

     label098:
        if $z0 == 0 goto label106;

     label099:
        $r16 = <java.lang.Integer: java.lang.Class TYPE>;

     label100:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r16);

     label101:
        if $z0 == 0 goto label104;

     label102:
        $r22 = staticinvoke <com.b.a.a.a.b: java.lang.String a(java.lang.reflect.Field)>($r15);

        $i2 = virtualinvoke $r3.<org.json.JSONObject: int getInt(java.lang.String)>($r22);

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

     label103:
        $r39 = $r40;

     label104:
        virtualinvoke $r15.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r25, $r39);

     label105:
        goto label036;

     label106:
        $r16 = <java.lang.Integer: java.lang.Class TYPE>;

     label107:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r16);

     label108:
        if $z0 == 0 goto label111;

     label109:
        $r41 = (java.lang.Number) $r38;

        $i2 = virtualinvoke $r41.<java.lang.Number: int intValue()>();

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

     label110:
        $r39 = $r40;

        goto label104;

     label111:
        $r16 = <java.lang.Float: java.lang.Class TYPE>;

     label112:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r16);

     label113:
        if $z0 == 0 goto label116;

     label114:
        $r41 = (java.lang.Number) $r38;

        $f0 = virtualinvoke $r41.<java.lang.Number: float floatValue()>();

        $r42 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

     label115:
        $r39 = $r42;

        goto label104;

     label116:
        $r16 = <java.lang.Long: java.lang.Class TYPE>;

     label117:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r16);

     label118:
        if $z0 == 0 goto label121;

     label119:
        $r41 = (java.lang.Number) $r38;

        $l3 = virtualinvoke $r41.<java.lang.Number: long longValue()>();

        $r43 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

     label120:
        $r39 = $r43;

        goto label104;

     label121:
        $r16 = <java.lang.Double: java.lang.Class TYPE>;

     label122:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r16);

     label123:
        if $z0 == 0 goto label104;

     label124:
        $r41 = (java.lang.Number) $r38;

        $d0 = virtualinvoke $r41.<java.lang.Number: double doubleValue()>();

        $r44 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

     label125:
        $r39 = $r44;

        goto label104;

     label126:
        $r16 = virtualinvoke $r15.<java.lang.reflect.Field: java.lang.Class getType()>();

        $z0 = virtualinvoke $r16.<java.lang.Class: boolean isArray()>();

     label127:
        if $z0 == 0 goto label134;

        $r25 = $r6;

        if $r1 == null goto label132;

     label128:
        $r11 = specialinvoke r0.<com.startapp.common.c.a: java.lang.Object[] a(org.json.JSONObject,java.lang.Class,java.lang.reflect.Field)>($r3, $r1, $r15);

     label129:
        $r38 = $r11;

     label130:
        virtualinvoke $r15.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r25, $r38);

     label131:
        goto label036;

     label132:
        $r38 = staticinvoke <com.startapp.common.c.a: java.lang.Object a(org.json.JSONObject,java.lang.reflect.Field)>($r3, $r15);

     label133:
        goto label130;

     label134:
        $r25 = virtualinvoke $r3.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r4);

        $r1 = virtualinvoke $r15.<java.lang.reflect.Field: java.lang.Class getType()>();

     label135:
        $r38 = $r25;

     label136:
        $r16 = virtualinvoke $r25.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r16.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

     label137:
        if $z0 != 0 goto label144;

     label138:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Integer;");

     label139:
        if $z0 == 0 goto label152;

     label140:
        $r1 = virtualinvoke $r25.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Double;");

     label141:
        if $z0 == 0 goto label148;

     label142:
        $r44 = (java.lang.Double) $r25;

        $i2 = virtualinvoke $r44.<java.lang.Double: int intValue()>();

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

     label143:
        $r38 = $r40;

     label144:
        $z0 = virtualinvoke $r38.<java.lang.Object: boolean equals(java.lang.Object)>(null);

     label145:
        if $z0 == 0 goto label158;

     label146:
        virtualinvoke $r15.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r6, null);

     label147:
        goto label036;

     label148:
        $r1 = virtualinvoke $r25.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Long;");

     label149:
        if $z0 == 0 goto label144;

     label150:
        $r43 = (java.lang.Long) $r25;

        $i2 = virtualinvoke $r43.<java.lang.Long: int intValue()>();

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

     label151:
        $r38 = $r40;

        goto label144;

     label152:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Long;");

     label153:
        if $z0 == 0 goto label144;

     label154:
        $r1 = virtualinvoke $r25.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Integer;");

     label155:
        if $z0 == 0 goto label144;

     label156:
        $r40 = (java.lang.Integer) $r25;

        $l3 = virtualinvoke $r40.<java.lang.Integer: long longValue()>();

        $r43 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

     label157:
        $r38 = $r43;

        goto label144;

     label158:
        virtualinvoke $r15.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r6, $r38);

     label159:
        goto label036;

     label160:
        $r45 := @caughtexception;

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = $r4;

        $r4 = virtualinvoke $r45.<java.lang.Exception: java.lang.String toString()>();

        $r11[1] = $r4;

        staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to get field [%s] %s", $r11);

        goto label036;

     label161:
        $r46 := @caughtexception;

        $r5 = new com.startapp.common.c.c;

        specialinvoke $r5.<com.startapp.common.c.c: void <init>(java.lang.String,java.lang.Throwable)>("Unknown error occurred ", $r46);

        throw $r5;

     label162:
        return $r6;

        catch java.lang.Exception from label002 to label003 with label037;
        catch org.json.JSONException from label004 to label005 with label038;
        catch java.lang.Exception from label007 to label008 with label060;
        catch java.lang.Exception from label009 to label010 with label060;
        catch java.lang.Exception from label011 to label012 with label060;
        catch java.lang.Exception from label013 to label014 with label060;
        catch java.lang.Exception from label017 to label018 with label160;
        catch java.lang.Exception from label019 to label021 with label160;
        catch java.lang.Exception from label022 to label025 with label160;
        catch java.lang.Exception from label026 to label027 with label160;
        catch java.lang.Exception from label027 to label028 with label160;
        catch java.lang.Exception from label028 to label029 with label160;
        catch java.lang.Exception from label029 to label030 with label160;
        catch java.lang.Exception from label030 to label031 with label160;
        catch java.lang.Exception from label031 to label032 with label160;
        catch java.lang.Exception from label033 to label034 with label160;
        catch java.lang.Exception from label035 to label036 with label160;
        catch java.lang.Throwable from label017 to label018 with label161;
        catch java.lang.Throwable from label019 to label020 with label161;
        catch java.lang.Throwable from label022 to label023 with label161;
        catch java.lang.Throwable from label024 to label025 with label161;
        catch java.lang.Throwable from label026 to label027 with label161;
        catch java.lang.Throwable from label027 to label028 with label161;
        catch java.lang.Throwable from label028 to label029 with label161;
        catch java.lang.Throwable from label029 to label030 with label161;
        catch java.lang.Throwable from label030 to label031 with label161;
        catch java.lang.Throwable from label031 to label032 with label161;
        catch java.lang.Throwable from label033 to label036 with label161;
        catch java.lang.Exception from label039 to label040 with label060;
        catch java.lang.Exception from label041 to label042 with label060;
        catch java.lang.Exception from label043 to label044 with label060;
        catch java.lang.Exception from label045 to label046 with label060;
        catch java.lang.Exception from label048 to label049 with label060;
        catch java.lang.Exception from label050 to label051 with label060;
        catch java.lang.Exception from label052 to label053 with label060;
        catch java.lang.ClassNotFoundException from label054 to label055 with label058;
        catch java.lang.ClassNotFoundException from label056 to label057 with label058;
        catch org.json.JSONException from label054 to label055 with label061;
        catch org.json.JSONException from label056 to label057 with label061;
        catch java.lang.Exception from label054 to label055 with label060;
        catch java.lang.Exception from label056 to label057 with label060;
        catch java.lang.Exception from label059 to label060 with label060;
        catch java.lang.Exception from label062 to label063 with label060;
        catch java.lang.Exception from label064 to label065 with label160;
        catch java.lang.Exception from label067 to label068 with label160;
        catch java.lang.Exception from label069 to label070 with label160;
        catch java.lang.Exception from label071 to label072 with label160;
        catch java.lang.Exception from label073 to label074 with label160;
        catch java.lang.Exception from label075 to label076 with label160;
        catch java.lang.Exception from label077 to label078 with label160;
        catch java.lang.Exception from label079 to label080 with label160;
        catch java.lang.Exception from label081 to label082 with label160;
        catch java.lang.Exception from label083 to label084 with label160;
        catch java.lang.Exception from label085 to label086 with label160;
        catch java.lang.Exception from label087 to label088 with label160;
        catch java.lang.Exception from label089 to label090 with label160;
        catch java.lang.Exception from label091 to label092 with label160;
        catch java.lang.Exception from label093 to label094 with label160;
        catch java.lang.Exception from label095 to label096 with label160;
        catch java.lang.Exception from label097 to label098 with label160;
        catch java.lang.Exception from label100 to label101 with label160;
        catch java.lang.Exception from label102 to label103 with label160;
        catch java.lang.Exception from label104 to label105 with label160;
        catch java.lang.Exception from label107 to label108 with label160;
        catch java.lang.Exception from label109 to label110 with label160;
        catch java.lang.Exception from label112 to label113 with label160;
        catch java.lang.Exception from label114 to label115 with label160;
        catch java.lang.Exception from label117 to label118 with label160;
        catch java.lang.Exception from label119 to label120 with label160;
        catch java.lang.Exception from label122 to label123 with label160;
        catch java.lang.Exception from label124 to label125 with label160;
        catch java.lang.Exception from label126 to label127 with label160;
        catch java.lang.Exception from label128 to label129 with label160;
        catch java.lang.Exception from label130 to label131 with label160;
        catch java.lang.Exception from label132 to label133 with label160;
        catch java.lang.Exception from label134 to label135 with label160;
        catch java.lang.Exception from label136 to label137 with label160;
        catch java.lang.Exception from label138 to label139 with label160;
        catch java.lang.Exception from label140 to label141 with label160;
        catch java.lang.Exception from label142 to label143 with label160;
        catch java.lang.Exception from label144 to label145 with label160;
        catch java.lang.Exception from label146 to label147 with label160;
        catch java.lang.Exception from label148 to label149 with label160;
        catch java.lang.Exception from label150 to label151 with label160;
        catch java.lang.Exception from label152 to label153 with label160;
        catch java.lang.Exception from label154 to label155 with label160;
        catch java.lang.Exception from label156 to label157 with label160;
        catch java.lang.Exception from label158 to label159 with label160;
        catch java.lang.Throwable from label064 to label065 with label161;
        catch java.lang.Throwable from label067 to label068 with label161;
        catch java.lang.Throwable from label069 to label070 with label161;
        catch java.lang.Throwable from label071 to label072 with label161;
        catch java.lang.Throwable from label073 to label074 with label161;
        catch java.lang.Throwable from label075 to label076 with label161;
        catch java.lang.Throwable from label077 to label078 with label161;
        catch java.lang.Throwable from label079 to label080 with label161;
        catch java.lang.Throwable from label081 to label082 with label161;
        catch java.lang.Throwable from label083 to label084 with label161;
        catch java.lang.Throwable from label085 to label086 with label161;
        catch java.lang.Throwable from label087 to label088 with label161;
        catch java.lang.Throwable from label089 to label090 with label161;
        catch java.lang.Throwable from label091 to label092 with label161;
        catch java.lang.Throwable from label093 to label094 with label161;
        catch java.lang.Throwable from label095 to label096 with label161;
        catch java.lang.Throwable from label097 to label098 with label161;
        catch java.lang.Throwable from label099 to label101 with label161;
        catch java.lang.Throwable from label102 to label103 with label161;
        catch java.lang.Throwable from label104 to label105 with label161;
        catch java.lang.Throwable from label106 to label108 with label161;
        catch java.lang.Throwable from label109 to label110 with label161;
        catch java.lang.Throwable from label111 to label113 with label161;
        catch java.lang.Throwable from label114 to label115 with label161;
        catch java.lang.Throwable from label116 to label118 with label161;
        catch java.lang.Throwable from label119 to label120 with label161;
        catch java.lang.Throwable from label121 to label123 with label161;
        catch java.lang.Throwable from label124 to label125 with label161;
        catch java.lang.Throwable from label126 to label127 with label161;
        catch java.lang.Throwable from label128 to label129 with label161;
        catch java.lang.Throwable from label130 to label131 with label161;
        catch java.lang.Throwable from label132 to label133 with label161;
        catch java.lang.Throwable from label134 to label135 with label161;
        catch java.lang.Throwable from label136 to label137 with label161;
        catch java.lang.Throwable from label138 to label139 with label161;
        catch java.lang.Throwable from label140 to label141 with label161;
        catch java.lang.Throwable from label142 to label143 with label161;
        catch java.lang.Throwable from label144 to label145 with label161;
        catch java.lang.Throwable from label146 to label147 with label161;
        catch java.lang.Throwable from label148 to label149 with label161;
        catch java.lang.Throwable from label150 to label151 with label161;
        catch java.lang.Throwable from label152 to label153 with label161;
        catch java.lang.Throwable from label154 to label155 with label161;
        catch java.lang.Throwable from label156 to label157 with label161;
        catch java.lang.Throwable from label158 to label159 with label161;
    }
