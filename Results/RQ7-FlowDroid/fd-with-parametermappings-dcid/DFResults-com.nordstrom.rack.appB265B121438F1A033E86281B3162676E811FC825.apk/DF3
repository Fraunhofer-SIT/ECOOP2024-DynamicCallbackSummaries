Source: $z0 = interfaceinvoke $r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("IS_LOGIN", 0)
$z0 = interfaceinvoke $r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("IS_LOGIN", 0) in <com.nordstrom.authentication.internal.implementation.AuthPersistenceImpl: boolean isLoggedIn()>
Sink: virtualinvoke $r2.<java.io.FileOutputStream: void write(byte[])>($r1) in <kotlin.io.FilesKt__FileReadWriteKt: void appendBytes(java.io.File,byte[])>

<com.nordstrom.authentication.internal.implementation.AuthPersistenceImpl: boolean isLoggedIn()>: $z0 = interfaceinvoke $r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("IS_LOGIN", 0)
<com.nordstrom.authentication.internal.implementation.AuthPersistenceImpl: boolean isLoggedIn()>: return $z0
<com.nordstrom.app.main.service.ChuckInterceptor: void buildSreLoadScript(com.nordstrom.app.main.service.ChuckInterceptor$ChuckRequest,java.lang.String,java.lang.String,java.util.HashMap)>: $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0)
<com.nordstrom.app.main.service.ChuckInterceptor: void buildSreLoadScript(com.nordstrom.app.main.service.ChuckInterceptor$ChuckRequest,java.lang.String,java.lang.String,java.util.HashMap)>: $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
<com.nordstrom.app.main.service.ChuckInterceptor: void buildSreLoadScript(com.nordstrom.app.main.service.ChuckInterceptor$ChuckRequest,java.lang.String,java.lang.String,java.util.HashMap)>: $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
<com.nordstrom.app.main.service.ChuckInterceptor: void buildSreLoadScript(com.nordstrom.app.main.service.ChuckInterceptor$ChuckRequest,java.lang.String,java.lang.String,java.util.HashMap)>: staticinvoke <kotlin.io.FilesKt: void appendText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)>($r20, $r2, null, 2, null)
<kotlin.io.FilesKt__FileReadWriteKt: void appendText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)>: staticinvoke <kotlin.io.FilesKt: void appendText(java.io.File,java.lang.String,java.nio.charset.Charset)>($r0, $r1, $r3)
<kotlin.io.FilesKt__FileReadWriteKt: void appendText(java.io.File,java.lang.String,java.nio.charset.Charset)>: $r1 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3)
<kotlin.io.FilesKt__FileReadWriteKt: void appendText(java.io.File,java.lang.String,java.nio.charset.Charset)>: staticinvoke <kotlin.io.FilesKt: void appendBytes(java.io.File,byte[])>($r0, $r1)
<kotlin.io.FilesKt__FileReadWriteKt: void appendBytes(java.io.File,byte[])>: virtualinvoke $r2.<java.io.FileOutputStream: void write(byte[])>($r1)
