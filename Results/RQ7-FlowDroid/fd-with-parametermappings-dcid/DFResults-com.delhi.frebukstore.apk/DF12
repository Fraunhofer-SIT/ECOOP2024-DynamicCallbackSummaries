Source: $i0 = virtualinvoke $r1.<java.io.Reader: int read(char[],int,int)>($r2, $i1, $i0)
$i0 = virtualinvoke $r1.<java.io.Reader: int read(char[],int,int)>($r2, $i1, $i0) in <gnu.mapping.TtyInPort: int fill(int)>
Sink: virtualinvoke $r2.<gnu.mapping.OutPort: void print(java.lang.String)>($r1) in <gnu.mapping.TtyInPort: void emitPrompt(java.lang.String)>

<gnu.mapping.TtyInPort: int fill(int)>: $i0 = virtualinvoke $r1.<java.io.Reader: int read(char[],int,int)>($r2, $i1, $i0)
<gnu.mapping.TtyInPort: int fill(int)>: $r2 = r0.<gnu.mapping.TtyInPort: char[] buffer>
<gnu.mapping.TtyInPort: int fill(int)>: r0 := @this: gnu.mapping.TtyInPort
<gnu.text.LineBufferedReader: int read()>: virtualinvoke r0.<gnu.text.LineBufferedReader: void lineStart(boolean)>($z0)
<gnu.mapping.TtyInPort: void lineStart(boolean)>: $r3 = virtualinvoke $r2.<gnu.mapping.Procedure: java.lang.Object apply1(java.lang.Object)>(r0)
<gnu.expr.ModuleMethod: java.lang.Object apply1(java.lang.Object)>: $r1 = virtualinvoke $r2.<gnu.expr.ModuleBody: java.lang.Object apply1(gnu.expr.ModuleMethod,java.lang.Object)>(r0, $r1)
<io.kodular.kuttabilli121.FreeBukStore.r$frame: java.lang.Object apply1(gnu.expr.ModuleMethod,java.lang.Object)>: $r2 = virtualinvoke $r3.<io.kodular.kuttabilli121.FreeBukStore.r: java.lang.Object lookupInFormEnvironment(gnu.mapping.Symbol)>($r6)
<io.kodular.kuttabilli121.FreeBukStore.r: java.lang.Object lookupInFormEnvironment(gnu.mapping.Symbol)>: $r3 = virtualinvoke r0.<io.kodular.kuttabilli121.FreeBukStore.r: java.lang.Object lookupInFormEnvironment(gnu.mapping.Symbol,java.lang.Object)>($r1, $r2)
<io.kodular.kuttabilli121.FreeBukStore.r: java.lang.Object lookupInFormEnvironment(gnu.mapping.Symbol,java.lang.Object)>: $r2 = virtualinvoke $r3.<gnu.mapping.Environment: java.lang.Object get(gnu.mapping.Symbol)>($r1)
<gnu.mapping.Environment: java.lang.Object get(gnu.mapping.Symbol)>: $r2 = virtualinvoke r0.<gnu.mapping.Environment: java.lang.Object get(gnu.mapping.Symbol,java.lang.Object,java.lang.Object)>($r1, null, $r3)
<gnu.mapping.Environment: java.lang.Object get(gnu.mapping.Symbol,java.lang.Object,java.lang.Object)>: $r2 = virtualinvoke $r4.<gnu.mapping.Location: java.lang.Object get(java.lang.Object)>($r3)
<gnu.mapping.PlainLocation: java.lang.Object get(java.lang.Object)>: $r1 = virtualinvoke $r2.<gnu.mapping.Location: java.lang.Object get(java.lang.Object)>($r1)
<gnu.kawa.reflect.FieldLocation: java.lang.Object get(java.lang.Object)>: $r2 = virtualinvoke $r8.<gnu.mapping.Location: java.lang.Object get(java.lang.Object)>($r6)
<gnu.mapping.PlainLocation: java.lang.Object get(java.lang.Object)>: $r1 = r0.<gnu.mapping.PlainLocation: java.lang.Object value>
<gnu.mapping.PlainLocation: java.lang.Object get(java.lang.Object)>: r0 := @this: gnu.mapping.PlainLocation
<gnu.kawa.reflect.FieldLocation: java.lang.Object get(java.lang.Object)>: $r8 = (gnu.mapping.Location) r3
<gnu.kawa.reflect.FieldLocation: java.lang.Object get(java.lang.Object)>: r3 = $r2
<gnu.kawa.reflect.FieldLocation: java.lang.Object get(java.lang.Object)>: return $r2
<gnu.mapping.PlainLocation: java.lang.Object get(java.lang.Object)>: return $r1
<gnu.mapping.Environment: java.lang.Object get(gnu.mapping.Symbol,java.lang.Object,java.lang.Object)>: return $r2
<gnu.mapping.Environment: java.lang.Object get(gnu.mapping.Symbol)>: return $r2
<io.kodular.kuttabilli121.FreeBukStore.r: java.lang.Object lookupInFormEnvironment(gnu.mapping.Symbol,java.lang.Object)>: return $r2
<io.kodular.kuttabilli121.FreeBukStore.r: java.lang.Object lookupInFormEnvironment(gnu.mapping.Symbol)>: return $r3
<io.kodular.kuttabilli121.FreeBukStore.r$frame: java.lang.Object apply1(gnu.expr.ModuleMethod,java.lang.Object)>: return $r2
<gnu.expr.ModuleMethod: java.lang.Object apply1(java.lang.Object)>: return $r1
<gnu.mapping.TtyInPort: void lineStart(boolean)>: $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>()
<gnu.mapping.TtyInPort: void lineStart(boolean)>: virtualinvoke r0.<gnu.mapping.TtyInPort: void emitPrompt(java.lang.String)>($r4)
<gnu.mapping.TtyInPort: void emitPrompt(java.lang.String)>: virtualinvoke $r2.<gnu.mapping.OutPort: void print(java.lang.String)>($r1)
