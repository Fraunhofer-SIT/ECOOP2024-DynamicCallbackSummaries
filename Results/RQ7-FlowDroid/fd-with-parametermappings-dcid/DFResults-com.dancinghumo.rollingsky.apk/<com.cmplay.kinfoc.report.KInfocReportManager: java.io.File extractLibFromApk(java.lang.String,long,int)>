    private static java.io.File extractLibFromApk(java.lang.String, long, int)
    {
        java.lang.Throwable $r12, $r13, $r14, $r15;
        android.content.Context $r2;
        byte[] $r11;
        long $l0;
        java.util.Random $r18;
        int $i1;
        java.util.zip.ZipFile $r19;
        java.lang.String $r1, $r3, $r4;
        java.util.zip.ZipEntry $r7, $r8;
        boolean $z0;
        java.io.FileOutputStream $r6, $r10, $r20;
        java.io.IOException $r21;
        java.io.File $r0, $r5, $r17;
        java.lang.StringBuilder $r16;
        java.io.InputStream $r9;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $i1 := @parameter2: int;

        $r2 = <com.cmplay.kinfoc.report.KInfocReportManager: android.content.Context s_mContext>;

        $r0 = virtualinvoke $r2.<android.content.Context: java.io.File getFilesDir()>();

        $r0 = virtualinvoke $r0.<java.io.File: java.io.File getParentFile()>();

        $r3 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/selflib");

        $r3 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = <java.io.File: java.lang.String separator>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("libinfoc.so");

        $r4 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.io.File;

        $r0 = $r5;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r4);

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        return $r5;

     label01:
        $r17 = new java.io.File;

        $r5 = $r17;

        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r3);

        $z0 = virtualinvoke $r17.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label02;

        virtualinvoke $r17.<java.io.File: boolean mkdir()>();

     label02:
        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        $r6 = null;

        if $z0 != 0 goto label03;

        return null;

     label03:
        staticinvoke <com.cmplay.kinfoc.report.KInfocReportManager: void clearSoInDir(java.io.File)>($r5);

        $r18 = new java.util.Random;

        specialinvoke $r18.<java.util.Random: void <init>()>();

        virtualinvoke $r18.<java.util.Random: int nextInt()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = <java.io.File: java.lang.String separator>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i1 = virtualinvoke $r18.<java.util.Random: int nextInt()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".so");

        $r3 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new java.io.File;

        $r5 = $r17;

        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r3);

        $z0 = 0;

     label04:
        $r19 = new java.util.zip.ZipFile;

     label05:
        specialinvoke $r19.<java.util.zip.ZipFile: void <init>(java.lang.String)>($r1);

        $r7 = virtualinvoke $r19.<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>("lib/armeabi-v7a/libinfoc.so");

     label06:
        $r8 = $r7;

        if $r7 != null goto label09;

     label07:
        $r7 = virtualinvoke $r19.<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>("lib/x86/libinfoc.so");

     label08:
        $r8 = $r7;

     label09:
        if $r8 == null goto label21;

     label10:
        $r9 = virtualinvoke $r19.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>($r8);

     label11:
        $r20 = new java.io.FileOutputStream;

     label12:
        $r10 = $r20;

     label13:
        specialinvoke $r20.<java.io.FileOutputStream: void <init>(java.io.File)>($r5);

     label14:
        $r11 = newarray (byte)[1024];

     label15:
        $i1 = virtualinvoke $r9.<java.io.InputStream: int read(byte[])>($r11);

     label16:
        if $i1 <= 0 goto label19;

     label17:
        virtualinvoke $r20.<java.io.FileOutputStream: void write(byte[],int,int)>($r11, 0, $i1);

     label18:
        goto label15;

     label19:
        $z0 = 1;

        goto label22;

     label20:
        $r12 := @caughtexception;

        goto label28;

     label21:
        $r10 = null;

     label22:
        if $r10 == null goto label31;

     label23:
        virtualinvoke $r10.<java.io.FileOutputStream: void close()>();

     label24:
        goto label31;

     label25:
        $r13 := @caughtexception;

        $r21 = (java.io.IOException) $r13;

        virtualinvoke $r21.<java.io.IOException: void printStackTrace()>();

        goto label31;

     label26:
        $r14 := @caughtexception;

        goto label34;

     label27:
        $r12 := @caughtexception;

        $r10 = null;

     label28:
        $r21 = (java.io.IOException) $r12;

        virtualinvoke $r21.<java.io.IOException: void printStackTrace()>();

     label29:
        if $r10 == null goto label31;

     label30:
        virtualinvoke $r10.<java.io.FileOutputStream: void close()>();

     label31:
        if $z0 == 0 goto label32;

        virtualinvoke $r5.<java.io.File: boolean renameTo(java.io.File)>($r0);

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label39;

        return $r0;

     label32:
        return null;

     label33:
        $r14 := @caughtexception;

        $r6 = $r10;

     label34:
        if $r6 == null goto label38;

     label35:
        virtualinvoke $r6.<java.io.FileOutputStream: void close()>();

     label36:
        goto label38;

     label37:
        $r15 := @caughtexception;

        $r21 = (java.io.IOException) $r15;

        virtualinvoke $r21.<java.io.IOException: void printStackTrace()>();

     label38:
        throw $r14;

     label39:
        return null;

        catch java.io.IOException from label05 to label06 with label27;
        catch java.io.IOException from label07 to label08 with label27;
        catch java.io.IOException from label10 to label11 with label27;
        catch java.io.IOException from label13 to label14 with label27;
        catch java.lang.Throwable from label04 to label05 with label26;
        catch java.lang.Throwable from label05 to label06 with label26;
        catch java.lang.Throwable from label07 to label08 with label26;
        catch java.lang.Throwable from label10 to label12 with label26;
        catch java.lang.Throwable from label13 to label14 with label26;
        catch java.io.IOException from label15 to label16 with label20;
        catch java.io.IOException from label17 to label18 with label20;
        catch java.lang.Throwable from label15 to label16 with label33;
        catch java.lang.Throwable from label17 to label18 with label33;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.lang.Throwable from label28 to label29 with label33;
        catch java.io.IOException from label30 to label31 with label25;
        catch java.io.IOException from label35 to label36 with label37;
    }
