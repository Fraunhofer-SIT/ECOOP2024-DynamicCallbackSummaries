Source: $i1 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>($r9)
$i1 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>($r9) in <com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: void onRun()>
Sink: virtualinvoke $r6.<java.io.OutputStream: void write(byte[],int,int)>($r9, 0, $i1) in <com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: void onRun()>

<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: void onRun()>: $i1 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>($r9)
<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: void onRun()>: $r9 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: byte[] getBuffer()>()
<com.genonbeta.CoolSocket.CoolTransfer$TransferHandler: byte[] getBuffer()>: $r2 = virtualinvoke $r1.<com.genonbeta.CoolSocket.CoolTransfer$ParentBuilder: byte[] getBuffer()>()
<com.genonbeta.CoolSocket.CoolTransfer$ParentBuilder: byte[] getBuffer()>: r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$ParentBuilder: byte[] mBuffer>
<com.genonbeta.CoolSocket.CoolTransfer$ParentBuilder: byte[] getBuffer()>: r0 := @this: com.genonbeta.CoolSocket.CoolTransfer$ParentBuilder
<com.genonbeta.CoolSocket.CoolTransfer$TransferHandler: byte[] getBuffer()>: $r1 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$TransferHandler: com.genonbeta.CoolSocket.CoolTransfer$ParentBuilder getParentBuilder()>()
<com.genonbeta.CoolSocket.CoolTransfer$TransferHandler: com.genonbeta.CoolSocket.CoolTransfer$ParentBuilder getParentBuilder()>: r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$TransferHandler: com.genonbeta.CoolSocket.CoolTransfer$ParentBuilder mParentBuilder>
<com.genonbeta.CoolSocket.CoolTransfer$TransferHandler: com.genonbeta.CoolSocket.CoolTransfer$ParentBuilder getParentBuilder()>: return r1
<com.genonbeta.CoolSocket.CoolTransfer$TransferHandler: byte[] getBuffer()>: return $r2
<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: void onRun()>: $r9 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: byte[] getBuffer()>()
<com.genonbeta.CoolSocket.CoolTransfer$TransferHandler: byte[] getBuffer()>: return $r2
<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: void onRun()>: $r9 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: byte[] getBuffer()>()
<com.genonbeta.CoolSocket.CoolTransfer$TransferHandler: byte[] getBuffer()>: $r1 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$TransferHandler: com.genonbeta.CoolSocket.CoolTransfer$ParentBuilder getParentBuilder()>()
<com.genonbeta.CoolSocket.CoolTransfer$TransferHandler: com.genonbeta.CoolSocket.CoolTransfer$ParentBuilder getParentBuilder()>: r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$TransferHandler: com.genonbeta.CoolSocket.CoolTransfer$ParentBuilder mParentBuilder>
<com.genonbeta.CoolSocket.CoolTransfer$TransferHandler: com.genonbeta.CoolSocket.CoolTransfer$ParentBuilder getParentBuilder()>: return r1
<com.genonbeta.CoolSocket.CoolTransfer$TransferHandler: byte[] getBuffer()>: $r2 = virtualinvoke $r1.<com.genonbeta.CoolSocket.CoolTransfer$ParentBuilder: byte[] getBuffer()>()
<com.genonbeta.CoolSocket.CoolTransfer$ParentBuilder: byte[] getBuffer()>: r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$ParentBuilder: byte[] mBuffer>
<com.genonbeta.CoolSocket.CoolTransfer$ParentBuilder: byte[] getBuffer()>: return r1
<com.genonbeta.CoolSocket.CoolTransfer$TransferHandler: byte[] getBuffer()>: return $r2
<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: void onRun()>: virtualinvoke $r6.<java.io.OutputStream: void write(byte[],int,int)>($r9, 0, $i1)
