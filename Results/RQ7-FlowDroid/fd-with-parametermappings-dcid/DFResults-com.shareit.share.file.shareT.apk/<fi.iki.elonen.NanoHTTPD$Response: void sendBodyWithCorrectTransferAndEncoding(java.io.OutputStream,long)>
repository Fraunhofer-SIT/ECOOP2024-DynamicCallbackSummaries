    private void sendBodyWithCorrectTransferAndEncoding(java.io.OutputStream, long) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        fi.iki.elonen.NanoHTTPD$Response$ChunkedOutputStream $r4;
        fi.iki.elonen.NanoHTTPD$Method $r2, $r3;
        fi.iki.elonen.NanoHTTPD$Response r0;
        long $l0;
        boolean $z0;

        r0 := @this: fi.iki.elonen.NanoHTTPD$Response;

        $r1 := @parameter0: java.io.OutputStream;

        $l0 := @parameter1: long;

        $r3 = r0.<fi.iki.elonen.NanoHTTPD$Response: fi.iki.elonen.NanoHTTPD$Method requestMethod>;

        $r2 = <fi.iki.elonen.NanoHTTPD$Method: fi.iki.elonen.NanoHTTPD$Method HEAD>;

        if $r3 == $r2 goto label1;

        $z0 = r0.<fi.iki.elonen.NanoHTTPD$Response: boolean chunkedTransfer>;

        if $z0 == 0 goto label1;

        $r4 = new fi.iki.elonen.NanoHTTPD$Response$ChunkedOutputStream;

        specialinvoke $r4.<fi.iki.elonen.NanoHTTPD$Response$ChunkedOutputStream: void <init>(java.io.OutputStream)>($r1);

        specialinvoke r0.<fi.iki.elonen.NanoHTTPD$Response: void sendBodyWithCorrectEncoding(java.io.OutputStream,long)>($r4, -1L);

        virtualinvoke $r4.<fi.iki.elonen.NanoHTTPD$Response$ChunkedOutputStream: void finish()>();

        return;

     label1:
        specialinvoke r0.<fi.iki.elonen.NanoHTTPD$Response: void sendBodyWithCorrectEncoding(java.io.OutputStream,long)>($r1, $l0);

        return;
    }
