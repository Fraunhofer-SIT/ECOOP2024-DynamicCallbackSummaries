    public static final byte[] convertToBytes(char, java.lang.String)
    {
        java.lang.Throwable r13;
        byte[] r1;
        com.itextpdf.text.ExceptionConverter $r14;
        com.itextpdf.text.pdf.ExtraEncoding r5;
        java.util.HashMap r2;
        com.itextpdf.text.pdf.IntHashtable r6;
        java.nio.ByteBuffer $r12;
        byte b2;
        java.nio.charset.Charset $r7;
        java.nio.charset.CodingErrorAction r9;
        int $i1;
        java.lang.String $r0, $r3;
        boolean $z0;
        java.nio.CharBuffer $r11;
        char $c0;
        java.lang.Exception $r15;
        java.nio.charset.CharsetEncoder $r8;
        char[] r10;
        java.lang.Object $r4;

        $c0 := @parameter0: char;

        $r0 := @parameter1: java.lang.String;

        if $r0 == null goto label18;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 == 0 goto label18;

        r2 = <com.itextpdf.text.pdf.PdfEncodings: java.util.HashMap extraEncodings>;

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (com.itextpdf.text.pdf.ExtraEncoding) $r4;

        if r5 == null goto label01;

        r1 = interfaceinvoke r5.<com.itextpdf.text.pdf.ExtraEncoding: byte[] charToByte(char,java.lang.String)>($c0, $r0);

        if r1 == null goto label01;

        return r1;

     label01:
        r6 = null;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("Cp1252");

        if $z0 == 0 goto label02;

        r6 = <com.itextpdf.text.pdf.PdfEncodings: com.itextpdf.text.pdf.IntHashtable winansi>;

        goto label03;

     label02:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("PDF");

        if $z0 == 0 goto label03;

        r6 = <com.itextpdf.text.pdf.PdfEncodings: com.itextpdf.text.pdf.IntHashtable pdfEncoding>;

     label03:
        if r6 == null goto label08;

        $i1 = (int) $c0;

        if $i1 < 128 goto label05;

        $i1 = (int) $c0;

        if $i1 <= 160 goto label04;

        $i1 = (int) $c0;

        if $i1 <= 255 goto label05;

     label04:
        $i1 = (int) $c0;

        $i1 = virtualinvoke r6.<com.itextpdf.text.pdf.IntHashtable: int get(int)>($i1);

        goto label06;

     label05:
        $i1 = (int) $c0;

     label06:
        if $i1 == 0 goto label07;

        r1 = newarray (byte)[1];

        b2 = (byte) $i1;

        r1[0] = b2;

        return r1;

     label07:
        r1 = newarray (byte)[0];

        return r1;

     label08:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("UnicodeBig");

        if $z0 == 0 goto label09;

        r1 = newarray (byte)[4];

        r1[0] = -2;

        r1[1] = -1;

        $i1 = (int) $c0;

        $i1 = $i1 >> 8;

        b2 = (byte) $i1;

        r1[2] = b2;

        $c0 = $c0 & 255;

        b2 = (byte) $c0;

        r1[3] = b2;

        return r1;

     label09:
        $r7 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r0);

        $r8 = virtualinvoke $r7.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();

     label10:
        r9 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction IGNORE>;

     label11:
        virtualinvoke $r8.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>(r9);

     label12:
        r10 = newarray (char)[1];

        r10[0] = $c0;

     label13:
        $r11 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>(r10);

        $r12 = virtualinvoke $r8.<java.nio.charset.CharsetEncoder: java.nio.ByteBuffer encode(java.nio.CharBuffer)>($r11);

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $i1 = virtualinvoke $r12.<java.nio.ByteBuffer: int limit()>();

     label14:
        r1 = newarray (byte)[$i1];

     label15:
        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r1);

     label16:
        return r1;

     label17:
        r13 := @caughtexception;

        $r14 = new com.itextpdf.text.ExceptionConverter;

        $r15 = (java.lang.Exception) r13;

        specialinvoke $r14.<com.itextpdf.text.ExceptionConverter: void <init>(java.lang.Exception)>($r15);

        throw $r14;

     label18:
        r1 = newarray (byte)[1];

        b2 = (byte) $c0;

        r1[0] = b2;

        return r1;

        catch java.io.IOException from label09 to label10 with label17;
        catch java.io.IOException from label11 to label12 with label17;
        catch java.io.IOException from label13 to label14 with label17;
        catch java.io.IOException from label15 to label16 with label17;
    }
