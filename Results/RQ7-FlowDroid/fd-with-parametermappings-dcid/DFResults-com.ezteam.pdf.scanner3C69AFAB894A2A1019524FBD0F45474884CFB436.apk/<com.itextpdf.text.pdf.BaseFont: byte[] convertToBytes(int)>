    byte[] convertToBytes(int)
    {
        byte[] $r1;
        com.itextpdf.text.pdf.BaseFont r0;
        char $c1;
        com.itextpdf.text.pdf.IntHashtable $r2;
        byte $b2;
        int $i0;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.itextpdf.text.pdf.BaseFont;

        $i0 := @parameter0: int;

        $z0 = r0.<com.itextpdf.text.pdf.BaseFont: boolean directTextToByte>;

        if $z0 == 0 goto label1;

        $c1 = (char) $i0;

        $r1 = staticinvoke <com.itextpdf.text.pdf.PdfEncodings: byte[] convertToBytes(char,java.lang.String)>($c1, null);

        return $r1;

     label1:
        $r2 = r0.<com.itextpdf.text.pdf.BaseFont: com.itextpdf.text.pdf.IntHashtable specialMap>;

        if $r2 == null goto label3;

        $z0 = virtualinvoke $r2.<com.itextpdf.text.pdf.IntHashtable: boolean containsKey(int)>($i0);

        if $z0 == 0 goto label2;

        $r1 = newarray (byte)[1];

        $r2 = r0.<com.itextpdf.text.pdf.BaseFont: com.itextpdf.text.pdf.IntHashtable specialMap>;

        $i0 = virtualinvoke $r2.<com.itextpdf.text.pdf.IntHashtable: int get(int)>($i0);

        $b2 = (byte) $i0;

        $r1[0] = $b2;

        return $r1;

     label2:
        $r1 = newarray (byte)[0];

        return $r1;

     label3:
        $c1 = (char) $i0;

        $r3 = r0.<com.itextpdf.text.pdf.BaseFont: java.lang.String encoding>;

        $r1 = staticinvoke <com.itextpdf.text.pdf.PdfEncodings: byte[] convertToBytes(char,java.lang.String)>($c1, $r3);

        return $r1;
    }
