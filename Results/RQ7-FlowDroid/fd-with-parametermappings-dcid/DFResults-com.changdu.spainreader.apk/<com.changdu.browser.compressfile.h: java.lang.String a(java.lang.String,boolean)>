    public java.lang.String a(java.lang.String, boolean)
    {
        java.lang.Throwable $r12, $r14, $r15, $r16, $r17;
        byte[] $r11;
        java.util.Enumeration $r4;
        long $l1;
        int $i0;
        java.lang.String $r1, $r7;
        boolean $z0, $z1;
        org.apache.a.a.p $r5;
        org.apache.a.a.r $r3;
        java.io.FileOutputStream $r2, $r10, $r20;
        com.changdu.browser.compressfile.h r0;
        java.io.IOException $r21;
        java.io.File $r9, $r19;
        java.lang.Exception $r13;
        java.lang.Object $r6;
        java.lang.StringBuilder $r18;
        java.io.InputStream $r8;

        r0 := @this: com.changdu.browser.compressfile.h;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        entermonitor r0;

        $r2 = null;

     label01:
        $r3 = r0.<com.changdu.browser.compressfile.h: org.apache.a.a.r e>;

        $r4 = virtualinvoke $r3.<org.apache.a.a.r: java.util.Enumeration d()>();

     label02:
        $r5 = null;

     label03:
        $z1 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

     label04:
        if $z1 == 0 goto label09;

     label05:
        $r6 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r5 = (org.apache.a.a.p) $r6;

        $r7 = virtualinvoke $r5.<org.apache.a.a.p: java.lang.String getName()>();

     label06:
        if $r7 == null goto label03;

     label07:
        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label08:
        if $z1 == 0 goto label03;

     label09:
        $r3 = r0.<com.changdu.browser.compressfile.h: org.apache.a.a.r e>;

        $r8 = virtualinvoke $r3.<org.apache.a.a.r: java.io.InputStream a(org.apache.a.a.p)>($r5);

     label10:
        $r18 = new java.lang.StringBuilder;

     label11:
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/temp/");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r8.<java.io.InputStream: int available()>();

     label12:
        $l1 = (long) $i0;

     label13:
        $r1 = staticinvoke <com.changdu.changdulib.e.c.b: java.lang.String b(java.lang.String,long)>($r1, $l1);

     label14:
        $r19 = new java.io.File;

     label15:
        specialinvoke $r19.<java.io.File: void <init>(java.lang.String)>($r1);

        $z1 = virtualinvoke $r19.<java.io.File: boolean exists()>();

     label16:
        if $z1 != 0 goto label19;

     label17:
        $r9 = virtualinvoke $r19.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r9.<java.io.File: boolean mkdirs()>();

     label18:
        goto label20;

     label19:
        exitmonitor r0;

        return $r1;

     label20:
        $r20 = new java.io.FileOutputStream;

        $r10 = $r20;

     label21:
        specialinvoke $r20.<java.io.FileOutputStream: void <init>(java.lang.String)>($r1);

     label22:
        $r11 = newarray (byte)[1024];

     label23:
        $i0 = virtualinvoke $r8.<java.io.InputStream: int read(byte[])>($r11);

     label24:
        if $i0 == -1 goto label27;

     label25:
        virtualinvoke $r20.<java.io.FileOutputStream: void write(byte[],int,int)>($r11, 0, $i0);

     label26:
        goto label23;

     label27:
        virtualinvoke $r20.<java.io.FileOutputStream: void close()>();

     label28:
        goto label31;

     label29:
        $r12 := @caughtexception;

     label30:
        $r21 = (java.io.IOException) $r12;

        virtualinvoke $r21.<java.io.IOException: void printStackTrace()>();

     label31:
        exitmonitor r0;

        return $r1;

     label32:
        $r13 := @caughtexception;

        goto label35;

     label33:
        $r14 := @caughtexception;

        goto label43;

     label34:
        $r13 := @caughtexception;

        $r10 = null;

     label35:
        staticinvoke <com.changdu.changdulib.e.i: void e(java.lang.Object)>($r13);

     label36:
        if $r10 == null goto label41;

     label37:
        virtualinvoke $r10.<java.io.FileOutputStream: void close()>();

     label38:
        goto label41;

     label39:
        $r15 := @caughtexception;

     label40:
        $r21 = (java.io.IOException) $r15;

        virtualinvoke $r21.<java.io.IOException: void printStackTrace()>();

     label41:
        exitmonitor r0;

        return null;

     label42:
        $r14 := @caughtexception;

        $r2 = $r10;

     label43:
        if $r2 == null goto label48;

     label44:
        virtualinvoke $r2.<java.io.FileOutputStream: void close()>();

     label45:
        goto label48;

     label46:
        $r16 := @caughtexception;

     label47:
        $r21 = (java.io.IOException) $r16;

        virtualinvoke $r21.<java.io.IOException: void printStackTrace()>();

     label48:
        throw $r14;

     label49:
        $r17 := @caughtexception;

        exitmonitor r0;

        throw $r17;

        catch java.lang.Exception from label01 to label02 with label34;
        catch java.lang.Exception from label03 to label04 with label34;
        catch java.lang.Exception from label05 to label06 with label34;
        catch java.lang.Exception from label07 to label08 with label34;
        catch java.lang.Exception from label09 to label10 with label34;
        catch java.lang.Exception from label11 to label12 with label34;
        catch java.lang.Exception from label13 to label14 with label34;
        catch java.lang.Exception from label15 to label16 with label34;
        catch java.lang.Exception from label17 to label18 with label34;
        catch java.lang.Throwable from label01 to label18 with label33;
        catch java.lang.Exception from label21 to label22 with label34;
        catch java.lang.Throwable from label20 to label22 with label33;
        catch java.lang.Exception from label23 to label24 with label32;
        catch java.lang.Exception from label25 to label26 with label32;
        catch java.lang.Throwable from label22 to label26 with label42;
        catch java.io.IOException from label27 to label28 with label29;
        catch java.lang.Throwable from label27 to label28 with label49;
        catch java.lang.Throwable from label30 to label31 with label49;
        catch java.lang.Throwable from label35 to label36 with label42;
        catch java.io.IOException from label37 to label38 with label39;
        catch java.lang.Throwable from label37 to label38 with label49;
        catch java.lang.Throwable from label40 to label41 with label49;
        catch java.io.IOException from label44 to label45 with label46;
        catch java.lang.Throwable from label44 to label45 with label49;
        catch java.lang.Throwable from label47 to label49 with label49;
    }
