    protected void createEncoding()
    {
        byte[] $r9;
        int[][] $r8;
        com.itextpdf.text.pdf.BaseFont r0;
        com.itextpdf.text.pdf.IntHashtable $r2, $r10;
        java.lang.String[] $r5;
        byte $b6;
        int[] $r7;
        java.util.StringTokenizer $r11;
        int $i0, $i1, $i4, $i5;
        java.lang.String $r1, $r3, $r4;
        boolean $z0;
        char $c2, $c3;
        char[] $r6;

        r0 := @this: com.itextpdf.text.pdf.BaseFont;

        $r1 = r0.<com.itextpdf.text.pdf.BaseFont: java.lang.String encoding>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        $i0 = 0;

        if $z0 == 0 goto label10;

        $r10 = new com.itextpdf.text.pdf.IntHashtable;

        specialinvoke $r10.<com.itextpdf.text.pdf.IntHashtable: void <init>()>();

        r0.<com.itextpdf.text.pdf.BaseFont: com.itextpdf.text.pdf.IntHashtable specialMap> = $r10;

        $r11 = new java.util.StringTokenizer;

        $r1 = r0.<com.itextpdf.text.pdf.BaseFont: java.lang.String encoding>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        specialinvoke $r11.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, " ,\t\n\r\f");

        $r1 = virtualinvoke $r11.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("full");

        if $z0 == 0 goto label04;

     label01:
        $z0 = virtualinvoke $r11.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label07;

        $r1 = virtualinvoke $r11.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r3 = virtualinvoke $r11.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r4 = virtualinvoke $r11.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r4, 16);

        $c2 = (char) $i1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("\'");

        if $z0 == 0 goto label02;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(1);

        $i1 = (int) $c3;

        goto label03;

     label02:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label03:
        $i1 = $i1 % 256;

        $r2 = r0.<com.itextpdf.text.pdf.BaseFont: com.itextpdf.text.pdf.IntHashtable specialMap>;

        $i4 = (int) $c2;

        virtualinvoke $r2.<com.itextpdf.text.pdf.IntHashtable: int put(int,int)>($i4, $i1);

        $r5 = r0.<com.itextpdf.text.pdf.BaseFont: java.lang.String[] differences>;

        $r5[$i1] = $r3;

        $r6 = r0.<com.itextpdf.text.pdf.BaseFont: char[] unicodeDifferences>;

        $r6[$i1] = $c2;

        $r7 = r0.<com.itextpdf.text.pdf.BaseFont: int[] widths>;

        $i4 = (int) $c2;

        $i4 = virtualinvoke r0.<com.itextpdf.text.pdf.BaseFont: int getRawWidth(int,java.lang.String)>($i4, $r3);

        $r7[$i1] = $i4;

        $r8 = r0.<com.itextpdf.text.pdf.BaseFont: int[][] charBBoxes>;

        $i4 = (int) $c2;

        $r7 = virtualinvoke r0.<com.itextpdf.text.pdf.BaseFont: int[] getRawCharBBox(int,java.lang.String)>($i4, $r3);

        $r8[$i1] = $r7;

        goto label01;

     label04:
        $z0 = virtualinvoke $r11.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label05;

        $r1 = virtualinvoke $r11.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        goto label06;

     label05:
        $i1 = 0;

     label06:
        $z0 = virtualinvoke $r11.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label07;

        if $i1 >= 256 goto label07;

        $r1 = virtualinvoke $r11.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r1, 16);

        $i4 = $i4 % 65536;

        $r1 = staticinvoke <com.itextpdf.text.pdf.GlyphList: java.lang.String unicodeToName(int)>($i4);

        if $r1 == null goto label06;

        $r2 = r0.<com.itextpdf.text.pdf.BaseFont: com.itextpdf.text.pdf.IntHashtable specialMap>;

        virtualinvoke $r2.<com.itextpdf.text.pdf.IntHashtable: int put(int,int)>($i4, $i1);

        $r5 = r0.<com.itextpdf.text.pdf.BaseFont: java.lang.String[] differences>;

        $r5[$i1] = $r1;

        $r6 = r0.<com.itextpdf.text.pdf.BaseFont: char[] unicodeDifferences>;

        $c2 = (char) $i4;

        $r6[$i1] = $c2;

        $r7 = r0.<com.itextpdf.text.pdf.BaseFont: int[] widths>;

        $i5 = virtualinvoke r0.<com.itextpdf.text.pdf.BaseFont: int getRawWidth(int,java.lang.String)>($i4, $r1);

        $r7[$i1] = $i5;

        $r8 = r0.<com.itextpdf.text.pdf.BaseFont: int[][] charBBoxes>;

        $r7 = virtualinvoke r0.<com.itextpdf.text.pdf.BaseFont: int[] getRawCharBBox(int,java.lang.String)>($i4, $r1);

        $r8[$i1] = $r7;

        $i1 = $i1 + 1;

        goto label06;

     label07:
        if $i0 >= 256 goto label09;

        $r5 = r0.<com.itextpdf.text.pdf.BaseFont: java.lang.String[] differences>;

        $r1 = $r5[$i0];

        if $r1 != null goto label08;

        $r5[$i0] = ".notdef";

     label08:
        $i0 = $i0 + 1;

        goto label07;

     label09:
        return;

     label10:
        $z0 = r0.<com.itextpdf.text.pdf.BaseFont: boolean fontSpecific>;

        if $z0 == 0 goto label13;

     label11:
        if $i0 >= 256 goto label12;

        $r7 = r0.<com.itextpdf.text.pdf.BaseFont: int[] widths>;

        $i1 = virtualinvoke r0.<com.itextpdf.text.pdf.BaseFont: int getRawWidth(int,java.lang.String)>($i0, null);

        $r7[$i0] = $i1;

        $r8 = r0.<com.itextpdf.text.pdf.BaseFont: int[][] charBBoxes>;

        $r7 = virtualinvoke r0.<com.itextpdf.text.pdf.BaseFont: int[] getRawCharBBox(int,java.lang.String)>($i0, null);

        $r8[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label11;

     label12:
        return;

     label13:
        $r9 = newarray (byte)[1];

        $i0 = 0;

     label14:
        if $i0 >= 256 goto label18;

        $b6 = (byte) $i0;

        $r9[0] = $b6;

        $r1 = r0.<com.itextpdf.text.pdf.BaseFont: java.lang.String encoding>;

        $r1 = staticinvoke <com.itextpdf.text.pdf.PdfEncodings: java.lang.String convertToString(byte[],java.lang.String)>($r9, $r1);

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 <= 0 goto label15;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        goto label16;

     label15:
        $c2 = 63;

     label16:
        $r1 = staticinvoke <com.itextpdf.text.pdf.GlyphList: java.lang.String unicodeToName(int)>($c2);

        $r3 = $r1;

        if $r1 != null goto label17;

        $r3 = ".notdef";

     label17:
        $r5 = r0.<com.itextpdf.text.pdf.BaseFont: java.lang.String[] differences>;

        $r5[$i0] = $r3;

        $r6 = r0.<com.itextpdf.text.pdf.BaseFont: char[] unicodeDifferences>;

        $r6[$i0] = $c2;

        $r7 = r0.<com.itextpdf.text.pdf.BaseFont: int[] widths>;

        $i1 = virtualinvoke r0.<com.itextpdf.text.pdf.BaseFont: int getRawWidth(int,java.lang.String)>($c2, $r3);

        $r7[$i0] = $i1;

        $r8 = r0.<com.itextpdf.text.pdf.BaseFont: int[][] charBBoxes>;

        $r7 = virtualinvoke r0.<com.itextpdf.text.pdf.BaseFont: int[] getRawCharBBox(int,java.lang.String)>($c2, $r3);

        $r8[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label14;

     label18:
        return;
    }
