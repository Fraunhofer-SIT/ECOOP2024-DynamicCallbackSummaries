    public void apply(gnu.mapping.CallContext) throws java.lang.Throwable
    {
        java.lang.Object[] $r9;
        java.lang.Error $r2;
        gnu.expr.ModuleMethod r0;
        gnu.mapping.CallContext $r1;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.Object $r5, $r6, $r7, $r8;
        java.lang.String $r4;

        r0 := @this: gnu.expr.ModuleMethod;

        $r1 := @parameter0: gnu.mapping.CallContext;

        $i0 = $r1.<gnu.mapping.CallContext: int pc>;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label7;
            case 5: goto label8;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.Error;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("internal error - apply ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $r5 = virtualinvoke r0.<gnu.expr.ModuleMethod: java.lang.Object apply0()>();

     label3:
        virtualinvoke $r1.<gnu.mapping.CallContext: void writeValue(java.lang.Object)>($r5);

        return;

     label4:
        $r5 = $r1.<gnu.mapping.CallContext: java.lang.Object value1>;

        $r5 = virtualinvoke r0.<gnu.expr.ModuleMethod: java.lang.Object apply1(java.lang.Object)>($r5);

        goto label3;

     label5:
        $r5 = $r1.<gnu.mapping.CallContext: java.lang.Object value1>;

        $r6 = $r1.<gnu.mapping.CallContext: java.lang.Object value2>;

        $r5 = virtualinvoke r0.<gnu.expr.ModuleMethod: java.lang.Object apply2(java.lang.Object,java.lang.Object)>($r5, $r6);

        goto label3;

     label6:
        $r5 = $r1.<gnu.mapping.CallContext: java.lang.Object value1>;

        $r6 = $r1.<gnu.mapping.CallContext: java.lang.Object value2>;

        $r7 = $r1.<gnu.mapping.CallContext: java.lang.Object value3>;

        $r5 = virtualinvoke r0.<gnu.expr.ModuleMethod: java.lang.Object apply3(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r6, $r7);

        goto label3;

     label7:
        $r5 = $r1.<gnu.mapping.CallContext: java.lang.Object value1>;

        $r6 = $r1.<gnu.mapping.CallContext: java.lang.Object value2>;

        $r7 = $r1.<gnu.mapping.CallContext: java.lang.Object value3>;

        $r8 = $r1.<gnu.mapping.CallContext: java.lang.Object value4>;

        $r5 = virtualinvoke r0.<gnu.expr.ModuleMethod: java.lang.Object apply4(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r6, $r7, $r8);

        goto label3;

     label8:
        $r9 = $r1.<gnu.mapping.CallContext: java.lang.Object[] values>;

        $r5 = virtualinvoke r0.<gnu.expr.ModuleMethod: java.lang.Object applyN(java.lang.Object[])>($r9);

        goto label3;
    }
