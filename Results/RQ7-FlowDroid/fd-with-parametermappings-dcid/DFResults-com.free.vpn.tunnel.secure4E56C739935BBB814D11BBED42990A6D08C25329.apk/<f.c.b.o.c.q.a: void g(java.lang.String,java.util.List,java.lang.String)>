    public static void g(java.lang.String, java.util.List, java.lang.String)
    {
        java.lang.Object[] $r6;
        f.c.b.o.c.e $r4;
        java.lang.Exception $r7;
        java.util.List $r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r0, $r2;
        com.free.vpn.tunnel.base.report.param.AdEventParam $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.List;

        $r2 := @parameter2: java.lang.String;

     label01:
        $r3 = staticinvoke <f.c.b.o.c.q.a: com.free.vpn.tunnel.base.report.param.AdEventParam a()>();

        virtualinvoke $r3.<com.free.vpn.tunnel.base.report.param.AdEventParam: void setAdPlace(java.lang.String)>($r0);

        virtualinvoke $r3.<com.free.vpn.tunnel.base.report.param.AdEventParam: void setAdRequestList(java.util.List)>($r1);

        virtualinvoke $r3.<com.free.vpn.tunnel.base.report.param.AdEventParam: void setEventId(java.lang.String)>("ad_request");

        virtualinvoke $r3.<com.free.vpn.tunnel.base.report.param.AdEventParam: void setAdRequestTime(java.lang.String)>($r2);

        $r0 = staticinvoke <com.alibaba.fastjson.JSON: java.lang.String toJSONString(java.lang.Object)>($r3);

        $r4 = staticinvoke <f.c.b.o.c.e: f.c.b.o.c.e i()>();

        $z0 = $r4.<f.c.b.o.c.e: boolean a>;

     label02:
        if $z0 == 0 goto label07;

        $r5 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("report ads ev connected adPlaceId = ");

        $r2 = virtualinvoke $r3.<com.free.vpn.tunnel.base.report.param.AdEventParam: java.lang.String getAdPlace()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" event = ");

        $r2 = virtualinvoke $r3.<com.free.vpn.tunnel.base.report.param.AdEventParam: java.lang.String getEventId()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" json = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r6 = newarray (java.lang.Object)[0];

     label05:
        staticinvoke <d.b0.s: void M(java.lang.String,java.lang.Object[])>($r2, $r6);

     label06:
        goto label11;

     label07:
        $r5 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("report ads ev disconnect adPlaceId = ");

        $r2 = virtualinvoke $r3.<com.free.vpn.tunnel.base.report.param.AdEventParam: java.lang.String getAdPlace()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" event = ");

        $r2 = virtualinvoke $r3.<com.free.vpn.tunnel.base.report.param.AdEventParam: java.lang.String getEventId()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" json = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $r6 = newarray (java.lang.Object)[0];

     label10:
        staticinvoke <d.b0.s: void M(java.lang.String,java.lang.Object[])>($r2, $r6);

     label11:
        staticinvoke <f.c.b.o.c.q.a: void d(java.lang.String)>($r0);

     label12:
        return;

     label13:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label08 to label09 with label13;
        catch java.lang.Exception from label10 to label12 with label13;
    }
