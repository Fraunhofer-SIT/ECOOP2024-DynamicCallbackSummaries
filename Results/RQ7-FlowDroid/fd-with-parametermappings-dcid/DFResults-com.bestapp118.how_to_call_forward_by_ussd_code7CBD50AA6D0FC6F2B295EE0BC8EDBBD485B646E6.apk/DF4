Source: $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir")
$r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir") in <gnu.text.FilePath: gnu.text.Path resolve(java.lang.String)>
Sink: specialinvoke $r2.<gnu.text.PrettyWriter: void <init>(java.io.Writer,boolean)>($r1, 0) in <gnu.mapping.OutPort: void <init>(java.io.Writer,boolean,boolean)>

<gnu.text.FilePath: gnu.text.Path resolve(java.lang.String)>: $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir")
<gnu.text.FilePath: gnu.text.Path resolve(java.lang.String)>: specialinvoke $r7.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r5, $r1)
<gnu.text.FilePath: gnu.text.Path resolve(java.lang.String)>: $r3 = $r7
<gnu.text.FilePath: gnu.text.Path resolve(java.lang.String)>: r0 = staticinvoke <gnu.text.FilePath: gnu.text.FilePath valueOf(java.io.File)>($r3)
<gnu.text.FilePath: gnu.text.FilePath valueOf(java.io.File)>: specialinvoke $r1.<gnu.text.FilePath: void <init>(java.io.File)>($r0)
<gnu.text.FilePath: void <init>(java.io.File)>: r0.<gnu.text.FilePath: java.io.File file> = $r2
<gnu.text.FilePath: void <init>(java.io.File)>: return
<gnu.text.FilePath: gnu.text.FilePath valueOf(java.io.File)>: return $r1
<gnu.text.FilePath: gnu.text.Path resolve(java.lang.String)>: return r0
<gnu.text.Path: java.net.URL toURL(java.lang.String)>: $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>()
<gnu.text.Path: java.net.URL toURL(java.lang.String)>: specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r0)
<gnu.text.Path: java.net.URL toURL(java.lang.String)>: return $r2
<gnu.text.URIPath: java.net.URL toURL()>: return $r3
<gnu.text.Path: java.net.URL toURL(java.lang.String)>: return $r2
<gnu.text.URIPath: java.net.URL toURL()>: return $r3
<gnu.text.URIPath: java.io.OutputStream openOutputStream()>: $r2 = staticinvoke <gnu.text.URLPath: java.io.OutputStream openOutputStream(java.net.URL)>($r1)
<gnu.text.URLPath: java.io.OutputStream openOutputStream(java.net.URL)>: $r4 = virtualinvoke $r3.<java.net.URL: java.lang.String toString()>()
<gnu.text.URLPath: java.io.OutputStream openOutputStream(java.net.URL)>: specialinvoke $r1.<java.net.URI: void <init>(java.lang.String)>($r4)
<gnu.text.URLPath: java.io.OutputStream openOutputStream(java.net.URL)>: specialinvoke $r0.<java.io.File: void <init>(java.net.URI)>($r1)
<gnu.text.URLPath: java.io.OutputStream openOutputStream(java.net.URL)>: specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>($r0)
<gnu.text.URLPath: java.io.OutputStream openOutputStream(java.net.URL)>: return $r5
<gnu.text.URIPath: java.io.OutputStream openOutputStream()>: return $r2
<gnu.mapping.OutPort: gnu.mapping.OutPort openFile(java.lang.Object)>: specialinvoke $r0.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r6)
<gnu.mapping.OutPort: gnu.mapping.OutPort openFile(java.lang.Object)>: specialinvoke $r8.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r0)
<gnu.mapping.OutPort: gnu.mapping.OutPort openFile(java.lang.Object)>: specialinvoke $r10.<gnu.mapping.OutPort: void <init>(java.io.Writer,gnu.text.Path)>($r8, $r5)
<gnu.mapping.OutPort: void <init>(java.io.Writer,gnu.text.Path)>: specialinvoke r0.<gnu.mapping.OutPort: void <init>(java.io.Writer,boolean,boolean)>($r1, 0, 0)
<gnu.mapping.OutPort: void <init>(java.io.Writer,boolean,boolean)>: specialinvoke $r2.<gnu.text.PrettyWriter: void <init>(java.io.Writer,boolean)>($r1, 0)
