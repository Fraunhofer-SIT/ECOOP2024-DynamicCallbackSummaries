    public static void writeChar(java.lang.Object, gnu.mapping.OutPort)
    {
        gnu.mapping.WrongType $r4;
        gnu.mapping.OutPort $r1;
        gnu.text.Char $r2;
        int $i0;
        java.lang.Object $r0;
        java.lang.ClassCastException $r3;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: gnu.mapping.OutPort;

     label1:
        $r2 = (gnu.text.Char) $r0;

     label2:
        $i0 = staticinvoke <kawa.lib.characters: int char$To$Integer(gnu.text.Char)>($r2);

        staticinvoke <gnu.text.Char: void print(int,gnu.lists.Consumer)>($i0, $r1);

        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new gnu.mapping.WrongType;

        specialinvoke $r4.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r3, "char->integer", 1, $r0);

        throw $r4;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }
