    public static java.lang.Object schemeReportEnvironment(java.lang.Object)
    {
        gnu.kawa.functions.IsEqv $r1;
        java.lang.Object[] $r5;
        java.lang.Boolean $r4;
        java.lang.Object $r0, $r3;
        gnu.math.IntNum $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 = <kawa.standard.Scheme: gnu.kawa.functions.IsEqv isEqv>;

        $r2 = <kawa.lib.misc: gnu.math.IntNum Lit0>;

        $r3 = virtualinvoke $r1.<gnu.mapping.Procedure: java.lang.Object apply2(java.lang.Object,java.lang.Object)>($r0, $r2);

        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        if $r3 == $r4 goto label2;

        $r0 = <kawa.standard.Scheme: gnu.mapping.Environment r4Environment>;

     label1:
        return $r0;

     label2:
        $r1 = <kawa.standard.Scheme: gnu.kawa.functions.IsEqv isEqv>;

        $r2 = <kawa.lib.misc: gnu.math.IntNum Lit1>;

        $r0 = virtualinvoke $r1.<gnu.mapping.Procedure: java.lang.Object apply2(java.lang.Object,java.lang.Object)>($r0, $r2);

        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        if $r0 == $r4 goto label3;

        $r0 = <kawa.standard.Scheme: gnu.mapping.Environment r5Environment>;

        goto label1;

     label3:
        $r5 = newarray (java.lang.Object)[0];

        $r0 = staticinvoke <kawa.lib.misc: java.lang.Object error$V(java.lang.Object,java.lang.Object[])>("scheme-report-environment version must be 4 or 5", $r5);

        goto label1;
    }
