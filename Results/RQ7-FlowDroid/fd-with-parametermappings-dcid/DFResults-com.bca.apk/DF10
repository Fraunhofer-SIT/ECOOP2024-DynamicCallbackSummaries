Source: $i2 = virtualinvoke $r4.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i1)
$i2 = virtualinvoke $r4.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i1) in <o.ει: void ι(int,o.Ιэ)>
Sink: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0) in <o.ει: void ı()>

<o.ει: void ι(int,o.Ιэ)>: $i2 = virtualinvoke $r4.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i1)
<o.ει: void ι(int,o.Ιэ)>: $r1 = r0.<o.ει: byte[] ι>
<o.ει: void ι(int,o.Ιэ)>: throw $r6
<o.Ϝı: void ı(o.ει,java.lang.String,java.lang.String,long)>: virtualinvoke $r0.<o.ει: void ǃ(int)>(24)
<o.ει: void ǃ(int)>: virtualinvoke r0.<o.ει: void ı()>()
<o.ει: void ı()>: $r1 = r0.<o.ει: byte[] ι>
<o.ει: void ı()>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0)
