    public gnu.math.Complex toInexact()
    {
        gnu.math.DComplex $r1;
        gnu.math.RealNum $r2;
        gnu.math.Complex r0;
        boolean $z0;
        double $d0, $d1;

        r0 := @this: gnu.math.Complex;

        $z0 = virtualinvoke r0.<gnu.math.Complex: boolean isExact()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = new gnu.math.DComplex;

        $r2 = virtualinvoke r0.<gnu.math.Complex: gnu.math.RealNum re()>();

        $d0 = virtualinvoke $r2.<gnu.math.RealNum: double doubleValue()>();

        $r2 = virtualinvoke r0.<gnu.math.Complex: gnu.math.RealNum im()>();

        $d1 = virtualinvoke $r2.<gnu.math.RealNum: double doubleValue()>();

        specialinvoke $r1.<gnu.math.DComplex: void <init>(double,double)>($d0, $d1);

        return $r1;
    }
