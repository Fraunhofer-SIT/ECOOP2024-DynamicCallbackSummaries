    public void <init>(org.json.JSONTokener) throws org.json.JSONException
    {
        org.json.JSONException $r4;
        org.json.JSONTokener $r1;
        int $i1;
        char $c0;
        java.lang.Object $r3;
        org.json.JSONArray r0;
        java.util.ArrayList $r2;

        r0 := @this: org.json.JSONArray;

        $r1 := @parameter0: org.json.JSONTokener;

        specialinvoke r0.<org.json.JSONArray: void <init>()>();

        $c0 = virtualinvoke $r1.<org.json.JSONTokener: char nextClean()>();

        $i1 = (int) $c0;

        if $i1 != 91 goto label8;

        $c0 = virtualinvoke $r1.<org.json.JSONTokener: char nextClean()>();

        $i1 = (int) $c0;

        if $i1 == 93 goto label7;

        virtualinvoke $r1.<org.json.JSONTokener: void back()>();

     label1:
        $c0 = virtualinvoke $r1.<org.json.JSONTokener: char nextClean()>();

        $i1 = (int) $c0;

        if $i1 != 44 goto label2;

        virtualinvoke $r1.<org.json.JSONTokener: void back()>();

        $r2 = r0.<org.json.JSONArray: java.util.ArrayList myArrayList>;

        $r3 = <org.json.JSONObject: java.lang.Object NULL>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label3;

     label2:
        virtualinvoke $r1.<org.json.JSONTokener: void back()>();

        $r2 = r0.<org.json.JSONArray: java.util.ArrayList myArrayList>;

        $r3 = virtualinvoke $r1.<org.json.JSONTokener: java.lang.Object nextValue()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label3:
        $c0 = virtualinvoke $r1.<org.json.JSONTokener: char nextClean()>();

        $i1 = (int) $c0;

        if $i1 == 44 goto label5;

        $i1 = (int) $c0;

        if $i1 == 59 goto label5;

        $i1 = (int) $c0;

        if $i1 != 93 goto label4;

        return;

     label4:
        $r4 = virtualinvoke $r1.<org.json.JSONTokener: org.json.JSONException syntaxError(java.lang.String)>("Expected a \',\' or \']\'");

        throw $r4;

     label5:
        $c0 = virtualinvoke $r1.<org.json.JSONTokener: char nextClean()>();

        $i1 = (int) $c0;

        if $i1 != 93 goto label6;

        return;

     label6:
        virtualinvoke $r1.<org.json.JSONTokener: void back()>();

        goto label1;

     label7:
        return;

     label8:
        $r4 = virtualinvoke $r1.<org.json.JSONTokener: org.json.JSONException syntaxError(java.lang.String)>("A JSONArray text must start with \'[\'");

        throw $r4;
    }
