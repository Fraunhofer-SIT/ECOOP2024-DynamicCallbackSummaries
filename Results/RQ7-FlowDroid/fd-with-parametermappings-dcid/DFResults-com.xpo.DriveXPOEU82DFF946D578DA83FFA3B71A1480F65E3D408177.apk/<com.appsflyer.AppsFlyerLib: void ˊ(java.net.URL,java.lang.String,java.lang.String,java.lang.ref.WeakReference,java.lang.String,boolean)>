    private void \u02ca(java.net.URL, java.lang.String, java.lang.String, java.lang.ref.WeakReference, java.lang.String, boolean) throws java.io.IOException
    {
        java.net.HttpURLConnection $r12, $r24;
        byte[] $r13;
        com.appsflyer.AppsFlyerConversionListener $r8;
        java.net.URL $r1;
        android.net.Uri $r22;
        com.appsflyer.AppsFlyerLib r0;
        org.json.JSONObject $r29;
        byte $b3;
        java.util.Map $r30;
        boolean $z0, $z1;
        com.appsflyer.cache.CacheManager $r23;
        java.util.concurrent.ScheduledThreadPoolExecutor $r27;
        com.appsflyer.b$e$b $r35;
        java.io.Writer $r40;
        com.appsflyer.r $r9;
        java.lang.Throwable $r18, $r31, $r33;
        android.content.Context $r7;
        com.appsflyer.AppsFlyerTrackingRequestListener $r17;
        com.appsflyer.l $r32;
        com.appsflyer.AppsFlyerProperties $r19;
        com.appsflyer.AFExecutor $r26;
        long $l1, $l2;
        java.net.URLConnection $r11;
        int $i0, $i4;
        java.util.concurrent.ScheduledExecutorService $r25;
        java.io.OutputStreamWriter $r34;
        java.lang.String $r2, $r3, $r5, $r10, $r15, $r20;
        java.lang.ref.WeakReference $r4, $r36;
        java.lang.Void[] $r21;
        java.io.OutputStream $r14;
        com.appsflyer.AppsFlyerLib$b $r39;
        com.appsflyer.y$b $r37;
        com.appsflyer.AppsFlyerLib$d $r38;
        java.util.concurrent.TimeUnit $r28;
        android.content.SharedPreferences $r16;
        java.lang.Object $r6;

        r0 := @this: com.appsflyer.AppsFlyerLib;

        $r1 := @parameter0: java.net.URL;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.ref.WeakReference;

        $r5 := @parameter4: java.lang.String;

        $z0 := @parameter5: boolean;

        $r6 = virtualinvoke $r4.<java.lang.ref.Reference: java.lang.Object get()>();

        $r7 = (android.content.Context) $r6;

        if $z0 == 0 goto label001;

        $r8 = <com.appsflyer.AppsFlyerLib: com.appsflyer.AppsFlyerConversionListener \u02cf\u0971>;

        if $r8 == null goto label001;

        $z1 = 1;

        goto label002;

     label001:
        $z1 = 0;

     label002:
        $r6 = null;

     label003:
        $r9 = staticinvoke <com.appsflyer.r: com.appsflyer.r \u02ce()>();

        $r10 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r9.<com.appsflyer.r: void \u02cf(java.lang.String,java.lang.String)>($r10, $r2);

        $r11 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        $r12 = (java.net.HttpURLConnection) $r11;

     label004:
        virtualinvoke $r12.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        $r13 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        $i0 = lengthof $r13;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r12.<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Length", $r10);

        virtualinvoke $r12.<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json");

        virtualinvoke $r12.<java.net.URLConnection: void setConnectTimeout(int)>(10000);

        virtualinvoke $r12.<java.net.URLConnection: void setDoOutput(boolean)>(1);

     label005:
        $r34 = new java.io.OutputStreamWriter;

     label006:
        $r14 = virtualinvoke $r12.<java.net.URLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r34.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r14, "UTF-8");

     label007:
        virtualinvoke $r34.<java.io.Writer: void write(java.lang.String)>($r2);

     label008:
        virtualinvoke $r34.<java.io.Writer: void close()>();

        $i0 = virtualinvoke $r12.<java.net.HttpURLConnection: int getResponseCode()>();

        $r2 = staticinvoke <com.appsflyer.AppsFlyerLib: java.lang.String \u02cb(java.net.HttpURLConnection)>($r12);

        $r9 = staticinvoke <com.appsflyer.r: com.appsflyer.r \u02ce()>();

        $r10 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r9.<com.appsflyer.r: void \u02ce(java.lang.String,int,java.lang.String)>($r10, $i0, $r2);

     label009:
        $r10 = "response code: ";

     label010:
        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r10 = virtualinvoke $r10.<java.lang.String: java.lang.String concat(java.lang.String)>($r15);

        staticinvoke <com.appsflyer.AFLogger: void afInfoLog(java.lang.String)>($r10);

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        staticinvoke <com.appsflyer.AppsFlyerLib: void \u0971(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>($r7, "AppsFlyer_4.8.18", "SERVER_RESPONSE_CODE", $r10);

        $r16 = virtualinvoke $r7.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("appsflyer-data", 0);

     label011:
        if $i0 != 200 goto label052;

     label012:
        $r6 = virtualinvoke $r4.<java.lang.ref.Reference: java.lang.Object get()>();

     label013:
        if $r6 == null goto label019;

        if $z0 == 0 goto label019;

     label014:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.appsflyer.AppsFlyerLib: long \u02ca\u0971> = $l1;

        $r17 = <com.appsflyer.AppsFlyerLib: com.appsflyer.AppsFlyerTrackingRequestListener \u141d\u0971>;

     label015:
        if $r17 == null goto label019;

     label016:
        interfaceinvoke $r17.<com.appsflyer.AppsFlyerTrackingRequestListener: void onTrackingRequestSuccess()>();

     label017:
        goto label019;

     label018:
        $r18 := @caughtexception;

        $r6 = $r12;

        goto label104;

     label019:
        $r19 = staticinvoke <com.appsflyer.AppsFlyerProperties: com.appsflyer.AppsFlyerProperties getInstance()>();

        $r10 = virtualinvoke $r19.<com.appsflyer.AppsFlyerProperties: java.lang.String getString(java.lang.String)>("afUninstallToken");

     label020:
        if $r10 == null goto label026;

        $r15 = "Uninstall Token exists: ";

     label021:
        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);

        $r15 = virtualinvoke $r15.<java.lang.String: java.lang.String concat(java.lang.String)>($r20);

        staticinvoke <com.appsflyer.AFLogger: void afDebugLog(java.lang.String)>($r15);

        $z0 = interfaceinvoke $r16.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("sentRegisterRequestToAF", 0);

     label022:
        if $z0 != 0 goto label031;

        $r15 = "Resending Uninstall token to AF servers: ";

     label023:
        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);

        $r15 = virtualinvoke $r15.<java.lang.String: java.lang.String concat(java.lang.String)>($r20);

        staticinvoke <com.appsflyer.AFLogger: void afDebugLog(java.lang.String)>($r15);

        $r35 = new com.appsflyer.b$e$b;

     label024:
        specialinvoke $r35.<com.appsflyer.b$e$b: void <init>(java.lang.String)>($r10);

        staticinvoke <com.appsflyer.y: void \u0971(android.content.Context,com.appsflyer.b$e$b)>($r7, $r35);

     label025:
        goto label031;

     label026:
        $r19 = staticinvoke <com.appsflyer.AppsFlyerProperties: com.appsflyer.AppsFlyerProperties getInstance()>();

        $r10 = virtualinvoke $r19.<com.appsflyer.AppsFlyerProperties: java.lang.String getString(java.lang.String)>("gcmProjectNumber");

     label027:
        if $r10 == null goto label031;

     label028:
        staticinvoke <com.appsflyer.AFLogger: void afDebugLog(java.lang.String)>("GCM Project number exists. Fetching token and sending to AF servers");

        $r36 = new java.lang.ref.WeakReference;

     label029:
        specialinvoke $r36.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r7);

        $r37 = new com.appsflyer.y$b;

     label030:
        specialinvoke $r37.<com.appsflyer.y$b: void <init>(java.lang.ref.WeakReference)>($r36);

        $r21 = newarray (java.lang.Void)[0];

        virtualinvoke $r37.<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r21);

     label031:
        $r22 = r0.<com.appsflyer.AppsFlyerLib: android.net.Uri latestDeepLink>;

     label032:
        if $r22 == null goto label034;

     label033:
        r0.<com.appsflyer.AppsFlyerLib: android.net.Uri latestDeepLink> = null;

     label034:
        if $r5 == null goto label036;

     label035:
        $r23 = staticinvoke <com.appsflyer.cache.CacheManager: com.appsflyer.cache.CacheManager getInstance()>();

        virtualinvoke $r23.<com.appsflyer.cache.CacheManager: void deleteRequest(java.lang.String,android.content.Context)>($r5, $r7);

     label036:
        $r6 = virtualinvoke $r4.<java.lang.ref.Reference: java.lang.Object get()>();

     label037:
        if $r6 == null goto label049;

        if $r5 != null goto label049;

     label038:
        staticinvoke <com.appsflyer.AppsFlyerLib: void \u02cf(android.content.Context,java.lang.String,java.lang.String)>($r7, "sentSuccessfully", "true");

        $z0 = r0.<com.appsflyer.AppsFlyerLib: boolean \u02bb\u0971>;

     label039:
        if $z0 != 0 goto label049;

     label040:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label041:
        $r24 = $r12;

     label042:
        $l2 = r0.<com.appsflyer.AppsFlyerLib: long \u0971\u141d>;

     label043:
        $l1 = $l1 - $l2;

        $b3 = $l1 cmp 15000L;

        $i0 = (int) $b3;

        if $i0 < 0 goto label050;

     label044:
        $r25 = r0.<com.appsflyer.AppsFlyerLib: java.util.concurrent.ScheduledExecutorService \u02bf>;

     label045:
        if $r25 != null goto label050;

     label046:
        $r26 = staticinvoke <com.appsflyer.AFExecutor: com.appsflyer.AFExecutor getInstance()>();

        $r27 = virtualinvoke $r26.<com.appsflyer.AFExecutor: java.util.concurrent.ScheduledThreadPoolExecutor \u0971()>();

        r0.<com.appsflyer.AppsFlyerLib: java.util.concurrent.ScheduledExecutorService \u02bf> = $r27;

        $r38 = new com.appsflyer.AppsFlyerLib$d;

     label047:
        specialinvoke $r38.<com.appsflyer.AppsFlyerLib$d: void <init>(com.appsflyer.AppsFlyerLib,android.content.Context)>(r0, $r7);

        $r25 = r0.<com.appsflyer.AppsFlyerLib: java.util.concurrent.ScheduledExecutorService \u02bf>;

        $r28 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        staticinvoke <com.appsflyer.AppsFlyerLib: void \u0971(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r25, $r38, 1L, $r28);

     label048:
        goto label050;

     label049:
        $r24 = $r12;

     label050:
        $r29 = staticinvoke <com.appsflyer.ServerConfigHandler: org.json.JSONObject \u0971(java.lang.String)>($r2);

        $z0 = virtualinvoke $r29.<org.json.JSONObject: boolean optBoolean(java.lang.String,boolean)>("send_background", 0);

        r0.<com.appsflyer.AppsFlyerLib: boolean \u02cd> = $z0;

     label051:
        goto label056;

     label052:
        $r24 = $r12;

     label053:
        $r17 = <com.appsflyer.AppsFlyerLib: com.appsflyer.AppsFlyerTrackingRequestListener \u141d\u0971>;

     label054:
        if $r17 == null goto label056;

        $r2 = "Failure: ";

     label055:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String concat(java.lang.String)>($r5);

        $r17 = <com.appsflyer.AppsFlyerLib: com.appsflyer.AppsFlyerTrackingRequestListener \u141d\u0971>;

        interfaceinvoke $r17.<com.appsflyer.AppsFlyerTrackingRequestListener: void onTrackingRequestFailure(java.lang.String)>($r2);

     label056:
        $i0 = interfaceinvoke $r16.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("appsflyerConversionDataRequestRetries", 0);

        $l1 = interfaceinvoke $r16.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("appsflyerConversionDataCacheExpiration", 0L);

     label057:
        $b3 = $l1 cmp 0L;

        if $b3 == 0 goto label061;

     label058:
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label059:
        $l1 = $l2 - $l1;

        $b3 = $l1 cmp 5184000000L;

        $i4 = (int) $b3;

        if $i4 <= 0 goto label061;

     label060:
        staticinvoke <com.appsflyer.AppsFlyerLib: void \u02cf(android.content.Context,java.lang.String,java.lang.String)>($r7, "attributionId", null);

        staticinvoke <com.appsflyer.AppsFlyerLib: void \u02cb(android.content.Context,java.lang.String,long)>($r7, "appsflyerConversionDataCacheExpiration", 0L);

     label061:
        $r2 = interfaceinvoke $r16.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("attributionId", null);

     label062:
        if $r2 != null goto label068;

        if $r3 == null goto label068;

        if $z1 == 0 goto label068;

     label063:
        $r8 = <com.appsflyer.AppsFlyerLib: com.appsflyer.AppsFlyerConversionListener \u02cf\u0971>;

     label064:
        if $r8 == null goto label068;

        if $i0 > 5 goto label068;

     label065:
        $r26 = staticinvoke <com.appsflyer.AFExecutor: com.appsflyer.AFExecutor getInstance()>();

        $r27 = virtualinvoke $r26.<com.appsflyer.AFExecutor: java.util.concurrent.ScheduledThreadPoolExecutor \u0971()>();

        $r39 = new com.appsflyer.AppsFlyerLib$b;

     label066:
        $r7 = virtualinvoke $r7.<android.content.Context: android.content.Context getApplicationContext()>();

        specialinvoke $r39.<com.appsflyer.AppsFlyerLib$b: void <init>(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.util.concurrent.ScheduledExecutorService)>(r0, $r7, $r3, $r27);

        $r28 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        staticinvoke <com.appsflyer.AppsFlyerLib: void \u0971(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r27, $r39, 10L, $r28);

     label067:
        goto label090;

     label068:
        if $r3 != null goto label071;

     label069:
        staticinvoke <com.appsflyer.AFLogger: void afWarnLog(java.lang.String)>("AppsFlyer dev key is missing.");

     label070:
        goto label090;

     label071:
        if $z1 == 0 goto label090;

     label072:
        $r8 = <com.appsflyer.AppsFlyerLib: com.appsflyer.AppsFlyerConversionListener \u02cf\u0971>;

     label073:
        if $r8 == null goto label090;

     label074:
        $r2 = interfaceinvoke $r16.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("attributionId", null);

     label075:
        if $r2 == null goto label090;

     label076:
        $i0 = staticinvoke <com.appsflyer.AppsFlyerLib: int \u02cf(android.content.SharedPreferences,java.lang.String,boolean)>($r16, "appsFlyerCount", 0);

     label077:
        if $i0 <= 1 goto label090;

     label078:
        $r30 = staticinvoke <com.appsflyer.AppsFlyerLib: java.util.Map \u02cb(android.content.Context)>($r7);

     label079:
        if $r30 == null goto label090;

     label080:
        $z0 = interfaceinvoke $r30.<java.util.Map: boolean containsKey(java.lang.Object)>("is_first_launch");

     label081:
        if $z0 != 0 goto label083;

     label082:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(0);

        interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("is_first_launch", $r2);

     label083:
        $r8 = <com.appsflyer.AppsFlyerLib: com.appsflyer.AppsFlyerConversionListener \u02cf\u0971>;

        interfaceinvoke $r8.<com.appsflyer.AppsFlyerConversionListener: void onInstallConversionDataLoaded(java.util.Map)>($r30);

     label084:
        goto label090;

     label085:
        $r31 := @caughtexception;

     label086:
        $r2 = virtualinvoke $r31.<java.lang.Throwable: java.lang.String getLocalizedMessage()>();

        staticinvoke <com.appsflyer.AFLogger: void afErrorLog(java.lang.String,java.lang.Throwable)>($r2, $r31);

     label087:
        goto label090;

     label088:
        $r32 := @caughtexception;

     label089:
        $r2 = virtualinvoke $r32.<java.lang.Throwable: java.lang.String getMessage()>();

        staticinvoke <com.appsflyer.AFLogger: void afErrorLog(java.lang.String,java.lang.Throwable)>($r2, $r32);

     label090:
        if $r24 == null goto label106;

        virtualinvoke $r24.<java.net.HttpURLConnection: void disconnect()>();

        return;

     label091:
        $r33 := @caughtexception;

        $r24 = $r12;

        $r6 = $r34;

        goto label093;

     label092:
        $r33 := @caughtexception;

        $r24 = $r12;

     label093:
        if $r6 != null goto label099;

     label094:
        $r17 = <com.appsflyer.AppsFlyerLib: com.appsflyer.AppsFlyerTrackingRequestListener \u141d\u0971>;

     label095:
        if $r17 == null goto label100;

     label096:
        interfaceinvoke $r17.<com.appsflyer.AppsFlyerTrackingRequestListener: void onTrackingRequestFailure(java.lang.String)>("No Connectivity");

     label097:
        goto label100;

     label098:
        $r18 := @caughtexception;

        goto label102;

     label099:
        $r40 = (java.io.Writer) $r6;

        virtualinvoke $r40.<java.io.Writer: void close()>();

     label100:
        throw $r33;

     label101:
        $r18 := @caughtexception;

        $r24 = $r12;

     label102:
        $r6 = $r24;

        goto label104;

     label103:
        $r18 := @caughtexception;

     label104:
        if $r6 == null goto label105;

        $r12 = (java.net.HttpURLConnection) $r6;

        virtualinvoke $r12.<java.net.HttpURLConnection: void disconnect()>();

     label105:
        throw $r18;

     label106:
        return;

        catch java.lang.Throwable from label003 to label004 with label103;
        catch java.lang.Throwable from label004 to label005 with label101;
        catch java.lang.Throwable from label005 to label006 with label092;
        catch java.lang.Throwable from label006 to label007 with label092;
        catch java.lang.Throwable from label007 to label008 with label091;
        catch java.lang.Throwable from label008 to label009 with label101;
        catch java.lang.Throwable from label010 to label011 with label101;
        catch java.lang.Throwable from label012 to label013 with label101;
        catch java.lang.Throwable from label014 to label015 with label018;
        catch java.lang.Throwable from label016 to label017 with label018;
        catch java.lang.Throwable from label019 to label020 with label101;
        catch java.lang.Throwable from label021 to label022 with label018;
        catch java.lang.Throwable from label023 to label024 with label018;
        catch java.lang.Throwable from label024 to label025 with label018;
        catch java.lang.Throwable from label026 to label027 with label101;
        catch java.lang.Throwable from label028 to label029 with label018;
        catch java.lang.Throwable from label029 to label030 with label018;
        catch java.lang.Throwable from label030 to label031 with label018;
        catch java.lang.Throwable from label031 to label032 with label101;
        catch java.lang.Throwable from label033 to label034 with label018;
        catch java.lang.Throwable from label035 to label036 with label018;
        catch java.lang.Throwable from label036 to label037 with label101;
        catch java.lang.Throwable from label038 to label039 with label101;
        catch java.lang.Throwable from label040 to label041 with label101;
        catch java.lang.Throwable from label042 to label043 with label098;
        catch java.lang.Throwable from label044 to label045 with label098;
        catch java.lang.Throwable from label046 to label047 with label098;
        catch java.lang.Throwable from label047 to label048 with label098;
        catch java.lang.Throwable from label050 to label051 with label098;
        catch java.lang.Throwable from label053 to label054 with label098;
        catch java.lang.Throwable from label055 to label057 with label098;
        catch java.lang.Throwable from label058 to label059 with label098;
        catch java.lang.Throwable from label060 to label062 with label098;
        catch java.lang.Throwable from label063 to label064 with label098;
        catch java.lang.Throwable from label065 to label066 with label098;
        catch java.lang.Throwable from label066 to label067 with label098;
        catch java.lang.Throwable from label069 to label070 with label098;
        catch java.lang.Throwable from label072 to label073 with label098;
        catch java.lang.Throwable from label074 to label075 with label098;
        catch java.lang.Throwable from label076 to label077 with label098;
        catch com.appsflyer.l from label078 to label079 with label088;
        catch java.lang.Throwable from label078 to label079 with label098;
        catch java.lang.Throwable from label080 to label081 with label085;
        catch java.lang.Throwable from label082 to label084 with label085;
        catch com.appsflyer.l from label086 to label087 with label088;
        catch java.lang.Throwable from label086 to label087 with label098;
        catch java.lang.Throwable from label089 to label090 with label098;
        catch java.lang.Throwable from label094 to label095 with label098;
        catch java.lang.Throwable from label096 to label097 with label098;
        catch java.lang.Throwable from label099 to label101 with label098;
    }
