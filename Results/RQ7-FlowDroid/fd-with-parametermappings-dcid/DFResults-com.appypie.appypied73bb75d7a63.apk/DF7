Source: $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0)
$i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0) in <com.koushikdutta.async.http.libcore.StrictLineReader: void fillBuf()>
Sink: virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r3, $i0, i3) in <com.koushikdutta.async.http.libcore.StrictLineReader: java.lang.String readLine()>

<com.koushikdutta.async.http.libcore.StrictLineReader: void fillBuf()>: $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0)
<com.koushikdutta.async.http.libcore.StrictLineReader: void fillBuf()>: $r1 = r0.<com.koushikdutta.async.http.libcore.StrictLineReader: byte[] buf>
<com.koushikdutta.async.http.libcore.StrictLineReader: void fillBuf()>: throw $r4
<com.koushikdutta.async.http.libcore.StrictLineReader: java.lang.String readLine()>: $r3 = r0.<com.koushikdutta.async.http.libcore.StrictLineReader: byte[] buf>
<com.koushikdutta.async.http.libcore.StrictLineReader: java.lang.String readLine()>: virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r3, $i0, i3)
