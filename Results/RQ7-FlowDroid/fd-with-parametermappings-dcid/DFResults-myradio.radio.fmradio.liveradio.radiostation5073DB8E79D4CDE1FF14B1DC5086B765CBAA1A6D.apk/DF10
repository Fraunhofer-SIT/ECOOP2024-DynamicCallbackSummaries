Source: $i3 = virtualinvoke $r16.<java.io.InputStream: int read(byte[])>($r11)
$i3 = virtualinvoke $r16.<java.io.InputStream: int read(byte[])>($r11) in <com.bykv.vk.openvk.component.video.a.b.g: void d(com.bykv.vk.openvk.component.video.a.b.g$b,com.bykv.vk.openvk.component.video.a.b.l$a)>
Sink: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0) in <com.bykv.vk.openvk.component.video.a.b.g$b: void b(byte[],int,int)>

<com.bykv.vk.openvk.component.video.a.b.g: void d(com.bykv.vk.openvk.component.video.a.b.g$b,com.bykv.vk.openvk.component.video.a.b.l$a)>: $i3 = virtualinvoke $r16.<java.io.InputStream: int read(byte[])>($r11)
<com.bykv.vk.openvk.component.video.a.b.g: void d(com.bykv.vk.openvk.component.video.a.b.g$b,com.bykv.vk.openvk.component.video.a.b.l$a)>: virtualinvoke $r14.<com.bykv.vk.openvk.component.video.a.b.h: void a(byte[],int,int)>($r11, 0, $i3)
<com.bykv.vk.openvk.component.video.a.b.h: void a(byte[],int,int)>: return
<com.bykv.vk.openvk.component.video.a.b.g: void d(com.bykv.vk.openvk.component.video.a.b.g$b,com.bykv.vk.openvk.component.video.a.b.l$a)>: virtualinvoke $r1.<com.bykv.vk.openvk.component.video.a.b.g$b: void b(byte[],int,int)>($r11, 0, $i3)
<com.bykv.vk.openvk.component.video.a.b.g$b: void b(byte[],int,int)>: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
