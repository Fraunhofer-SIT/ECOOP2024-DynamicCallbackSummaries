Source: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r2)
$i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r2) in <f.g.b.g.f: boolean f()>
Sink: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i0) in <f.g.b.g.j: long a(java.io.InputStream,java.io.OutputStream)>

<f.g.b.g.f: boolean f()>: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r2)
<f.g.b.g.f: boolean f()>: $r2 = r0.<f.g.b.g.f: byte[] b>
<f.g.b.g.f: boolean f()>: return 0
<f.g.b.g.f: int read(byte[],int,int)>: $r2 = r0.<f.g.b.g.f: byte[] b>
<f.g.b.g.f: int read(byte[],int,int)>: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, $r1, $i0, $i1)
<f.g.b.g.f: int read(byte[],int,int)>: return $i1
<f.g.b.g.j: long a(java.io.InputStream,java.io.OutputStream)>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i0)
