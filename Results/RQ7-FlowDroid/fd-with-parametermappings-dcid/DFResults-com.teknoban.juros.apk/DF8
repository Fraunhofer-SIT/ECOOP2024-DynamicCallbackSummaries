Source: $i0 = virtualinvoke $r1.<java.io.Reader: int read(char[],int,int)>($r2, $i1, $i0)
$i0 = virtualinvoke $r1.<java.io.Reader: int read(char[],int,int)>($r2, $i1, $i0) in <gnu.text.LineBufferedReader: int fill(int)>
Sink: virtualinvoke $r2.<gnu.mapping.OutPort: void print(java.lang.String)>($r1) in <gnu.mapping.TtyInPort: void emitPrompt(java.lang.String)>

<gnu.text.LineBufferedReader: int fill(int)>: $i0 = virtualinvoke $r1.<java.io.Reader: int read(char[],int,int)>($r2, $i1, $i0)
<gnu.text.LineBufferedReader: int fill(int)>: $r2 = r0.<gnu.text.LineBufferedReader: char[] buffer>
<gnu.text.LineBufferedReader: int fill(int)>: r0 := @this: gnu.text.LineBufferedReader
<gnu.text.LineBufferedReader: int read()>: virtualinvoke r0.<gnu.text.LineBufferedReader: void lineStart(boolean)>($z0)
<gnu.mapping.TtyInPort: void lineStart(boolean)>: $r3 = virtualinvoke $r2.<gnu.mapping.Procedure: java.lang.Object apply1(java.lang.Object)>(r0)
<kawa.lang.SyntaxRules: java.lang.Object apply1(java.lang.Object)>: $r1 = virtualinvoke r0.<kawa.lang.SyntaxRules: java.lang.Object expand(java.lang.Object,kawa.lang.Translator)>($r1, $r4)
<kawa.lang.SyntaxRules: java.lang.Object expand(java.lang.Object,kawa.lang.Translator)>: $r1 = virtualinvoke $r7.<kawa.lang.SyntaxRule: java.lang.Object execute(java.lang.Object[],kawa.lang.Translator,kawa.lang.TemplateScope)>($r3, $r2, $r12)
<kawa.lang.SyntaxTemplate: java.lang.Object execute(java.lang.Object[],kawa.lang.Translator,kawa.lang.TemplateScope)>: $r4 = virtualinvoke r0.<kawa.lang.SyntaxTemplate: java.lang.Object execute(int,java.lang.Object[],int,int[],kawa.lang.Translator,kawa.lang.TemplateScope)>(0, $r1, 0, $r5, $r2, $r3)
<kawa.lang.SyntaxTemplate: java.lang.Object execute(int,java.lang.Object[],int,int[],kawa.lang.Translator,kawa.lang.TemplateScope)>: $r7 = virtualinvoke r0.<kawa.lang.SyntaxTemplate: java.lang.Object execute(int,java.lang.Object[],int,int[],kawa.lang.Translator,kawa.lang.TemplateScope)>($i0, $r1, $i1, $r2, $r3, $r4)
<kawa.lang.SyntaxTemplate: java.lang.Object execute(int,java.lang.Object[],int,int[],kawa.lang.Translator,kawa.lang.TemplateScope)>: r9 = virtualinvoke r8.<gnu.lists.Pair: java.lang.Object getCar()>()
<kawa.lang.SyntaxForms$PairSyntaxForm: java.lang.Object getCar()>: $r1 = r0.<kawa.lang.SyntaxForms$PairSyntaxForm: java.lang.Object car>
<kawa.lang.SyntaxForms$PairSyntaxForm: java.lang.Object getCar()>: r0.<kawa.lang.SyntaxForms$PairSyntaxForm: java.lang.Object car> = $r1
<kawa.lang.SyntaxForms$PairSyntaxForm: java.lang.Object getCar()>: $r1 = staticinvoke <kawa.lang.SyntaxForms: java.lang.Object makeForm(java.lang.Object,kawa.lang.TemplateScope)>($r1, $r3)
<kawa.lang.SyntaxForms: java.lang.Object makeForm(java.lang.Object,kawa.lang.TemplateScope)>: specialinvoke $r5.<kawa.lang.SyntaxForms$SimpleSyntaxForm: void <init>(java.lang.Object,kawa.lang.TemplateScope)>($r0, $r1)
<kawa.lang.SyntaxForms$SimpleSyntaxForm: void <init>(java.lang.Object,kawa.lang.TemplateScope)>: r0.<kawa.lang.SyntaxForms$SimpleSyntaxForm: java.lang.Object datum> = $r1
<kawa.lang.SyntaxForms$SimpleSyntaxForm: void <init>(java.lang.Object,kawa.lang.TemplateScope)>: return
<kawa.lang.SyntaxForms: java.lang.Object makeForm(java.lang.Object,kawa.lang.TemplateScope)>: return $r5
<kawa.lang.SyntaxForms$PairSyntaxForm: java.lang.Object getCar()>: r0.<kawa.lang.SyntaxForms$PairSyntaxForm: java.lang.Object car> = $r1
<kawa.lang.SyntaxForms$PairSyntaxForm: java.lang.Object getCar()>: $r1 = r0.<kawa.lang.SyntaxForms$PairSyntaxForm: java.lang.Object car>
<kawa.lang.SyntaxForms$PairSyntaxForm: java.lang.Object getCar()>: return $r1
<kawa.lang.SyntaxTemplate: java.lang.Object execute(int,java.lang.Object[],int,int[],kawa.lang.Translator,kawa.lang.TemplateScope)>: return r9
<kawa.lang.SyntaxTemplate: java.lang.Object execute(int,java.lang.Object[],int,int[],kawa.lang.Translator,kawa.lang.TemplateScope)>: $r7 = staticinvoke <kawa.lang.SyntaxForms: java.lang.Object makeForm(java.lang.Object,kawa.lang.TemplateScope)>($r7, $r4)
<kawa.lang.SyntaxForms: java.lang.Object makeForm(java.lang.Object,kawa.lang.TemplateScope)>: specialinvoke $r5.<kawa.lang.SyntaxForms$SimpleSyntaxForm: void <init>(java.lang.Object,kawa.lang.TemplateScope)>($r0, $r1)
<kawa.lang.SyntaxForms$SimpleSyntaxForm: void <init>(java.lang.Object,kawa.lang.TemplateScope)>: r0.<kawa.lang.SyntaxForms$SimpleSyntaxForm: java.lang.Object datum> = $r1
<kawa.lang.SyntaxForms$SimpleSyntaxForm: void <init>(java.lang.Object,kawa.lang.TemplateScope)>: return
<kawa.lang.SyntaxForms: java.lang.Object makeForm(java.lang.Object,kawa.lang.TemplateScope)>: return $r5
<kawa.lang.SyntaxTemplate: java.lang.Object execute(int,java.lang.Object[],int,int[],kawa.lang.Translator,kawa.lang.TemplateScope)>: return $r7
<kawa.lang.SyntaxTemplate: java.lang.Object execute(java.lang.Object[],kawa.lang.Translator,kawa.lang.TemplateScope)>: return $r4
<kawa.lang.SyntaxRules: java.lang.Object expand(java.lang.Object,kawa.lang.Translator)>: return $r1
<kawa.lang.SyntaxRules: java.lang.Object apply1(java.lang.Object)>: return $r1
<gnu.mapping.TtyInPort: void lineStart(boolean)>: $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>()
<gnu.mapping.TtyInPort: void lineStart(boolean)>: virtualinvoke r0.<gnu.mapping.TtyInPort: void emitPrompt(java.lang.String)>($r4)
<gnu.mapping.TtyInPort: void emitPrompt(java.lang.String)>: virtualinvoke $r2.<gnu.mapping.OutPort: void print(java.lang.String)>($r1)
