    public java.lang.Object apply4(gnu.expr.ModuleMethod, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r11;
        gnu.mapping.Values $r7;
        com.google.appinventor.components.runtime.Component $r8;
        gnu.expr.ModuleMethod $r1;
        java.lang.ClassCastException $r13, $r15, $r16, $r17, $r18, $r19, $r20;
        int $i0;
        java.lang.Boolean $r12;
        java.lang.String $r9, $r10;
        boolean $z0;
        io.kodular.mhmhnd12.Z1.Screen1$frame r0;
        gnu.mapping.WrongType $r14;
        java.lang.Object $r2, $r3, $r4, $r5;
        io.kodular.mhmhnd12.Z1.Screen1 $r6;

        r0 := @this: io.kodular.mhmhnd12.Z1.Screen1$frame;

        $r1 := @parameter0: gnu.expr.ModuleMethod;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        $r4 := @parameter3: java.lang.Object;

        $r5 := @parameter4: java.lang.Object;

        $i0 = $r1.<gnu.expr.ModuleMethod: int selector>;

        lookupswitch($i0)
        {
            case 12: goto label02;
            case 17: goto label03;
            case 18: goto label11;
            case 164: goto label18;
            case 301: goto label19;
            case 313: goto label20;
            case 404: goto label21;
            case 428: goto label22;
            default: goto label01;
        };

     label01:
        $r2 = specialinvoke r0.<gnu.expr.ModuleBody: java.lang.Object apply4(gnu.expr.ModuleMethod,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, $r2, $r3, $r4, $r5);

        return $r2;

     label02:
        $r6 = r0.<io.kodular.mhmhnd12.Z1.Screen1$frame: io.kodular.mhmhnd12.Z1.Screen1 $main>;

        virtualinvoke $r6.<io.kodular.mhmhnd12.Z1.Screen1: void addToComponents(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4, $r5);

        $r7 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return $r7;

     label03:
        $r6 = r0.<io.kodular.mhmhnd12.Z1.Screen1$frame: io.kodular.mhmhnd12.Z1.Screen1 $main>;

     label04:
        $r8 = (com.google.appinventor.components.runtime.Component) $r2;

     label05:
        $r9 = (java.lang.String) $r3;

     label06:
        $r10 = (java.lang.String) $r4;

     label07:
        $r11 = (java.lang.Object[]) $r5;

     label08:
        $z0 = virtualinvoke $r6.<io.kodular.mhmhnd12.Z1.Screen1: boolean dispatchEvent(com.google.appinventor.components.runtime.Component,java.lang.String,java.lang.String,java.lang.Object[])>($r8, $r9, $r10, $r11);

        if $z0 == 0 goto label10;

        $r12 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label09:
        return $r12;

     label10:
        $r12 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label09;

     label11:
        $r6 = r0.<io.kodular.mhmhnd12.Z1.Screen1$frame: io.kodular.mhmhnd12.Z1.Screen1 $main>;

     label12:
        $r8 = (com.google.appinventor.components.runtime.Component) $r2;

     label13:
        $r9 = (java.lang.String) $r3;

     label14:
        $r12 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        if $r4 == $r12 goto label17;

        $z0 = 1;

     label15:
        $r11 = (java.lang.Object[]) $r5;

     label16:
        virtualinvoke $r6.<io.kodular.mhmhnd12.Z1.Screen1: void dispatchGenericEvent(com.google.appinventor.components.runtime.Component,java.lang.String,boolean,java.lang.Object[])>($r8, $r9, $z0, $r11);

        $r7 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return $r7;

     label17:
        $z0 = 0;

        goto label15;

     label18:
        $r6 = r0.<io.kodular.mhmhnd12.Z1.Screen1$frame: io.kodular.mhmhnd12.Z1.Screen1 $main>;

        $r2 = virtualinvoke $r6.<io.kodular.mhmhnd12.Z1.Screen1: java.lang.Object List_View_Image_and_Text1$Click(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4, $r5);

        return $r2;

     label19:
        $r6 = r0.<io.kodular.mhmhnd12.Z1.Screen1$frame: io.kodular.mhmhnd12.Z1.Screen1 $main>;

        $r2 = virtualinvoke $r6.<io.kodular.mhmhnd12.Z1.Screen1: java.lang.Object LVIasal$Click(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4, $r5);

        return $r2;

     label20:
        $r6 = r0.<io.kodular.mhmhnd12.Z1.Screen1$frame: io.kodular.mhmhnd12.Z1.Screen1 $main>;

        $r2 = virtualinvoke $r6.<io.kodular.mhmhnd12.Z1.Screen1: java.lang.Object LVItujuan$Click(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4, $r5);

        return $r2;

     label21:
        $r6 = r0.<io.kodular.mhmhnd12.Z1.Screen1$frame: io.kodular.mhmhnd12.Z1.Screen1 $main>;

        $r2 = virtualinvoke $r6.<io.kodular.mhmhnd12.Z1.Screen1: java.lang.Object Web1$GotText(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4, $r5);

        return $r2;

     label22:
        $r6 = r0.<io.kodular.mhmhnd12.Z1.Screen1$frame: io.kodular.mhmhnd12.Z1.Screen1 $main>;

        $r2 = virtualinvoke $r6.<io.kodular.mhmhnd12.Z1.Screen1: java.lang.Object Web2$GotText(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4, $r5);

        return $r2;

     label23:
        $r13 := @caughtexception;

        $r14 = new gnu.mapping.WrongType;

        specialinvoke $r14.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r13, "dispatchEvent", 1, $r2);

        throw $r14;

     label24:
        $r15 := @caughtexception;

        $r14 = new gnu.mapping.WrongType;

        specialinvoke $r14.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r15, "dispatchEvent", 2, $r3);

        throw $r14;

     label25:
        $r16 := @caughtexception;

        $r14 = new gnu.mapping.WrongType;

        specialinvoke $r14.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r16, "dispatchEvent", 3, $r4);

        throw $r14;

     label26:
        $r17 := @caughtexception;

        $r14 = new gnu.mapping.WrongType;

        specialinvoke $r14.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r17, "dispatchEvent", 4, $r5);

        throw $r14;

     label27:
        $r18 := @caughtexception;

        $r14 = new gnu.mapping.WrongType;

        specialinvoke $r14.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r18, "dispatchGenericEvent", 1, $r2);

        throw $r14;

     label28:
        $r19 := @caughtexception;

        $r14 = new gnu.mapping.WrongType;

        specialinvoke $r14.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r19, "dispatchGenericEvent", 2, $r3);

        throw $r14;

     label29:
        $r20 := @caughtexception;

        $r14 = new gnu.mapping.WrongType;

        specialinvoke $r14.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r20, "dispatchGenericEvent", 4, $r5);

        throw $r14;

        catch java.lang.ClassCastException from label04 to label05 with label23;
        catch java.lang.ClassCastException from label05 to label06 with label24;
        catch java.lang.ClassCastException from label06 to label07 with label25;
        catch java.lang.ClassCastException from label07 to label08 with label26;
        catch java.lang.ClassCastException from label12 to label13 with label27;
        catch java.lang.ClassCastException from label13 to label14 with label28;
        catch java.lang.ClassCastException from label15 to label16 with label29;
    }
