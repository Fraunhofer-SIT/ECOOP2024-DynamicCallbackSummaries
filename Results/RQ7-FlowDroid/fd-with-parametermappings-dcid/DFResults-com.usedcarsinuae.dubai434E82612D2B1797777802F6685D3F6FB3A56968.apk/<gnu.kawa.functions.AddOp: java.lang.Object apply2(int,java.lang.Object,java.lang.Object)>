    public static java.lang.Object apply2(int, java.lang.Object, java.lang.Object)
    {
        java.lang.Float $r6;
        java.lang.Double $r5;
        long $l4, $l5;
        gnu.math.RatNum $r7, $r8;
        java.lang.Integer $r16;
        java.math.BigDecimal $r9, $r10;
        java.lang.Long $r15;
        int $i0, $i1, $i2, $i3;
        gnu.math.IntNum $r11, $r12;
        java.math.BigInteger $r13, $r14;
        double $d0, $d1;
        gnu.math.DFloNum $r4;
        gnu.math.Numeric $r2, $r3;
        float $f0, $f1;
        java.lang.Object $r0, $r1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Object;

        $i1 = staticinvoke <gnu.kawa.functions.Arithmetic: int classifyValue(java.lang.Object)>($r0);

        $i2 = $i1;

        $i3 = staticinvoke <gnu.kawa.functions.Arithmetic: int classifyValue(java.lang.Object)>($r1);

        if $i1 >= $i3 goto label01;

        $i2 = $i3;

     label01:
        lookupswitch($i2)
        {
            case 1: goto label21;
            case 2: goto label18;
            case 3: goto label16;
            case 4: goto label15;
            case 5: goto label13;
            case 6: goto label12;
            case 7: goto label09;
            case 8: goto label06;
            case 9: goto label03;
            default: goto label02;
        };

     label02:
        $r2 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.Numeric asNumeric(java.lang.Object)>($r0);

        $r3 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.Numeric asNumeric(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r2.<gnu.math.Numeric: gnu.math.Numeric add(java.lang.Object,int)>($r3, $i0);

        return $r2;

     label03:
        $d0 = staticinvoke <gnu.kawa.functions.Arithmetic: double asDouble(java.lang.Object)>($r0);

        $d1 = staticinvoke <gnu.kawa.functions.Arithmetic: double asDouble(java.lang.Object)>($r1);

        $r4 = new gnu.math.DFloNum;

        if $i0 <= 0 goto label04;

        $d0 = $d0 + $d1;

        goto label05;

     label04:
        $d0 = $d0 - $d1;

     label05:
        specialinvoke $r4.<gnu.math.DFloNum: void <init>(double)>($d0);

        return $r4;

     label06:
        $d0 = staticinvoke <gnu.kawa.functions.Arithmetic: double asDouble(java.lang.Object)>($r0);

        $d1 = staticinvoke <gnu.kawa.functions.Arithmetic: double asDouble(java.lang.Object)>($r1);

        $r5 = new java.lang.Double;

        if $i0 <= 0 goto label07;

        $d0 = $d0 + $d1;

        goto label08;

     label07:
        $d0 = $d0 - $d1;

     label08:
        specialinvoke $r5.<java.lang.Double: void <init>(double)>($d0);

        return $r5;

     label09:
        $f0 = staticinvoke <gnu.kawa.functions.Arithmetic: float asFloat(java.lang.Object)>($r0);

        $f1 = staticinvoke <gnu.kawa.functions.Arithmetic: float asFloat(java.lang.Object)>($r1);

        $r6 = new java.lang.Float;

        if $i0 <= 0 goto label10;

        $f0 = $f0 + $f1;

        goto label11;

     label10:
        $f0 = $f0 - $f1;

     label11:
        specialinvoke $r6.<java.lang.Float: void <init>(float)>($f0);

        return $r6;

     label12:
        $r7 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.RatNum asRatNum(java.lang.Object)>($r0);

        $r8 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.RatNum asRatNum(java.lang.Object)>($r1);

        $r7 = staticinvoke <gnu.math.RatNum: gnu.math.RatNum add(gnu.math.RatNum,gnu.math.RatNum,int)>($r7, $r8, $i0);

        return $r7;

     label13:
        $r9 = staticinvoke <gnu.kawa.functions.Arithmetic: java.math.BigDecimal asBigDecimal(java.lang.Object)>($r0);

        $r10 = staticinvoke <gnu.kawa.functions.Arithmetic: java.math.BigDecimal asBigDecimal(java.lang.Object)>($r1);

        if $i0 <= 0 goto label14;

        $r9 = virtualinvoke $r9.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r10);

        return $r9;

     label14:
        $r9 = virtualinvoke $r9.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r10);

        return $r9;

     label15:
        $r11 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.IntNum asIntNum(java.lang.Object)>($r0);

        $r12 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.IntNum asIntNum(java.lang.Object)>($r1);

        $r11 = staticinvoke <gnu.math.IntNum: gnu.math.IntNum add(gnu.math.IntNum,gnu.math.IntNum,int)>($r11, $r12, $i0);

        return $r11;

     label16:
        $r13 = staticinvoke <gnu.kawa.functions.Arithmetic: java.math.BigInteger asBigInteger(java.lang.Object)>($r0);

        $r14 = staticinvoke <gnu.kawa.functions.Arithmetic: java.math.BigInteger asBigInteger(java.lang.Object)>($r1);

        if $i0 <= 0 goto label17;

        $r13 = virtualinvoke $r13.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r14);

        return $r13;

     label17:
        $r13 = virtualinvoke $r13.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r14);

        return $r13;

     label18:
        $l4 = staticinvoke <gnu.kawa.functions.Arithmetic: long asLong(java.lang.Object)>($r0);

        $l5 = staticinvoke <gnu.kawa.functions.Arithmetic: long asLong(java.lang.Object)>($r1);

        $r15 = new java.lang.Long;

        if $i0 <= 0 goto label19;

        $l4 = $l4 + $l5;

        goto label20;

     label19:
        $l4 = $l4 - $l5;

     label20:
        specialinvoke $r15.<java.lang.Long: void <init>(long)>($l4);

        return $r15;

     label21:
        $i1 = staticinvoke <gnu.kawa.functions.Arithmetic: int asInt(java.lang.Object)>($r0);

        $i2 = staticinvoke <gnu.kawa.functions.Arithmetic: int asInt(java.lang.Object)>($r1);

        $r16 = new java.lang.Integer;

        if $i0 <= 0 goto label22;

        $i0 = $i1 + $i2;

        goto label23;

     label22:
        $i0 = $i1 - $i2;

     label23:
        specialinvoke $r16.<java.lang.Integer: void <init>(int)>($i0);

        return $r16;
    }
