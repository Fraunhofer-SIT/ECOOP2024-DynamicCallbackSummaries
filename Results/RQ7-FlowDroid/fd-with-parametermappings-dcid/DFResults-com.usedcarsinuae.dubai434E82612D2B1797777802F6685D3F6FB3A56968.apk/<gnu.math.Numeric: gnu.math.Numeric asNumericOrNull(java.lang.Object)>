    public static gnu.math.Numeric asNumericOrNull(java.lang.Object)
    {
        gnu.math.RatNum $r2;
        gnu.math.DFloNum $r3;
        gnu.math.Numeric $r1;
        java.lang.Object $r0;
        gnu.math.IntNum $r5;
        java.lang.Number $r4;
        boolean $z0;
        double $d0;

        $r0 := @parameter0: java.lang.Object;

        $z0 = $r0 instanceof gnu.math.Numeric;

        if $z0 == 0 goto label1;

        $r1 = (gnu.math.Numeric) $r0;

        return $r1;

     label1:
        $z0 = $r0 instanceof java.math.BigInteger;

        if $z0 != 0 goto label4;

        $z0 = $r0 instanceof java.lang.Long;

        if $z0 != 0 goto label4;

        $z0 = $r0 instanceof java.lang.Short;

        if $z0 != 0 goto label4;

        $z0 = $r0 instanceof java.lang.Byte;

        if $z0 != 0 goto label4;

        $z0 = $r0 instanceof java.lang.Integer;

        if $z0 != 0 goto label4;

        $z0 = $r0 instanceof java.math.BigDecimal;

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <gnu.math.RatNum: gnu.math.RatNum asRatNumOrNull(java.lang.Object)>($r0);

        return $r2;

     label2:
        $z0 = $r0 instanceof java.lang.Float;

        if $z0 != 0 goto label3;

        $z0 = $r0 instanceof java.lang.Double;

        if $z0 != 0 goto label3;

        return null;

     label3:
        $r3 = new gnu.math.DFloNum;

        $r4 = (java.lang.Number) $r0;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        specialinvoke $r3.<gnu.math.DFloNum: void <init>(double)>($d0);

        return $r3;

     label4:
        $r5 = staticinvoke <gnu.math.IntNum: gnu.math.IntNum asIntNumOrNull(java.lang.Object)>($r0);

        return $r5;
    }
