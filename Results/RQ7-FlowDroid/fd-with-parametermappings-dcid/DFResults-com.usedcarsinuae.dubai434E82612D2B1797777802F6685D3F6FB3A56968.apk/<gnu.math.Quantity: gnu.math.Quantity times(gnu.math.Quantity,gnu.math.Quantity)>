    public static gnu.math.Quantity times(gnu.math.Quantity, gnu.math.Quantity)
    {
        gnu.math.Numeric $r6;
        gnu.math.Quantity $r0, $r1;
        gnu.math.Unit $r2, $r3;
        gnu.math.Complex $r4, $r5;

        $r0 := @parameter0: gnu.math.Quantity;

        $r1 := @parameter1: gnu.math.Quantity;

        $r2 = virtualinvoke $r0.<gnu.math.Quantity: gnu.math.Unit unit()>();

        $r3 = virtualinvoke $r1.<gnu.math.Quantity: gnu.math.Unit unit()>();

        $r2 = staticinvoke <gnu.math.Unit: gnu.math.Unit times(gnu.math.Unit,gnu.math.Unit)>($r2, $r3);

        $r4 = virtualinvoke $r0.<gnu.math.Quantity: gnu.math.Complex number()>();

        $r5 = virtualinvoke $r1.<gnu.math.Quantity: gnu.math.Complex number()>();

        $r6 = virtualinvoke $r4.<gnu.math.Complex: gnu.math.Numeric mul(java.lang.Object)>($r5);

        $r4 = (gnu.math.Complex) $r6;

        $r0 = staticinvoke <gnu.math.Quantity: gnu.math.Quantity make(gnu.math.Complex,gnu.math.Unit)>($r4, $r2);

        return $r0;
    }
