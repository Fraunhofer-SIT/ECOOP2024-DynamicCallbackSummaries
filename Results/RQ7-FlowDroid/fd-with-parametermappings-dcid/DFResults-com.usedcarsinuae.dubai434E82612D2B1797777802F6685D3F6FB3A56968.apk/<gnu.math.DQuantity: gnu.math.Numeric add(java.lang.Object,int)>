    public gnu.math.Numeric add(java.lang.Object, int)
    {
        gnu.math.Dimensions $r3, $r4;
        gnu.math.DQuantity r0, $r2;
        java.lang.IllegalArgumentException $r8;
        gnu.math.RealNum $r5;
        gnu.math.Numeric $r7;
        int $i0;
        java.lang.Object $r1;
        boolean $z0;
        double $d0, $d1, $d2;
        gnu.math.Unit $r6;

        r0 := @this: gnu.math.DQuantity;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $z0 = $r1 instanceof gnu.math.DQuantity;

        if $z0 == 0 goto label1;

        $r2 = (gnu.math.DQuantity) $r1;

        $d0 = (double) $i0;

        r0 = staticinvoke <gnu.math.DQuantity: gnu.math.DQuantity add(gnu.math.DQuantity,gnu.math.DQuantity,double)>(r0, $r2, $d0);

        return r0;

     label1:
        $r3 = virtualinvoke r0.<gnu.math.DQuantity: gnu.math.Dimensions dimensions()>();

        $r4 = <gnu.math.Dimensions: gnu.math.Dimensions Empty>;

        if $r3 != $r4 goto label2;

        $z0 = $r1 instanceof gnu.math.RealNum;

        if $z0 == 0 goto label2;

        $r2 = new gnu.math.DQuantity;

        $d0 = r0.<gnu.math.DQuantity: double factor>;

        $d1 = (double) $i0;

        $r5 = (gnu.math.RealNum) $r1;

        $d2 = virtualinvoke $r5.<gnu.math.RealNum: double doubleValue()>();

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d1 = $d1 * $d2;

        $d0 = $d0 + $d1;

        $r6 = virtualinvoke r0.<gnu.math.DQuantity: gnu.math.Unit unit()>();

        specialinvoke $r2.<gnu.math.DQuantity: void <init>(double,gnu.math.Unit)>($d0, $r6);

        return $r2;

     label2:
        $z0 = $r1 instanceof gnu.math.Numeric;

        if $z0 == 0 goto label3;

        $r7 = (gnu.math.Numeric) $r1;

        $r7 = virtualinvoke $r7.<gnu.math.Numeric: gnu.math.Numeric addReversed(gnu.math.Numeric,int)>(r0, $i0);

        return $r7;

     label3:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;
    }
