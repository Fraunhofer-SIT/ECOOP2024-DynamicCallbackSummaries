    public static void a(com.pollfish.d.a)
    {
        android.view.ViewParent $r1;
        android.view.ViewGroup $r2, $r3;
        java.lang.Exception $r8;
        com.pollfish.d.a $r0;
        int $i0, $i1;
        android.view.View $r6;
        java.lang.StringBuilder $r4;
        java.lang.Object $r7;
        java.lang.String $r5;
        boolean $z0;

        $r0 := @parameter0: com.pollfish.d.a;

        staticinvoke <com.pollfish.f.b: void a(java.lang.String,java.lang.String)>("LayoutUtils", "bringAppViewsToPriorOverlayState");

     label01:
        $r1 = virtualinvoke $r0.<com.pollfish.d.a: android.view.ViewParent getParent()>();

        $r2 = (android.view.ViewGroup) $r1;

     label02:
        if $r2 == null goto label22;

     label03:
        $r1 = virtualinvoke $r2.<android.view.ViewGroup: android.view.ViewParent getParent()>();

        $r3 = (android.view.ViewGroup) $r1;

     label04:
        $r4 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rootOverlayView.getChildCount(): ");

        $i0 = virtualinvoke $r2.<android.view.ViewGroup: int getChildCount()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.pollfish.f.b: void a(java.lang.String,java.lang.String)>("LayoutUtils", $r5);

     label06:
        if $r3 == null goto label22;

     label07:
        staticinvoke <com.pollfish.f.b: void a(java.lang.String,java.lang.String)>("LayoutUtils", "removing Pollfish overlay view from app views hierarchy...");

        virtualinvoke $r3.<android.view.ViewGroup: void removeView(android.view.View)>($r2);

        $i0 = virtualinvoke $r2.<android.view.ViewGroup: int getChildCount()>();

     label08:
        if $i0 <= 1 goto label22;

     label09:
        virtualinvoke $r2.<android.view.ViewGroup: void removeView(android.view.View)>($r0);

     label10:
        $i0 = 0;

     label11:
        $i1 = virtualinvoke $r2.<android.view.ViewGroup: int getChildCount()>();

     label12:
        if $i0 >= $i1 goto label22;

     label13:
        $r6 = virtualinvoke $r2.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

     label14:
        if $r6 == null goto label20;

     label15:
        $r7 = virtualinvoke $r6.<android.view.View: java.lang.Object getTag()>();

        $r5 = (java.lang.String) $r7;

     label16:
        if $r5 == null goto label20;

     label17:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("pollfish_prior_overlay");

     label18:
        if $z0 == 0 goto label20;

     label19:
        staticinvoke <com.pollfish.f.b: void a(java.lang.String,java.lang.String)>("LayoutUtils", "Found previous original app view - reordering view tree");

        virtualinvoke $r2.<android.view.ViewGroup: void removeAllViews()>();

        virtualinvoke $r3.<android.view.ViewGroup: void addView(android.view.View)>($r6);

        virtualinvoke $r3.<android.view.ViewGroup: void removeView(android.view.View)>($r2);

     label20:
        $i0 = $i0 + 1;

        goto label11;

     label21:
        $r8 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Error while bringAppViewsToPriorOverlayState: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.pollfish.f.b: void b(java.lang.String,java.lang.String)>("LayoutUtils", $r5);

        staticinvoke <com.pollfish.f.b.a: void a(java.lang.Throwable)>($r8);

     label22:
        return;

        catch java.lang.Exception from label01 to label02 with label21;
        catch java.lang.Exception from label03 to label04 with label21;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Exception from label09 to label10 with label21;
        catch java.lang.Exception from label11 to label12 with label21;
        catch java.lang.Exception from label13 to label14 with label21;
        catch java.lang.Exception from label15 to label16 with label21;
        catch java.lang.Exception from label17 to label18 with label21;
        catch java.lang.Exception from label19 to label20 with label21;
    }
