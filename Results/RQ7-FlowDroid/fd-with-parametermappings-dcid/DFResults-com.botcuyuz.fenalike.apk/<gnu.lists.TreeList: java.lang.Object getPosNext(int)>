    public java.lang.Object getPosNext(int)
    {
        java.lang.Object[] $r3;
        long $l4;
        int $i1, $i2, $i3;
        java.lang.String $r5;
        boolean $z0;
        double $d0;
        char c0;
        java.lang.RuntimeException $r6;
        gnu.lists.SeqPosition $r8;
        gnu.lists.AbstractSequence r7;
        gnu.lists.TreeList r0;
        char[] $r1;
        float $f0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4, $r9;

        r0 := @this: gnu.lists.TreeList;

        $i1 := @parameter0: int;

        $i1 = virtualinvoke r0.<gnu.lists.TreeList: int posToDataIndex(int)>($i1);

        $r1 = r0.<gnu.lists.TreeList: char[] data>;

        $i2 = lengthof $r1;

        if $i1 != $i2 goto label01;

        $r2 = <gnu.lists.Sequence: java.lang.Object eofValue>;

        return $r2;

     label01:
        $r1 = r0.<gnu.lists.TreeList: char[] data>;

        c0 = $r1[$i1];

        $i2 = (int) c0;

        if $i2 > 40959 goto label02;

        $r2 = staticinvoke <gnu.lists.Convert: java.lang.Object toObject(char)>(c0);

        return $r2;

     label02:
        $i2 = (int) c0;

        if $i2 < 57344 goto label03;

        $i2 = (int) c0;

        if $i2 > 61439 goto label03;

        $r3 = r0.<gnu.lists.TreeList: java.lang.Object[] objects>;

        $i1 = (int) c0;

        $i1 = $i1 - 57344;

        $r2 = $r3[$i1];

        return $r2;

     label03:
        $i2 = (int) c0;

        if $i2 < 40960 goto label04;

        $i2 = (int) c0;

        if $i2 > 45055 goto label04;

        $r1 = r0.<gnu.lists.TreeList: char[] data>;

        $i2 = $i1 + 1;

        c0 = $r1[$i2];

        $i2 = (int) c0;

        $i2 = $i2 + $i1;

        $i2 = $i2 + 2;

        $r2 = specialinvoke r0.<gnu.lists.TreeList: java.lang.Object copyToList(int,int)>($i1, $i2);

        return $r2;

     label04:
        $i2 = (int) c0;

        if $i2 < 45056 goto label05;

        $i2 = (int) c0;

        if $i2 > 57343 goto label05;

        $i1 = (int) c0;

        $i1 = $i1 - 49152;

        $r2 = staticinvoke <gnu.lists.Convert: java.lang.Object toObject(int)>($i1);

        return $r2;

     label05:
        $i2 = (int) c0;

        lookupswitch($i2)
        {
            case 61696: goto label10;
            case 61697: goto label10;
            case 61698: goto label13;
            case 61699: goto label14;
            case 61700: goto label15;
            case 61701: goto label16;
            case 61702: goto label17;
            case 61703: goto label06;
            case 61704: goto label21;
            case 61705: goto label18;
            case 61706: goto label24;
            case 61707: goto label24;
            case 61708: goto label24;
            case 61709: goto label25;
            case 61710: goto label25;
            case 61711: goto label27;
            case 61712: goto label07;
            case 61713: goto label24;
            case 61714: goto label06;
            case 61715: goto label06;
            case 61716: goto label06;
            case 61717: goto label06;
            case 61718: goto label26;
            default: goto label06;
        };

     label06:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getPosNext, code=");

        $i1 = (int) c0;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<gnu.lists.TreeList: java.lang.RuntimeException unsupported(java.lang.String)>($r5);

        throw $r6;

     label07:
        $i2 = $i1 + 1;

        $i2 = virtualinvoke r0.<gnu.lists.TreeList: int getIntN(int)>($i2);

        if $i2 >= 0 goto label09;

        $r1 = r0.<gnu.lists.TreeList: char[] data>;

        $i3 = lengthof $r1;

     label08:
        $i2 = $i2 + $i3;

        $i2 = $i2 + 1;

        $r2 = specialinvoke r0.<gnu.lists.TreeList: java.lang.Object copyToList(int,int)>($i1, $i2);

        return $r2;

     label09:
        $i3 = $i1;

        goto label08;

     label10:
        $i1 = (int) c0;

        if $i1 == 61696 goto label12;

        $z0 = 1;

     label11:
        $r2 = staticinvoke <gnu.lists.Convert: java.lang.Object toObject(boolean)>($z0);

        return $r2;

     label12:
        $z0 = 0;

        goto label11;

     label13:
        $i1 = $i1 + 1;

        $i1 = virtualinvoke r0.<gnu.lists.TreeList: int getIntN(int)>($i1);

        $r2 = staticinvoke <gnu.lists.Convert: java.lang.Object toObject(int)>($i1);

        return $r2;

     label14:
        $i1 = $i1 + 1;

        $l4 = virtualinvoke r0.<gnu.lists.TreeList: long getLongN(int)>($i1);

        $r2 = staticinvoke <gnu.lists.Convert: java.lang.Object toObject(long)>($l4);

        return $r2;

     label15:
        $i1 = $i1 + 1;

        $i1 = virtualinvoke r0.<gnu.lists.TreeList: int getIntN(int)>($i1);

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i1);

        $r2 = staticinvoke <gnu.lists.Convert: java.lang.Object toObject(float)>($f0);

        return $r2;

     label16:
        $i1 = $i1 + 1;

        $l4 = virtualinvoke r0.<gnu.lists.TreeList: long getLongN(int)>($i1);

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l4);

        $r2 = staticinvoke <gnu.lists.Convert: java.lang.Object toObject(double)>($d0);

        return $r2;

     label17:
        $r1 = r0.<gnu.lists.TreeList: char[] data>;

        $i1 = $i1 + 1;

        c0 = $r1[$i1];

        $r2 = staticinvoke <gnu.lists.Convert: java.lang.Object toObject(char)>(c0);

        return $r2;

     label18:
        $i2 = $i1 + 3;

        $i2 = virtualinvoke r0.<gnu.lists.TreeList: int getIntN(int)>($i2);

        if $i2 >= 0 goto label20;

        $r1 = r0.<gnu.lists.TreeList: char[] data>;

        $i3 = lengthof $r1;

     label19:
        $i2 = $i2 + $i3;

        $i2 = $i2 + 1;

        $r2 = specialinvoke r0.<gnu.lists.TreeList: java.lang.Object copyToList(int,int)>($i1, $i2);

        return $r2;

     label20:
        $i3 = $i1;

        goto label19;

     label21:
        $i2 = $i1 + 1;

        $i2 = virtualinvoke r0.<gnu.lists.TreeList: int getIntN(int)>($i2);

        if $i2 >= 0 goto label23;

        $r1 = r0.<gnu.lists.TreeList: char[] data>;

        $i3 = lengthof $r1;

     label22:
        $i2 = $i2 + $i3;

        $i2 = $i2 + 7;

        $r2 = specialinvoke r0.<gnu.lists.TreeList: java.lang.Object copyToList(int,int)>($i1, $i2);

        return $r2;

     label23:
        $i3 = $i1;

        goto label22;

     label24:
        $r2 = <gnu.lists.Sequence: java.lang.Object eofValue>;

        return $r2;

     label25:
        $r3 = r0.<gnu.lists.TreeList: java.lang.Object[] objects>;

        $i1 = $i1 + 1;

        $i1 = virtualinvoke r0.<gnu.lists.TreeList: int getIntN(int)>($i1);

        $r2 = $r3[$i1];

        return $r2;

     label26:
        return "";

     label27:
        $r3 = r0.<gnu.lists.TreeList: java.lang.Object[] objects>;

        $i2 = $i1 + 1;

        $i2 = virtualinvoke r0.<gnu.lists.TreeList: int getIntN(int)>($i2);

        $r2 = $r3[$i2];

        r7 = (gnu.lists.AbstractSequence) $r2;

        $i1 = $i1 + 3;

        $i1 = virtualinvoke r0.<gnu.lists.TreeList: int getIntN(int)>($i1);

        $r8 = virtualinvoke r7.<gnu.lists.AbstractSequence: gnu.lists.SeqPosition getIteratorAtPos(int)>($i1);

        return $r8;
    }
