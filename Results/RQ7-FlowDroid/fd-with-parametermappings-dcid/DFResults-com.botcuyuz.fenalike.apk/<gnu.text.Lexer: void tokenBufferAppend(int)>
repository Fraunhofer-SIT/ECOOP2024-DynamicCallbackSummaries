    public void tokenBufferAppend(int)
    {
        int i0, $i1, $i2;
        char[] r1, $r2;
        char $c3;
        gnu.text.Lexer r0;

        r0 := @this: gnu.text.Lexer;

        $i1 := @parameter0: int;

        if $i1 < 65536 goto label1;

        i0 = $i1 - 65536;

        i0 = i0 >> 10;

        i0 = i0 + 55296;

        virtualinvoke r0.<gnu.text.Lexer: void tokenBufferAppend(int)>(i0);

        $i1 = $i1 & 1023;

        $i1 = $i1 + 56320;

     label1:
        i0 = r0.<gnu.text.Lexer: int tokenBufferLength>;

        r1 = r0.<gnu.text.Lexer: char[] tokenBuffer>;

        $r2 = r0.<gnu.text.Lexer: char[] tokenBuffer>;

        $i2 = lengthof $r2;

        if i0 != $i2 goto label2;

        $i2 = i0 * 2;

        $r2 = newarray (char)[$i2];

        r0.<gnu.text.Lexer: char[] tokenBuffer> = $r2;

        $r2 = r0.<gnu.text.Lexer: char[] tokenBuffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r2, 0, i0);

        r1 = r0.<gnu.text.Lexer: char[] tokenBuffer>;

     label2:
        $c3 = (char) $i1;

        r1[i0] = $c3;

        $i1 = i0 + 1;

        r0.<gnu.text.Lexer: int tokenBufferLength> = $i1;

        return;
    }
