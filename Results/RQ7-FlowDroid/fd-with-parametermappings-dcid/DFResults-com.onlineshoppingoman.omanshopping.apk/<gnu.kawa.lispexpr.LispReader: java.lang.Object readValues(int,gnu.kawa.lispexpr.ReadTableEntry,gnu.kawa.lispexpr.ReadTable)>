    public java.lang.Object readValues(int, gnu.kawa.lispexpr.ReadTableEntry, gnu.kawa.lispexpr.ReadTable) throws java.io.IOException, gnu.text.SyntaxException
    {
        gnu.kawa.lispexpr.ReadTable $r2;
        gnu.mapping.Values r5;
        gnu.kawa.lispexpr.LispReader r0;
        char $c3;
        int $i0, $i1, $i2;
        gnu.kawa.lispexpr.ReadTableEntry $r1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r6;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: gnu.kawa.lispexpr.LispReader;

        $i1 := @parameter0: int;

        $r1 := @parameter1: gnu.kawa.lispexpr.ReadTableEntry;

        $r2 := @parameter2: gnu.kawa.lispexpr.ReadTable;

        $i0 = r0.<gnu.kawa.lispexpr.LispReader: int tokenBufferLength>;

        r0.<gnu.kawa.lispexpr.LispReader: boolean seenEscapes> = 0;

        $i2 = virtualinvoke $r1.<gnu.kawa.lispexpr.ReadTableEntry: int getKind()>();

        if $i2 == 0 goto label3;

        if $i2 == 1 goto label2;

        if $i2 == 5 goto label1;

        if $i2 == 6 goto label1;

        $r3 = virtualinvoke r0.<gnu.kawa.lispexpr.LispReader: java.lang.Object readAndHandleToken(int,int,gnu.kawa.lispexpr.ReadTable)>($i1, $i0, $r2);

        return $r3;

     label1:
        $r3 = virtualinvoke $r1.<gnu.kawa.lispexpr.ReadTableEntry: java.lang.Object read(gnu.text.Lexer,int,int)>(r0, $i1, -1);

        return $r3;

     label2:
        r5 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r5;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid character #\\");

        $c3 = (char) $i1;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = r0.<gnu.kawa.lispexpr.LispReader: boolean interactive>;

        if $z0 == 0 goto label4;

        virtualinvoke r0.<gnu.kawa.lispexpr.LispReader: void fatal(java.lang.String)>($r4);

        goto label5;

     label4:
        virtualinvoke r0.<gnu.kawa.lispexpr.LispReader: void error(java.lang.String)>($r4);

     label5:
        r5 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r5;
    }
