Source: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r2)
$i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r2) in <com.facebook.common.memory.PooledByteArrayBufferedInputStream: boolean ensureDataInBuffer()>
Sink: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i0) in <com.facebook.common.memory.PooledByteStreams: long copy(java.io.InputStream,java.io.OutputStream)>

<com.facebook.common.memory.PooledByteArrayBufferedInputStream: boolean ensureDataInBuffer()>: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r2)
<com.facebook.common.memory.PooledByteArrayBufferedInputStream: boolean ensureDataInBuffer()>: $r2 = r0.<com.facebook.common.memory.PooledByteArrayBufferedInputStream: byte[] mByteArray>
<com.facebook.common.memory.PooledByteArrayBufferedInputStream: boolean ensureDataInBuffer()>: return 0
<com.facebook.common.memory.PooledByteArrayBufferedInputStream: int read(byte[],int,int)>: return -1
<com.facebook.common.memory.PooledByteStreams: long copy(java.io.InputStream,java.io.OutputStream)>: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r5, 0, $i0)
<com.facebook.common.memory.PooledByteStreams: long copy(java.io.InputStream,java.io.OutputStream)>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i0)
