Source: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
$i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0) in <com.mopub.common.DiskLruCacheStrictLineReader: void fillBuf()>
Sink: virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3) in <com.mopub.common.DiskLruCacheStrictLineReader: java.lang.String readLine()>

<com.mopub.common.DiskLruCacheStrictLineReader: void fillBuf()>: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
<com.mopub.common.DiskLruCacheStrictLineReader: void fillBuf()>: $r2 = r0.<com.mopub.common.DiskLruCacheStrictLineReader: byte[] buf>
<com.mopub.common.DiskLruCacheStrictLineReader: void fillBuf()>: return
<com.mopub.common.DiskLruCacheStrictLineReader: java.lang.String readLine()>: $r2 = r0.<com.mopub.common.DiskLruCacheStrictLineReader: byte[] buf>
<com.mopub.common.DiskLruCacheStrictLineReader: java.lang.String readLine()>: virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3)
