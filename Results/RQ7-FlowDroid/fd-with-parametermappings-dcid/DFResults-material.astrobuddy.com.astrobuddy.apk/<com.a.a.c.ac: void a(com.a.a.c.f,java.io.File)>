    private static void a(com.a.a.c.f, java.io.File)
    {
        java.lang.Throwable $r6;
        long $l0;
        java.io.FileInputStream $r5;
        java.io.File $r1;
        io.a.a.a.s $r2;
        int $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        com.a.a.c.f $r0;
        boolean $z0;

        $r0 := @parameter0: com.a.a.c.f;

        $r1 := @parameter1: java.io.File;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r2 = staticinvoke <io.a.a.a.f: io.a.a.a.s d()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Tried to include a file that doesn\'t exist: ");

        $r4 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<io.a.a.a.s: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", $r4, null);

        return;

     label1:
        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

     label2:
        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

     label3:
        $i1 = (int) $l0;

     label4:
        staticinvoke <com.a.a.c.ac: void a(java.io.InputStream,com.a.a.c.f,int)>($r5, $r0, $i1);

     label5:
        staticinvoke <io.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r5, "Failed to close file input stream.");

        return;

     label6:
        $r6 := @caughtexception;

        $r5 = null;

     label7:
        staticinvoke <io.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r5, "Failed to close file input stream.");

        throw $r6;

     label8:
        $r6 := @caughtexception;

        goto label7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
    }
