    public io.fabric.sdk.android.services.settings.SettingsData loadSettingsData(io.fabric.sdk.android.services.settings.SettingsCacheBehavior)
    {
        io.fabric.sdk.android.services.settings.CachedSettingsIo $r9;
        long $l0;
        io.fabric.sdk.android.services.settings.SettingsData $r2, $r3;
        java.lang.Exception $r11;
        io.fabric.sdk.android.Logger $r12;
        io.fabric.sdk.android.services.settings.DefaultSettingsController r0;
        org.json.JSONObject $r6;
        io.fabric.sdk.android.services.settings.SettingsSpiCall $r4;
        io.fabric.sdk.android.services.settings.SettingsJsonTransform $r7;
        io.fabric.sdk.android.services.settings.SettingsRequest $r5;
        io.fabric.sdk.android.services.settings.SettingsCacheBehavior $r1;
        java.lang.String $r10;
        io.fabric.sdk.android.services.common.CurrentTimeProvider $r8;
        boolean $z0;

        r0 := @this: io.fabric.sdk.android.services.settings.DefaultSettingsController;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.SettingsCacheBehavior;

        $r2 = null;

     label01:
        $z0 = staticinvoke <io.fabric.sdk.android.Fabric: boolean isDebuggable()>();

     label02:
        if $z0 != 0 goto label07;

     label03:
        $z0 = virtualinvoke r0.<io.fabric.sdk.android.services.settings.DefaultSettingsController: boolean buildInstanceIdentifierChanged()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        $r3 = specialinvoke r0.<io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.settings.SettingsData getCachedSettingsData(io.fabric.sdk.android.services.settings.SettingsCacheBehavior)>($r1);

     label06:
        $r2 = $r3;

     label07:
        if $r2 != null goto label17;

     label08:
        $r4 = r0.<io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.settings.SettingsSpiCall settingsSpiCall>;

        $r5 = r0.<io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.settings.SettingsRequest settingsRequest>;

        $r6 = interfaceinvoke $r4.<io.fabric.sdk.android.services.settings.SettingsSpiCall: org.json.JSONObject invoke(io.fabric.sdk.android.services.settings.SettingsRequest)>($r5);

     label09:
        if $r6 == null goto label13;

     label10:
        $r7 = r0.<io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.settings.SettingsJsonTransform settingsJsonTransform>;

        $r8 = r0.<io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.common.CurrentTimeProvider currentTimeProvider>;

        $r3 = interfaceinvoke $r7.<io.fabric.sdk.android.services.settings.SettingsJsonTransform: io.fabric.sdk.android.services.settings.SettingsData buildFromJson(io.fabric.sdk.android.services.common.CurrentTimeProvider,org.json.JSONObject)>($r8, $r6);

     label11:
        $r2 = $r3;

     label12:
        $r9 = r0.<io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.settings.CachedSettingsIo cachedSettingsIo>;

        $l0 = $r3.<io.fabric.sdk.android.services.settings.SettingsData: long expiresAtMillis>;

        interfaceinvoke $r9.<io.fabric.sdk.android.services.settings.CachedSettingsIo: void writeCachedSettings(long,org.json.JSONObject)>($l0, $r6);

        specialinvoke r0.<io.fabric.sdk.android.services.settings.DefaultSettingsController: void logSettings(org.json.JSONObject,java.lang.String)>($r6, "Loaded settings: ");

        $r10 = virtualinvoke r0.<io.fabric.sdk.android.services.settings.DefaultSettingsController: java.lang.String getBuildInstanceIdentifierFromContext()>();

        virtualinvoke r0.<io.fabric.sdk.android.services.settings.DefaultSettingsController: boolean setStoredBuildInstanceIdentifier(java.lang.String)>($r10);

     label13:
        if $r2 != null goto label17;

        $r1 = <io.fabric.sdk.android.services.settings.SettingsCacheBehavior: io.fabric.sdk.android.services.settings.SettingsCacheBehavior IGNORE_CACHE_EXPIRATION>;

     label14:
        $r3 = specialinvoke r0.<io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.settings.SettingsData getCachedSettingsData(io.fabric.sdk.android.services.settings.SettingsCacheBehavior)>($r1);

     label15:
        return $r3;

     label16:
        $r11 := @caughtexception;

        $r12 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r12.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Unknown error while loading Crashlytics settings. Crashes will be cached until settings can be retrieved.", $r11);

     label17:
        return $r2;

        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Exception from label03 to label04 with label16;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Exception from label08 to label09 with label16;
        catch java.lang.Exception from label10 to label11 with label16;
        catch java.lang.Exception from label12 to label13 with label16;
        catch java.lang.Exception from label14 to label15 with label16;
    }
