    public java.lang.Object apply1(gnu.expr.ModuleMethod, java.lang.Object)
    {
        gnu.mapping.Symbol $r10;
        gnu.mapping.Environment $r16;
        gnu.expr.ModuleMethod $r1;
        java.lang.ClassCastException $r5, $r8, $r9, $r12, $r13, $r14, $r15, $r17;
        int $i0;
        java.lang.Boolean r18;
        java.lang.String $r11;
        gnu.mapping.SimpleSymbol $r4;
        boolean $z0;
        java.lang.CharSequence $r3;
        kawa.lib.misc r0;
        gnu.mapping.WrongType $r6;
        java.lang.Object $r2;
        gnu.mapping.Namespace $r7;

        r0 := @this: kawa.lib.misc;

        $r1 := @parameter0: gnu.expr.ModuleMethod;

        $r2 := @parameter1: java.lang.Object;

        $i0 = $r1.<gnu.expr.ModuleMethod: int selector>;

        if $i0 == 3 goto label34;

        if $i0 == 4 goto label32;

        if $i0 == 5 goto label29;

        if $i0 == 18 goto label28;

        if $i0 == 20 goto label27;

        if $i0 == 27 goto label26;

        if $i0 == 29 goto label25;

        lookupswitch($i0)
        {
            case 8: goto label22;
            case 9: goto label19;
            case 10: goto label16;
            case 11: goto label13;
            case 12: goto label10;
            case 13: goto label07;
            case 14: goto label04;
            case 15: goto label02;
            default: goto label01;
        };

     label01:
        $r2 = specialinvoke r0.<gnu.expr.ModuleBody: java.lang.Object apply1(gnu.expr.ModuleMethod,java.lang.Object)>($r1, $r2);

        return $r2;

     label02:
        $z0 = staticinvoke <kawa.lib.misc: boolean isProcedure(java.lang.Object)>($r2);

        if $z0 == 0 goto label03;

        r18 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return r18;

     label03:
        r18 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return r18;

     label04:
        $r3 = (java.lang.CharSequence) $r2;

     label05:
        $r4 = staticinvoke <kawa.lib.misc: gnu.mapping.SimpleSymbol string$To$Symbol(java.lang.CharSequence)>($r3);

        return $r4;

     label06:
        $r5 := @caughtexception;

        $r6 = new gnu.mapping.WrongType;

        specialinvoke $r6.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r5, "string->symbol", 1, $r2);

        throw $r6;

     label07:
        $r7 = (gnu.mapping.Namespace) $r2;

     label08:
        $r3 = staticinvoke <kawa.lib.misc: java.lang.CharSequence namespacePrefix(gnu.mapping.Namespace)>($r7);

        return $r3;

     label09:
        $r8 := @caughtexception;

        $r6 = new gnu.mapping.WrongType;

        specialinvoke $r6.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r8, "namespace-prefix", 1, $r2);

        throw $r6;

     label10:
        $r7 = (gnu.mapping.Namespace) $r2;

     label11:
        $r3 = staticinvoke <kawa.lib.misc: java.lang.CharSequence namespaceUri(gnu.mapping.Namespace)>($r7);

        return $r3;

     label12:
        $r9 := @caughtexception;

        $r6 = new gnu.mapping.WrongType;

        specialinvoke $r6.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r9, "namespace-uri", 1, $r2);

        throw $r6;

     label13:
        $r10 = (gnu.mapping.Symbol) $r2;

     label14:
        $r11 = staticinvoke <kawa.lib.misc: java.lang.String symbolPrefix(gnu.mapping.Symbol)>($r10);

        return $r11;

     label15:
        $r12 := @caughtexception;

        $r6 = new gnu.mapping.WrongType;

        specialinvoke $r6.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r12, "symbol-prefix", 1, $r2);

        throw $r6;

     label16:
        $r10 = (gnu.mapping.Symbol) $r2;

     label17:
        $r11 = staticinvoke <kawa.lib.misc: java.lang.String symbolNamespaceUri(gnu.mapping.Symbol)>($r10);

        return $r11;

     label18:
        $r13 := @caughtexception;

        $r6 = new gnu.mapping.WrongType;

        specialinvoke $r6.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r13, "symbol-namespace-uri", 1, $r2);

        throw $r6;

     label19:
        $r10 = (gnu.mapping.Symbol) $r2;

     label20:
        $r7 = staticinvoke <kawa.lib.misc: gnu.mapping.Namespace symbolNamespace(gnu.mapping.Symbol)>($r10);

        return $r7;

     label21:
        $r14 := @caughtexception;

        $r6 = new gnu.mapping.WrongType;

        specialinvoke $r6.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r14, "symbol-namespace", 1, $r2);

        throw $r6;

     label22:
        $r10 = (gnu.mapping.Symbol) $r2;

     label23:
        $r11 = staticinvoke <kawa.lib.misc: java.lang.String symbolLocalName(gnu.mapping.Symbol)>($r10);

        return $r11;

     label24:
        $r15 := @caughtexception;

        $r6 = new gnu.mapping.WrongType;

        specialinvoke $r6.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r15, "symbol-local-name", 1, $r2);

        throw $r6;

     label25:
        $r2 = staticinvoke <kawa.lib.misc: java.lang.Object baseUri(java.lang.Object)>($r2);

        return $r2;

     label26:
        $r2 = staticinvoke <kawa.lib.misc: java.lang.Object force(java.lang.Object)>($r2);

        return $r2;

     label27:
        $r2 = staticinvoke <kawa.lib.misc: java.lang.Object schemeReportEnvironment(java.lang.Object)>($r2);

        return $r2;

     label28:
        $r16 = staticinvoke <kawa.lib.misc: gnu.mapping.Environment nullEnvironment(java.lang.Object)>($r2);

        return $r16;

     label29:
        $r10 = (gnu.mapping.Symbol) $r2;

     label30:
        $r11 = staticinvoke <kawa.lib.misc: java.lang.String symbol$To$String(gnu.mapping.Symbol)>($r10);

        return $r11;

     label31:
        $r17 := @caughtexception;

        $r6 = new gnu.mapping.WrongType;

        specialinvoke $r6.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r17, "symbol->string", 1, $r2);

        throw $r6;

     label32:
        $z0 = staticinvoke <kawa.lib.misc: boolean isSymbol(java.lang.Object)>($r2);

        if $z0 == 0 goto label33;

        r18 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return r18;

     label33:
        r18 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return r18;

     label34:
        $z0 = staticinvoke <kawa.lib.misc: boolean isBoolean(java.lang.Object)>($r2);

        if $z0 == 0 goto label35;

        r18 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return r18;

     label35:
        r18 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return r18;

        catch java.lang.ClassCastException from label04 to label05 with label06;
        catch java.lang.ClassCastException from label07 to label08 with label09;
        catch java.lang.ClassCastException from label10 to label11 with label12;
        catch java.lang.ClassCastException from label13 to label14 with label15;
        catch java.lang.ClassCastException from label16 to label17 with label18;
        catch java.lang.ClassCastException from label19 to label20 with label21;
        catch java.lang.ClassCastException from label22 to label23 with label24;
        catch java.lang.ClassCastException from label29 to label30 with label31;
    }
