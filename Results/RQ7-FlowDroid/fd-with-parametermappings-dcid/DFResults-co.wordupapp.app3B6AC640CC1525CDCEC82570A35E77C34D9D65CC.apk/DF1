Source: $r10 = virtualinvoke $r8.<com.facebook.appevents.AppEventStore$MovedClassObjectInputStream: java.lang.Object readObject()>()
$r10 = virtualinvoke $r8.<com.facebook.appevents.AppEventStore$MovedClassObjectInputStream: java.lang.Object readObject()>() in <com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>
Sink: virtualinvoke $r4.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1) in <com.facebook.appevents.AppEventStore: void saveEventsToDisk$facebook_core_release(com.facebook.appevents.PersistedEvents)>

<com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>: $r10 = virtualinvoke $r8.<com.facebook.appevents.AppEventStore$MovedClassObjectInputStream: java.lang.Object readObject()>()
<com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>: $r11 = (com.facebook.appevents.PersistedEvents) $r10
<com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>: $r4 = $r11
<com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>: return $r4
<com.facebook.appevents.AppEventQueue: void flushAndWait(com.facebook.appevents.FlushReason)>: virtualinvoke $r2.<com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>($r1)
<com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>: $r2 = virtualinvoke $r1.<com.facebook.appevents.PersistedEvents: java.util.Set keySet()>()
<com.facebook.appevents.PersistedEvents: java.util.Set keySet()>: $r1 = r0.<com.facebook.appevents.PersistedEvents: java.util.HashMap events>
<com.facebook.appevents.PersistedEvents: java.util.Set keySet()>: $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>()
<com.facebook.appevents.PersistedEvents: java.util.Set keySet()>: return $r2
<com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>: $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>()
<com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>: $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>()
<com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>: $r5 = (com.facebook.appevents.AccessTokenAppIdPair) $r4
<com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>: $r6 = specialinvoke r0.<com.facebook.appevents.AppEventCollection: com.facebook.appevents.SessionEventsState getSessionEventsState(com.facebook.appevents.AccessTokenAppIdPair)>($r5)
<com.facebook.appevents.AppEventCollection: com.facebook.appevents.SessionEventsState getSessionEventsState(com.facebook.appevents.AccessTokenAppIdPair)>: interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r5)
<com.facebook.appevents.AppEventCollection: com.facebook.appevents.SessionEventsState getSessionEventsState(com.facebook.appevents.AccessTokenAppIdPair)>: $r10 = (java.util.Map) $r3
<com.facebook.appevents.AppEventCollection: com.facebook.appevents.SessionEventsState getSessionEventsState(com.facebook.appevents.AccessTokenAppIdPair)>: $r3 = r0.<com.facebook.appevents.AppEventCollection: java.util.HashMap stateMap>
<com.facebook.appevents.AppEventCollection: com.facebook.appevents.SessionEventsState getSessionEventsState(com.facebook.appevents.AccessTokenAppIdPair)>: r0 := @this: com.facebook.appevents.AppEventCollection
<com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>: r0 := @this: com.facebook.appevents.AppEventCollection
<com.facebook.appevents.AppEventQueue: void flushAndWait(com.facebook.appevents.FlushReason)>: $r2 = <com.facebook.appevents.AppEventQueue: com.facebook.appevents.AppEventCollection appEventCollection>
<com.facebook.appevents.codeless.CodelessMatcher: void matchViews()>: return
<com.facebook.appevents.codeless.CodelessMatcher: void access$000(com.facebook.appevents.codeless.CodelessMatcher)>: return
<com.facebook.appevents.codeless.CodelessMatcher$1: void run()>: return
<android.os.Handler: boolean post(java.lang.Runnable)>: return 1
<com.facebook.internal.instrument.crashshield.CrashShieldHandler: void scheduleCrashInDebug(java.lang.Throwable)>: return
<com.facebook.internal.instrument.crashshield.CrashShieldHandler: void handleThrowable(java.lang.Throwable,java.lang.Object)>: return
<com.facebook.appevents.AppEventQueue: void access$setAppEventCollection$p(com.facebook.appevents.AppEventQueue,com.facebook.appevents.AppEventCollection)>: return
<com.facebook.appevents.AppEventQueue$persistToDisk$1: void run()>: $r1 = staticinvoke <com.facebook.appevents.AppEventQueue: com.facebook.appevents.AppEventCollection access$getAppEventCollection$p(com.facebook.appevents.AppEventQueue)>($r2)
<com.facebook.appevents.AppEventQueue: com.facebook.appevents.AppEventCollection access$getAppEventCollection$p(com.facebook.appevents.AppEventQueue)>: r2 = <com.facebook.appevents.AppEventQueue: com.facebook.appevents.AppEventCollection appEventCollection>
<com.facebook.appevents.AppEventQueue: com.facebook.appevents.AppEventCollection access$getAppEventCollection$p(com.facebook.appevents.AppEventQueue)>: return r2
<com.facebook.appevents.AppEventQueue$persistToDisk$1: void run()>: staticinvoke <com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>($r1)
<com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>: $r2 = virtualinvoke $r0.<com.facebook.appevents.AppEventCollection: java.util.Set keySet()>()
<com.facebook.appevents.AppEventCollection: java.util.Set keySet()>: $r2 = r0.<com.facebook.appevents.AppEventCollection: java.util.HashMap stateMap>
<com.facebook.appevents.AppEventCollection: java.util.Set keySet()>: $r1 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>()
<com.facebook.appevents.AppEventCollection: java.util.Set keySet()>: return $r1
<com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>: $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>()
<com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>: $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>()
<com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>: $r5 = (com.facebook.appevents.AccessTokenAppIdPair) $r4
<com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>: virtualinvoke $r1.<com.facebook.appevents.PersistedEvents: void addEvents(com.facebook.appevents.AccessTokenAppIdPair,java.util.List)>($r5, $r7)
<com.facebook.appevents.PersistedEvents: void addEvents(com.facebook.appevents.AccessTokenAppIdPair,java.util.List)>: interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2)
<com.facebook.appevents.PersistedEvents: void addEvents(com.facebook.appevents.AccessTokenAppIdPair,java.util.List)>: $r4 = (java.util.Map) $r3
<com.facebook.appevents.PersistedEvents: void addEvents(com.facebook.appevents.AccessTokenAppIdPair,java.util.List)>: $r3 = r0.<com.facebook.appevents.PersistedEvents: java.util.HashMap events>
<com.facebook.appevents.PersistedEvents: void addEvents(com.facebook.appevents.AccessTokenAppIdPair,java.util.List)>: return
<com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>: staticinvoke <com.facebook.appevents.AppEventStore: void saveEventsToDisk$facebook_core_release(com.facebook.appevents.PersistedEvents)>($r1)
<com.facebook.appevents.AppEventStore: void saveEventsToDisk$facebook_core_release(com.facebook.appevents.PersistedEvents)>: virtualinvoke $r4.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1)
