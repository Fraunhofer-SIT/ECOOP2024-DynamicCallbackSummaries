    public static java.lang.String \u02bb(java.io.InputStream, java.lang.String)
    {
        java.lang.Throwable $r3;
        byte[] $r2;
        java.io.ByteArrayOutputStream $r4;
        java.io.IOException $r5;
        int $i0;
        java.lang.String $r1;
        java.io.InputStream $r0;
        boolean $z0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label01;

        return "";

     label01:
        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = newarray (byte)[1024];

     label02:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

     label03:
        if $z0 == 0 goto label04;

        $r1 = "UTF-8";

     label04:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2);

     label05:
        if $i0 <= 0 goto label09;

     label06:
        virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, 0, $i0);

     label07:
        goto label04;

     label08:
        $r3 := @caughtexception;

        $r5 = (java.io.IOException) $r3;

        virtualinvoke $r5.<java.io.IOException: void printStackTrace()>();

        return "";

     label09:
        $r1 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>($r1);

     label10:
        return $r1;

        catch java.io.IOException from label02 to label03 with label08;
        catch java.io.IOException from label04 to label05 with label08;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label09 to label10 with label08;
    }
