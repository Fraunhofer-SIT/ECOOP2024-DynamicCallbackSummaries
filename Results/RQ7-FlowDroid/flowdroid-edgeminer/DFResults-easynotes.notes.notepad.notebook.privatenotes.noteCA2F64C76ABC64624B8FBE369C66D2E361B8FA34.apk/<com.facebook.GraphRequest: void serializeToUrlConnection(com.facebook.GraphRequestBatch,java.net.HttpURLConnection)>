    static final void serializeToUrlConnection(com.facebook.GraphRequestBatch, java.net.HttpURLConnection) throws java.io.IOException, org.json.JSONException
    {
        java.net.HttpURLConnection $r1;
        java.lang.Throwable $r10;
        com.facebook.internal.Logger $r13;
        java.net.URL $r6;
        com.facebook.HttpMethod $r4, $r7;
        long $l2;
        java.io.BufferedOutputStream $r14;
        com.facebook.LoggingBehavior $r2;
        android.os.Handler $r11;
        java.util.Map $r12;
        int $i0, $i1;
        java.lang.String $r5;
        boolean $z0, $z1;
        java.io.OutputStream $r8;
        com.facebook.GraphRequestBatch $r0;
        com.facebook.ProgressNoopOutputStream $r16;
        com.facebook.ProgressOutputStream $r17;
        java.lang.Object $r9;
        java.util.zip.GZIPOutputStream $r15;
        com.facebook.GraphRequest $r3;

        $r0 := @parameter0: com.facebook.GraphRequestBatch;

        $r1 := @parameter1: java.net.HttpURLConnection;

        $r13 = new com.facebook.internal.Logger;

        $r2 = <com.facebook.LoggingBehavior: com.facebook.LoggingBehavior REQUESTS>;

        specialinvoke $r13.<com.facebook.internal.Logger: void <init>(com.facebook.LoggingBehavior,java.lang.String)>($r2, "Request");

        $i0 = virtualinvoke $r0.<com.facebook.GraphRequestBatch: int size()>();

        $z0 = staticinvoke <com.facebook.GraphRequest: boolean isGzipCompressible(com.facebook.GraphRequestBatch)>($r0);

        $z1 = 0;

        if $i0 != 1 goto label01;

        $r3 = virtualinvoke $r0.<com.facebook.GraphRequestBatch: com.facebook.GraphRequest get(int)>(0);

        $r4 = $r3.<com.facebook.GraphRequest: com.facebook.HttpMethod httpMethod>;

        goto label02;

     label01:
        $r4 = <com.facebook.HttpMethod: com.facebook.HttpMethod POST>;

     label02:
        $r5 = virtualinvoke $r4.<com.facebook.HttpMethod: java.lang.String name()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r5);

        staticinvoke <com.facebook.GraphRequest: void setConnectionContentType(java.net.HttpURLConnection,boolean)>($r1, $z0);

        $r6 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>();

        virtualinvoke $r13.<com.facebook.internal.Logger: void append(java.lang.String)>("Request:\n");

        $r5 = virtualinvoke $r0.<com.facebook.GraphRequestBatch: java.lang.String getId()>();

        virtualinvoke $r13.<com.facebook.internal.Logger: void appendKeyValue(java.lang.String,java.lang.Object)>("Id", $r5);

        virtualinvoke $r13.<com.facebook.internal.Logger: void appendKeyValue(java.lang.String,java.lang.Object)>("URL", $r6);

        $r5 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>();

        virtualinvoke $r13.<com.facebook.internal.Logger: void appendKeyValue(java.lang.String,java.lang.Object)>("Method", $r5);

        $r5 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent");

        virtualinvoke $r13.<com.facebook.internal.Logger: void appendKeyValue(java.lang.String,java.lang.Object)>("User-Agent", $r5);

        $r5 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type");

        virtualinvoke $r13.<com.facebook.internal.Logger: void appendKeyValue(java.lang.String,java.lang.Object)>("Content-Type", $r5);

        $i1 = virtualinvoke $r0.<com.facebook.GraphRequestBatch: int getTimeout()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1);

        $i1 = virtualinvoke $r0.<com.facebook.GraphRequestBatch: int getTimeout()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1);

        $r7 = <com.facebook.HttpMethod: com.facebook.HttpMethod POST>;

        if $r4 != $r7 goto label03;

        $z1 = 1;

     label03:
        if $z1 != 0 goto label04;

        virtualinvoke $r13.<com.facebook.internal.Logger: void log()>();

        return;

     label04:
        virtualinvoke $r1.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

     label05:
        $r14 = new java.io.BufferedOutputStream;

     label06:
        $r8 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r14.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r8);

     label07:
        if $z0 == 0 goto label13;

     label08:
        $r15 = new java.util.zip.GZIPOutputStream;

     label09:
        $r9 = $r15;

     label10:
        specialinvoke $r15.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r14);

     label11:
        goto label14;

     label12:
        $r10 := @caughtexception;

        $r9 = $r14;

        goto label25;

     label13:
        $r9 = $r14;

     label14:
        $z1 = staticinvoke <com.facebook.GraphRequest: boolean hasOnProgressCallbacks(com.facebook.GraphRequestBatch)>($r0);

     label15:
        if $z1 == 0 goto label21;

     label16:
        $r16 = new com.facebook.ProgressNoopOutputStream;

     label17:
        $r11 = virtualinvoke $r0.<com.facebook.GraphRequestBatch: android.os.Handler getCallbackHandler()>();

        specialinvoke $r16.<com.facebook.ProgressNoopOutputStream: void <init>(android.os.Handler)>($r11);

        staticinvoke <com.facebook.GraphRequest: void processRequest(com.facebook.GraphRequestBatch,com.facebook.internal.Logger,int,java.net.URL,java.io.OutputStream,boolean)>($r0, null, $i0, $r6, $r16, $z0);

        $i1 = virtualinvoke $r16.<com.facebook.ProgressNoopOutputStream: int getMaxProgress()>();

        $r12 = virtualinvoke $r16.<com.facebook.ProgressNoopOutputStream: java.util.Map getProgressMap()>();

        $r17 = new com.facebook.ProgressOutputStream;

     label18:
        $l2 = (long) $i1;

     label19:
        $r8 = (java.io.OutputStream) $r9;

        specialinvoke $r17.<com.facebook.ProgressOutputStream: void <init>(java.io.OutputStream,com.facebook.GraphRequestBatch,java.util.Map,long)>($r8, $r0, $r12, $l2);

     label20:
        $r9 = $r17;

     label21:
        $r8 = (java.io.OutputStream) $r9;

        staticinvoke <com.facebook.GraphRequest: void processRequest(com.facebook.GraphRequestBatch,com.facebook.internal.Logger,int,java.net.URL,java.io.OutputStream,boolean)>($r0, $r13, $i0, $r6, $r8, $z0);

     label22:
        $r8 = (java.io.OutputStream) $r9;

        virtualinvoke $r8.<java.io.OutputStream: void close()>();

        virtualinvoke $r13.<com.facebook.internal.Logger: void log()>();

        return;

     label23:
        $r10 := @caughtexception;

        goto label25;

     label24:
        $r10 := @caughtexception;

        $r9 = null;

     label25:
        if $r9 == null goto label26;

        $r8 = (java.io.OutputStream) $r9;

        virtualinvoke $r8.<java.io.OutputStream: void close()>();

     label26:
        throw $r10;

        catch java.lang.Throwable from label05 to label06 with label24;
        catch java.lang.Throwable from label06 to label07 with label24;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
    }
