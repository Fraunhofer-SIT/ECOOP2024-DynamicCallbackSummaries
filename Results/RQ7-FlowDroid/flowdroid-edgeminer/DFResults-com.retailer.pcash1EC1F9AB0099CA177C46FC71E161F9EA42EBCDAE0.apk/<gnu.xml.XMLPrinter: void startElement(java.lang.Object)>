    public void startElement(java.lang.Object)
    {
        java.lang.Object[] $r7, $r16;
        gnu.mapping.ThreadLocation $r2;
        byte $b1;
        int $i0, $i2, $i3;
        java.lang.String $r4, $r6, $r14;
        boolean $z0;
        gnu.xml.NamespaceBinding[] $r8, $r15;
        gnu.xml.XMLPrinter r0;
        gnu.text.PrettyWriter $r5;
        gnu.xml.XName $r10;
        java.lang.Object $r1, $r3;
        gnu.xml.NamespaceBinding $r9, $r11, r12, $r13;

        r0 := @this: gnu.xml.XMLPrinter;

        $r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<gnu.xml.XMLPrinter: void closeTag()>();

        $i0 = r0.<gnu.xml.XMLPrinter: int elementNesting>;

        if $i0 != 0 goto label05;

        $z0 = r0.<gnu.xml.XMLPrinter: boolean inDocument>;

        if $z0 != 0 goto label01;

        virtualinvoke r0.<gnu.xml.XMLPrinter: void setIndentMode()>();

     label01:
        $i0 = r0.<gnu.xml.XMLPrinter: int prev>;

        if $i0 != -7 goto label02;

        virtualinvoke r0.<gnu.xml.XMLPrinter: void write(int)>(10);

     label02:
        $r2 = <gnu.xml.XMLPrinter: gnu.mapping.ThreadLocation doctypeSystem>;

        $r3 = virtualinvoke $r2.<gnu.mapping.ThreadLocation: java.lang.Object get(java.lang.Object)>(null);

        if $r3 == null goto label05;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label05;

        $r2 = <gnu.xml.XMLPrinter: gnu.mapping.ThreadLocation doctypePublic>;

        $r3 = virtualinvoke $r2.<gnu.mapping.ThreadLocation: java.lang.Object get(java.lang.Object)>(null);

        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(java.lang.String)>("<!DOCTYPE ");

        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        $r6 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(java.lang.String)>($r6);

        if $r3 != null goto label15;

        $r6 = null;

     label03:
        if $r6 == null goto label16;

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 <= 0 goto label16;

        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(java.lang.String)>(" PUBLIC \"");

        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(java.lang.String)>($r6);

        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(java.lang.String)>("\" \"");

     label04:
        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(java.lang.String)>($r4);

        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(java.lang.String)>("\">");

        virtualinvoke r0.<gnu.xml.XMLPrinter: void println()>();

     label05:
        $i0 = r0.<gnu.xml.XMLPrinter: int printIndent>;

        if $i0 < 0 goto label09;

        $i0 = r0.<gnu.xml.XMLPrinter: int prev>;

        if $i0 == -3 goto label06;

        $i0 = r0.<gnu.xml.XMLPrinter: int prev>;

        if $i0 == -4 goto label06;

        $i0 = r0.<gnu.xml.XMLPrinter: int prev>;

        if $i0 != -5 goto label08;

     label06:
        $i0 = r0.<gnu.xml.XMLPrinter: int printIndent>;

        if $i0 <= 0 goto label17;

        $b1 = 82;

     label07:
        virtualinvoke r0.<gnu.xml.XMLPrinter: void writeBreak(int)>($b1);

     label08:
        virtualinvoke r0.<gnu.xml.XMLPrinter: void startLogicalBlock(java.lang.String,java.lang.String,int)>("", "", 2);

     label09:
        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(int)>(60);

        virtualinvoke r0.<gnu.xml.XMLPrinter: void writeQName(java.lang.Object)>($r1);

        $i0 = r0.<gnu.xml.XMLPrinter: int printIndent>;

        if $i0 < 0 goto label10;

        $z0 = r0.<gnu.xml.XMLPrinter: boolean indentAttributes>;

        if $z0 == 0 goto label10;

        virtualinvoke r0.<gnu.xml.XMLPrinter: void startLogicalBlock(java.lang.String,java.lang.String,int)>("", "", 2);

     label10:
        $r7 = r0.<gnu.xml.XMLPrinter: java.lang.Object[] elementNameStack>;

        $i0 = r0.<gnu.xml.XMLPrinter: int elementNesting>;

        $r7[$i0] = $r1;

        $r8 = r0.<gnu.xml.XMLPrinter: gnu.xml.NamespaceBinding[] namespaceSaveStack>;

        $i0 = r0.<gnu.xml.XMLPrinter: int elementNesting>;

        $i2 = $i0 + 1;

        r0.<gnu.xml.XMLPrinter: int elementNesting> = $i2;

        $r9 = r0.<gnu.xml.XMLPrinter: gnu.xml.NamespaceBinding namespaceBindings>;

        $r8[$i0] = $r9;

        $z0 = $r1 instanceof gnu.xml.XName;

        if $z0 == 0 goto label36;

        $r10 = (gnu.xml.XName) $r1;

        $r9 = $r10.<gnu.xml.XName: gnu.xml.NamespaceBinding namespaceNodes>;

        $r11 = r0.<gnu.xml.XMLPrinter: gnu.xml.NamespaceBinding namespaceBindings>;

        $r11 = staticinvoke <gnu.xml.NamespaceBinding: gnu.xml.NamespaceBinding commonAncestor(gnu.xml.NamespaceBinding,gnu.xml.NamespaceBinding)>($r9, $r11);

        if $r9 != null goto label18;

        $i0 = 0;

     label11:
        $r8 = newarray (gnu.xml.NamespaceBinding)[$i0];

        $i0 = 0;

        $z0 = r0.<gnu.xml.XMLPrinter: boolean canonicalize>;

        r12 = $r9;

     label12:
        if r12 == $r11 goto label25;

        $i2 = $i0;

        virtualinvoke r12.<gnu.xml.NamespaceBinding: java.lang.String getUri()>();

        $r4 = virtualinvoke r12.<gnu.xml.NamespaceBinding: java.lang.String getPrefix()>();

     label13:
        $i2 = $i2 + -1;

        if $i2 < 0 goto label20;

        $r13 = $r8[$i2];

        $r6 = virtualinvoke $r13.<gnu.xml.NamespaceBinding: java.lang.String getPrefix()>();

        if $r4 != $r6 goto label19;

     label14:
        r12 = r12.<gnu.xml.NamespaceBinding: gnu.xml.NamespaceBinding next>;

        goto label12;

     label15:
        $r6 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        goto label03;

     label16:
        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(java.lang.String)>(" SYSTEM \"");

        goto label04;

     label17:
        $b1 = 78;

        goto label07;

     label18:
        $i0 = virtualinvoke $r9.<gnu.xml.NamespaceBinding: int count(gnu.xml.NamespaceBinding)>($r11);

        goto label11;

     label19:
        if $z0 == 0 goto label13;

        if $r4 != null goto label22;

     label20:
        if $z0 == 0 goto label24;

        $i2 = $i2 + 1;

     label21:
        $r8[$i2] = r12;

        $i0 = $i0 + 1;

        goto label14;

     label22:
        if $r6 == null goto label23;

        $i3 = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>($r6);

        if $i3 <= 0 goto label20;

     label23:
        $i3 = $i2 + 1;

        $r8[$i3] = $r13;

        goto label13;

     label24:
        $i2 = $i0;

        goto label21;

     label25:
        $i0 = $i0 + -1;

        if $i0 < 0 goto label30;

        r12 = $r8[$i0];

        $r4 = r12.<gnu.xml.NamespaceBinding: java.lang.String prefix>;

        $r6 = r12.<gnu.xml.NamespaceBinding: java.lang.String uri>;

        r12 = r0.<gnu.xml.XMLPrinter: gnu.xml.NamespaceBinding namespaceBindings>;

        $r14 = virtualinvoke r12.<gnu.xml.NamespaceBinding: java.lang.String resolve(java.lang.String)>($r4);

        if $r6 == $r14 goto label25;

        if $r6 != null goto label26;

        if $r4 == null goto label26;

        $z0 = r0.<gnu.xml.XMLPrinter: boolean undeclareNamespaces>;

        if $z0 == 0 goto label25;

     label26:
        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(int)>(32);

        if $r4 != null goto label29;

        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(java.lang.String)>("xmlns");

     label27:
        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(java.lang.String)>("=\"");

        r0.<gnu.xml.XMLPrinter: boolean inAttribute> = 1;

        if $r6 == null goto label28;

        virtualinvoke r0.<gnu.xml.XMLPrinter: void write(java.lang.String)>($r6);

     label28:
        r0.<gnu.xml.XMLPrinter: boolean inAttribute> = 0;

        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(int)>(34);

        goto label25;

     label29:
        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(java.lang.String)>("xmlns:");

        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(java.lang.String)>($r4);

        goto label27;

     label30:
        $z0 = r0.<gnu.xml.XMLPrinter: boolean undeclareNamespaces>;

        if $z0 == 0 goto label35;

        r12 = r0.<gnu.xml.XMLPrinter: gnu.xml.NamespaceBinding namespaceBindings>;

     label31:
        if r12 == $r11 goto label35;

        $r4 = r12.<gnu.xml.NamespaceBinding: java.lang.String prefix>;

        $r6 = r12.<gnu.xml.NamespaceBinding: java.lang.String uri>;

        if $r6 == null goto label33;

        $r6 = virtualinvoke $r9.<gnu.xml.NamespaceBinding: java.lang.String resolve(java.lang.String)>($r4);

        if $r6 != null goto label33;

        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(int)>(32);

        if $r4 != null goto label34;

        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(java.lang.String)>("xmlns");

     label32:
        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(java.lang.String)>("=\"\"");

     label33:
        r12 = r12.<gnu.xml.NamespaceBinding: gnu.xml.NamespaceBinding next>;

        goto label31;

     label34:
        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(java.lang.String)>("xmlns:");

        $r5 = r0.<gnu.xml.XMLPrinter: gnu.text.PrettyWriter bout>;

        virtualinvoke $r5.<gnu.text.PrettyWriter: void write(java.lang.String)>($r4);

        goto label32;

     label35:
        r0.<gnu.xml.XMLPrinter: gnu.xml.NamespaceBinding namespaceBindings> = $r9;

     label36:
        $i0 = r0.<gnu.xml.XMLPrinter: int elementNesting>;

        $r8 = r0.<gnu.xml.XMLPrinter: gnu.xml.NamespaceBinding[] namespaceSaveStack>;

        $i2 = lengthof $r8;

        if $i0 < $i2 goto label37;

        $i0 = r0.<gnu.xml.XMLPrinter: int elementNesting>;

        $i0 = 2 * $i0;

        $r8 = newarray (gnu.xml.NamespaceBinding)[$i0];

        $r15 = r0.<gnu.xml.XMLPrinter: gnu.xml.NamespaceBinding[] namespaceSaveStack>;

        $i0 = r0.<gnu.xml.XMLPrinter: int elementNesting>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, 0, $r8, 0, $i0);

        r0.<gnu.xml.XMLPrinter: gnu.xml.NamespaceBinding[] namespaceSaveStack> = $r8;

        $i0 = r0.<gnu.xml.XMLPrinter: int elementNesting>;

        $i0 = 2 * $i0;

        $r7 = newarray (java.lang.Object)[$i0];

        $r16 = r0.<gnu.xml.XMLPrinter: java.lang.Object[] elementNameStack>;

        $i0 = r0.<gnu.xml.XMLPrinter: int elementNesting>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r16, 0, $r7, 0, $i0);

        r0.<gnu.xml.XMLPrinter: java.lang.Object[] elementNameStack> = $r7;

     label37:
        r0.<gnu.xml.XMLPrinter: boolean inStartTag> = 1;

        $r4 = virtualinvoke r0.<gnu.xml.XMLPrinter: java.lang.String getHtmlTag(java.lang.Object)>($r1);

        $r6 = "script";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label38;

        $r6 = "style";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label39;

     label38:
        r0.<gnu.xml.XMLPrinter: boolean escapeText> = 0;

     label39:
        return;
    }
