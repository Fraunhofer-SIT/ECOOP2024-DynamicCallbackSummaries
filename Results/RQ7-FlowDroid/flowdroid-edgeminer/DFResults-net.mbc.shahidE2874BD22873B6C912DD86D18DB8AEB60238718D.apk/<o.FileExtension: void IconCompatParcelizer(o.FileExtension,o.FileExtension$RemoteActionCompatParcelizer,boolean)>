    static void IconCompatParcelizer(o.FileExtension, o.FileExtension$RemoteActionCompatParcelizer, boolean) throws java.io.IOException
    {
        java.lang.Throwable $r15;
        java.lang.IllegalStateException $r17;
        java.util.concurrent.ThreadPoolExecutor $r13;
        long $l3, $l4, $l5;
        java.util.concurrent.Callable $r14;
        java.util.LinkedHashMap $r12;
        o.FileExtension$AudioAttributesCompatParcelizer $r2;
        long[] $r10;
        byte $b6;
        o.FileExtension $r0, $r7;
        int $i0, $i1, $i2;
        java.lang.String $r8;
        boolean $z0, $z1;
        o.FileExtension$RemoteActionCompatParcelizer $r1, $r3;
        boolean[] $r4;
        java.io.IOException $r18;
        java.io.File $r6, $r9;
        java.io.Writer $r11;
        java.lang.StringBuilder $r16;
        java.io.File[] $r5;

        $r0 := @parameter0: o.FileExtension;

        $r1 := @parameter1: o.FileExtension$RemoteActionCompatParcelizer;

        $z0 := @parameter2: boolean;

        entermonitor $r0;

     label01:
        $r2 = $r1.<o.FileExtension$RemoteActionCompatParcelizer: o.FileExtension$AudioAttributesCompatParcelizer write>;

        $r3 = $r2.<o.FileExtension$AudioAttributesCompatParcelizer: o.FileExtension$RemoteActionCompatParcelizer write>;

        if $r3 != $r1 goto label14;

        $i0 = 0;

        if $z0 == 0 goto label06;

        $z1 = $r2.<o.FileExtension$AudioAttributesCompatParcelizer: boolean AudioAttributesImplBaseParcelizer>;

        if $z1 != 0 goto label06;

        $i1 = 0;

     label02:
        $i2 = $r0.<o.FileExtension: int IconCompatParcelizer>;

        if $i1 >= $i2 goto label06;

        $r4 = $r1.<o.FileExtension$RemoteActionCompatParcelizer: boolean[] RemoteActionCompatParcelizer>;

        $z1 = $r4[$i1];

        if $z1 == 0 goto label05;

        $r5 = $r2.<o.FileExtension$AudioAttributesCompatParcelizer: java.io.File[] read>;

        $r6 = $r5[$i1];

        $z1 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label04;

        $r7 = $r1.<o.FileExtension$RemoteActionCompatParcelizer: o.FileExtension IconCompatParcelizer>;

        staticinvoke <o.FileExtension: void IconCompatParcelizer(o.FileExtension,o.FileExtension$RemoteActionCompatParcelizer,boolean)>($r7, $r1, 0);

     label03:
        exitmonitor $r0;

        return;

     label04:
        $i1 = $i1 + 1;

        goto label02;

     label05:
        $r7 = $r1.<o.FileExtension$RemoteActionCompatParcelizer: o.FileExtension IconCompatParcelizer>;

        staticinvoke <o.FileExtension: void IconCompatParcelizer(o.FileExtension,o.FileExtension$RemoteActionCompatParcelizer,boolean)>($r7, $r1, 0);

        $r17 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Newly created entry didn\'t create value for index ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r17;

     label06:
        $i1 = $r0.<o.FileExtension: int IconCompatParcelizer>;

        if $i0 >= $i1 goto label09;

        $r5 = $r2.<o.FileExtension$AudioAttributesCompatParcelizer: java.io.File[] read>;

        $r6 = $r5[$i0];

        if $z0 == 0 goto label07;

        $z1 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label08;

        $r5 = $r2.<o.FileExtension$AudioAttributesCompatParcelizer: java.io.File[] IconCompatParcelizer>;

        $r9 = $r5[$i0];

        virtualinvoke $r6.<java.io.File: boolean renameTo(java.io.File)>($r9);

        $r10 = $r2.<o.FileExtension$AudioAttributesCompatParcelizer: long[] AudioAttributesCompatParcelizer>;

        $l3 = $r10[$i0];

        $l4 = virtualinvoke $r9.<java.io.File: long length()>();

        $r10 = $r2.<o.FileExtension$AudioAttributesCompatParcelizer: long[] AudioAttributesCompatParcelizer>;

        $r10[$i0] = $l4;

        $l5 = $r0.<o.FileExtension: long MediaDescriptionCompat>;

        $l3 = $l5 - $l3;

        $l4 = $l3 + $l4;

        $r0.<o.FileExtension: long MediaDescriptionCompat> = $l4;

        goto label08;

     label07:
        $z1 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label08;

        $z1 = virtualinvoke $r6.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label08;

        $r18 = new java.io.IOException;

        specialinvoke $r18.<java.io.IOException: void <init>()>();

        throw $r18;

     label08:
        $i0 = $i0 + 1;

        goto label06;

     label09:
        $i0 = $r0.<o.FileExtension: int write>;

        $i0 = $i0 + 1;

        $r0.<o.FileExtension: int write> = $i0;

        $r2.<o.FileExtension$AudioAttributesCompatParcelizer: o.FileExtension$RemoteActionCompatParcelizer write> = null;

        $z1 = $r2.<o.FileExtension$AudioAttributesCompatParcelizer: boolean AudioAttributesImplBaseParcelizer>;

        $z1 = $z1 | $z0;

        if $z1 == 0 goto label10;

        $r2.<o.FileExtension$AudioAttributesCompatParcelizer: boolean AudioAttributesImplBaseParcelizer> = 1;

        $r11 = $r0.<o.FileExtension: java.io.Writer RemoteActionCompatParcelizer>;

        virtualinvoke $r11.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("CLEAN");

        $r11 = $r0.<o.FileExtension: java.io.Writer RemoteActionCompatParcelizer>;

        virtualinvoke $r11.<java.io.Writer: java.io.Writer append(char)>(32);

        $r11 = $r0.<o.FileExtension: java.io.Writer RemoteActionCompatParcelizer>;

        $r8 = $r2.<o.FileExtension$AudioAttributesCompatParcelizer: java.lang.String RemoteActionCompatParcelizer>;

        virtualinvoke $r11.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r8);

        $r11 = $r0.<o.FileExtension: java.io.Writer RemoteActionCompatParcelizer>;

        $r8 = virtualinvoke $r2.<o.FileExtension$AudioAttributesCompatParcelizer: java.lang.String IconCompatParcelizer()>();

        virtualinvoke $r11.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r8);

        $r11 = $r0.<o.FileExtension: java.io.Writer RemoteActionCompatParcelizer>;

        virtualinvoke $r11.<java.io.Writer: java.io.Writer append(char)>(10);

        if $z0 == 0 goto label11;

        $l4 = $r0.<o.FileExtension: long MediaMetadataCompat>;

        $l3 = 1L + $l4;

        $r0.<o.FileExtension: long MediaMetadataCompat> = $l3;

        $r2.<o.FileExtension$AudioAttributesCompatParcelizer: long MediaBrowserCompat$CustomActionResultReceiver> = $l4;

        goto label11;

     label10:
        $r12 = $r0.<o.FileExtension: java.util.LinkedHashMap RatingCompat>;

        $r8 = $r2.<o.FileExtension$AudioAttributesCompatParcelizer: java.lang.String RemoteActionCompatParcelizer>;

        virtualinvoke $r12.<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>($r8);

        $r11 = $r0.<o.FileExtension: java.io.Writer RemoteActionCompatParcelizer>;

        virtualinvoke $r11.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("REMOVE");

        $r11 = $r0.<o.FileExtension: java.io.Writer RemoteActionCompatParcelizer>;

        virtualinvoke $r11.<java.io.Writer: java.io.Writer append(char)>(32);

        $r11 = $r0.<o.FileExtension: java.io.Writer RemoteActionCompatParcelizer>;

        $r8 = $r2.<o.FileExtension$AudioAttributesCompatParcelizer: java.lang.String RemoteActionCompatParcelizer>;

        virtualinvoke $r11.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r8);

        $r11 = $r0.<o.FileExtension: java.io.Writer RemoteActionCompatParcelizer>;

        virtualinvoke $r11.<java.io.Writer: java.io.Writer append(char)>(10);

     label11:
        $r11 = $r0.<o.FileExtension: java.io.Writer RemoteActionCompatParcelizer>;

        staticinvoke <o.FileExtension: void AudioAttributesCompatParcelizer(java.io.Writer)>($r11);

        $l4 = $r0.<o.FileExtension: long MediaDescriptionCompat>;

        $l3 = $r0.<o.FileExtension: long MediaBrowserCompat$MediaItem>;

        $b6 = $l4 cmp $l3;

        $i0 = (int) $b6;

        if $i0 > 0 goto label12;

        $z0 = virtualinvoke $r0.<o.FileExtension: boolean IconCompatParcelizer()>();

        if $z0 == 0 goto label13;

     label12:
        $r13 = $r0.<o.FileExtension: java.util.concurrent.ThreadPoolExecutor MediaBrowserCompat$ItemReceiver>;

        $r14 = $r0.<o.FileExtension: java.util.concurrent.Callable MediaBrowserCompat$CustomActionResultReceiver>;

        virtualinvoke $r13.<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r14);

     label13:
        exitmonitor $r0;

        return;

     label14:
        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>()>();

        throw $r17;

     label15:
        $r15 := @caughtexception;

        exitmonitor $r0;

        throw $r15;

        catch java.lang.Throwable from label01 to label03 with label15;
        catch java.lang.Throwable from label05 to label13 with label15;
        catch java.lang.Throwable from label14 to label15 with label15;
    }
