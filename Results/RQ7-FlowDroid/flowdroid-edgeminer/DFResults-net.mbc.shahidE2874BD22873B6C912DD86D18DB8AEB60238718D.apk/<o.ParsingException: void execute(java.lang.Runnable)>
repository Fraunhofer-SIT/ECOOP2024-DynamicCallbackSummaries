    public final void execute(java.lang.Runnable)
    {
        long $l0, $l2;
        o.ParsingException$2 $r2;
        java.lang.Runnable $r1;
        o.ParsingException r0;
        byte $b1;
        java.lang.Thread $r3;
        java.util.concurrent.ExecutorService $r4;
        boolean $z0;

        r0 := @this: o.ParsingException;

        $r1 := @parameter0: java.lang.Runnable;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r1, "PostAsyncSafelyExecutor#execute: task can\'t ne null");

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l2 = virtualinvoke $r3.<java.lang.Thread: long getId()>();

        $l0 = r0.<o.ParsingException: long IconCompatParcelizer>;

        $b1 = $l2 cmp $l0;

        if $b1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        return;

     label3:
        $r4 = r0.<o.ParsingException: java.util.concurrent.ExecutorService RemoteActionCompatParcelizer>;

        $r2 = new o.ParsingException$2;

        specialinvoke $r2.<o.ParsingException$2: void <init>(o.ParsingException,java.lang.Runnable)>(r0, $r1);

        interfaceinvoke $r4.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r2);

        return;
    }
