    private void AudioAttributesCompatParcelizer() throws java.io.IOException
    {
        java.lang.Throwable $r1, $r2, $r15;
        java.lang.String[] $r14;
        java.util.LinkedHashMap $r11;
        o.FileExtension$AudioAttributesCompatParcelizer $r13, $r18;
        java.nio.charset.Charset $r4;
        o.FileExtension r0;
        int $i0, $i1, $i2, $i3;
        java.io.OutputStreamWriter $r23;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1;
        o.FileExtension$RemoteActionCompatParcelizer $r19;
        java.io.BufferedWriter $r24;
        java.io.FileOutputStream $r22;
        java.io.IOException $r21;
        java.io.FileInputStream $r16;
        java.io.File $r3;
        o.Layer$LayerType $r17;
        java.lang.Object $r12;
        java.lang.StringBuilder $r20;

        r0 := @this: o.FileExtension;

        $r17 = new o.Layer$LayerType;

        $r16 = new java.io.FileInputStream;

        $r3 = r0.<o.FileExtension: java.io.File AudioAttributesImplApi26Parcelizer>;

        specialinvoke $r16.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

        $r4 = <o.ShapeTrimPath$Type: java.nio.charset.Charset IconCompatParcelizer>;

        specialinvoke $r17.<o.Layer$LayerType: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r16, $r4);

     label01:
        $r5 = virtualinvoke $r17.<o.Layer$LayerType: java.lang.String write()>();

        $r6 = virtualinvoke $r17.<o.Layer$LayerType: java.lang.String write()>();

        $r7 = virtualinvoke $r17.<o.Layer$LayerType: java.lang.String write()>();

        $r8 = virtualinvoke $r17.<o.Layer$LayerType: java.lang.String write()>();

        $r9 = virtualinvoke $r17.<o.Layer$LayerType: java.lang.String write()>();

     label02:
        $r10 = "libcore.io.DiskLruCache";

     label03:
        $z0 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

     label04:
        if $z0 == 0 goto label73;

        $r10 = "1";

     label05:
        $z0 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

     label06:
        if $z0 == 0 goto label73;

     label07:
        $i0 = r0.<o.FileExtension: int read>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $z0 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

     label08:
        if $z0 == 0 goto label73;

     label09:
        $i0 = r0.<o.FileExtension: int IconCompatParcelizer>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

     label10:
        if $z0 == 0 goto label73;

        $r7 = "";

     label11:
        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

     label12:
        if $z0 == 0 goto label73;

        $z0 = 0;

        $i0 = 0;

     label13:
        $r5 = virtualinvoke $r17.<o.Layer$LayerType: java.lang.String write()>();

        $i1 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>(32);

     label14:
        if $i1 == -1 goto label57;

        $i2 = $i1 + 1;

     label15:
        $i3 = virtualinvoke $r5.<java.lang.String: int indexOf(int,int)>(32, $i2);

     label16:
        if $i3 != -1 goto label24;

     label17:
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>($i2);

     label18:
        $r8 = $r6;

        if $i1 != 6 goto label26;

     label19:
        $z1 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("REMOVE");

     label20:
        if $z1 == 0 goto label26;

     label21:
        $r11 = r0.<o.FileExtension: java.util.LinkedHashMap RatingCompat>;

     label22:
        virtualinvoke $r11.<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>($r6);

     label23:
        goto label52;

     label24:
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

     label25:
        $r8 = $r6;

     label26:
        $r11 = r0.<o.FileExtension: java.util.LinkedHashMap RatingCompat>;

     label27:
        $r12 = virtualinvoke $r11.<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>($r8);

     label28:
        $r13 = (o.FileExtension$AudioAttributesCompatParcelizer) $r12;

     label29:
        if $r13 != null goto label35;

     label30:
        $r18 = new o.FileExtension$AudioAttributesCompatParcelizer;

     label31:
        $r13 = $r18;

     label32:
        specialinvoke $r18.<o.FileExtension$AudioAttributesCompatParcelizer: void <init>(o.FileExtension,java.lang.String,byte)>(r0, $r8, 0);

     label33:
        $r11 = r0.<o.FileExtension: java.util.LinkedHashMap RatingCompat>;

     label34:
        virtualinvoke $r11.<java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r18);

     label35:
        if $i3 == -1 goto label42;

        if $i1 != 5 goto label42;

     label36:
        $z1 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("CLEAN");

     label37:
        if $z1 == 0 goto label42;

        $i1 = $i3 + 1;

     label38:
        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>($i1);

        $r14 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

     label39:
        $r13.<o.FileExtension$AudioAttributesCompatParcelizer: boolean AudioAttributesImplBaseParcelizer> = 1;

        $r13.<o.FileExtension$AudioAttributesCompatParcelizer: o.FileExtension$RemoteActionCompatParcelizer write> = null;

     label40:
        virtualinvoke $r13.<o.FileExtension$AudioAttributesCompatParcelizer: void AudioAttributesCompatParcelizer(java.lang.String[])>($r14);

     label41:
        goto label52;

     label42:
        if $i3 != -1 goto label53;

        if $i1 != 5 goto label49;

     label43:
        $z1 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("DIRTY");

     label44:
        if $z1 == 0 goto label49;

     label45:
        $r19 = new o.FileExtension$RemoteActionCompatParcelizer;

     label46:
        specialinvoke $r19.<o.FileExtension$RemoteActionCompatParcelizer: void <init>(o.FileExtension,o.FileExtension$AudioAttributesCompatParcelizer,byte)>(r0, $r13, 0);

     label47:
        $r13.<o.FileExtension$AudioAttributesCompatParcelizer: o.FileExtension$RemoteActionCompatParcelizer write> = $r19;

     label48:
        goto label52;

     label49:
        if $i3 != -1 goto label53;

        if $i1 != 4 goto label53;

     label50:
        $z1 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("READ");

     label51:
        if $z1 == 0 goto label53;

     label52:
        $i0 = $i0 + 1;

        goto label13;

     label53:
        $r20 = new java.lang.StringBuilder;

     label54:
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected journal line: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label55:
        $r21 = new java.io.IOException;

     label56:
        $r5 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r21;

     label57:
        $r20 = new java.lang.StringBuilder;

     label58:
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected journal line: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label59:
        $r21 = new java.io.IOException;

     label60:
        $r5 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r21;

     label61:
        $r11 = r0.<o.FileExtension: java.util.LinkedHashMap RatingCompat>;

        $i1 = virtualinvoke $r11.<java.util.AbstractMap: int size()>();

     label62:
        $i0 = $i0 - $i1;

     label63:
        r0.<o.FileExtension: int write> = $i0;

        $i0 = $r17.<o.Layer$LayerType: int read>;

     label64:
        if $i0 != -1 goto label65;

        $z0 = 1;

     label65:
        if $z0 == 0 goto label68;

     label66:
        virtualinvoke r0.<o.FileExtension: void read()>();

     label67:
        goto label72;

     label68:
        $r24 = new java.io.BufferedWriter;

     label69:
        $r23 = new java.io.OutputStreamWriter;

     label70:
        $r22 = new java.io.FileOutputStream;

     label71:
        $r3 = r0.<o.FileExtension: java.io.File AudioAttributesImplApi26Parcelizer>;

        specialinvoke $r22.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>($r3, 1);

        $r4 = <o.ShapeTrimPath$Type: java.nio.charset.Charset IconCompatParcelizer>;

        specialinvoke $r23.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r22, $r4);

        specialinvoke $r24.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r23);

        r0.<o.FileExtension: java.io.Writer RemoteActionCompatParcelizer> = $r24;

     label72:
        staticinvoke <o.ShapeTrimPath$Type: void IconCompatParcelizer(java.io.Closeable)>($r17);

        return;

     label73:
        $r21 = new java.io.IOException;

     label74:
        $r20 = new java.lang.StringBuilder;

     label75:
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected journal header: [");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r21;

     label76:
        $r15 := @caughtexception;

        staticinvoke <o.ShapeTrimPath$Type: void IconCompatParcelizer(java.io.Closeable)>($r17);

        throw $r15;

     label77:
        $r1 := @caughtexception;

        goto label61;

     label78:
        $r2 := @caughtexception;

        goto label61;

        catch java.lang.Throwable from label01 to label02 with label76;
        catch java.lang.Throwable from label03 to label04 with label76;
        catch java.lang.Throwable from label05 to label06 with label76;
        catch java.lang.Throwable from label07 to label08 with label76;
        catch java.lang.Throwable from label09 to label10 with label76;
        catch java.lang.Throwable from label11 to label12 with label76;
        catch java.io.EOFException from label13 to label14 with label77;
        catch java.lang.Throwable from label13 to label14 with label76;
        catch java.io.EOFException from label15 to label16 with label78;
        catch java.io.EOFException from label17 to label18 with label78;
        catch java.io.EOFException from label19 to label20 with label78;
        catch java.io.EOFException from label22 to label23 with label78;
        catch java.io.EOFException from label24 to label25 with label78;
        catch java.io.EOFException from label27 to label28 with label78;
        catch java.io.EOFException from label32 to label33 with label78;
        catch java.io.EOFException from label34 to label35 with label78;
        catch java.io.EOFException from label36 to label37 with label78;
        catch java.io.EOFException from label38 to label39 with label78;
        catch java.io.EOFException from label40 to label41 with label78;
        catch java.io.EOFException from label43 to label44 with label78;
        catch java.io.EOFException from label46 to label47 with label78;
        catch java.io.EOFException from label50 to label51 with label78;
        catch java.io.EOFException from label54 to label55 with label78;
        catch java.io.EOFException from label56 to label57 with label78;
        catch java.io.EOFException from label58 to label59 with label78;
        catch java.io.EOFException from label60 to label61 with label78;
        catch java.lang.Throwable from label15 to label16 with label76;
        catch java.lang.Throwable from label17 to label18 with label76;
        catch java.lang.Throwable from label19 to label20 with label76;
        catch java.lang.Throwable from label21 to label23 with label76;
        catch java.lang.Throwable from label24 to label25 with label76;
        catch java.lang.Throwable from label26 to label29 with label76;
        catch java.lang.Throwable from label30 to label31 with label76;
        catch java.lang.Throwable from label32 to label35 with label76;
        catch java.lang.Throwable from label36 to label37 with label76;
        catch java.lang.Throwable from label38 to label41 with label76;
        catch java.lang.Throwable from label43 to label44 with label76;
        catch java.lang.Throwable from label45 to label46 with label76;
        catch java.lang.Throwable from label46 to label48 with label76;
        catch java.lang.Throwable from label50 to label51 with label76;
        catch java.lang.Throwable from label53 to label54 with label76;
        catch java.lang.Throwable from label54 to label56 with label76;
        catch java.lang.Throwable from label56 to label58 with label76;
        catch java.lang.Throwable from label58 to label60 with label76;
        catch java.lang.Throwable from label60 to label61 with label76;
        catch java.lang.Throwable from label61 to label62 with label76;
        catch java.lang.Throwable from label63 to label64 with label76;
        catch java.lang.Throwable from label66 to label67 with label76;
        catch java.lang.Throwable from label68 to label69 with label76;
        catch java.lang.Throwable from label69 to label70 with label76;
        catch java.lang.Throwable from label70 to label71 with label76;
        catch java.lang.Throwable from label71 to label72 with label76;
        catch java.lang.Throwable from label73 to label74 with label76;
        catch java.lang.Throwable from label74 to label75 with label76;
        catch java.lang.Throwable from label75 to label76 with label76;
    }
