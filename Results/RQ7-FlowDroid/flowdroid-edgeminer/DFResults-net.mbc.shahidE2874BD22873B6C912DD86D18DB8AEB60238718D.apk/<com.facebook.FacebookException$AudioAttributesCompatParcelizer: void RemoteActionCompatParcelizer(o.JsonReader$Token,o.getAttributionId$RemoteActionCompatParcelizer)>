    public final void RemoteActionCompatParcelizer(o.JsonReader$Token, o.getAttributionId$RemoteActionCompatParcelizer)
    {
        java.lang.Throwable $r1, $r2, $r20, $r22, $r23, $r24;
        java.lang.IllegalStateException $r21;
        o.FileExtension $r16;
        java.util.Map $r8;
        int $i0;
        o.getAttributionId$RemoteActionCompatParcelizer $r4;
        java.lang.String $r6, $r15;
        boolean $z0;
        o.FileExtension$RemoteActionCompatParcelizer $r18;
        o.getAppsFlyerUID $r7;
        o.getAppsFlyerUID$write $r11;
        java.io.File $r19;
        com.facebook.FacebookException$AudioAttributesCompatParcelizer r0;
        o.getAppsFlyerUID$read $r10, $r12;
        java.util.concurrent.locks.Lock $r13;
        o.JsonReader$Token $r3;
        o.FileExtension$IconCompatParcelizer $r17;
        o.isPreInstalledApp $r5;
        java.lang.Object $r9;
        java.lang.StringBuilder $r14;

        r0 := @this: com.facebook.FacebookException$AudioAttributesCompatParcelizer;

        $r3 := @parameter0: o.JsonReader$Token;

        $r4 := @parameter1: o.getAttributionId$RemoteActionCompatParcelizer;

        $r5 = r0.<com.facebook.FacebookException$AudioAttributesCompatParcelizer: o.isPreInstalledApp read>;

        $r6 = virtualinvoke $r5.<o.isPreInstalledApp: java.lang.String RemoteActionCompatParcelizer(o.JsonReader$Token)>($r3);

        $r7 = r0.<com.facebook.FacebookException$AudioAttributesCompatParcelizer: o.getAppsFlyerUID AudioAttributesCompatParcelizer>;

        entermonitor $r7;

     label01:
        $r8 = $r7.<o.getAppsFlyerUID: java.util.Map write>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r10 = (o.getAppsFlyerUID$read) $r9;

        if $r10 != null goto label02;

        $r11 = $r7.<o.getAppsFlyerUID: o.getAppsFlyerUID$write read>;

        $r12 = virtualinvoke $r11.<o.getAppsFlyerUID$write: o.getAppsFlyerUID$read AudioAttributesCompatParcelizer()>();

        $r10 = $r12;

        $r8 = $r7.<o.getAppsFlyerUID: java.util.Map write>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r12);

     label02:
        $i0 = $r10.<o.getAppsFlyerUID$read: int AudioAttributesCompatParcelizer>;

        $i0 = $i0 + 1;

        $r10.<o.getAppsFlyerUID$read: int AudioAttributesCompatParcelizer> = $i0;

     label03:
        exitmonitor $r7;

        $r13 = $r10.<o.getAppsFlyerUID$read: java.util.concurrent.locks.Lock RemoteActionCompatParcelizer>;

        interfaceinvoke $r13.<java.util.concurrent.locks.Lock: void lock()>();

     label04:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DiskLruCacheWrapper", 2);

     label05:
        if $z0 == 0 goto label07;

     label06:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Put: Obtained: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for for Key: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("DiskLruCacheWrapper", $r15);

     label07:
        $r16 = specialinvoke r0.<com.facebook.FacebookException$AudioAttributesCompatParcelizer: o.FileExtension read()>();

        $r17 = virtualinvoke $r16.<o.FileExtension: o.FileExtension$IconCompatParcelizer IconCompatParcelizer(java.lang.String)>($r6);

     label08:
        if $r17 == null goto label10;

     label09:
        $r7 = r0.<com.facebook.FacebookException$AudioAttributesCompatParcelizer: o.getAppsFlyerUID AudioAttributesCompatParcelizer>;

        virtualinvoke $r7.<o.getAppsFlyerUID: void RemoteActionCompatParcelizer(java.lang.String)>($r6);

        return;

     label10:
        $r18 = virtualinvoke $r16.<o.FileExtension: o.FileExtension$RemoteActionCompatParcelizer RemoteActionCompatParcelizer(java.lang.String)>($r6);

     label11:
        if $r18 == null goto label24;

     label12:
        $r19 = virtualinvoke $r18.<o.FileExtension$RemoteActionCompatParcelizer: java.io.File write()>();

        $z0 = interfaceinvoke $r4.<o.getAttributionId$RemoteActionCompatParcelizer: boolean RemoteActionCompatParcelizer(java.io.File)>($r19);

     label13:
        if $z0 == 0 goto label15;

     label14:
        virtualinvoke $r18.<o.FileExtension$RemoteActionCompatParcelizer: void AudioAttributesCompatParcelizer()>();

     label15:
        $z0 = $r18.<o.FileExtension$RemoteActionCompatParcelizer: boolean read>;

     label16:
        if $z0 != 0 goto label09;

     label17:
        virtualinvoke $r18.<o.FileExtension$RemoteActionCompatParcelizer: void read()>();

     label18:
        goto label09;

     label19:
        $r20 := @caughtexception;

     label20:
        $z0 = $r18.<o.FileExtension$RemoteActionCompatParcelizer: boolean read>;

     label21:
        if $z0 != 0 goto label23;

     label22:
        virtualinvoke $r18.<o.FileExtension$RemoteActionCompatParcelizer: void read()>();

     label23:
        throw $r20;

     label24:
        $r21 = new java.lang.IllegalStateException;

        $r14 = new java.lang.StringBuilder;

     label25:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Had two simultaneous puts for: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

     label26:
        throw $r21;

     label27:
        $r22 := @caughtexception;

     label28:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DiskLruCacheWrapper", 5);

     label29:
        if $z0 == 0 goto label09;

     label30:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("DiskLruCacheWrapper", "Unable to put to disk cache", $r22);

     label31:
        goto label09;

     label32:
        $r23 := @caughtexception;

        $r7 = r0.<com.facebook.FacebookException$AudioAttributesCompatParcelizer: o.getAppsFlyerUID AudioAttributesCompatParcelizer>;

        virtualinvoke $r7.<o.getAppsFlyerUID: void RemoteActionCompatParcelizer(java.lang.String)>($r6);

        throw $r23;

     label33:
        $r24 := @caughtexception;

        exitmonitor $r7;

        throw $r24;

     label34:
        $r1 := @caughtexception;

        goto label09;

     label35:
        $r2 := @caughtexception;

        goto label23;

        catch java.lang.Throwable from label01 to label03 with label33;
        catch java.lang.Throwable from label04 to label05 with label32;
        catch java.lang.Throwable from label06 to label07 with label32;
        catch java.io.IOException from label07 to label08 with label27;
        catch java.lang.Throwable from label07 to label08 with label32;
        catch java.io.IOException from label10 to label11 with label27;
        catch java.lang.Throwable from label10 to label11 with label32;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label15 to label16 with label32;
        catch java.io.IOException from label17 to label18 with label34;
        catch java.lang.Throwable from label17 to label18 with label32;
        catch java.lang.Throwable from label20 to label21 with label32;
        catch java.io.IOException from label22 to label23 with label35;
        catch java.lang.Throwable from label22 to label23 with label32;
        catch java.io.IOException from label23 to label24 with label27;
        catch java.io.IOException from label25 to label26 with label27;
        catch java.lang.Throwable from label23 to label27 with label32;
        catch java.lang.Throwable from label28 to label29 with label32;
        catch java.lang.Throwable from label30 to label31 with label32;
    }
