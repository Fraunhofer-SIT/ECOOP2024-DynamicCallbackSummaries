    public com.tencent.turingfd.sdk.mfa.Equuleus$do a(int, byte[], int, int)
    {
        java.net.HttpURLConnection $r16;
        byte[] $r3, $r15;
        java.lang.IllegalStateException $r54;
        java.net.URL $r43;
        java.net.Proxy $r44;
        java.lang.SecurityException $r50;
        boolean $z0, $z1;
        android.net.ConnectivityManager $r7;
        android.net.NetworkInfo $r8;
        android.net.NetworkInfo$State $r9, $r10;
        java.net.InetSocketAddress $r18;
        java.lang.Exception $r1, $r2, $r34, $r41;
        com.tencent.turingfd.sdk.mfa.Equuleus$do $r39;
        java.lang.IllegalAccessError $r38;
        java.lang.StringBuilder $r45;
        java.lang.Throwable $r13, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r35, $r36, $r37, $r42;
        android.content.Context $r5;
        java.io.ByteArrayOutputStream $r47;
        java.util.concurrent.atomic.AtomicReference $r46;
        short $s3;
        java.net.Proxy$Type $r17;
        com.tencent.turingfd.sdk.mfa.Andromeda$do $r11, $r14;
        java.net.URLConnection $r19;
        com.tencent.turingfd.sdk.mfa.Orion r0;
        int $i0, $i1, $i2;
        java.lang.String $r4, $r12;
        java.io.OutputStream $r33;
        java.lang.UnsupportedOperationException $r49;
        java.net.MalformedURLException $r52;
        java.io.IOException $r48;
        java.lang.IllegalArgumentException $r51;
        java.net.ProtocolException $r53;
        com.tencent.turingfd.sdk.mfa.'public' $r32;
        java.lang.Object $r6;
        java.io.InputStream $r40;

        r0 := @this: com.tencent.turingfd.sdk.mfa.Orion;

        $i0 := @parameter0: int;

        $r3 := @parameter1: byte[];

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r4 = r0.<com.tencent.turingfd.sdk.mfa.Orion: java.lang.String a>;

        $r5 = staticinvoke <com.tencent.turingcam.'native': android.content.Context b()>();

        $z0 = 1;

     label001:
        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r7 = (android.net.ConnectivityManager) $r6;

        $r8 = virtualinvoke $r7.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

     label002:
        if $r8 == null goto label007;

        $r9 = virtualinvoke $r8.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r10 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTING>;

        if $r9 == $r10 goto label003;

        $r9 = virtualinvoke $r8.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r10 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r9 != $r10 goto label007;

     label003:
        $i0 = virtualinvoke $r8.<android.net.NetworkInfo: int getType()>();

        if $i0 != 1 goto label004;

        $r11 = <com.tencent.turingfd.sdk.mfa.Andromeda$do: com.tencent.turingfd.sdk.mfa.Andromeda$do a>;

        goto label012;

     label004:
        $i0 = virtualinvoke $r8.<android.net.NetworkInfo: int getType()>();

        if $i0 != 0 goto label006;

        $r12 = staticinvoke <com.tencent.turingfd.sdk.mfa.Andromeda: java.lang.String a(android.content.Context)>($r5);

        if $r12 == null goto label005;

        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i0 <= 0 goto label005;

        $i0 = staticinvoke <com.tencent.turingfd.sdk.mfa.Andromeda: int b(android.content.Context)>($r5);

        if $i0 <= 0 goto label005;

        $r11 = <com.tencent.turingfd.sdk.mfa.Andromeda$do: com.tencent.turingfd.sdk.mfa.Andromeda$do b>;

        goto label012;

     label005:
        $r11 = <com.tencent.turingfd.sdk.mfa.Andromeda$do: com.tencent.turingfd.sdk.mfa.Andromeda$do c>;

        goto label012;

     label006:
        $r11 = <com.tencent.turingfd.sdk.mfa.Andromeda$do: com.tencent.turingfd.sdk.mfa.Andromeda$do c>;

        goto label012;

     label007:
        $r11 = <com.tencent.turingfd.sdk.mfa.Andromeda$do: com.tencent.turingfd.sdk.mfa.Andromeda$do d>;

        goto label012;

     label008:
        $r13 := @caughtexception;

        $r12 = virtualinvoke $r13.<java.lang.Throwable: java.lang.String getMessage()>();

        if $r12 == null goto label009;

        $z1 = virtualinvoke $r12.<java.lang.String: boolean contains(java.lang.CharSequence)>("ACCESS_NETWORK_STATE");

        if $z1 == 0 goto label009;

        $z1 = 1;

        goto label010;

     label009:
        $z1 = 0;

     label010:
        if $z1 == 0 goto label011;

        $r11 = <com.tencent.turingfd.sdk.mfa.Andromeda$do: com.tencent.turingfd.sdk.mfa.Andromeda$do a>;

        goto label012;

     label011:
        $r11 = <com.tencent.turingfd.sdk.mfa.Andromeda$do: com.tencent.turingfd.sdk.mfa.Andromeda$do d>;

     label012:
        $r14 = <com.tencent.turingfd.sdk.mfa.Andromeda$do: com.tencent.turingfd.sdk.mfa.Andromeda$do d>;

        $r15 = null;

        if $r11 != $r14 goto label013;

        $r16 = null;

        $s3 = -1052;

        goto label044;

     label013:
        $r43 = new java.net.URL;

     label014:
        specialinvoke $r43.<java.net.URL: void <init>(java.lang.String)>($r4);

     label015:
        $r14 = <com.tencent.turingfd.sdk.mfa.Andromeda$do: com.tencent.turingfd.sdk.mfa.Andromeda$do b>;

     label016:
        if $r11 != $r14 goto label022;

     label017:
        $r44 = new java.net.Proxy;

     label018:
        $r17 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;

     label019:
        $r5 = staticinvoke <com.tencent.turingcam.'native': android.content.Context b()>();

        $r4 = staticinvoke <com.tencent.turingfd.sdk.mfa.Andromeda: java.lang.String a(android.content.Context)>($r5);

        $r5 = staticinvoke <com.tencent.turingcam.'native': android.content.Context b()>();

        $i0 = staticinvoke <com.tencent.turingfd.sdk.mfa.Andromeda: int b(android.content.Context)>($r5);

        $r18 = staticinvoke <java.net.InetSocketAddress: java.net.InetSocketAddress createUnresolved(java.lang.String,int)>($r4, $i0);

        specialinvoke $r44.<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>($r17, $r18);

        $r19 = virtualinvoke $r43.<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>($r44);

     label020:
        $r16 = (java.net.HttpURLConnection) $r19;

     label021:
        goto label024;

     label022:
        $r19 = virtualinvoke $r43.<java.net.URL: java.net.URLConnection openConnection()>();

     label023:
        $r16 = (java.net.HttpURLConnection) $r19;

     label024:
        virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(15000);

        virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(15000);

     label025:
        $s3 = 0;

        goto label044;

     label026:
        $r20 := @caughtexception;

        goto label033;

     label027:
        $r21 := @caughtexception;

        goto label035;

     label028:
        $r22 := @caughtexception;

        $r23 = $r22;

        goto label037;

     label029:
        $r24 := @caughtexception;

        $r25 = $r24;

        goto label039;

     label030:
        $r26 := @caughtexception;

        $r27 = $r26;

        goto label041;

     label031:
        $r28 := @caughtexception;

        $r29 = $r28;

        goto label043;

     label032:
        $r30 := @caughtexception;

        $r20 = $r30;

        $r16 = null;

     label033:
        $s3 = -1000;

        virtualinvoke $r20.<java.lang.Throwable: void printStackTrace()>();

        goto label044;

     label034:
        $r31 := @caughtexception;

        $r21 = $r31;

        $r16 = null;

     label035:
        $r32 = staticinvoke <com.tencent.turingfd.sdk.mfa.'public': com.tencent.turingfd.sdk.mfa.'public' a()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r21);

        virtualinvoke $r32.<com.tencent.turingfd.sdk.mfa.'public': void a(java.lang.String,java.lang.String)>("2", $r4);

        $s3 = -1056;

        $r48 = (java.io.IOException) $r21;

        virtualinvoke $r48.<java.io.IOException: void printStackTrace()>();

        goto label044;

     label036:
        $r23 := @caughtexception;

        $r16 = null;

     label037:
        $s3 = -1059;

        $r49 = (java.lang.UnsupportedOperationException) $r23;

        virtualinvoke $r49.<java.lang.UnsupportedOperationException: void printStackTrace()>();

        goto label044;

     label038:
        $r25 := @caughtexception;

        $r16 = null;

     label039:
        $s3 = -1058;

        $r50 = (java.lang.SecurityException) $r25;

        virtualinvoke $r50.<java.lang.SecurityException: void printStackTrace()>();

        goto label044;

     label040:
        $r27 := @caughtexception;

        $r16 = null;

     label041:
        $s3 = -1057;

        $r51 = (java.lang.IllegalArgumentException) $r27;

        virtualinvoke $r51.<java.lang.IllegalArgumentException: void printStackTrace()>();

        goto label044;

     label042:
        $r29 := @caughtexception;

        $r16 = null;

     label043:
        $s3 = -1053;

        $r52 = (java.net.MalformedURLException) $r29;

        virtualinvoke $r52.<java.net.MalformedURLException: void printStackTrace()>();

     label044:
        if $s3 == 0 goto label045;

        $i0 = $s3;

        $z1 = 0;

        goto label091;

     label045:
        $i0 = lengthof $r3;

     label046:
        virtualinvoke $r16.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r16.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke $r16.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

     label047:
        virtualinvoke $r16.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

     label048:
        virtualinvoke $r16.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Pragma", "no-cache");

     label049:
        virtualinvoke $r16.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Cache-Control", "no-cache");

        virtualinvoke $r16.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(0);

     label050:
        virtualinvoke $r16.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", "QQPimSecure");

     label051:
        virtualinvoke $r16.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept", "*/*");

     label052:
        virtualinvoke $r16.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Charset", "utf-8");

     label053:
        virtualinvoke $r16.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/octet-stream");

     label054:
        $r45 = new java.lang.StringBuilder;

     label055:
        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

     label056:
        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-length", $r4);

     label057:
        $r4 = <android.os.Build$VERSION: java.lang.String SDK>;

     label058:
        if $r4 == null goto label062;

     label059:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

     label060:
        if $i0 <= 13 goto label062;

     label061:
        virtualinvoke $r16.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Connection", "close");

     label062:
        $r33 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r33.<java.io.OutputStream: void write(byte[])>($r3);

        virtualinvoke $r33.<java.io.OutputStream: void flush()>();

        virtualinvoke $r33.<java.io.OutputStream: void close()>();

        $i0 = virtualinvoke $r16.<java.net.HttpURLConnection: int getResponseCode()>();

     label063:
        if $i0 != 200 goto label064;

        $z1 = 1;

        $i1 = 0;

        goto label066;

     label064:
        if $i0 != -1 goto label065;

        $z1 = 0;

        $i1 = -2000;

        goto label066;

     label065:
        $i1 = -2000 - $i0;

        $z1 = 0;

     label066:
        if $i0 < 301 goto label067;

        if $i0 <= 305 goto label068;

     label067:
        $z0 = 0;

     label068:
        if $z0 == 0 goto label080;

     label069:
        $r32 = staticinvoke <com.tencent.turingfd.sdk.mfa.'public': com.tencent.turingfd.sdk.mfa.'public' a()>();

     label070:
        $r4 = virtualinvoke $r16.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Location");

     label071:
        goto label073;

     label072:
        $r4 = "";

     label073:
        virtualinvoke $r32.<com.tencent.turingfd.sdk.mfa.'public': void a(java.lang.String,java.lang.String)>("3", $r4);

     label074:
        goto label080;

     label075:
        $r34 := @caughtexception;

        goto label082;

     label076:
        $r35 := @caughtexception;

        goto label084;

     label077:
        $r36 := @caughtexception;

        goto label086;

     label078:
        $r37 := @caughtexception;

        goto label088;

     label079:
        $r38 := @caughtexception;

        goto label090;

     label080:
        $i0 = $i1;

        goto label091;

     label081:
        $r34 := @caughtexception;

        $z1 = 0;

     label082:
        virtualinvoke $r34.<java.lang.Exception: void printStackTrace()>();

        $i0 = -2000;

        goto label091;

     label083:
        $r35 := @caughtexception;

        $z1 = 0;

     label084:
        $i0 = -2056;

        $r48 = (java.io.IOException) $r35;

        virtualinvoke $r48.<java.io.IOException: void printStackTrace()>();

        goto label091;

     label085:
        $r36 := @caughtexception;

        $z1 = 0;

     label086:
        $i0 = -2051;

        $r53 = (java.net.ProtocolException) $r36;

        virtualinvoke $r53.<java.net.ProtocolException: void printStackTrace()>();

        goto label091;

     label087:
        $r37 := @caughtexception;

        $z1 = 0;

     label088:
        $i0 = -2061;

        $r54 = (java.lang.IllegalStateException) $r37;

        virtualinvoke $r54.<java.lang.IllegalStateException: void printStackTrace()>();

        goto label091;

     label089:
        $r38 := @caughtexception;

        $z1 = 0;

     label090:
        $i0 = -2060;

        virtualinvoke $r38.<java.lang.IllegalAccessError: void printStackTrace()>();

     label091:
        if $i0 == 0 goto label092;

        $r3 = newarray (byte)[0];

        $r39 = staticinvoke <com.tencent.turingfd.sdk.mfa.Equuleus$do: com.tencent.turingfd.sdk.mfa.Equuleus$do a(int,byte[])>($i0, $r3);

        return $r39;

     label092:
        $r46 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r46.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        $s3 = -4000;

        if $r16 == null goto label105;

        if $z1 == 0 goto label105;

     label093:
        $r40 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label094:
        $r47 = new java.io.ByteArrayOutputStream;

     label095:
        specialinvoke $r47.<java.io.ByteArrayOutputStream: void <init>()>();

     label096:
        $i0 = virtualinvoke $r40.<java.io.InputStream: int read()>();

     label097:
        if $i0 == -1 goto label100;

     label098:
        virtualinvoke $r47.<java.io.ByteArrayOutputStream: void write(int)>($i0);

     label099:
        goto label096;

     label100:
        $r3 = virtualinvoke $r47.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label101:
        $r15 = $r3;

        $s3 = 0;

        goto label104;

     label102:
        $r41 := @caughtexception;

        virtualinvoke $r41.<java.lang.Exception: void printStackTrace()>();

        goto label104;

     label103:
        $r42 := @caughtexception;

        $r48 = (java.io.IOException) $r42;

        virtualinvoke $r48.<java.io.IOException: void printStackTrace()>();

        $s3 = -4056;

     label104:
        virtualinvoke $r46.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r15);

        if $r16 == null goto label105;

        virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>();

     label105:
        if $s3 == 0 goto label106;

        $r3 = newarray (byte)[0];

        $r39 = staticinvoke <com.tencent.turingfd.sdk.mfa.Equuleus$do: com.tencent.turingfd.sdk.mfa.Equuleus$do a(int,byte[])>($s3, $r3);

        return $r39;

     label106:
        $r6 = virtualinvoke $r46.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r3 = (byte[]) $r6;

        $r39 = staticinvoke <com.tencent.turingfd.sdk.mfa.Equuleus$do: com.tencent.turingfd.sdk.mfa.Equuleus$do a(int,byte[])>($s3, $r3);

        return $r39;

     label107:
        $r1 := @caughtexception;

        goto label062;

     label108:
        $r2 := @caughtexception;

        goto label072;

        catch java.lang.Throwable from label001 to label002 with label008;
        catch java.net.MalformedURLException from label014 to label015 with label042;
        catch java.net.MalformedURLException from label019 to label020 with label042;
        catch java.net.MalformedURLException from label022 to label023 with label042;
        catch java.lang.IllegalArgumentException from label014 to label015 with label040;
        catch java.lang.IllegalArgumentException from label019 to label020 with label040;
        catch java.lang.IllegalArgumentException from label022 to label023 with label040;
        catch java.lang.SecurityException from label014 to label015 with label038;
        catch java.lang.SecurityException from label019 to label020 with label038;
        catch java.lang.SecurityException from label022 to label023 with label038;
        catch java.lang.UnsupportedOperationException from label014 to label015 with label036;
        catch java.lang.UnsupportedOperationException from label019 to label020 with label036;
        catch java.lang.UnsupportedOperationException from label022 to label023 with label036;
        catch java.io.IOException from label014 to label015 with label034;
        catch java.io.IOException from label019 to label020 with label034;
        catch java.io.IOException from label022 to label023 with label034;
        catch java.lang.Throwable from label013 to label014 with label032;
        catch java.lang.Throwable from label014 to label016 with label032;
        catch java.lang.Throwable from label017 to label018 with label032;
        catch java.lang.Throwable from label018 to label021 with label032;
        catch java.lang.Throwable from label022 to label024 with label032;
        catch java.net.MalformedURLException from label024 to label025 with label031;
        catch java.lang.IllegalArgumentException from label024 to label025 with label030;
        catch java.lang.SecurityException from label024 to label025 with label029;
        catch java.lang.UnsupportedOperationException from label024 to label025 with label028;
        catch java.io.IOException from label024 to label025 with label027;
        catch java.lang.Throwable from label024 to label025 with label026;
        catch java.lang.IllegalAccessError from label046 to label047 with label089;
        catch java.lang.IllegalStateException from label046 to label047 with label087;
        catch java.net.ProtocolException from label046 to label047 with label085;
        catch java.io.IOException from label046 to label047 with label083;
        catch java.lang.Exception from label045 to label047 with label081;
        catch java.lang.IllegalAccessError from label047 to label048 with label089;
        catch java.lang.IllegalStateException from label047 to label048 with label087;
        catch java.net.ProtocolException from label047 to label048 with label085;
        catch java.io.IOException from label047 to label048 with label083;
        catch java.lang.Exception from label047 to label048 with label081;
        catch java.lang.IllegalAccessError from label048 to label049 with label089;
        catch java.lang.IllegalStateException from label048 to label049 with label087;
        catch java.net.ProtocolException from label048 to label049 with label085;
        catch java.io.IOException from label048 to label049 with label083;
        catch java.lang.Exception from label048 to label049 with label081;
        catch java.lang.IllegalAccessError from label049 to label050 with label089;
        catch java.lang.IllegalStateException from label049 to label050 with label087;
        catch java.net.ProtocolException from label049 to label050 with label085;
        catch java.io.IOException from label049 to label050 with label083;
        catch java.lang.Exception from label049 to label050 with label081;
        catch java.lang.IllegalAccessError from label050 to label051 with label089;
        catch java.lang.IllegalStateException from label050 to label051 with label087;
        catch java.net.ProtocolException from label050 to label051 with label085;
        catch java.io.IOException from label050 to label051 with label083;
        catch java.lang.Exception from label050 to label051 with label081;
        catch java.lang.IllegalAccessError from label051 to label052 with label089;
        catch java.lang.IllegalStateException from label051 to label052 with label087;
        catch java.net.ProtocolException from label051 to label052 with label085;
        catch java.io.IOException from label051 to label052 with label083;
        catch java.lang.Exception from label051 to label052 with label081;
        catch java.lang.IllegalAccessError from label052 to label053 with label089;
        catch java.lang.IllegalStateException from label052 to label053 with label087;
        catch java.net.ProtocolException from label052 to label053 with label085;
        catch java.io.IOException from label052 to label053 with label083;
        catch java.lang.Exception from label052 to label053 with label081;
        catch java.lang.IllegalAccessError from label053 to label054 with label089;
        catch java.lang.IllegalStateException from label053 to label054 with label087;
        catch java.net.ProtocolException from label053 to label054 with label085;
        catch java.io.IOException from label053 to label054 with label083;
        catch java.lang.Exception from label053 to label054 with label081;
        catch java.lang.IllegalAccessError from label054 to label055 with label089;
        catch java.lang.IllegalAccessError from label055 to label056 with label089;
        catch java.lang.IllegalStateException from label055 to label056 with label087;
        catch java.net.ProtocolException from label055 to label056 with label085;
        catch java.io.IOException from label055 to label056 with label083;
        catch java.lang.Exception from label055 to label056 with label081;
        catch java.lang.IllegalAccessError from label056 to label057 with label089;
        catch java.lang.IllegalStateException from label056 to label057 with label087;
        catch java.net.ProtocolException from label056 to label057 with label085;
        catch java.io.IOException from label056 to label057 with label083;
        catch java.lang.Exception from label056 to label057 with label081;
        catch java.lang.IllegalAccessError from label057 to label058 with label089;
        catch java.lang.IllegalAccessError from label059 to label060 with label089;
        catch java.lang.Exception from label061 to label062 with label107;
        catch java.lang.IllegalAccessError from label061 to label062 with label089;
        catch java.lang.IllegalAccessError from label062 to label063 with label089;
        catch java.lang.IllegalStateException from label062 to label063 with label087;
        catch java.net.ProtocolException from label062 to label063 with label085;
        catch java.io.IOException from label062 to label063 with label083;
        catch java.lang.Exception from label062 to label063 with label081;
        catch java.lang.IllegalAccessError from label069 to label070 with label079;
        catch java.lang.IllegalStateException from label069 to label070 with label078;
        catch java.net.ProtocolException from label069 to label070 with label077;
        catch java.io.IOException from label069 to label070 with label076;
        catch java.lang.Exception from label069 to label070 with label075;
        catch java.lang.Exception from label070 to label071 with label108;
        catch java.lang.IllegalAccessError from label070 to label071 with label079;
        catch java.lang.IllegalAccessError from label073 to label074 with label079;
        catch java.lang.IllegalStateException from label073 to label074 with label078;
        catch java.net.ProtocolException from label073 to label074 with label077;
        catch java.io.IOException from label073 to label074 with label076;
        catch java.lang.Exception from label073 to label074 with label075;
        catch java.io.IOException from label093 to label094 with label103;
        catch java.io.IOException from label095 to label097 with label103;
        catch java.io.IOException from label098 to label099 with label103;
        catch java.io.IOException from label100 to label101 with label103;
        catch java.lang.Exception from label093 to label094 with label102;
        catch java.lang.Exception from label095 to label097 with label102;
        catch java.lang.Exception from label098 to label099 with label102;
        catch java.lang.Exception from label100 to label101 with label102;
    }
