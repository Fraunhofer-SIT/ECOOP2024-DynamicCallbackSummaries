Source: $i3 = virtualinvoke $r1.<java.io.InputStream: int read()>()
$i3 = virtualinvoke $r1.<java.io.InputStream: int read()>() in <com.jirbo.adcolony.s: void <init>(java.io.InputStream)>
Sink: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0) in <com.jirbo.adcolony.y: void a()>

<com.jirbo.adcolony.s: void <init>(java.io.InputStream)>: $i3 = virtualinvoke $r1.<java.io.InputStream: int read()>()
<com.jirbo.adcolony.s: void <init>(java.io.InputStream)>: $i1 = $i1 | $i3
<com.jirbo.adcolony.s: void <init>(java.io.InputStream)>: $i0 = $i1 | $i0
<com.jirbo.adcolony.s: void <init>(java.io.InputStream)>: $c2 = (char) $i0
<com.jirbo.adcolony.s: void <init>(java.io.InputStream)>: virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2)
<com.jirbo.adcolony.s: void <init>(java.io.InputStream)>: virtualinvoke $r3.<java.lang.StringBuilder: void getChars(int,int,char[],int)>(0, $i0, $r2, 0)
<com.jirbo.adcolony.s: void <init>(java.io.InputStream)>: $r2 = r0.<com.jirbo.adcolony.s: char[] a>
<com.jirbo.adcolony.s: void <init>(java.io.InputStream)>: return
<com.jirbo.adcolony.f: com.jirbo.adcolony.s b()>: return $r3
<com.jirbo.adcolony.k: com.jirbo.adcolony.ADCData$i a(com.jirbo.adcolony.f)>: $r2 = staticinvoke <com.jirbo.adcolony.k: com.jirbo.adcolony.ADCData$i a(com.jirbo.adcolony.s)>($r1)
<com.jirbo.adcolony.k: com.jirbo.adcolony.ADCData$i a(com.jirbo.adcolony.s)>: $r4 = staticinvoke <com.jirbo.adcolony.k: java.lang.String e(com.jirbo.adcolony.s)>($r0)
<com.jirbo.adcolony.k: java.lang.String e(com.jirbo.adcolony.s)>: $c1 = virtualinvoke $r0.<com.jirbo.adcolony.s: char c()>()
<com.jirbo.adcolony.s: char c()>: $r1 = r0.<com.jirbo.adcolony.s: char[] a>
<com.jirbo.adcolony.s: char c()>: $c2 = $r1[$i0]
<com.jirbo.adcolony.s: char c()>: return $c2
<com.jirbo.adcolony.k: java.lang.String e(com.jirbo.adcolony.s)>: virtualinvoke $r1.<com.jirbo.adcolony.z: void b(char)>($c1)
<com.jirbo.adcolony.af: void b(char)>: virtualinvoke r0.<com.jirbo.adcolony.af: void a(char)>($c0)
<com.jirbo.adcolony.y: void a(char)>: $i4 = (int) $c0
<com.jirbo.adcolony.y: void a(char)>: $i2 = $i2 ^ $i4
<com.jirbo.adcolony.y: void a(char)>: $b3 = (byte) $i2
<com.jirbo.adcolony.y: void a(char)>: $r1[$i1] = $b3
<com.jirbo.adcolony.y: void a(char)>: $r1 = r0.<com.jirbo.adcolony.y: byte[] d>
<com.jirbo.adcolony.y: void a(char)>: virtualinvoke r0.<com.jirbo.adcolony.y: void a()>()
<com.jirbo.adcolony.y: void a()>: $r1 = r0.<com.jirbo.adcolony.y: byte[] d>
<com.jirbo.adcolony.y: void a()>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0)
