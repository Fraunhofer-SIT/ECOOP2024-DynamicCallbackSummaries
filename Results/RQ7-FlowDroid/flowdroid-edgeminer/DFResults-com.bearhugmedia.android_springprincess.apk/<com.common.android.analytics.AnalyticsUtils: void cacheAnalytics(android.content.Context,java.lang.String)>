    public static void cacheAnalytics(android.content.Context, java.lang.String)
    {
        java.lang.Throwable r5, $r6;
        android.content.Context $r0;
        java.io.FileOutputStream $r10;
        java.io.IOException $r12;
        java.io.File r2, $r9;
        java.lang.Exception r7;
        java.io.OutputStreamWriter $r11;
        java.lang.StringBuilder $r3, $r8;
        java.lang.String $r1, $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        entermonitor class "Lcom/common/android/analytics/AnalyticsUtils;";

     label01:
        r2 = virtualinvoke $r0.<android.content.Context: java.io.File getCacheDir()>();

        $r8 = new java.lang.StringBuilder;

        $r4 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r4 = <java.io.File: java.lang.String separator>;

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AnalyticsCache.txt");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r4);

        $z0 = virtualinvoke $r9.<java.io.File: boolean exists()>();

     label02:
        if $z0 != 0 goto label04;

     label03:
        virtualinvoke $r9.<java.io.File: boolean createNewFile()>();

     label04:
        $r10 = new java.io.FileOutputStream;

     label05:
        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>($r9, 1);

     label06:
        $r11 = new java.io.OutputStreamWriter;

     label07:
        specialinvoke $r11.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r10, "UTF-8");

        virtualinvoke $r11.<java.io.OutputStreamWriter: void write(java.lang.String)>($r1);

        virtualinvoke $r11.<java.io.OutputStreamWriter: void flush()>();

        virtualinvoke $r10.<java.io.FileOutputStream: void close()>();

     label08:
        exitmonitor class "Lcom/common/android/analytics/AnalyticsUtils;";

        return;

     label09:
        r5 := @caughtexception;

     label10:
        $r12 = (java.io.IOException) r5;

        virtualinvoke $r12.<java.io.IOException: void printStackTrace()>();

     label11:
        goto label04;

     label12:
        $r6 := @caughtexception;

        exitmonitor class "Lcom/common/android/analytics/AnalyticsUtils;";

        throw $r6;

     label13:
        r7 := @caughtexception;

     label14:
        virtualinvoke r7.<java.lang.Exception: void printStackTrace()>();

     label15:
        goto label08;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label09;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Throwable from label04 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label14 to label15 with label12;
    }
