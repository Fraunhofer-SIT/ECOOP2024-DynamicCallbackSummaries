Source: $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1)
$i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1) in <io.dcloud.common.util.IOUtil: byte[] getBytes(java.io.InputStream)>
Sink: virtualinvoke $r7.<java.io.FileOutputStream: void write(byte[],int,int)>($r0, 0, $i0) in <io.dcloud.common.adapter.io.DHFile: void writeFile(byte[],int,java.lang.String)>

<io.dcloud.common.util.IOUtil: byte[] getBytes(java.io.InputStream)>: $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1)
<io.dcloud.common.util.IOUtil: byte[] getBytes(java.io.InputStream)>: virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i0)
<io.dcloud.common.util.IOUtil: byte[] getBytes(java.io.InputStream)>: $r1 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
<io.dcloud.common.util.IOUtil: byte[] getBytes(java.io.InputStream)>: return $r1
<io.dcloud.common.adapter.util.PlatformUtil: byte[] getFileContent(java.lang.String,int)>: $r3 = $r4
<io.dcloud.common.adapter.util.PlatformUtil: byte[] getFileContent(java.lang.String,int)>: return $r3
<io.dcloud.g.a.e: void n()>: staticinvoke <io.dcloud.common.adapter.io.DHFile: void writeFile(byte[],int,java.lang.String)>($r7, 0, $r1)
<io.dcloud.common.adapter.io.DHFile: void writeFile(byte[],int,java.lang.String)>: virtualinvoke $r7.<java.io.FileOutputStream: void write(byte[],int,int)>($r0, 0, $i0)
