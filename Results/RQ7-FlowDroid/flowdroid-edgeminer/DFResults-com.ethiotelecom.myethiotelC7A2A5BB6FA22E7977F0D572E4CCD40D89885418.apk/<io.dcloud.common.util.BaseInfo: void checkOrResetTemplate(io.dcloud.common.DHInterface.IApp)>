    private static void checkOrResetTemplate(io.dcloud.common.DHInterface.IApp)
    {
        byte[] $r10;
        long $l0, $l1;
        java.util.HashMap $r5;
        java.lang.String[] $r14;
        java.util.ArrayList $r1;
        io.dcloud.common.DHInterface.IConfusionMgr $r15;
        org.json.JSONException $r19;
        org.json.JSONObject $r6, $r11;
        byte $b2;
        java.nio.charset.Charset $r9;
        int $i3, $i4;
        java.lang.String $r0, $r17;
        boolean $z0;
        io.dcloud.common.DHInterface.IApp $r2;
        java.io.FileInputStream $r8;
        java.io.File $r3;
        java.lang.Exception $r12, $r18;
        java.lang.StringBuilder $r4;
        io.dcloud.common.adapter.io.UnicodeInputStream $r7;
        android.app.Activity $r16;
        org.json.JSONArray $r13;

        $r2 := @parameter0: io.dcloud.common.DHInterface.IApp;

        $r3 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r0 = <io.dcloud.common.util.BaseInfo: java.lang.String sBaseWap2AppTemplatePath>;

        $r0 = staticinvoke <a.a: java.lang.String i(java.lang.StringBuilder,java.lang.String,java.lang.String)>($r4, $r0, "wap2app__template/__template.json");

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r0);

        $l0 = virtualinvoke $r3.<java.io.File: long lastModified()>();

        $l1 = <io.dcloud.common.util.BaseInfo: long sTemplateModifyTime>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label45;

        $r1 = <io.dcloud.common.util.BaseInfo: java.util.ArrayList mWap2appTemplateFiles>;

     label01:
        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

     label02:
        $r5 = <io.dcloud.common.util.BaseInfo: java.util.HashMap mW2AE>;

     label03:
        virtualinvoke $r5.<java.util.HashMap: void clear()>();

     label04:
        $r6 = null;

        $r7 = new io.dcloud.common.adapter.io.UnicodeInputStream;

        $r8 = new java.io.FileInputStream;

     label05:
        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

        $r9 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        $r0 = virtualinvoke $r9.<java.nio.charset.Charset: java.lang.String name()>();

        specialinvoke $r7.<io.dcloud.common.adapter.io.UnicodeInputStream: void <init>(java.io.InputStream,java.lang.String)>($r8, $r0);

        $r10 = staticinvoke <io.dcloud.common.util.IOUtil: byte[] getBytes(java.io.InputStream)>($r7);

     label06:
        $r0 = new java.lang.String;

     label07:
        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r10);

     label08:
        $r11 = new org.json.JSONObject;

     label09:
        specialinvoke $r11.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label10:
        $r6 = $r11;

        goto label13;

     label11:
        $r12 := @caughtexception;

     label12:
        virtualinvoke $r12.<java.lang.Exception: void printStackTrace()>();

     label13:
        $i3 = 0;

        if $r6 == null goto label22;

     label14:
        $z0 = virtualinvoke $r6.<org.json.JSONObject: boolean has(java.lang.String)>("files");

     label15:
        if $z0 == 0 goto label22;

     label16:
        $r13 = virtualinvoke $r6.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>("files");

        $i4 = virtualinvoke $r13.<org.json.JSONArray: int length()>();

     label17:
        if $i3 >= $i4 goto label32;

     label18:
        $r0 = virtualinvoke $r13.<org.json.JSONArray: java.lang.String optString(int)>($i3);

     label19:
        $r1 = <io.dcloud.common.util.BaseInfo: java.util.ArrayList mWap2appTemplateFiles>;

     label20:
        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

     label21:
        $i3 = $i3 + 1;

        goto label17;

     label22:
        $r3 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

     label23:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

     label24:
        $r0 = <io.dcloud.common.util.BaseInfo: java.lang.String sBaseWap2AppTemplatePath>;

     label25:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wap2app__template/");

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r0);

        $r14 = virtualinvoke $r3.<java.io.File: java.lang.String[] list()>();

     label26:
        if $r14 == null goto label32;

     label27:
        $i4 = lengthof $r14;

     label28:
        if $i3 >= $i4 goto label32;

        $r1 = <io.dcloud.common.util.BaseInfo: java.util.ArrayList mWap2appTemplateFiles>;

     label29:
        $r0 = $r14[$i3];

     label30:
        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

     label31:
        $i3 = $i3 + 1;

        goto label27;

     label32:
        $z0 = virtualinvoke $r6.<org.json.JSONObject: boolean has(java.lang.String)>("confusion");

     label33:
        if $z0 == 0 goto label41;

     label34:
        $r0 = virtualinvoke $r6.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("confusion");

        $r10 = staticinvoke <io.dcloud.common.util.Base64: byte[] decode2bytes(java.lang.String)>($r0);

        $r15 = interfaceinvoke $r2.<io.dcloud.common.DHInterface.IApp: io.dcloud.common.DHInterface.IConfusionMgr getConfusionMgr()>();

        $r16 = interfaceinvoke $r2.<io.dcloud.common.DHInterface.IAppInfo: android.app.Activity getActivity()>();

        $r0 = interfaceinvoke $r15.<io.dcloud.common.DHInterface.IConfusionMgr: java.lang.String handleEncryption(android.content.Context,byte[])>($r16, $r10);

     label35:
        $r17 = $r0;

     label36:
        $z0 = staticinvoke <io.dcloud.common.util.PdrUtil: boolean isEmpty(java.lang.Object)>($r0);

     label37:
        if $z0 == 0 goto label38;

        $r17 = "{}";

     label38:
        $r15 = interfaceinvoke $r2.<io.dcloud.common.DHInterface.IApp: io.dcloud.common.DHInterface.IConfusionMgr getConfusionMgr()>();

        interfaceinvoke $r15.<io.dcloud.common.DHInterface.IConfusionMgr: void removeData(java.lang.String)>("__w2a__template__");

        $r15 = interfaceinvoke $r2.<io.dcloud.common.DHInterface.IApp: io.dcloud.common.DHInterface.IConfusionMgr getConfusionMgr()>();

     label39:
        $r11 = new org.json.JSONObject;

     label40:
        specialinvoke $r11.<org.json.JSONObject: void <init>(java.lang.String)>($r17);

        interfaceinvoke $r15.<io.dcloud.common.DHInterface.IConfusionMgr: void recordEncryptionResources(java.lang.String,org.json.JSONObject)>("__w2a__template__", $r11);

     label41:
        $r0 = virtualinvoke $r6.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("version");

     label42:
        <io.dcloud.common.util.BaseInfo: java.lang.String sWap2AppTemplateVersion> = $r0;

        goto label45;

     label43:
        $r18 := @caughtexception;

        virtualinvoke $r18.<java.lang.Exception: void printStackTrace()>();

        goto label45;

     label44:
        $r19 := @caughtexception;

        virtualinvoke $r19.<org.json.JSONException: void printStackTrace()>();

     label45:
        <io.dcloud.common.util.BaseInfo: long sTemplateModifyTime> = $l0;

        return;

        catch org.json.JSONException from label01 to label02 with label44;
        catch org.json.JSONException from label03 to label04 with label44;
        catch java.lang.Exception from label01 to label02 with label43;
        catch java.lang.Exception from label03 to label04 with label43;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
        catch org.json.JSONException from label12 to label13 with label44;
        catch org.json.JSONException from label14 to label15 with label44;
        catch org.json.JSONException from label16 to label17 with label44;
        catch org.json.JSONException from label18 to label19 with label44;
        catch org.json.JSONException from label20 to label21 with label44;
        catch org.json.JSONException from label23 to label24 with label44;
        catch org.json.JSONException from label25 to label26 with label44;
        catch org.json.JSONException from label30 to label31 with label44;
        catch org.json.JSONException from label32 to label33 with label44;
        catch org.json.JSONException from label34 to label35 with label44;
        catch org.json.JSONException from label36 to label37 with label44;
        catch java.lang.Exception from label12 to label13 with label43;
        catch java.lang.Exception from label14 to label15 with label43;
        catch java.lang.Exception from label16 to label17 with label43;
        catch java.lang.Exception from label18 to label19 with label43;
        catch java.lang.Exception from label20 to label21 with label43;
        catch java.lang.Exception from label23 to label24 with label43;
        catch java.lang.Exception from label25 to label26 with label43;
        catch java.lang.Exception from label27 to label28 with label43;
        catch java.lang.Exception from label29 to label31 with label43;
        catch java.lang.Exception from label32 to label33 with label43;
        catch java.lang.Exception from label34 to label35 with label43;
        catch java.lang.Exception from label36 to label37 with label43;
        catch org.json.JSONException from label38 to label39 with label44;
        catch org.json.JSONException from label40 to label42 with label44;
        catch java.lang.Exception from label38 to label39 with label43;
        catch java.lang.Exception from label40 to label42 with label43;
    }
