Source: $i0 = virtualinvoke r0.<f.g.b.j.b: int read(byte[],int,int)>($r1, 0, $i0)
$i0 = virtualinvoke r0.<f.g.b.j.b: int read(byte[],int,int)>($r1, 0, $i0) in <f.g.b.j.b: int read(byte[])>
Sink: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i0) in <f.g.b.g.j: long a(java.io.InputStream,java.io.OutputStream)>

<f.g.b.j.b: int read(byte[])>: $i0 = virtualinvoke r0.<f.g.b.j.b: int read(byte[],int,int)>($r1, 0, $i0)
<f.g.b.j.b: int read(byte[])>: return $i0
<f.g.b.g.f: boolean f()>: $r2 = r0.<f.g.b.g.f: byte[] b>
<f.g.b.g.f: boolean f()>: r0 := @this: f.g.b.g.f
<f.g.b.g.f: int read(byte[],int,int)>: r0 := @this: f.g.b.g.f
<f.g.b.g.j: long a(java.io.InputStream,java.io.OutputStream)>: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r5, 0, $i0)
<f.g.b.g.j: long a(java.io.InputStream,java.io.OutputStream)>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i0)
