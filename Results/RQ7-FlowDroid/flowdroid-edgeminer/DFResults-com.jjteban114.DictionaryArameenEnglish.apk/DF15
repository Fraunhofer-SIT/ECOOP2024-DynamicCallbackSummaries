Source: $i0 = virtualinvoke r0.<gnu.text.LineBufferedReader: int read()>()
$i0 = virtualinvoke r0.<gnu.text.LineBufferedReader: int read()>() in <gnu.text.LineBufferedReader: int read()>
Sink: virtualinvoke $r1.<gnu.mapping.OutPort: void print(java.lang.Object)>($r3) in <gnu.expr.ReferenceExp: void print(gnu.mapping.OutPort)>

<gnu.text.LineBufferedReader: int read()>: $i0 = virtualinvoke r0.<gnu.text.LineBufferedReader: int read()>()
<gnu.text.LineBufferedReader: int read()>: return $i0
<gnu.mapping.TtyInPort: int read()>: return $i0
<gnu.text.LineBufferedReader: int read()>: return $i0
<gnu.mapping.TtyInPort: int read()>: return $i0
<com.google.appinventor.components.runtime.util.YailDictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>: return $r1
<gnu.mapping.SharedLocation: java.lang.Object get(java.lang.Object)>: return $r1
<gnu.kawa.reflect.FieldLocation: void setKindFlags()>: r0.<gnu.kawa.reflect.FieldLocation: java.lang.Object value> = $r5
<gnu.kawa.reflect.FieldLocation: void setKindFlags()>: return
<gnu.kawa.reflect.FieldLocation: void setup()>: throw $r1
<gnu.kawa.reflect.FieldLocation: java.lang.Object get(java.lang.Object)>: return $r1
<gnu.kawa.reflect.StaticFieldLocation: java.lang.Object get(java.lang.Object)>: r0 := @this: gnu.kawa.reflect.StaticFieldLocation
<gnu.mapping.PlainLocation: java.lang.Object get(java.lang.Object)>: $r2 = r0.<gnu.mapping.PlainLocation: gnu.mapping.Location base>
<gnu.mapping.PlainLocation: java.lang.Object get(java.lang.Object)>: r0 := @this: gnu.mapping.PlainLocation
<gnu.mapping.Location: java.lang.Object getValue()>: r0 := @this: gnu.mapping.Location
<gnu.mapping.NamedLocation: boolean equals(java.lang.Object)>: r0 := @this: gnu.mapping.NamedLocation
<gnu.mapping.UnboundLocationException: java.lang.String getMessage()>: $r5 = r0.<gnu.mapping.UnboundLocationException: java.lang.Object symbol>
<gnu.mapping.UnboundLocationException: java.lang.String getMessage()>: return $r1
<kawa.lang.NamedException: java.lang.String toString()>: $r3 = $r2[i0]
<kawa.lang.NamedException: java.lang.String toString()>: $r2 = r0.<kawa.lang.NamedException: java.lang.Object[] args>
<kawa.lang.NamedException: java.lang.String toString()>: r0 := @this: kawa.lang.NamedException
<gnu.expr.Declaration: java.lang.String getName()>: $r1 = r0.<gnu.expr.Declaration: java.lang.Object symbol>
<gnu.expr.Declaration: java.lang.String getName()>: r0 := @this: gnu.expr.Declaration
<gnu.expr.ReferenceExp: void print(gnu.mapping.OutPort)>: $r3 = r0.<gnu.expr.ReferenceExp: gnu.expr.Declaration binding>
<gnu.expr.ReferenceExp: void print(gnu.mapping.OutPort)>: $r3 = r0.<gnu.expr.ReferenceExp: gnu.expr.Declaration binding>
<gnu.expr.ReferenceExp: void print(gnu.mapping.OutPort)>: virtualinvoke $r1.<gnu.mapping.OutPort: void print(java.lang.Object)>($r3)
