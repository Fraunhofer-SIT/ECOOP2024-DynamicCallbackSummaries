    void setKindFlags()
    {
        gnu.bytecode.Type $r4;
        gnu.kawa.reflect.FieldLocation r0, $r7;
        gnu.bytecode.ClassType $r2;
        gnu.mapping.Location $r6;
        int $i0, $i1;
        java.lang.Object $r5;
        java.lang.String $r1;
        gnu.bytecode.Field $r3;
        boolean $z0;

        r0 := @this: gnu.kawa.reflect.FieldLocation;

        $r1 = virtualinvoke r0.<gnu.kawa.reflect.FieldLocation: java.lang.String getMemberName()>();

        $r2 = virtualinvoke r0.<gnu.kawa.reflect.FieldLocation: gnu.bytecode.ClassType getDeclaringClass()>();

        $r3 = virtualinvoke $r2.<gnu.bytecode.ClassType: gnu.bytecode.Field getDeclaredField(java.lang.String)>($r1);

        $i0 = virtualinvoke $r3.<gnu.bytecode.Field: int getModifiers()>();

        $r4 = virtualinvoke $r3.<gnu.bytecode.Field: gnu.bytecode.Type getType()>();

        $r2 = <gnu.expr.Compilation: gnu.bytecode.ClassType typeLocation>;

        $z0 = virtualinvoke $r4.<gnu.bytecode.Type: boolean isSubtype(gnu.bytecode.Type)>($r2);

        if $z0 == 0 goto label1;

        $i1 = r0.<gnu.kawa.reflect.FieldLocation: int flags>;

        $i1 = $i1 | 2;

        r0.<gnu.kawa.reflect.FieldLocation: int flags> = $i1;

     label1:
        $i0 = $i0 & 16;

        if $i0 == 0 goto label3;

        $i0 = r0.<gnu.kawa.reflect.FieldLocation: int flags>;

        $i0 = $i0 & 2;

        if $i0 != 0 goto label4;

        $i0 = r0.<gnu.kawa.reflect.FieldLocation: int flags>;

        $i0 = $i0 | 4;

        r0.<gnu.kawa.reflect.FieldLocation: int flags> = $i0;

        $r2 = <gnu.expr.Compilation: gnu.bytecode.ClassType typeProcedure>;

        $z0 = virtualinvoke $r4.<gnu.bytecode.Type: boolean isSubtype(gnu.bytecode.Type)>($r2);

        if $z0 == 0 goto label2;

        $i0 = r0.<gnu.kawa.reflect.FieldLocation: int flags>;

        $i0 = $i0 | 16;

        r0.<gnu.kawa.reflect.FieldLocation: int flags> = $i0;

     label2:
        $z0 = $r4 instanceof gnu.bytecode.ClassType;

        if $z0 == 0 goto label3;

        $r2 = (gnu.bytecode.ClassType) $r4;

        $z0 = virtualinvoke $r2.<gnu.bytecode.ClassType: boolean isSubclass(java.lang.String)>("kawa.lang.Syntax");

        if $z0 == 0 goto label3;

        $i0 = r0.<gnu.kawa.reflect.FieldLocation: int flags>;

        $i0 = $i0 | 32;

        r0.<gnu.kawa.reflect.FieldLocation: int flags> = $i0;

     label3:
        $i0 = r0.<gnu.kawa.reflect.FieldLocation: int flags>;

        $i0 = $i0 | 64;

        r0.<gnu.kawa.reflect.FieldLocation: int flags> = $i0;

        return;

     label4:
        $r5 = specialinvoke r0.<gnu.kawa.reflect.FieldLocation: java.lang.Object getFieldValue()>();

        $r6 = (gnu.mapping.Location) $r5;

        $z0 = $r6 instanceof gnu.kawa.reflect.FieldLocation;

        if $z0 == 0 goto label7;

        $r7 = (gnu.kawa.reflect.FieldLocation) $r6;

        $i0 = $r7.<gnu.kawa.reflect.FieldLocation: int flags>;

        $i0 = $i0 & 64;

        if $i0 != 0 goto label5;

        virtualinvoke $r7.<gnu.kawa.reflect.FieldLocation: void setKindFlags()>();

     label5:
        $i0 = r0.<gnu.kawa.reflect.FieldLocation: int flags>;

        $i1 = $r7.<gnu.kawa.reflect.FieldLocation: int flags>;

        $i1 = $i1 & 52;

        $i0 = $i0 | $i1;

        r0.<gnu.kawa.reflect.FieldLocation: int flags> = $i0;

        $i0 = $r7.<gnu.kawa.reflect.FieldLocation: int flags>;

        $i0 = $i0 & 4;

        if $i0 == 0 goto label6;

        $i0 = $r7.<gnu.kawa.reflect.FieldLocation: int flags>;

        $i0 = $i0 & 8;

        if $i0 == 0 goto label3;

        $r5 = $r7.<gnu.kawa.reflect.FieldLocation: java.lang.Object value>;

        r0.<gnu.kawa.reflect.FieldLocation: java.lang.Object value> = $r5;

        $i0 = r0.<gnu.kawa.reflect.FieldLocation: int flags>;

        $i0 = $i0 | 8;

        r0.<gnu.kawa.reflect.FieldLocation: int flags> = $i0;

        goto label3;

     label6:
        r0.<gnu.kawa.reflect.FieldLocation: java.lang.Object value> = $r7;

        $i0 = r0.<gnu.kawa.reflect.FieldLocation: int flags>;

        $i0 = $i0 | 8;

        r0.<gnu.kawa.reflect.FieldLocation: int flags> = $i0;

        goto label3;

     label7:
        $z0 = virtualinvoke $r6.<gnu.mapping.Location: boolean isConstant()>();

        if $z0 == 0 goto label3;

        $r5 = virtualinvoke $r6.<gnu.mapping.Location: java.lang.Object get(java.lang.Object)>(null);

        $z0 = $r5 instanceof gnu.mapping.Procedure;

        if $z0 == 0 goto label8;

        $i0 = r0.<gnu.kawa.reflect.FieldLocation: int flags>;

        $i0 = $i0 | 16;

        r0.<gnu.kawa.reflect.FieldLocation: int flags> = $i0;

     label8:
        $z0 = $r5 instanceof kawa.lang.Syntax;

        if $z0 == 0 goto label9;

        $i0 = r0.<gnu.kawa.reflect.FieldLocation: int flags>;

        $i0 = $i0 | 32;

        r0.<gnu.kawa.reflect.FieldLocation: int flags> = $i0;

     label9:
        $i0 = r0.<gnu.kawa.reflect.FieldLocation: int flags>;

        $i0 = $i0 | 12;

        r0.<gnu.kawa.reflect.FieldLocation: int flags> = $i0;

        r0.<gnu.kawa.reflect.FieldLocation: java.lang.Object value> = $r5;

        goto label3;
    }
