Source: $i0 = virtualinvoke $r1.<java.io.Reader: int read(char[],int,int)>($r2, $i1, $i0)
$i0 = virtualinvoke $r1.<java.io.Reader: int read(char[],int,int)>($r2, $i1, $i0) in <gnu.mapping.TtyInPort: int fill(int)>
Sink: virtualinvoke $r1.<gnu.mapping.OutPort: void print(java.lang.Object)>($r3) in <gnu.expr.ReferenceExp: void print(gnu.mapping.OutPort)>

<gnu.mapping.TtyInPort: int fill(int)>: $i0 = virtualinvoke $r1.<java.io.Reader: int read(char[],int,int)>($r2, $i1, $i0)
<gnu.mapping.TtyInPort: int fill(int)>: $r2 = r0.<gnu.mapping.TtyInPort: char[] buffer>
<gnu.mapping.TtyInPort: int fill(int)>: r0 := @this: gnu.mapping.TtyInPort
<gnu.text.LineBufferedReader: int read()>: r0 := @this: gnu.text.LineBufferedReader
<gnu.mapping.TtyInPort: int read()>: r0 := @this: gnu.mapping.TtyInPort
<gnu.text.LineBufferedReader: int read()>: return $i0
<gnu.mapping.TtyInPort: int read()>: return $i0
<com.google.youngandroid.runtime: java.lang.Object yailDictionarySetPair(java.lang.Object,java.lang.Object,java.lang.Object)>: return $r0
<com.google.youngandroid.runtime: java.lang.Object apply3(gnu.expr.ModuleMethod,java.lang.Object,java.lang.Object,java.lang.Object)>: return $r2
<gnu.expr.ModuleBody: java.lang.Object applyN(gnu.expr.ModuleMethod,java.lang.Object[])>: return $r4
<gnu.expr.ModuleBody: java.lang.Object apply1(gnu.expr.ModuleMethod,java.lang.Object)>: return $r2
<gnu.expr.ModuleMethod: java.lang.Object apply1(java.lang.Object)>: return $r1
<gnu.mapping.TtyInPort: void lineStart(boolean)>: $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>()
<gnu.mapping.TtyInPort: void lineStart(boolean)>: $r3 = virtualinvoke $r2.<gnu.mapping.Procedure: java.lang.Object apply1(java.lang.Object)>(r0)
<gnu.kawa.xml.MakeText: java.lang.Object apply1(java.lang.Object)>: return $r1
<gnu.mapping.TtyInPort: void lineStart(boolean)>: return
<gnu.text.LineBufferedReader: int read()>: $r1 = r0.<gnu.text.LineBufferedReader: char[] buffer>
<gnu.text.LineBufferedReader: int read()>: $c1 = $r1[$i2]
<gnu.text.LineBufferedReader: int read()>: $i0 = (int) $c1
<gnu.text.LineBufferedReader: int read()>: return $i0
<com.google.appinventor.components.runtime.util.YailDictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>: return $r1
<gnu.mapping.SharedLocation: java.lang.Object get(java.lang.Object)>: return $r1
<gnu.mapping.PlainLocation: java.lang.Object get(java.lang.Object)>: return $r1
<gnu.kawa.reflect.FieldLocation: java.lang.Object get(java.lang.Object)>: r0.<gnu.kawa.reflect.FieldLocation: java.lang.Object value> = $r2
<gnu.kawa.reflect.FieldLocation: java.lang.Object get(java.lang.Object)>: return r3
<gnu.kawa.reflect.StaticFieldLocation: java.lang.Object get(java.lang.Object)>: r0 := @this: gnu.kawa.reflect.StaticFieldLocation
<gnu.mapping.PlainLocation: java.lang.Object get(java.lang.Object)>: $r2 = r0.<gnu.mapping.PlainLocation: gnu.mapping.Location base>
<gnu.mapping.PlainLocation: java.lang.Object get(java.lang.Object)>: r0 := @this: gnu.mapping.PlainLocation
<gnu.mapping.Location: java.lang.Object getValue()>: r0 := @this: gnu.mapping.Location
<gnu.mapping.NamedLocation: boolean equals(java.lang.Object)>: r0 := @this: gnu.mapping.NamedLocation
<gnu.mapping.UnboundLocationException: java.lang.String getMessage()>: $r5 = r0.<gnu.mapping.UnboundLocationException: java.lang.Object symbol>
<gnu.mapping.UnboundLocationException: java.lang.String getMessage()>: return $r1
<kawa.lang.NamedException: java.lang.String toString()>: $r3 = $r2[i0]
<kawa.lang.NamedException: java.lang.String toString()>: $r2 = r0.<kawa.lang.NamedException: java.lang.Object[] args>
<kawa.lang.NamedException: java.lang.String toString()>: r0 := @this: kawa.lang.NamedException
<gnu.expr.Declaration: java.lang.String getName()>: $r1 = r0.<gnu.expr.Declaration: java.lang.Object symbol>
<gnu.expr.Declaration: java.lang.String getName()>: r0 := @this: gnu.expr.Declaration
<gnu.expr.ReferenceExp: void print(gnu.mapping.OutPort)>: $r3 = r0.<gnu.expr.ReferenceExp: gnu.expr.Declaration binding>
<gnu.expr.ReferenceExp: void print(gnu.mapping.OutPort)>: $r3 = r0.<gnu.expr.ReferenceExp: gnu.expr.Declaration binding>
<gnu.expr.ReferenceExp: void print(gnu.mapping.OutPort)>: virtualinvoke $r1.<gnu.mapping.OutPort: void print(java.lang.Object)>($r3)
