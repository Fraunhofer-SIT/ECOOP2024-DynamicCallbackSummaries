Source: $i0 = specialinvoke r0.<gnu.mapping.InPort: int read()>()
$i0 = specialinvoke r0.<gnu.mapping.InPort: int read()>() in <gnu.mapping.TtyInPort: int read()>
Sink: virtualinvoke $r2.<gnu.mapping.OutPort: void print(java.lang.String)>($r1) in <gnu.mapping.TtyInPort: void emitPrompt(java.lang.String)>

<gnu.mapping.TtyInPort: int read()>: $i0 = specialinvoke r0.<gnu.mapping.InPort: int read()>()
<gnu.mapping.TtyInPort: int read()>: return $i0
<gnu.text.Lexer: int read()>: return $i0
<com.google.appinventor.components.runtime.util.YailDictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>: return $r1
<gnu.mapping.PlainLocation: java.lang.Object get(java.lang.Object)>: return $r1
<gnu.kawa.reflect.FieldLocation: void setKindFlags()>: r0.<gnu.kawa.reflect.FieldLocation: java.lang.Object value> = $r5
<gnu.kawa.reflect.FieldLocation: void setKindFlags()>: return
<gnu.kawa.reflect.FieldLocation: void setup()>: throw $r1
<gnu.kawa.reflect.FieldLocation: java.lang.Object get(java.lang.Object)>: return $r1
<gnu.kawa.reflect.StaticFieldLocation: java.lang.Object get(java.lang.Object)>: r0 := @this: gnu.kawa.reflect.StaticFieldLocation
<gnu.mapping.PlainLocation: java.lang.Object get(java.lang.Object)>: $r2 = r0.<gnu.mapping.PlainLocation: gnu.mapping.Location base>
<gnu.mapping.PlainLocation: java.lang.Object get(java.lang.Object)>: r0 := @this: gnu.mapping.PlainLocation
<gnu.mapping.Location: java.lang.Object getValue()>: r0 := @this: gnu.mapping.Location
<gnu.mapping.NamedLocation: boolean equals(java.lang.Object)>: r0 := @this: gnu.mapping.NamedLocation
<gnu.mapping.Location: java.lang.String toString()>: $r5 = virtualinvoke r0.<gnu.mapping.Location: java.lang.Object getKeyProperty()>()
<gnu.mapping.NamedLocation: java.lang.Object getKeyProperty()>: $r1 = r0.<gnu.mapping.NamedLocation: java.lang.Object property>
<gnu.mapping.NamedLocation: java.lang.Object getKeyProperty()>: return $r1
<gnu.mapping.Location: java.lang.String toString()>: return $r3
<gnu.kawa.reflect.SlotSet: void apply(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>: throw $r25
<gnu.kawa.reflect.Invoke: java.lang.Object applyN(java.lang.Object[])>: return $r5
<gnu.kawa.functions.NamedPart: java.lang.Object applyN(java.lang.Object[])>: return $r3
<gnu.mapping.ProcedureN: java.lang.Object apply1(java.lang.Object)>: return $r1
<gnu.mapping.TtyInPort: void lineStart(boolean)>: $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>()
<gnu.mapping.TtyInPort: void lineStart(boolean)>: virtualinvoke r0.<gnu.mapping.TtyInPort: void emitPrompt(java.lang.String)>($r4)
<gnu.mapping.TtyInPort: void emitPrompt(java.lang.String)>: virtualinvoke $r2.<gnu.mapping.OutPort: void print(java.lang.String)>($r1)
