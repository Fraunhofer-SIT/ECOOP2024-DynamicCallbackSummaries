Source: $i0 = specialinvoke r0.<gnu.mapping.InPort: int read()>()
$i0 = specialinvoke r0.<gnu.mapping.InPort: int read()>() in <gnu.mapping.CharArrayInPort: int read()>
Sink: virtualinvoke $r1.<gnu.mapping.OutPort: void print(java.lang.Object)>($r2) in <gnu.expr.ReferenceExp: void print(gnu.mapping.OutPort)>

<gnu.mapping.CharArrayInPort: int read()>: $i0 = specialinvoke r0.<gnu.mapping.InPort: int read()>()
<gnu.mapping.CharArrayInPort: int read()>: return $i0
<com.google.appinventor.components.runtime.util.YailDictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>: return $r1
<gnu.mapping.SharedLocation: java.lang.Object get(java.lang.Object)>: return $r1
<gnu.kawa.reflect.FieldLocation: java.lang.Object get(java.lang.Object)>: r0.<gnu.kawa.reflect.FieldLocation: java.lang.Object value> = $r2
<gnu.kawa.reflect.FieldLocation: java.lang.Object get(java.lang.Object)>: return r3
<gnu.mapping.PlainLocation: java.lang.Object get(java.lang.Object)>: $r2 = r0.<gnu.mapping.PlainLocation: gnu.mapping.Location base>
<gnu.mapping.PlainLocation: java.lang.Object get(java.lang.Object)>: return $r1
<gnu.mapping.Location: java.lang.Object getValue()>: r0 := @this: gnu.mapping.Location
<gnu.mapping.NamedLocation: boolean equals(java.lang.Object)>: r0 := @this: gnu.mapping.NamedLocation
<gnu.expr.ReferenceExp: void print(gnu.mapping.OutPort)>: $r2 = r0.<gnu.expr.ReferenceExp: java.lang.Object symbol>
<gnu.expr.ReferenceExp: void print(gnu.mapping.OutPort)>: $r2 = r0.<gnu.expr.ReferenceExp: java.lang.Object symbol>
<gnu.expr.ReferenceExp: void print(gnu.mapping.OutPort)>: $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>()
<gnu.expr.ReferenceExp: void print(gnu.mapping.OutPort)>: virtualinvoke $r1.<gnu.mapping.OutPort: void print(java.lang.Object)>($r2)
