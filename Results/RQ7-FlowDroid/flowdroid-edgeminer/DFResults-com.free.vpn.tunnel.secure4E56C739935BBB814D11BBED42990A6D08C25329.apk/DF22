Source: $i0 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>($r2)
$i0 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>($r2) in <f.c.b.l.r: void run()>
Sink: virtualinvoke $r4.<java.io.OutputStream: void write(byte[])>($r5) in <f.c.b.l.r: boolean b(java.lang.String)>

<f.c.b.l.r: void run()>: $i0 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>($r2)
<f.c.b.l.r: void run()>: specialinvoke $r16.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r2, 0, $i0, "UTF-8")
<f.c.b.l.r: void run()>: virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)
<f.c.b.l.r: void run()>: $r3 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
<f.c.b.l.r: void run()>: $r3 = virtualinvoke r0.<f.c.b.l.r: java.lang.String e(java.lang.String)>($r3)
<f.c.b.l.r: java.lang.String e(java.lang.String)>: $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\r?\\n", 2)
<f.c.b.l.r: java.lang.String e(java.lang.String)>: $r4 = $r3[0]
<f.c.b.l.r: java.lang.String e(java.lang.String)>: $r7 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(":", 2)
<f.c.b.l.r: java.lang.String e(java.lang.String)>: $r8 = $r7[1]
<f.c.b.l.r: java.lang.String e(java.lang.String)>: $r4 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3)
<f.c.b.l.r: java.lang.String e(java.lang.String)>: $r15[0] = $r4
<f.c.b.l.r: java.lang.String e(java.lang.String)>: $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("username \'%s\' %s\n", $r15)
<f.c.b.l.r: java.lang.String e(java.lang.String)>: virtualinvoke r0.<f.c.b.l.r: boolean b(java.lang.String)>($r8)
<f.c.b.l.r: boolean b(java.lang.String)>: $r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>()
<f.c.b.l.r: boolean b(java.lang.String)>: virtualinvoke $r4.<java.io.OutputStream: void write(byte[])>($r5)
