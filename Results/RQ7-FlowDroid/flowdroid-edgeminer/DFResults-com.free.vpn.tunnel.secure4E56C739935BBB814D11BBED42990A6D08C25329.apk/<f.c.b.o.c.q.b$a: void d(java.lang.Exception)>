    public void d(java.lang.Exception)
    {
        java.lang.Object[] $r4;
        com.free.vpn.tunnel.base.report.event.ReportHttpEvent $r11;
        long $l1;
        f.c.b.o.c.q.b$a r0;
        java.lang.Exception $r1, $r9;
        f.c.b.o.c.q.b $r2;
        android.os.Handler $r8;
        int $i0;
        com.alibaba.fastjson.JSONObject $r7;
        java.lang.StringBuilder $r10;
        java.lang.String $r3, $r5, $r6;
        boolean $z0;

        r0 := @this: f.c.b.o.c.q.b$a;

        $r1 := @parameter0: java.lang.Exception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        $r10 = new java.lang.StringBuilder;

     label01:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("report error retry = ");

        $r2 = r0.<f.c.b.o.c.q.b$a: f.c.b.o.c.q.b a>;

        $i0 = $r2.<f.c.b.o.c.q.b: int d>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msg = ");

        $r3 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r4 = newarray (java.lang.Object)[0];

     label03:
        staticinvoke <d.b0.s: void N(java.lang.String,java.lang.Object[])>($r3, $r4);

     label04:
        $r11 = new com.free.vpn.tunnel.base.report.event.ReportHttpEvent;

     label05:
        $r2 = r0.<f.c.b.o.c.q.b$a: f.c.b.o.c.q.b a>;

        $i0 = $r2.<f.c.b.o.c.q.b: int d>;

     label06:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(-1);

        $r5 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>();

        $r2 = r0.<f.c.b.o.c.q.b$a: f.c.b.o.c.q.b a>;

        $r6 = $r2.<f.c.b.o.c.q.b: java.lang.String b>;

        $r7 = staticinvoke <com.alibaba.fastjson.JSON: com.alibaba.fastjson.JSONObject parseObject(java.lang.String)>($r6);

        specialinvoke $r11.<com.free.vpn.tunnel.base.report.event.ReportHttpEvent: void <init>(int,java.lang.String,java.lang.String,java.lang.Object)>($i0, $r3, $r5, $r7);

        $r2 = r0.<f.c.b.o.c.q.b$a: f.c.b.o.c.q.b a>;

        $i0 = $r2.<f.c.b.o.c.q.b: int d>;

     label07:
        if $i0 >= 10 goto label12;

        $i0 = $i0 + 1;

     label08:
        $r2.<f.c.b.o.c.q.b: int d> = $i0;

        staticinvoke <f.c.b.o.c.q.a: void i(java.lang.Object)>($r11);

        $r2 = r0.<f.c.b.o.c.q.b$a: f.c.b.o.c.q.b a>;

        $r8 = $r2.<f.c.b.o.c.q.b: android.os.Handler f>;

        $i0 = $r2.<f.c.b.o.c.q.b: int d>;

     label09:
        $i0 = $i0 * 2000;

        $l1 = (long) $i0;

     label10:
        virtualinvoke $r8.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(2688, $l1);

     label11:
        return;

     label12:
        $z0 = $r2.<f.c.b.o.c.q.b: boolean e>;

     label13:
        if $z0 != 0 goto label18;

     label14:
        $r2.<f.c.b.o.c.q.b: boolean e> = 1;

        $r3 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>();

     label15:
        staticinvoke <f.c.b.o.c.p.a: void S2(java.lang.String,int,java.lang.String)>("Report_Failed", -1, $r3);

        virtualinvoke $r11.<com.free.vpn.tunnel.base.report.event.ReportHttpEvent: void setFinalReportSuccess(boolean)>(1);

        staticinvoke <f.c.b.o.c.q.a: void i(java.lang.Object)>($r11);

     label16:
        return;

     label17:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.lang.Exception: void printStackTrace()>();

     label18:
        return;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Exception from label06 to label07 with label17;
        catch java.lang.Exception from label08 to label09 with label17;
        catch java.lang.Exception from label10 to label11 with label17;
        catch java.lang.Exception from label12 to label13 with label17;
        catch java.lang.Exception from label14 to label15 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
    }
