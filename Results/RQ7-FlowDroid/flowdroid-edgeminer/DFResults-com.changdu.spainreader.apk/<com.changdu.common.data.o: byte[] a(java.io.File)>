    public static byte[] a(java.io.File)
    {
        java.lang.Throwable $r8;
        byte[] $r0;
        java.io.BufferedInputStream $r3, $r13;
        java.io.ByteArrayOutputStream $r14;
        java.io.BufferedOutputStream $r4, $r15;
        int $i0, $i1;
        boolean $z0;
        java.io.FileInputStream $r12;
        java.io.File $r1;
        java.lang.Exception $r5, $r6, $r7, $r9, $r10, $r11;
        java.lang.Object $r2;

        $r1 := @parameter0: java.io.File;

        $r2 = null;

        if $r1 == null goto label46;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label46;

     label01:
        $r13 = new java.io.BufferedInputStream;

     label02:
        $r3 = $r13;

     label03:
        $r12 = new java.io.FileInputStream;

     label04:
        specialinvoke $r12.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        specialinvoke $r13.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r12);

     label05:
        $r14 = new java.io.ByteArrayOutputStream;

     label06:
        specialinvoke $r14.<java.io.ByteArrayOutputStream: void <init>()>();

     label07:
        $r15 = new java.io.BufferedOutputStream;

     label08:
        $r4 = $r15;

     label09:
        specialinvoke $r15.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r14);

     label10:
        $i0 = 2048;

        $r0 = newarray (byte)[2048];

     label11:
        $i1 = virtualinvoke $r13.<java.io.BufferedInputStream: int read(byte[],int,int)>($r0, 0, $i0);

     label12:
        $i0 = $i1;

        if $i1 == -1 goto label15;

     label13:
        virtualinvoke $r15.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r0, 0, $i1);

     label14:
        goto label11;

     label15:
        virtualinvoke $r15.<java.io.BufferedOutputStream: void flush()>();

        $r0 = virtualinvoke $r14.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label16:
        $r2 = $r0;

     label17:
        virtualinvoke $r15.<java.io.BufferedOutputStream: void close()>();

     label18:
        goto label20;

     label19:
        $r5 := @caughtexception;

        staticinvoke <com.changdu.changdulib.e.i: void a(java.lang.Object)>($r5);

     label20:
        virtualinvoke $r13.<java.io.BufferedInputStream: void close()>();

     label21:
        return $r0;

     label22:
        $r6 := @caughtexception;

        staticinvoke <com.changdu.changdulib.e.i: void a(java.lang.Object)>($r6);

        $r0 = (byte[]) $r2;

        return $r0;

     label23:
        $r7 := @caughtexception;

        goto label28;

     label24:
        $r8 := @caughtexception;

        goto label37;

     label25:
        $r7 := @caughtexception;

        $r4 = null;

        goto label28;

     label26:
        $r8 := @caughtexception;

        $r3 = null;

        goto label37;

     label27:
        $r7 := @caughtexception;

        $r3 = null;

        $r4 = null;

     label28:
        staticinvoke <com.changdu.changdulib.e.i: void e(java.lang.Object)>($r7);

     label29:
        if $r4 == null goto label33;

     label30:
        virtualinvoke $r4.<java.io.BufferedOutputStream: void close()>();

     label31:
        goto label33;

     label32:
        $r9 := @caughtexception;

        staticinvoke <com.changdu.changdulib.e.i: void a(java.lang.Object)>($r9);

     label33:
        if $r3 == null goto label46;

     label34:
        virtualinvoke $r3.<java.io.BufferedInputStream: void close()>();

     label35:
        return null;

     label36:
        $r8 := @caughtexception;

        $r2 = $r4;

     label37:
        if $r2 == null goto label41;

     label38:
        $r4 = (java.io.BufferedOutputStream) $r2;

        virtualinvoke $r4.<java.io.BufferedOutputStream: void close()>();

     label39:
        goto label41;

     label40:
        $r10 := @caughtexception;

        staticinvoke <com.changdu.changdulib.e.i: void a(java.lang.Object)>($r10);

     label41:
        if $r3 == null goto label45;

     label42:
        virtualinvoke $r3.<java.io.BufferedInputStream: void close()>();

     label43:
        goto label45;

     label44:
        $r11 := @caughtexception;

        staticinvoke <com.changdu.changdulib.e.i: void a(java.lang.Object)>($r11);

     label45:
        throw $r8;

     label46:
        return null;

        catch java.lang.Exception from label04 to label05 with label27;
        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label03 to label04 with label26;
        catch java.lang.Throwable from label04 to label05 with label26;
        catch java.lang.Exception from label06 to label07 with label25;
        catch java.lang.Exception from label09 to label10 with label25;
        catch java.lang.Throwable from label05 to label06 with label24;
        catch java.lang.Throwable from label06 to label08 with label24;
        catch java.lang.Throwable from label09 to label10 with label24;
        catch java.lang.Exception from label11 to label12 with label23;
        catch java.lang.Exception from label13 to label14 with label23;
        catch java.lang.Exception from label15 to label16 with label23;
        catch java.lang.Throwable from label11 to label12 with label36;
        catch java.lang.Throwable from label13 to label14 with label36;
        catch java.lang.Throwable from label15 to label16 with label36;
        catch java.lang.Exception from label17 to label18 with label19;
        catch java.lang.Exception from label20 to label21 with label22;
        catch java.lang.Throwable from label28 to label29 with label36;
        catch java.lang.Exception from label30 to label31 with label32;
        catch java.lang.Exception from label34 to label35 with label22;
        catch java.lang.Exception from label38 to label39 with label40;
        catch java.lang.Exception from label42 to label43 with label44;
    }
