    public java.lang.String b(java.lang.String)
    {
        java.lang.Throwable $r13, $r15, $r16, $r17;
        byte[] $r11;
        java.util.Enumeration $r4;
        int $i0;
        java.lang.String $r1, $r12;
        boolean $z0;
        org.apache.a.a.p $r6;
        org.apache.a.a.r $r3;
        java.io.FileOutputStream $r2, $r10, $r19;
        com.changdu.browser.compressfile.h r0;
        java.io.IOException $r20;
        java.io.File $r9, $r18;
        java.lang.Exception $r14;
        java.lang.Object $r5;
        java.io.InputStream $r7, $r8;

        r0 := @this: com.changdu.browser.compressfile.h;

        $r1 := @parameter0: java.lang.String;

        $r2 = null;

     label01:
        $r3 = r0.<com.changdu.browser.compressfile.h: org.apache.a.a.r e>;

        $r4 = virtualinvoke $r3.<org.apache.a.a.r: java.util.Enumeration d()>();

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r6 = (org.apache.a.a.p) $r5;

        $r3 = r0.<com.changdu.browser.compressfile.h: org.apache.a.a.r e>;

        $r7 = virtualinvoke $r3.<org.apache.a.a.r: java.io.InputStream a(org.apache.a.a.p)>($r6);

     label02:
        $r8 = $r7;

     label03:
        $r18 = new java.io.File;

     label04:
        specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r18.<java.io.File: boolean exists()>();

     label05:
        if $z0 != 0 goto label07;

     label06:
        $r9 = virtualinvoke $r18.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r9.<java.io.File: boolean mkdirs()>();

     label07:
        $r19 = new java.io.FileOutputStream;

     label08:
        $r10 = $r19;

     label09:
        specialinvoke $r19.<java.io.FileOutputStream: void <init>(java.lang.String)>($r1);

     label10:
        $r11 = newarray (byte)[1024];

     label11:
        $i0 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>($r11);

     label12:
        if $i0 == -1 goto label15;

     label13:
        virtualinvoke $r19.<java.io.FileOutputStream: void write(byte[],int,int)>($r11, 0, $i0);

     label14:
        goto label11;

     label15:
        $r18 = new java.io.File;

     label16:
        $r12 = r0.<com.changdu.browser.compressfile.h: java.lang.String d>;

        specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>($r12);

        $z0 = virtualinvoke $r18.<java.io.File: boolean exists()>();

     label17:
        if $z0 == 0 goto label19;

     label18:
        virtualinvoke $r18.<java.io.File: boolean delete()>();

     label19:
        virtualinvoke $r19.<java.io.FileOutputStream: void close()>();

     label20:
        if $r7 == null goto label48;

     label21:
        virtualinvoke $r7.<java.io.InputStream: void close()>();

     label22:
        return $r1;

     label23:
        $r13 := @caughtexception;

        $r20 = (java.io.IOException) $r13;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

        return $r1;

     label24:
        $r14 := @caughtexception;

        goto label29;

     label25:
        $r15 := @caughtexception;

        goto label39;

     label26:
        $r14 := @caughtexception;

        $r10 = null;

        goto label29;

     label27:
        $r15 := @caughtexception;

        $r8 = null;

        goto label39;

     label28:
        $r14 := @caughtexception;

        $r8 = null;

        $r10 = null;

     label29:
        staticinvoke <com.changdu.changdulib.e.i: void e(java.lang.Object)>($r14);

     label30:
        if $r10 == null goto label34;

     label31:
        virtualinvoke $r10.<java.io.FileOutputStream: void close()>();

     label32:
        goto label34;

     label33:
        $r16 := @caughtexception;

        goto label37;

     label34:
        if $r8 == null goto label49;

     label35:
        virtualinvoke $r8.<java.io.InputStream: void close()>();

     label36:
        return null;

     label37:
        $r20 = (java.io.IOException) $r16;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

        return null;

     label38:
        $r15 := @caughtexception;

        $r2 = $r10;

     label39:
        if $r2 == null goto label43;

     label40:
        virtualinvoke $r2.<java.io.FileOutputStream: void close()>();

     label41:
        goto label43;

     label42:
        $r17 := @caughtexception;

        goto label46;

     label43:
        if $r8 == null goto label47;

     label44:
        virtualinvoke $r8.<java.io.InputStream: void close()>();

     label45:
        goto label47;

     label46:
        $r20 = (java.io.IOException) $r17;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

     label47:
        throw $r15;

     label48:
        return $r1;

     label49:
        return null;

        catch java.lang.Exception from label01 to label02 with label28;
        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Exception from label04 to label05 with label26;
        catch java.lang.Exception from label06 to label07 with label26;
        catch java.lang.Exception from label09 to label10 with label26;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.lang.Throwable from label04 to label05 with label25;
        catch java.lang.Throwable from label06 to label08 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Exception from label11 to label12 with label24;
        catch java.lang.Exception from label13 to label14 with label24;
        catch java.lang.Exception from label16 to label17 with label24;
        catch java.lang.Exception from label18 to label19 with label24;
        catch java.lang.Throwable from label11 to label12 with label38;
        catch java.lang.Throwable from label13 to label14 with label38;
        catch java.lang.Throwable from label15 to label16 with label38;
        catch java.lang.Throwable from label16 to label17 with label38;
        catch java.lang.Throwable from label18 to label19 with label38;
        catch java.io.IOException from label19 to label20 with label23;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.lang.Throwable from label29 to label30 with label38;
        catch java.io.IOException from label31 to label32 with label33;
        catch java.io.IOException from label35 to label36 with label33;
        catch java.io.IOException from label40 to label41 with label42;
        catch java.io.IOException from label44 to label45 with label42;
    }
