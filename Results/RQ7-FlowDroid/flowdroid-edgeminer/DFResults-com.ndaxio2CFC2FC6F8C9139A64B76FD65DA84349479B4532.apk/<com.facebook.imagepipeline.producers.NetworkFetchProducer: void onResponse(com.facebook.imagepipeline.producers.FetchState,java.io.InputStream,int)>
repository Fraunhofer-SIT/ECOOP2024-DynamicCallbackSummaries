    protected void onResponse(com.facebook.imagepipeline.producers.FetchState, java.io.InputStream, int) throws java.io.IOException
    {
        java.lang.Throwable $r10;
        byte[] $r7;
        com.facebook.common.memory.ByteArrayPool $r5;
        com.facebook.imagepipeline.producers.NetworkFetcher $r9;
        com.facebook.common.memory.PooledByteBufferOutputStream $r4;
        com.facebook.imagepipeline.producers.FetchState $r1;
        com.facebook.imagepipeline.producers.Consumer $r8;
        int $i0, $i1;
        float $f0;
        java.lang.Object $r6;
        com.facebook.common.memory.PooledByteBufferFactory $r3;
        com.facebook.imagepipeline.producers.NetworkFetchProducer r0;
        java.io.InputStream $r2;

        r0 := @this: com.facebook.imagepipeline.producers.NetworkFetchProducer;

        $r1 := @parameter0: com.facebook.imagepipeline.producers.FetchState;

        $r2 := @parameter1: java.io.InputStream;

        $i0 := @parameter2: int;

        goto label1;

     label1:
        $r3 = r0.<com.facebook.imagepipeline.producers.NetworkFetchProducer: com.facebook.common.memory.PooledByteBufferFactory mPooledByteBufferFactory>;

        $r4 = interfaceinvoke $r3.<com.facebook.common.memory.PooledByteBufferFactory: com.facebook.common.memory.PooledByteBufferOutputStream newOutputStream()>();

        $r5 = r0.<com.facebook.imagepipeline.producers.NetworkFetchProducer: com.facebook.common.memory.ByteArrayPool mByteArrayPool>;

        $r6 = interfaceinvoke $r5.<com.facebook.common.memory.ByteArrayPool: java.lang.Object get(int)>(16384);

        $r7 = (byte[]) $r6;

     label2:
        $i1 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r7);

     label3:
        if $i1 < 0 goto label6;

        if $i1 <= 0 goto label2;

     label4:
        virtualinvoke $r4.<com.facebook.common.memory.PooledByteBufferOutputStream: void write(byte[],int,int)>($r7, 0, $i1);

        virtualinvoke r0.<com.facebook.imagepipeline.producers.NetworkFetchProducer: void maybeHandleIntermediateResult(com.facebook.common.memory.PooledByteBufferOutputStream,com.facebook.imagepipeline.producers.FetchState)>($r4, $r1);

        $i1 = virtualinvoke $r4.<com.facebook.common.memory.PooledByteBufferOutputStream: int size()>();

        $f0 = staticinvoke <com.facebook.imagepipeline.producers.NetworkFetchProducer: float calculateProgress(int,int)>($i1, -1);

        $r8 = virtualinvoke $r1.<com.facebook.imagepipeline.producers.FetchState: com.facebook.imagepipeline.producers.Consumer getConsumer()>();

        interfaceinvoke $r8.<com.facebook.imagepipeline.producers.Consumer: void onProgressUpdate(float)>($f0);

     label5:
        goto label2;

     label6:
        $r9 = r0.<com.facebook.imagepipeline.producers.NetworkFetchProducer: com.facebook.imagepipeline.producers.NetworkFetcher mNetworkFetcher>;

        $i0 = virtualinvoke $r4.<com.facebook.common.memory.PooledByteBufferOutputStream: int size()>();

        interfaceinvoke $r9.<com.facebook.imagepipeline.producers.NetworkFetcher: void onFetchCompletion(com.facebook.imagepipeline.producers.FetchState,int)>($r1, $i0);

        virtualinvoke r0.<com.facebook.imagepipeline.producers.NetworkFetchProducer: void handleFinalResult(com.facebook.common.memory.PooledByteBufferOutputStream,com.facebook.imagepipeline.producers.FetchState)>($r4, $r1);

     label7:
        $r5 = r0.<com.facebook.imagepipeline.producers.NetworkFetchProducer: com.facebook.common.memory.ByteArrayPool mByteArrayPool>;

        interfaceinvoke $r5.<com.facebook.common.memory.ByteArrayPool: void release(java.lang.Object)>($r7);

        virtualinvoke $r4.<com.facebook.common.memory.PooledByteBufferOutputStream: void close()>();

        return;

     label8:
        $r10 := @caughtexception;

        $r5 = r0.<com.facebook.imagepipeline.producers.NetworkFetchProducer: com.facebook.common.memory.ByteArrayPool mByteArrayPool>;

        interfaceinvoke $r5.<com.facebook.common.memory.ByteArrayPool: void release(java.lang.Object)>($r7);

        virtualinvoke $r4.<com.facebook.common.memory.PooledByteBufferOutputStream: void close()>();

        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }
