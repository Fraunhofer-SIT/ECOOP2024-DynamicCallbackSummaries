    public void cacheRequest(com.appsflyer.cache.RequestCacheData, android.content.Context)
    {
        java.lang.Throwable $r3, $r4, $r5, $r16;
        android.content.Context $r7;
        long $l1;
        int $i0;
        java.io.OutputStreamWriter $r8, $r14;
        java.lang.String $r13;
        com.appsflyer.cache.RequestCacheData $r6;
        boolean $z0;
        com.appsflyer.cache.CacheManager r0;
        java.io.FileOutputStream $r15;
        java.lang.Exception $r1, $r2;
        java.io.File $r9, $r10, $r12;
        java.io.File[] $r11;

        r0 := @this: com.appsflyer.cache.CacheManager;

        $r6 := @parameter0: com.appsflyer.cache.RequestCacheData;

        $r7 := @parameter1: android.content.Context;

        $r8 = null;

     label01:
        $r9 = new java.io.File;

     label02:
        $r10 = virtualinvoke $r7.<android.content.Context: java.io.File getFilesDir()>();

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, "AFRequestCache");

        $z0 = virtualinvoke $r9.<java.io.File: boolean exists()>();

     label03:
        if $z0 != 0 goto label06;

     label04:
        virtualinvoke $r9.<java.io.File: boolean mkdir()>();

     label05:
        return;

     label06:
        $r11 = virtualinvoke $r9.<java.io.File: java.io.File[] listFiles()>();

     label07:
        if $r11 == null goto label12;

     label08:
        $i0 = lengthof $r11;

     label09:
        if $i0 <= 40 goto label12;

     label10:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AppsFlyer_4.8.18", "reached cache limit, not caching request");

     label11:
        return;

     label12:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AppsFlyer_4.8.18", "caching request...");

     label13:
        $r9 = new java.io.File;

        $r10 = new java.io.File;

     label14:
        $r12 = virtualinvoke $r7.<android.content.Context: java.io.File getFilesDir()>();

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r12, "AFRequestCache");

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r13 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, $r13);

        virtualinvoke $r9.<java.io.File: boolean createNewFile()>();

     label15:
        $r14 = new java.io.OutputStreamWriter;

        $r15 = new java.io.FileOutputStream;

     label16:
        $r13 = virtualinvoke $r9.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r15.<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>($r13, 1);

        specialinvoke $r14.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r15);

     label17:
        virtualinvoke $r14.<java.io.Writer: void write(java.lang.String)>("version=");

        $r13 = virtualinvoke $r6.<com.appsflyer.cache.RequestCacheData: java.lang.String getVersion()>();

        virtualinvoke $r14.<java.io.Writer: void write(java.lang.String)>($r13);

        virtualinvoke $r14.<java.io.Writer: void write(int)>(10);

        virtualinvoke $r14.<java.io.Writer: void write(java.lang.String)>("url=");

        $r13 = virtualinvoke $r6.<com.appsflyer.cache.RequestCacheData: java.lang.String getRequestURL()>();

        virtualinvoke $r14.<java.io.Writer: void write(java.lang.String)>($r13);

        virtualinvoke $r14.<java.io.Writer: void write(int)>(10);

        virtualinvoke $r14.<java.io.Writer: void write(java.lang.String)>("data=");

        $r13 = virtualinvoke $r6.<com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>();

        virtualinvoke $r14.<java.io.Writer: void write(java.lang.String)>($r13);

        virtualinvoke $r14.<java.io.Writer: void write(int)>(10);

        virtualinvoke $r14.<java.io.Writer: void flush()>();

     label18:
        virtualinvoke $r14.<java.io.Writer: void close()>();

     label19:
        return;

     label20:
        $r16 := @caughtexception;

        $r8 = $r14;

        goto label27;

     label21:
        $r8 = $r14;

        goto label23;

     label22:
        $r16 := @caughtexception;

        goto label27;

     label23:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AppsFlyer_4.8.18", "Could not cache request");

     label24:
        if $r8 == null goto label35;

     label25:
        virtualinvoke $r8.<java.io.Writer: void close()>();

     label26:
        return;

     label27:
        if $r8 == null goto label29;

     label28:
        virtualinvoke $r8.<java.io.Writer: void close()>();

     label29:
        throw $r16;

     label30:
        $r1 := @caughtexception;

        goto label23;

     label31:
        $r2 := @caughtexception;

        goto label21;

     label32:
        $r3 := @caughtexception;

        return;

     label33:
        $r4 := @caughtexception;

        return;

     label34:
        $r5 := @caughtexception;

        goto label29;

     label35:
        return;

        catch java.lang.Exception from label02 to label03 with label30;
        catch java.lang.Exception from label04 to label05 with label30;
        catch java.lang.Exception from label06 to label07 with label30;
        catch java.lang.Exception from label08 to label09 with label30;
        catch java.lang.Exception from label10 to label11 with label30;
        catch java.lang.Exception from label12 to label13 with label30;
        catch java.lang.Exception from label14 to label15 with label30;
        catch java.lang.Exception from label16 to label17 with label30;
        catch java.lang.Throwable from label01 to label03 with label22;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label12 to label17 with label22;
        catch java.lang.Exception from label17 to label18 with label31;
        catch java.lang.Throwable from label17 to label18 with label20;
        catch java.io.IOException from label18 to label19 with label32;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.io.IOException from label25 to label26 with label33;
        catch java.io.IOException from label28 to label29 with label34;
    }
