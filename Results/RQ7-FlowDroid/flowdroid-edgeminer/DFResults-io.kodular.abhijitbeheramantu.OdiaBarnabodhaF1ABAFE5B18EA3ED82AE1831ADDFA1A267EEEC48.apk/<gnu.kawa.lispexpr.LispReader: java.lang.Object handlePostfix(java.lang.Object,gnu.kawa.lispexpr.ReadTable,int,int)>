    java.lang.Object handlePostfix(java.lang.Object, gnu.kawa.lispexpr.ReadTable, int, int) throws java.io.IOException, gnu.text.SyntaxException
    {
        gnu.kawa.lispexpr.ReadTable $r2;
        gnu.mapping.Symbol $r9;
        int $i0, $i1, $i2, $i4;
        gnu.text.LineBufferedReader $r5;
        gnu.kawa.lispexpr.ReadTableEntry $r6;
        gnu.expr.QuoteExp $r4;
        java.lang.String $r10;
        boolean $z0;
        gnu.kawa.lispexpr.LispReader r0;
        char $c3;
        gnu.lists.Pair $r8;
        java.lang.Object $r1, r3, $r7;

        r0 := @this: gnu.kawa.lispexpr.LispReader;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: gnu.kawa.lispexpr.ReadTable;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        r3 = $r1;

        $r4 = <gnu.expr.QuoteExp: gnu.expr.QuoteExp voidExp>;

        if $r1 != $r4 goto label1;

        r3 = <gnu.mapping.Values: gnu.mapping.Values empty>;

     label1:
        $r5 = r0.<gnu.kawa.lispexpr.LispReader: gnu.text.LineBufferedReader port>;

        $i2 = virtualinvoke $r5.<gnu.text.LineBufferedReader: int peek()>();

        if $i2 < 0 goto label2;

        $c3 = $r2.<gnu.kawa.lispexpr.ReadTable: char postfixLookupOperator>;

        $i4 = (int) $c3;

        if $i2 == $i4 goto label3;

     label2:
        return r3;

     label3:
        $r5 = r0.<gnu.kawa.lispexpr.LispReader: gnu.text.LineBufferedReader port>;

        virtualinvoke $r5.<gnu.text.LineBufferedReader: int read()>();

        $r5 = r0.<gnu.kawa.lispexpr.LispReader: gnu.text.LineBufferedReader port>;

        $i2 = virtualinvoke $r5.<gnu.text.LineBufferedReader: int peek()>();

        $z0 = virtualinvoke r0.<gnu.kawa.lispexpr.LispReader: boolean validPostfixLookupStart(int,gnu.kawa.lispexpr.ReadTable)>($i2, $r2);

        if $z0 != 0 goto label4;

        virtualinvoke r0.<gnu.kawa.lispexpr.LispReader: void unread()>();

        goto label2;

     label4:
        $r5 = r0.<gnu.kawa.lispexpr.LispReader: gnu.text.LineBufferedReader port>;

        $i2 = virtualinvoke $r5.<gnu.text.LineBufferedReader: int read()>();

        $r6 = virtualinvoke $r2.<gnu.kawa.lispexpr.ReadTable: gnu.kawa.lispexpr.ReadTableEntry lookup(int)>($i2);

        $r1 = virtualinvoke r0.<gnu.kawa.lispexpr.LispReader: java.lang.Object readValues(int,gnu.kawa.lispexpr.ReadTableEntry,gnu.kawa.lispexpr.ReadTable)>($i2, $r6, $r2);

        $r7 = virtualinvoke $r2.<gnu.kawa.lispexpr.ReadTable: java.lang.Object makeSymbol(java.lang.String)>("quasiquote");

        $r8 = staticinvoke <gnu.lists.LList: gnu.lists.Pair list2(java.lang.Object,java.lang.Object)>($r7, $r1);

        $r8 = staticinvoke <gnu.lists.LList: gnu.lists.Pair list2(java.lang.Object,java.lang.Object)>(r3, $r8);

        $r9 = <gnu.kawa.lispexpr.LispLanguage: gnu.mapping.Symbol lookup_sym>;

        $r5 = r0.<gnu.kawa.lispexpr.LispReader: gnu.text.LineBufferedReader port>;

        $r10 = virtualinvoke $r5.<gnu.text.LineBufferedReader: java.lang.String getName()>();

        $i2 = $i0 + 1;

        $i4 = $i1 + 1;

        r3 = staticinvoke <gnu.lists.PairWithPosition: gnu.lists.PairWithPosition make(java.lang.Object,java.lang.Object,java.lang.String,int,int)>($r9, $r8, $r10, $i2, $i4);

        goto label1;
    }
