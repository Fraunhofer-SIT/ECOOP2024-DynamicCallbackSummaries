    public java.lang.String a()
    {
        java.util.Iterator $r6;
        java.util.HashMap $r1;
        com.netease.mpay.oversea.e.f r0;
        com.netease.mpay.oversea.e.c $r8;
        java.util.ArrayList $r5;
        org.json.JSONException $r10;
        org.json.JSONObject $r2, $r9;
        java.lang.Object $r7;
        java.lang.String $r3;
        org.json.JSONArray $r4;
        boolean $z0;

        r0 := @this: com.netease.mpay.oversea.e.f;

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

        $r3 = r0.<com.netease.mpay.oversea.e.f: java.lang.String b>;

     label01:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("accountId", $r3);

     label02:
        $r3 = r0.<com.netease.mpay.oversea.e.f: java.lang.String f>;

     label03:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("currentAccessToken", $r3);

     label04:
        $r3 = r0.<com.netease.mpay.oversea.e.f: java.lang.String g>;

     label05:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("currentType", $r3);

     label06:
        $r3 = r0.<com.netease.mpay.oversea.e.f: java.lang.String c>;

     label07:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("publicId", $r3);

     label08:
        $r3 = r0.<com.netease.mpay.oversea.e.f: java.lang.String d>;

     label09:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("email", $r3);

     label10:
        $z0 = r0.<com.netease.mpay.oversea.e.f: boolean e>;

     label11:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("email_verified", $z0);

     label12:
        $r4 = new org.json.JSONArray;

     label13:
        specialinvoke $r4.<org.json.JSONArray: void <init>()>();

     label14:
        $r5 = r0.<com.netease.mpay.oversea.e.f: java.util.ArrayList j>;

     label15:
        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label16:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

     label17:
        if $z0 == 0 goto label24;

     label18:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

     label19:
        $r3 = (java.lang.String) $r7;

        $r1 = r0.<com.netease.mpay.oversea.e.f: java.util.HashMap i>;

     label20:
        $r7 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

     label21:
        $r8 = (com.netease.mpay.oversea.e.c) $r7;

        if $r8 == null goto label16;

     label22:
        $r9 = virtualinvoke $r8.<com.netease.mpay.oversea.e.c: org.json.JSONObject a()>();

        virtualinvoke $r4.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r9);

     label23:
        goto label16;

     label24:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("auth", $r4);

        $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>();

     label25:
        return $r3;

     label26:
        $r10 := @caughtexception;

        virtualinvoke $r10.<org.json.JSONException: void printStackTrace()>();

        return null;

        catch org.json.JSONException from label01 to label02 with label26;
        catch org.json.JSONException from label03 to label04 with label26;
        catch org.json.JSONException from label05 to label06 with label26;
        catch org.json.JSONException from label07 to label08 with label26;
        catch org.json.JSONException from label09 to label10 with label26;
        catch org.json.JSONException from label11 to label12 with label26;
        catch org.json.JSONException from label13 to label14 with label26;
        catch org.json.JSONException from label15 to label17 with label26;
        catch org.json.JSONException from label18 to label19 with label26;
        catch org.json.JSONException from label20 to label21 with label26;
        catch org.json.JSONException from label22 to label23 with label26;
        catch org.json.JSONException from label24 to label25 with label26;
    }
