    public static java.lang.String getTransid(android.content.Context)
    {
        java.lang.Throwable $r7, $r8, $r9, $r10, $r12, $r15, $r16, $r17;
        android.content.Context $r0;
        java.lang.Object[] $r5;
        java.lang.String $r2, $r14;
        java.lang.reflect.Method $r4;
        boolean $z0;
        java.lang.Class[] $r1;
        java.lang.Class $r3;
        java.lang.Object $r6;
        java.lang.ClassNotFoundException $r11, $r18;
        java.lang.StringBuilder $r13;

        $r0 := @parameter0: android.content.Context;

        $r2 = null;

        if $r0 == null goto label24;

     label01:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.netease.ntunisdk.base.UniSdkUtils");

     label02:
        $r1 = newarray (java.lang.Class)[1];

        $r1[0] = class "Landroid/content/Context;";

     label03:
        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getTransid", $r1);

     label04:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r0;

     label05:
        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r5);

     label06:
        $r2 = (java.lang.String) $r6;

     label07:
        staticinvoke <com.netease.androidcrashhandler.util.LogUtils: void i(java.lang.String,java.lang.String)>("trace", "AndroidCrashHandler [startCrashHandle] use reflex");

     label08:
        goto label24;

     label09:
        $r7 := @caughtexception;

        goto label15;

     label10:
        $r8 := @caughtexception;

        goto label17;

     label11:
        $r9 := @caughtexception;

        goto label19;

     label12:
        $r10 := @caughtexception;

        goto label21;

     label13:
        $r11 := @caughtexception;

        goto label23;

     label14:
        $r12 := @caughtexception;

        $r2 = null;

        $r7 = $r12;

     label15:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AndroidCrashHandler [startCrashHandle] InvocationTargetException=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.netease.androidcrashhandler.util.LogUtils: void w(java.lang.String,java.lang.String)>("trace", $r14);

        goto label24;

     label16:
        $r15 := @caughtexception;

        $r2 = null;

        $r8 = $r15;

     label17:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AndroidCrashHandler [startCrashHandle] IllegalAccessException=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.netease.androidcrashhandler.util.LogUtils: void w(java.lang.String,java.lang.String)>("trace", $r14);

        goto label24;

     label18:
        $r16 := @caughtexception;

        $r2 = null;

        $r9 = $r16;

     label19:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AndroidCrashHandler [startCrashHandle] IllegalArgumentException=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.netease.androidcrashhandler.util.LogUtils: void w(java.lang.String,java.lang.String)>("trace", $r14);

        goto label24;

     label20:
        $r17 := @caughtexception;

        $r2 = null;

        $r10 = $r17;

     label21:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AndroidCrashHandler [startCrashHandle] NoSuchMethodException=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.netease.androidcrashhandler.util.LogUtils: void w(java.lang.String,java.lang.String)>("trace", $r14);

        goto label24;

     label22:
        $r18 := @caughtexception;

        $r2 = null;

        $r11 = $r18;

     label23:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AndroidCrashHandler [startCrashHandle] ClassNotFoundException=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.netease.androidcrashhandler.util.LogUtils: void w(java.lang.String,java.lang.String)>("trace", $r14);

     label24:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label25;

        staticinvoke <com.netease.androidcrashhandler.util.LogUtils: void w(java.lang.String,java.lang.String)>("trace", "AndroidCrashHandler [startCrashHandle] transId is null");

        $r2 = staticinvoke <com.netease.androidcrashhandler.util.CUtil: java.lang.String createTransid(android.content.Context)>($r0);

     label25:
        return $r2;

        catch java.lang.ClassNotFoundException from label01 to label02 with label22;
        catch java.lang.ClassNotFoundException from label03 to label04 with label22;
        catch java.lang.ClassNotFoundException from label05 to label06 with label22;
        catch java.lang.NoSuchMethodException from label01 to label02 with label20;
        catch java.lang.NoSuchMethodException from label03 to label04 with label20;
        catch java.lang.NoSuchMethodException from label05 to label06 with label20;
        catch java.lang.IllegalArgumentException from label01 to label02 with label18;
        catch java.lang.IllegalArgumentException from label03 to label04 with label18;
        catch java.lang.IllegalArgumentException from label05 to label06 with label18;
        catch java.lang.IllegalAccessException from label01 to label02 with label16;
        catch java.lang.IllegalAccessException from label03 to label04 with label16;
        catch java.lang.IllegalAccessException from label05 to label06 with label16;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label14;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label14;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label14;
        catch java.lang.ClassNotFoundException from label07 to label08 with label13;
        catch java.lang.NoSuchMethodException from label07 to label08 with label12;
        catch java.lang.IllegalArgumentException from label07 to label08 with label11;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label09;
    }
