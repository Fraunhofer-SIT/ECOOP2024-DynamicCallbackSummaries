    private static void b(java.lang.Throwable, java.io.OutputStream)
    {
        java.lang.Throwable $r0, $r5;
        java.io.OutputStream $r1;
        java.io.PrintWriter $r3;
        io.a.a.a.s $r2;
        java.lang.Exception $r4;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: java.io.OutputStream;

     label01:
        $r3 = new java.io.PrintWriter;

     label02:
        specialinvoke $r3.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r1);

     label03:
        staticinvoke <com.a.a.c.ay: void a(java.lang.Throwable,java.io.Writer)>($r0, $r3);

     label04:
        staticinvoke <io.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r3, "Failed to close stack trace writer.");

        return;

     label05:
        $r4 := @caughtexception;

        $r3 = null;

     label06:
        $r2 = staticinvoke <io.a.a.a.f: io.a.a.a.s d()>();

        interfaceinvoke $r2.<io.a.a.a.s: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Failed to create PrintWriter", $r4);

     label07:
        staticinvoke <io.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r3, "Failed to close stack trace writer.");

        return;

     label08:
        $r5 := @caughtexception;

        $r3 = null;

     label09:
        staticinvoke <io.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r3, "Failed to close stack trace writer.");

        throw $r5;

     label10:
        $r5 := @caughtexception;

        goto label09;

     label11:
        $r4 := @caughtexception;

        goto label06;

        catch java.lang.Exception from label02 to label03 with label05;
        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }
