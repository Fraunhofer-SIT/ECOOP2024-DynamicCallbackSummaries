Source: $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
$i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0) in <org.spongycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>
Sink: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i1) in <org.spongycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>

<org.spongycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>: $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
<org.spongycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i1)
