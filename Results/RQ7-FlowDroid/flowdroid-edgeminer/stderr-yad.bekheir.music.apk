[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loading sources and sinks from SourcesSinks/UnconstrainedSourcesSinks.xml...
[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loaded 273 sources and 91 sinks from the XML file
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] WARN soot.Scene - Android API version '29' not available, using minApkVersion '14' instead
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.007952809 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 10 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 10 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for yuku.ambilwarna.AmbilWarnaDialog$OnAmbilWarnaListener, because it is an interface and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 9 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 10 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for yuku.ambilwarna.AmbilWarnaDialog$OnAmbilWarnaListener, because it is an interface and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 2 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 10 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for yuku.ambilwarna.AmbilWarnaDialog$OnAmbilWarnaListener, because it is an interface and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 0 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Callback analysis terminated normally
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 273 sources, 91 sinks, and 103 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 18 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on storagepath2-data/androidApps/2020-AndroZoo-PlayStore/yad.bekheir.music.apk with 273 sources and 91 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 1.120372889 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 17746 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 115 sources and 16 sinks.
[Low memory monitor] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Triggering memory warning at 245625 MB (268435 MB max, 243734 in watched memory pool)...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper hits: 3778264
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper misses: 50182149
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - IFDS problem with 56622422 forward and 97380124 backward edges solved in 768 seconds, processing 9 results...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Current memory consumption: 245647 MB
[Low memory monitor] WARN soot.jimple.infoflow.memory.FlowDroidMemoryWatcher - Running out of memory, solvers terminated
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after cleanup: 157602 MB
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 1 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 2 with 4 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 4 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after path building: 159714 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Path reconstruction took 71 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke r3.<java.io.FileOutputStream: void write(byte[],int,int)>(r1, 0, $i0) in method <yad.bekheir.music.database: boolean copyDB()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>(r1) in method <yad.bekheir.music.database: boolean copyDB()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.database: boolean copyDB()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.database: boolean copyDB()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r3.<java.io.FileOutputStream: void write(byte[],int,int)>(r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r21.<java.io.FileOutputStream: void write(byte[],int,int)>(r1, 0, $i0) in method <yad.bekheir.music.Ayat: void proceedAfterPermission()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r16.<java.io.InputStream: int read(byte[])>(r1) in method <yad.bekheir.music.Ayat: void proceedAfterPermission()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.Ayat: void proceedAfterPermission()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r16.<java.io.InputStream: int read(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.Ayat: void proceedAfterPermission()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r21.<java.io.FileOutputStream: void write(byte[],int,int)>(r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>($r14) in method <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r2 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r2, null) in method <ir.tapsell.sdk.g: java.lang.String g(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.g: java.lang.String g(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r2, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.g: java.lang.String g(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.g: java.lang.String o(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r34.<ir.tapsell.sdk.network.requestmodels.AdInfo: void <init>(java.lang.String,java.lang.Boolean,java.lang.String)>(null, null, $r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.AdInfo: void <init>(java.lang.String,java.lang.Boolean,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<ir.tapsell.sdk.network.requestmodels.AdInfo: java.lang.String userAdvertisingId> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.AdInfo: void <init>(java.lang.String,java.lang.Boolean,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r32.<ir.tapsell.sdk.network.requestmodels.UserExtraInfo: void setAdInfo(ir.tapsell.sdk.network.requestmodels.AdInfo)>($r34)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: void setAdInfo(ir.tapsell.sdk.network.requestmodels.AdInfo)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.AdInfo adInfo> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: void setAdInfo(ir.tapsell.sdk.network.requestmodels.AdInfo)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r32
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<ir.tapsell.sdk.network.requestmodels.e: ir.tapsell.sdk.network.requestmodels.UserExtraInfo b> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void <init>(android.content.Context,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.e: void d(android.content.Context,java.lang.String,ir.tapsell.sdk.TapsellAdRequestOptions)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <ir.tapsell.sdk.network.remote.f: void a(android.content.Context,java.lang.Object,ir.tapsell.sdk.network.remote.f$a)>($r0, $r3, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.f: void a(android.content.Context,java.lang.Object,ir.tapsell.sdk.network.remote.f$a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)>($r0, "https://api.tapsell.ir/v2/suggestions/", null, $r1, $r3, class "Lir/tapsell/sdk/network/a/e;", $r2, 0, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r8.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)>($r0, $r1, $r2, $r3, $r4, $r7, 0, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)>($r1, $r2, $r3, $r4, $r5, $r6, 0, 0, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = specialinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>($r1, $r2, $r4, $r11, $r6, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>(r0, $r2, $r3, $r4, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object b> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = interfaceinvoke $r6.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object b>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>($r14)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r9 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r11, "android_id") in method <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r11, "android_id")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r32.<ir.tapsell.sdk.network.requestmodels.UserExtraInfo: java.lang.String androidId> = $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r32
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<ir.tapsell.sdk.network.requestmodels.e: ir.tapsell.sdk.network.requestmodels.UserExtraInfo b> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void <init>(android.content.Context,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.e: void d(android.content.Context,java.lang.String,ir.tapsell.sdk.TapsellAdRequestOptions)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <ir.tapsell.sdk.network.remote.f: void a(android.content.Context,java.lang.Object,ir.tapsell.sdk.network.remote.f$a)>($r0, $r3, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.f: void a(android.content.Context,java.lang.Object,ir.tapsell.sdk.network.remote.f$a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)>($r0, "https://api.tapsell.ir/v2/suggestions/", null, $r1, $r3, class "Lir/tapsell/sdk/network/a/e;", $r2, 0, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r8.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)>($r0, $r1, $r2, $r3, $r4, $r7, 0, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)>($r1, $r2, $r3, $r4, $r5, $r6, 0, 0, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = specialinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>($r1, $r2, $r4, $r11, $r6, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>(r0, $r2, $r3, $r4, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object b> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = interfaceinvoke $r6.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object b>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>($r14)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r9 = virtualinvoke $r15.<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>() in method <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r15.<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r32.<ir.tapsell.sdk.network.requestmodels.UserExtraInfo: java.lang.String carrier> = $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r32
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<ir.tapsell.sdk.network.requestmodels.e: ir.tapsell.sdk.network.requestmodels.UserExtraInfo b> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void <init>(android.content.Context,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.e: void d(android.content.Context,java.lang.String,ir.tapsell.sdk.TapsellAdRequestOptions)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <ir.tapsell.sdk.network.remote.f: void a(android.content.Context,java.lang.Object,ir.tapsell.sdk.network.remote.f$a)>($r0, $r3, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.f: void a(android.content.Context,java.lang.Object,ir.tapsell.sdk.network.remote.f$a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)>($r0, "https://api.tapsell.ir/v2/suggestions/", null, $r1, $r3, class "Lir/tapsell/sdk/network/a/e;", $r2, 0, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r8.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)>($r0, $r1, $r2, $r3, $r4, $r7, 0, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)>($r1, $r2, $r3, $r4, $r5, $r6, 0, 0, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = specialinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>($r1, $r2, $r4, $r11, $r6, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>(r0, $r2, $r3, $r4, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object b> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = interfaceinvoke $r6.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object b>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>($r14)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r17.<java.io.OutputStream: void write(byte[])>(r1) in method <yad.bekheir.music.Ayat: boolean setAlarm()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - virtualinvoke $r20.<java.io.InputStream: int read(byte[])>(r1) in method <yad.bekheir.music.Ayat: boolean setAlarm()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.Ayat: boolean setAlarm()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r20.<java.io.InputStream: int read(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.Ayat: boolean setAlarm()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r17.<java.io.OutputStream: void write(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r17.<java.io.OutputStream: void write(byte[])>(r1) in method <yad.bekheir.music.Ayat: boolean setAlarm()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - virtualinvoke $r20.<java.io.InputStream: int read(byte[])>(r1) in method <yad.bekheir.music.Ayat: boolean setAlarm()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.Ayat: boolean setAlarm()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r20.<java.io.InputStream: int read(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.Ayat: boolean setAlarm()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r17.<java.io.OutputStream: void write(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r17.<java.io.FileOutputStream: void write(byte[],int,int)>(r2, 0, $i0) in method <yad.bekheir.music.Ayat$4: void onClick(android.view.View)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r13.<java.io.InputStream: int read(byte[])>(r2) in method <yad.bekheir.music.Ayat$4: void onClick(android.view.View)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.Ayat$4: void onClick(android.view.View)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r13.<java.io.InputStream: int read(byte[])>(r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.Ayat$4: void onClick(android.view.View)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r17.<java.io.FileOutputStream: void write(byte[],int,int)>(r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r17.<java.io.OutputStream: void write(byte[])>(r1) in method <yad.bekheir.music.Ayat: boolean setNotify()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - virtualinvoke $r20.<java.io.InputStream: int read(byte[])>(r1) in method <yad.bekheir.music.Ayat: boolean setNotify()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.Ayat: boolean setNotify()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r20.<java.io.InputStream: int read(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.Ayat: boolean setNotify()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r17.<java.io.OutputStream: void write(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r29.<java.io.FileOutputStream: void write(byte[],int,int)>($r7, 0, $i3) in method <ir.tapsell.sdk.f.i$1: java.io.File a()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i3 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r7) in method <ir.tapsell.sdk.f.i$1: java.io.File a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.f.i$1: java.io.File a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i3 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.f.i$1: java.io.File a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r29.<java.io.FileOutputStream: void write(byte[],int,int)>($r7, 0, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i3 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r7) in method <ir.tapsell.sdk.f.i$1: java.io.File a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.f.i$1: java.io.File a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i3 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.f.i$1: java.io.File a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r29.<java.io.FileOutputStream: void write(byte[],int,int)>($r7, 0, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r17.<java.io.OutputStream: void write(byte[])>(r1) in method <yad.bekheir.music.Ayat: boolean setRingtone()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - virtualinvoke $r20.<java.io.InputStream: int read(byte[])>(r1) in method <yad.bekheir.music.Ayat: boolean setRingtone()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.Ayat: boolean setRingtone()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r20.<java.io.InputStream: int read(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.Ayat: boolean setRingtone()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r17.<java.io.OutputStream: void write(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r17.<java.io.OutputStream: void write(byte[])>(r1) in method <yad.bekheir.music.Ayat: boolean setNotify()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - virtualinvoke $r20.<java.io.InputStream: int read(byte[])>(r1) in method <yad.bekheir.music.Ayat: boolean setNotify()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.Ayat: boolean setNotify()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r20.<java.io.InputStream: int read(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.Ayat: boolean setNotify()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r17.<java.io.OutputStream: void write(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r17.<java.io.OutputStream: void write(byte[])>(r1) in method <yad.bekheir.music.Ayat: boolean setRingtone()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - virtualinvoke $r20.<java.io.InputStream: int read(byte[])>(r1) in method <yad.bekheir.music.Ayat: boolean setRingtone()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.Ayat: boolean setRingtone()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r20.<java.io.InputStream: int read(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <yad.bekheir.music.Ayat: boolean setRingtone()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r17.<java.io.OutputStream: void write(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0) in method <ir.tapsell.sdk.h.e: void b(java.io.OutputStream,long)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0) in method <ir.tapsell.sdk.h.h: int a(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.h.h: int a(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.h.h: int a(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.h.e: void b(java.io.OutputStream,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>($r14) in method <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r2 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r2, null) in method <ir.tapsell.sdk.g: java.lang.String g(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.g: java.lang.String g(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r2, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.g: java.lang.String g(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.g: java.lang.String o(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r34.<ir.tapsell.sdk.network.requestmodels.AdInfo: void <init>(java.lang.String,java.lang.Boolean,java.lang.String)>(null, null, $r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.AdInfo: void <init>(java.lang.String,java.lang.Boolean,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<ir.tapsell.sdk.network.requestmodels.AdInfo: java.lang.String userAdvertisingId> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.AdInfo: void <init>(java.lang.String,java.lang.Boolean,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r32.<ir.tapsell.sdk.network.requestmodels.UserExtraInfo: void setAdInfo(ir.tapsell.sdk.network.requestmodels.AdInfo)>($r34)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: void setAdInfo(ir.tapsell.sdk.network.requestmodels.AdInfo)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.AdInfo adInfo> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: void setAdInfo(ir.tapsell.sdk.network.requestmodels.AdInfo)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r32
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<ir.tapsell.sdk.network.requestmodels.e: ir.tapsell.sdk.network.requestmodels.UserExtraInfo b> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void <init>(android.content.Context,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.e: void d(android.content.Context,java.lang.String,ir.tapsell.sdk.TapsellAdRequestOptions)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <ir.tapsell.sdk.network.remote.f: void a(android.content.Context,java.lang.Object,ir.tapsell.sdk.network.remote.f$a)>($r0, $r3, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.f: void a(android.content.Context,java.lang.Object,ir.tapsell.sdk.network.remote.f$a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)>($r0, "https://api.tapsell.ir/v2/suggestions/", null, $r1, $r3, class "Lir/tapsell/sdk/network/a/e;", $r2, 0, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r8.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)>($r0, $r1, $r2, $r3, $r4, $r7, 0, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)>($r1, $r2, $r3, $r4, $r5, $r6, 0, 0, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = specialinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>($r1, $r2, $r4, $r11, $r6, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>(r0, $r2, $r3, $r4, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object b> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = interfaceinvoke $r6.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object b>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>($r14)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r9 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r11, "android_id") in method <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r11, "android_id")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r32.<ir.tapsell.sdk.network.requestmodels.UserExtraInfo: java.lang.String androidId> = $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r32
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<ir.tapsell.sdk.network.requestmodels.e: ir.tapsell.sdk.network.requestmodels.UserExtraInfo b> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void <init>(android.content.Context,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.e: void d(android.content.Context,java.lang.String,ir.tapsell.sdk.TapsellAdRequestOptions)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <ir.tapsell.sdk.network.remote.f: void a(android.content.Context,java.lang.Object,ir.tapsell.sdk.network.remote.f$a)>($r0, $r3, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.f: void a(android.content.Context,java.lang.Object,ir.tapsell.sdk.network.remote.f$a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)>($r0, "https://api.tapsell.ir/v2/suggestions/", null, $r1, $r3, class "Lir/tapsell/sdk/network/a/e;", $r2, 0, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r8.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)>($r0, $r1, $r2, $r3, $r4, $r7, 0, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)>($r1, $r2, $r3, $r4, $r5, $r6, 0, 0, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = specialinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>($r1, $r2, $r4, $r11, $r6, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>(r0, $r2, $r3, $r4, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object b> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = interfaceinvoke $r6.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object b>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>($r14)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r9 = virtualinvoke $r15.<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>() in method <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r15.<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r32.<ir.tapsell.sdk.network.requestmodels.UserExtraInfo: java.lang.String carrier> = $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.UserExtraInfo: ir.tapsell.sdk.network.requestmodels.UserExtraInfo getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r32
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<ir.tapsell.sdk.network.requestmodels.e: ir.tapsell.sdk.network.requestmodels.UserExtraInfo b> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.requestmodels.e: void <init>(android.content.Context,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.e: void d(android.content.Context,java.lang.String,ir.tapsell.sdk.TapsellAdRequestOptions)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <ir.tapsell.sdk.network.remote.f: void a(android.content.Context,java.lang.Object,ir.tapsell.sdk.network.remote.f$a)>($r0, $r3, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.f: void a(android.content.Context,java.lang.Object,ir.tapsell.sdk.network.remote.f$a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)>($r0, "https://api.tapsell.ir/v2/suggestions/", null, $r1, $r3, class "Lir/tapsell/sdk/network/a/e;", $r2, 0, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r8.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)>($r0, $r1, $r2, $r3, $r4, $r7, 0, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)>($r1, $r2, $r3, $r4, $r5, $r6, 0, 0, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = specialinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>($r1, $r2, $r4, $r11, $r6, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>(r0, $r2, $r3, $r4, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object b> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: void <init>(ir.tapsell.sdk.network.remote.RemoteFunction,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.lang.Object,java.util.Map,ir.tapsell.sdk.network.remote.a,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = interfaceinvoke $r6.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<ir.tapsell.sdk.network.remote.RemoteFunction$3: java.lang.Object b>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ir.tapsell.sdk.network.remote.RemoteFunction$3: ir.tapsell.sdk.network.remote.c a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>($r14)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Data flow solver took 882 seconds. Maximum memory consumption: 245647 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication - Found 13 leaks
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.f: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,java.lang.Class,ir.tapsell.sdk.network.remote.f$a,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-yad.bekheir.music.apk/<ir.tapsell.sdk.network.remote.RemoteFunction: ir.tapsell.sdk.network.remote.c a(android.content.Context,java.lang.String,java.util.Map,java.lang.Object,ir.tapsell.sdk.network.remote.RemoteFunction$RequestMode,ir.tapsell.sdk.network.remote.a,boolean,boolean,boolean)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'SummaryStatistics'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Telemetry'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'Telemetry_sha256Hash_idx' for table 'Telemetry
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Callbacks'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallbackSummaries'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'CallbackSummaries_sha256Hash_idx' for table 'CallbackSummaries
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'AppSizes'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'AppSizes_sha256Hash_idx' for table 'AppSizes
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallgraphSizes'
