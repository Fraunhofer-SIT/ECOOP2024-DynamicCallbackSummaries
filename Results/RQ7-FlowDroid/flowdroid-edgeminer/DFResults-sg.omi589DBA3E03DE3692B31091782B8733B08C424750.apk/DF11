Source: $i3 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1)
$i3 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1) in <com.facebook.common.streams.TailAppendingInputStream: int read(byte[],int,int)>
Sink: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i2) in <com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: void copy(java.io.InputStream,java.io.OutputStream,int)>

<com.facebook.common.streams.TailAppendingInputStream: int read(byte[],int,int)>: $i3 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1)
<com.facebook.common.streams.TailAppendingInputStream: int read(byte[],int,int)>: return -1
<com.facebook.common.streams.TailAppendingInputStream: int read(byte[])>: r0 := @this: com.facebook.common.streams.TailAppendingInputStream
<com.facebook.common.memory.PooledByteArrayBufferedInputStream: boolean ensureDataInBuffer()>: $r2 = r0.<com.facebook.common.memory.PooledByteArrayBufferedInputStream: byte[] mByteArray>
<com.facebook.common.memory.PooledByteArrayBufferedInputStream: boolean ensureDataInBuffer()>: r0 := @this: com.facebook.common.memory.PooledByteArrayBufferedInputStream
<com.facebook.common.memory.PooledByteArrayBufferedInputStream: int read(byte[],int,int)>: r0 := @this: com.facebook.common.memory.PooledByteArrayBufferedInputStream
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: void copy(java.io.InputStream,java.io.OutputStream,int)>: $i2 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r5, 0, $i2)
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: void copy(java.io.InputStream,java.io.OutputStream,int)>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i2)
