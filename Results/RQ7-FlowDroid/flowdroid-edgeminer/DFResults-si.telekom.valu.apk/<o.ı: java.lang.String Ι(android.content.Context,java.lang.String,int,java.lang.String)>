    private static java.lang.String \u0399(android.content.Context, java.lang.String, int, java.lang.String)
    {
        java.lang.Throwable $r0, $r1, $r10;
        android.content.Context $r2;
        byte[] $r12;
        java.io.BufferedInputStream $r9, $r15;
        android.content.res.AssetManager $r6;
        int $i0;
        java.lang.String $r3, $r4, $r7;
        boolean $z0;
        java.io.FileOutputStream $r5, $r11, $r17;
        java.lang.Exception $r13;
        java.io.File $r16;
        java.lang.StringBuilder $r14;
        java.io.InputStream $r8;

        $r2 := @parameter0: android.content.Context;

        $r3 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r4 := @parameter3: java.lang.String;

        $r5 = null;

     label01:
        $r6 = virtualinvoke $r2.<android.content.Context: android.content.res.AssetManager getAssets()>();

     label02:
        $r14 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dynamic_modules");

     label04:
        $r7 = <java.io.File: java.lang.String separator>;

     label05:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label06:
        $r7 = <java.io.File: java.lang.String separator>;

     label07:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        $r8 = virtualinvoke $r6.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r4);

     label08:
        $r15 = new java.io.BufferedInputStream;

     label09:
        $r9 = $r15;

     label10:
        specialinvoke $r15.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r8);

     label11:
        $r14 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <o.\u0279: java.lang.String \u0269(android.content.Context)>($r2);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label13:
        $r4 = <java.io.File: java.lang.String separator>;

     label14:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dynamic_modules");

     label15:
        $r4 = <java.io.File: java.lang.String separator>;

     label16:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label17:
        $r4 = <java.io.File: java.lang.String separator>;

     label18:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

     label19:
        $r16 = new java.io.File;

     label20:
        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r4);

        $z0 = virtualinvoke $r16.<java.io.File: boolean exists()>();

     label21:
        if $z0 != 0 goto label30;

     label22:
        $r16 = new java.io.File;

     label23:
        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r4);

        $z0 = virtualinvoke $r16.<java.io.File: boolean mkdirs()>();

     label24:
        if $z0 != 0 goto label30;

     label25:
        staticinvoke <com.huawei.hms.common.util.Logger: void println(int,java.lang.String,java.lang.Object)>(5, "AssetLoadManager", "mkdirs local loaderPath failed.");

     label26:
        interfaceinvoke $r15.<java.io.Closeable: void close()>();

     label27:
        return null;

     label28:
        staticinvoke <com.huawei.hms.common.util.Logger: void println(int,java.lang.String,java.lang.Object)>(6, "ModuleCopy", "An exception occurred while closing the \'Closeable\' object.");

        return null;

     label29:
        $r10 := @caughtexception;

        goto label62;

     label30:
        $r14 = new java.lang.StringBuilder;

     label31:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label32:
        $r4 = <java.io.File: java.lang.String separator>;

     label33:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label34:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".apk");

        $r4 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

     label35:
        $r17 = new java.io.FileOutputStream;

     label36:
        $r11 = $r17;

     label37:
        $r16 = new java.io.File;

     label38:
        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r4);

        specialinvoke $r17.<java.io.FileOutputStream: void <init>(java.io.File)>($r16);

     label39:
        $r12 = newarray (byte)[4096];

     label40:
        $i0 = virtualinvoke $r15.<java.io.InputStream: int read(byte[],int,int)>($r12, 0, 4096);

     label41:
        if $i0 == -1 goto label44;

     label42:
        virtualinvoke $r17.<java.io.OutputStream: void write(byte[],int,int)>($r12, 0, $i0);

     label43:
        goto label40;

     label44:
        $r14 = new java.lang.StringBuilder;

     label45:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

     label46:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Decompress module:");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label47:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from assets success.");

        $r7 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <com.huawei.hms.common.util.Logger: void println(int,java.lang.String,java.lang.Object)>(4, "AssetLoadManager", $r7);

     label48:
        staticinvoke <o.\u0279: void \u0131(java.io.Closeable)>($r15);

        staticinvoke <o.\u0279: void \u0131(java.io.Closeable)>($r17);

        return $r4;

     label49:
        $r13 := @caughtexception;

        goto label53;

     label50:
        $r13 := @caughtexception;

        $r11 = null;

        goto label53;

     label51:
        $r10 := @caughtexception;

        $r9 = null;

        goto label62;

     label52:
        $r13 := @caughtexception;

        $r11 = null;

        $r9 = null;

     label53:
        $r14 = new java.lang.StringBuilder;

     label54:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

     label55:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find module:");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label56:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in assets.");

        $r3 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <com.huawei.hms.common.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("AssetLoadManager", $r3, $r13);

     label57:
        staticinvoke <o.\u0279: void \u0131(java.io.Closeable)>($r9);

        if $r11 == null goto label65;

     label58:
        interfaceinvoke $r11.<java.io.Closeable: void close()>();

     label59:
        return null;

     label60:
        staticinvoke <com.huawei.hms.common.util.Logger: void println(int,java.lang.String,java.lang.Object)>(6, "ModuleCopy", "An exception occurred while closing the \'Closeable\' object.");

        return null;

     label61:
        $r10 := @caughtexception;

        $r5 = $r11;

     label62:
        staticinvoke <o.\u0279: void \u0131(java.io.Closeable)>($r9);

        staticinvoke <o.\u0279: void \u0131(java.io.Closeable)>($r5);

        throw $r10;

     label63:
        $r0 := @caughtexception;

        goto label28;

     label64:
        $r1 := @caughtexception;

        goto label60;

     label65:
        return null;

        catch java.lang.Exception from label01 to label02 with label52;
        catch java.lang.Exception from label03 to label04 with label52;
        catch java.lang.Exception from label05 to label06 with label52;
        catch java.lang.Exception from label07 to label08 with label52;
        catch java.lang.Exception from label10 to label11 with label52;
        catch java.lang.Throwable from label01 to label03 with label51;
        catch java.lang.Throwable from label03 to label09 with label51;
        catch java.lang.Throwable from label10 to label11 with label51;
        catch java.lang.Exception from label12 to label13 with label50;
        catch java.lang.Exception from label14 to label15 with label50;
        catch java.lang.Exception from label16 to label17 with label50;
        catch java.lang.Exception from label18 to label19 with label50;
        catch java.lang.Exception from label20 to label21 with label50;
        catch java.lang.Exception from label23 to label24 with label50;
        catch java.lang.Throwable from label11 to label12 with label29;
        catch java.lang.Throwable from label12 to label20 with label29;
        catch java.lang.Throwable from label20 to label21 with label29;
        catch java.lang.Throwable from label22 to label23 with label29;
        catch java.lang.Throwable from label23 to label24 with label29;
        catch java.lang.Exception from label25 to label26 with label50;
        catch java.lang.Throwable from label25 to label26 with label29;
        catch java.io.IOException from label26 to label27 with label63;
        catch java.lang.Exception from label31 to label32 with label50;
        catch java.lang.Exception from label33 to label34 with label50;
        catch java.lang.Throwable from label30 to label31 with label29;
        catch java.lang.Throwable from label31 to label34 with label29;
        catch java.lang.Exception from label34 to label35 with label50;
        catch java.lang.Exception from label38 to label39 with label50;
        catch java.lang.Throwable from label34 to label36 with label29;
        catch java.lang.Throwable from label37 to label38 with label29;
        catch java.lang.Throwable from label38 to label39 with label29;
        catch java.lang.Exception from label40 to label41 with label49;
        catch java.lang.Exception from label42 to label43 with label49;
        catch java.lang.Exception from label45 to label46 with label49;
        catch java.lang.Throwable from label40 to label41 with label61;
        catch java.lang.Throwable from label42 to label43 with label61;
        catch java.lang.Throwable from label44 to label45 with label61;
        catch java.lang.Throwable from label45 to label46 with label61;
        catch java.lang.Exception from label46 to label47 with label49;
        catch java.lang.Throwable from label46 to label47 with label61;
        catch java.lang.Exception from label47 to label48 with label49;
        catch java.lang.Throwable from label47 to label48 with label61;
        catch java.lang.Throwable from label53 to label54 with label61;
        catch java.lang.Throwable from label54 to label55 with label61;
        catch java.lang.Throwable from label55 to label56 with label61;
        catch java.lang.Throwable from label56 to label57 with label61;
        catch java.io.IOException from label58 to label59 with label64;
    }
