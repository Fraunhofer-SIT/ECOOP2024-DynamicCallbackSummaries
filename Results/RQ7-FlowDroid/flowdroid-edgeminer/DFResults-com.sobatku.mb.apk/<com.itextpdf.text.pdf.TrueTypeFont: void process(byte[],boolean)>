    void process(byte[], boolean)
    {
        java.lang.Throwable $r10;
        byte[] $r1;
        java.lang.Object[] $r6;
        java.util.HashMap $r2;
        long $l2;
        int[] $r7;
        int $i0, $i1, $i3;
        java.lang.String $r4;
        boolean $z0, $z1;
        com.itextpdf.text.pdf.RandomAccessFileOrArray $r3;
        com.itextpdf.text.pdf.TrueTypeFont r0;
        com.itextpdf.text.DocumentException $r5;
        java.lang.String[][] $r8, $r9;

        r0 := @this: com.itextpdf.text.pdf.TrueTypeFont;

        $r1 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.itextpdf.text.pdf.TrueTypeFont: java.util.HashMap tables> = $r2;

        $r3 = new com.itextpdf.text.pdf.RandomAccessFileOrArray;

        $r4 = r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String fileName>;

        $z1 = <com.itextpdf.text.Document: boolean plainRandomAccess>;

        specialinvoke $r3.<com.itextpdf.text.pdf.RandomAccessFileOrArray: void <init>(java.lang.String,boolean,boolean)>($r4, 0, $z1);

        r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf> = $r3;

        goto label01;

     label01:
        $r4 = r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String ttcIndex>;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

     label02:
        if $i0 <= 0 goto label18;

     label03:
        $r4 = r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String ttcIndex>;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label04:
        if $i0 < 0 goto label17;

     label05:
        $r4 = virtualinvoke r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String readStandardString(int)>(4);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("ttcf");

     label06:
        if $z0 == 0 goto label16;

     label07:
        $r3 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>;

        virtualinvoke $r3.<com.itextpdf.text.pdf.RandomAccessFileOrArray: int skipBytes(int)>(4);

        $r3 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>;

        $i1 = virtualinvoke $r3.<com.itextpdf.text.pdf.RandomAccessFileOrArray: int readInt()>();

     label08:
        if $i0 >= $i1 goto label13;

     label09:
        $r3 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>;

     label10:
        $i0 = $i0 << 2;

     label11:
        virtualinvoke $r3.<com.itextpdf.text.pdf.RandomAccessFileOrArray: int skipBytes(int)>($i0);

        $r3 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>;

        $i0 = virtualinvoke $r3.<com.itextpdf.text.pdf.RandomAccessFileOrArray: int readInt()>();

        r0.<com.itextpdf.text.pdf.TrueTypeFont: int directoryOffset> = $i0;

     label12:
        goto label18;

     label13:
        $r5 = new com.itextpdf.text.DocumentException;

        $r6 = newarray (java.lang.Object)[3];

        $r4 = r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String fileName>;

        $r6[0] = $r4;

     label14:
        $i1 = $i1 - 1;

     label15:
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        $r6[1] = $r4;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r6[2] = $r4;

        $r4 = staticinvoke <com.itextpdf.text.error_messages.MessageLocalization: java.lang.String getComposedMessage(java.lang.String,java.lang.Object[])>("the.font.index.for.1.must.be.between.0.and.2.it.was.3", $r6);

        specialinvoke $r5.<com.itextpdf.text.DocumentException: void <init>(java.lang.String)>($r4);

        throw $r5;

     label16:
        $r5 = new com.itextpdf.text.DocumentException;

        $r6 = newarray (java.lang.Object)[1];

        $r4 = r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String fileName>;

        $r6[0] = $r4;

        $r4 = staticinvoke <com.itextpdf.text.error_messages.MessageLocalization: java.lang.String getComposedMessage(java.lang.String,java.lang.Object[])>("1.is.not.a.valid.ttc.file", $r6);

        specialinvoke $r5.<com.itextpdf.text.DocumentException: void <init>(java.lang.String)>($r4);

        throw $r5;

     label17:
        $r5 = new com.itextpdf.text.DocumentException;

        $r6 = newarray (java.lang.Object)[1];

        $r4 = r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String fileName>;

        $r6[0] = $r4;

        $r4 = staticinvoke <com.itextpdf.text.error_messages.MessageLocalization: java.lang.String getComposedMessage(java.lang.String,java.lang.Object[])>("the.font.index.for.1.must.be.positive", $r6);

        specialinvoke $r5.<com.itextpdf.text.DocumentException: void <init>(java.lang.String)>($r4);

        throw $r5;

     label18:
        $r3 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>;

        $i0 = r0.<com.itextpdf.text.pdf.TrueTypeFont: int directoryOffset>;

     label19:
        $l2 = (long) $i0;

     label20:
        virtualinvoke $r3.<com.itextpdf.text.pdf.RandomAccessFileOrArray: void seek(long)>($l2);

        $r3 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>;

        $i0 = virtualinvoke $r3.<com.itextpdf.text.pdf.RandomAccessFileOrArray: int readInt()>();

     label21:
        if $i0 == 65536 goto label23;

        if $i0 == 1330926671 goto label23;

     label22:
        $r5 = new com.itextpdf.text.DocumentException;

        $r6 = newarray (java.lang.Object)[1];

        $r4 = r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String fileName>;

        $r6[0] = $r4;

        $r4 = staticinvoke <com.itextpdf.text.error_messages.MessageLocalization: java.lang.String getComposedMessage(java.lang.String,java.lang.Object[])>("1.is.not.a.valid.ttf.or.otf.file", $r6);

        specialinvoke $r5.<com.itextpdf.text.DocumentException: void <init>(java.lang.String)>($r4);

        throw $r5;

     label23:
        $r3 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>;

        $i0 = virtualinvoke $r3.<com.itextpdf.text.pdf.RandomAccessFileOrArray: int readUnsignedShort()>();

        $r3 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>;

        virtualinvoke $r3.<com.itextpdf.text.pdf.RandomAccessFileOrArray: int skipBytes(int)>(6);

     label24:
        $i1 = 0;

     label25:
        if $i1 >= $i0 goto label30;

     label26:
        $r4 = virtualinvoke r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String readStandardString(int)>(4);

        $r3 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>;

        virtualinvoke $r3.<com.itextpdf.text.pdf.RandomAccessFileOrArray: int skipBytes(int)>(4);

     label27:
        $r7 = newarray (int)[2];

     label28:
        $r3 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>;

        $i3 = virtualinvoke $r3.<com.itextpdf.text.pdf.RandomAccessFileOrArray: int readInt()>();

        $r7[0] = $i3;

        $r3 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>;

        $i3 = virtualinvoke $r3.<com.itextpdf.text.pdf.RandomAccessFileOrArray: int readInt()>();

        $r7[1] = $i3;

        $r2 = r0.<com.itextpdf.text.pdf.TrueTypeFont: java.util.HashMap tables>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r7);

     label29:
        $i1 = $i1 + 1;

        goto label25;

     label30:
        virtualinvoke r0.<com.itextpdf.text.pdf.TrueTypeFont: void checkCff()>();

        $r4 = virtualinvoke r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String getBaseFont()>();

        r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String fontName> = $r4;

        $r8 = virtualinvoke r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String[][] getNames(int)>(4);

        r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String[][] fullName> = $r8;

        $r8 = virtualinvoke r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String[][] getNames(int)>(16);

        $i0 = lengthof $r8;

     label31:
        if $i0 <= 0 goto label34;

     label32:
        r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String[][] familyName> = $r8;

     label33:
        goto label35;

     label34:
        $r9 = virtualinvoke r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String[][] getNames(int)>(1);

        r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String[][] familyName> = $r9;

     label35:
        $r9 = virtualinvoke r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String[][] getNames(int)>(17);

        $i0 = lengthof $r8;

     label36:
        if $i0 <= 0 goto label39;

     label37:
        r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String[][] subFamily> = $r9;

     label38:
        goto label40;

     label39:
        $r8 = virtualinvoke r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String[][] getNames(int)>(2);

        r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String[][] subFamily> = $r8;

     label40:
        $r8 = virtualinvoke r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String[][] getAllNames()>();

        r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String[][] allNameEntries> = $r8;

        $z0 = r0.<com.itextpdf.text.pdf.TrueTypeFont: boolean justNames>;

     label41:
        if $z0 != 0 goto label43;

     label42:
        virtualinvoke r0.<com.itextpdf.text.pdf.TrueTypeFont: void fillTables()>();

        virtualinvoke r0.<com.itextpdf.text.pdf.TrueTypeFont: void readGlyphWidths()>();

        virtualinvoke r0.<com.itextpdf.text.pdf.TrueTypeFont: void readCMaps()>();

        virtualinvoke r0.<com.itextpdf.text.pdf.TrueTypeFont: void readKerning()>();

        specialinvoke r0.<com.itextpdf.text.pdf.TrueTypeFont: void readBbox()>();

     label43:
        $z0 = r0.<com.itextpdf.text.pdf.TrueTypeFont: boolean embedded>;

        if $z0 != 0 goto label46;

        $r3 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>;

        virtualinvoke $r3.<com.itextpdf.text.pdf.RandomAccessFileOrArray: void close()>();

        r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf> = null;

        return;

     label44:
        $r10 := @caughtexception;

        $z0 = r0.<com.itextpdf.text.pdf.TrueTypeFont: boolean embedded>;

        if $z0 != 0 goto label45;

        $r3 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>;

        virtualinvoke $r3.<com.itextpdf.text.pdf.RandomAccessFileOrArray: void close()>();

        r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf> = null;

     label45:
        throw $r10;

     label46:
        return;

        catch java.lang.Throwable from label01 to label02 with label44;
        catch java.lang.Throwable from label03 to label04 with label44;
        catch java.lang.Throwable from label05 to label06 with label44;
        catch java.lang.Throwable from label07 to label08 with label44;
        catch java.lang.Throwable from label09 to label10 with label44;
        catch java.lang.Throwable from label11 to label12 with label44;
        catch java.lang.Throwable from label13 to label14 with label44;
        catch java.lang.Throwable from label15 to label19 with label44;
        catch java.lang.Throwable from label20 to label21 with label44;
        catch java.lang.Throwable from label22 to label24 with label44;
        catch java.lang.Throwable from label26 to label27 with label44;
        catch java.lang.Throwable from label28 to label29 with label44;
        catch java.lang.Throwable from label30 to label31 with label44;
        catch java.lang.Throwable from label32 to label33 with label44;
        catch java.lang.Throwable from label34 to label36 with label44;
        catch java.lang.Throwable from label37 to label38 with label44;
        catch java.lang.Throwable from label39 to label41 with label44;
        catch java.lang.Throwable from label42 to label43 with label44;
    }
