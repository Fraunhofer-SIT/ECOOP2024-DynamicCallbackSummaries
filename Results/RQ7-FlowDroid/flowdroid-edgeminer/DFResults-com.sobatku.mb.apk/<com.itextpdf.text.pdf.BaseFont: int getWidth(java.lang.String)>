    public int getWidth(java.lang.String)
    {
        byte[] $r4;
        com.itextpdf.text.pdf.BaseFont r0;
        com.itextpdf.text.pdf.IntHashtable $r1;
        char $c3;
        short $s6;
        byte $b5;
        int[] $r3;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.itextpdf.text.pdf.BaseFont;

        $r2 := @parameter0: java.lang.String;

        $z0 = r0.<com.itextpdf.text.pdf.BaseFont: boolean fastWinansi>;

        $i0 = 0;

        if $z0 == 0 goto label6;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = 0;

     label1:
        if $i0 >= $i1 goto label5;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        $i4 = (int) $c3;

        if $i4 < 128 goto label3;

        $i4 = (int) $c3;

        if $i4 < 160 goto label2;

        $i4 = (int) $c3;

        if $i4 <= 255 goto label3;

     label2:
        $r3 = r0.<com.itextpdf.text.pdf.BaseFont: int[] widths>;

        $r1 = <com.itextpdf.text.pdf.PdfEncodings: com.itextpdf.text.pdf.IntHashtable winansi>;

        $i4 = (int) $c3;

        $i4 = virtualinvoke $r1.<com.itextpdf.text.pdf.IntHashtable: int get(int)>($i4);

        $i4 = $r3[$i4];

        goto label4;

     label3:
        $r3 = r0.<com.itextpdf.text.pdf.BaseFont: int[] widths>;

        $i4 = (int) $c3;

        $i4 = $r3[$i4];

     label4:
        $i2 = $i2 + $i4;

        $i0 = $i0 + 1;

        goto label1;

     label5:
        return $i2;

     label6:
        $r4 = virtualinvoke r0.<com.itextpdf.text.pdf.BaseFont: byte[] convertToBytes(java.lang.String)>($r2);

        $i1 = 0;

     label7:
        $i2 = lengthof $r4;

        if $i0 >= $i2 goto label8;

        $r3 = r0.<com.itextpdf.text.pdf.BaseFont: int[] widths>;

        $b5 = $r4[$i0];

        $s6 = (short) $b5;

        $s6 = $s6 & 255;

        $i2 = (int) $s6;

        $i2 = $r3[$i2];

        $i1 = $i1 + $i2;

        $i0 = $i0 + 1;

        goto label7;

     label8:
        return $i1;
    }
