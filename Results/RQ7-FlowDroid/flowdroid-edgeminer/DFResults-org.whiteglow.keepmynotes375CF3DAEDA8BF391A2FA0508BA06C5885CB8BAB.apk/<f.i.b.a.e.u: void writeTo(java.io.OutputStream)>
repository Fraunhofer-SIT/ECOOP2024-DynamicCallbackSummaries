    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        java.lang.Throwable $r7;
        f.i.b.a.e.b0 $r5;
        f.i.b.a.e.r $r6;
        java.util.logging.Logger $r4;
        f.i.b.a.e.t $r3;
        f.i.b.a.e.u r0;
        java.util.logging.Level $r1;
        int $i0;

        r0 := @this: f.i.b.a.e.u;

        $r2 := @parameter0: java.io.OutputStream;

        $r3 = new f.i.b.a.e.t;

        $r4 = r0.<f.i.b.a.e.u: java.util.logging.Logger d>;

        $r1 = r0.<f.i.b.a.e.u: java.util.logging.Level c>;

        $i0 = r0.<f.i.b.a.e.u: int b>;

        specialinvoke $r3.<f.i.b.a.e.t: void <init>(java.io.OutputStream,java.util.logging.Logger,java.util.logging.Level,int)>($r2, $r4, $r1, $i0);

     label1:
        $r5 = r0.<f.i.b.a.e.u: f.i.b.a.e.b0 a>;

        interfaceinvoke $r5.<f.i.b.a.e.b0: void writeTo(java.io.OutputStream)>($r3);

     label2:
        $r6 = virtualinvoke $r3.<f.i.b.a.e.t: f.i.b.a.e.r b()>();

        virtualinvoke $r6.<f.i.b.a.e.r: void close()>();

        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

        return;

     label3:
        $r7 := @caughtexception;

        $r6 = virtualinvoke $r3.<f.i.b.a.e.t: f.i.b.a.e.r b()>();

        virtualinvoke $r6.<f.i.b.a.e.r: void close()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
