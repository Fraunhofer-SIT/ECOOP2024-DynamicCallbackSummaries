    private static java.io.File M(java.io.File, java.lang.String)
    {
        byte[] $r9, $r10, $r12;
        java.io.BufferedInputStream $r30;
        java.security.SecureRandom $r7;
        android.util.Base64InputStream $r2, $r26;
        java.lang.Exception $r19, $r20, $r22;
        java.lang.StringBuilder $r23;
        javax.crypto.SecretKey $r14;
        java.lang.Throwable $r17, $r18, $r21;
        android.content.Context $r4;
        long $l0;
        javax.crypto.Cipher $r13;
        java.io.BufferedOutputStream $r11, $r15, $r29;
        javax.crypto.CipherInputStream $r16, $r31;
        javax.crypto.spec.IvParameterSpec $r28;
        int $i1;
        java.lang.String $r1, $r6;
        java.io.FileOutputStream $r27;
        java.io.FileInputStream $r25;
        java.lang.RuntimeException $r32;
        java.io.File $r0, $r3, $r5, $r8, $r24;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.lang.String;

        $r2 = null;

     label01:
        $r8 = new java.io.File;

     label02:
        $r3 = $r8;

     label03:
        $r23 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <j.b.b: android.content.Context o()>();

        $r5 = virtualinvoke $r4.<android.content.Context: java.io.File getCacheDir()>();

        $r6 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/tmp_");

     label05:
        $r7 = <j.l.r: java.security.SecureRandom b>;

     label06:
        $l0 = virtualinvoke $r7.<java.security.SecureRandom: long nextLong()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r6);

     label07:
        $r24 = new java.io.File;

     label08:
        $r23 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <j.b.b: android.content.Context o()>();

        $r8 = virtualinvoke $r4.<android.content.Context: java.io.File getCacheDir()>();

        $r6 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/tmp_");

     label10:
        $r7 = <j.l.r: java.security.SecureRandom b>;

     label11:
        $l0 = virtualinvoke $r7.<java.security.SecureRandom: long nextLong()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.io.File: void <init>(java.lang.String)>($r6);

     label12:
        $r25 = new java.io.FileInputStream;

     label13:
        specialinvoke $r25.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

     label14:
        $r9 = newarray (byte)[61];

     label15:
        virtualinvoke $r25.<java.io.FileInputStream: int read(byte[])>($r9);

        $r9 = staticinvoke <android.util.Base64: byte[] decode(byte[],int)>($r9, 0);

     label16:
        $r10 = newarray (byte)[25];

     label17:
        virtualinvoke $r25.<java.io.FileInputStream: int read(byte[])>($r10);

        $r10 = staticinvoke <android.util.Base64: byte[] decode(byte[],int)>($r10, 0);

     label18:
        $r26 = new android.util.Base64InputStream;

     label19:
        specialinvoke $r26.<android.util.Base64InputStream: void <init>(java.io.InputStream,int)>($r25, 0);

     label20:
        $r15 = new java.io.BufferedOutputStream;

     label21:
        $r11 = $r15;

     label22:
        $r27 = new java.io.FileOutputStream;

     label23:
        specialinvoke $r27.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);

        specialinvoke $r15.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r27, 16389);

     label24:
        $r12 = newarray (byte)[16389];

     label25:
        $i1 = virtualinvoke $r26.<android.util.Base64InputStream: int read(byte[])>($r12);

     label26:
        if $i1 == -1 goto label29;

     label27:
        virtualinvoke $r11.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r12, 0, $i1);

     label28:
        goto label25;

     label29:
        virtualinvoke $r11.<java.io.BufferedOutputStream: void flush()>();

        virtualinvoke $r11.<java.io.BufferedOutputStream: void close()>();

        $r13 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        $r14 = staticinvoke <j.l.r: javax.crypto.SecretKey d0(java.lang.String,byte[])>($r1, $r9);

     label30:
        $r28 = new javax.crypto.spec.IvParameterSpec;

     label31:
        specialinvoke $r28.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r10);

        virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r14, $r28);

     label32:
        $r29 = new java.io.BufferedOutputStream;

     label33:
        $r15 = $r29;

     label34:
        $r27 = new java.io.FileOutputStream;

     label35:
        specialinvoke $r27.<java.io.FileOutputStream: void <init>(java.io.File)>($r24);

        specialinvoke $r29.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r27, 16384);

     label36:
        $r31 = new javax.crypto.CipherInputStream;

     label37:
        $r16 = $r31;

     label38:
        $r30 = new java.io.BufferedInputStream;

     label39:
        $r25 = new java.io.FileInputStream;

     label40:
        specialinvoke $r25.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

        specialinvoke $r30.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r25, 16384);

        specialinvoke $r31.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r30, $r13);

     label41:
        $r9 = newarray (byte)[16384];

     label42:
        $i1 = virtualinvoke $r31.<javax.crypto.CipherInputStream: int read(byte[])>($r9);

     label43:
        if $i1 == -1 goto label46;

     label44:
        virtualinvoke $r29.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r9, 0, $i1);

     label45:
        goto label42;

     label46:
        virtualinvoke $r29.<java.io.BufferedOutputStream: void flush()>();

        virtualinvoke $r29.<java.io.BufferedOutputStream: void close()>();

     label47:
        staticinvoke <j.l.r: void j(java.io.InputStream)>($r26);

        staticinvoke <j.l.r: void k(java.io.OutputStream)>($r11);

        staticinvoke <j.l.r: void j(java.io.InputStream)>($r31);

        staticinvoke <j.l.r: void k(java.io.OutputStream)>($r29);

        return $r24;

     label48:
        $r17 := @caughtexception;

        $r18 = $r17;

        goto label55;

     label49:
        $r19 := @caughtexception;

        $r20 = $r19;

        goto label57;

     label50:
        $r21 := @caughtexception;

        $r18 = $r21;

        $r16 = null;

        goto label55;

     label51:
        $r22 := @caughtexception;

        $r20 = $r22;

        $r16 = null;

        goto label57;

     label52:
        $r18 := @caughtexception;

        $r16 = null;

        $r15 = null;

        goto label55;

     label53:
        $r20 := @caughtexception;

        $r16 = null;

        $r15 = null;

        goto label57;

     label54:
        $r18 := @caughtexception;

        $r16 = null;

        $r11 = null;

        $r15 = null;

     label55:
        $r2 = $r26;

        goto label63;

     label56:
        $r20 := @caughtexception;

        $r16 = null;

        $r11 = null;

        $r15 = null;

     label57:
        $r2 = $r26;

        goto label60;

     label58:
        $r18 := @caughtexception;

        $r16 = null;

        $r11 = null;

        $r15 = null;

        goto label63;

     label59:
        $r20 := @caughtexception;

        $r16 = null;

        $r11 = null;

        $r15 = null;

     label60:
        $r32 = new java.lang.RuntimeException;

     label61:
        specialinvoke $r32.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r20);

        throw $r32;

     label62:
        $r18 := @caughtexception;

     label63:
        staticinvoke <j.l.r: void j(java.io.InputStream)>($r2);

        staticinvoke <j.l.r: void k(java.io.OutputStream)>($r11);

        staticinvoke <j.l.r: void j(java.io.InputStream)>($r16);

        staticinvoke <j.l.r: void k(java.io.OutputStream)>($r15);

        throw $r18;

        catch java.lang.Exception from label04 to label05 with label59;
        catch java.lang.Exception from label06 to label07 with label59;
        catch java.lang.Exception from label09 to label10 with label59;
        catch java.lang.Exception from label11 to label12 with label59;
        catch java.lang.Exception from label13 to label14 with label59;
        catch java.lang.Exception from label15 to label16 with label59;
        catch java.lang.Exception from label17 to label18 with label59;
        catch java.lang.Exception from label19 to label20 with label59;
        catch java.lang.Throwable from label01 to label02 with label58;
        catch java.lang.Throwable from label03 to label04 with label58;
        catch java.lang.Throwable from label04 to label08 with label58;
        catch java.lang.Throwable from label08 to label09 with label58;
        catch java.lang.Throwable from label09 to label13 with label58;
        catch java.lang.Throwable from label13 to label14 with label58;
        catch java.lang.Throwable from label15 to label16 with label58;
        catch java.lang.Throwable from label17 to label19 with label58;
        catch java.lang.Throwable from label19 to label20 with label58;
        catch java.lang.Exception from label23 to label24 with label56;
        catch java.lang.Throwable from label20 to label21 with label54;
        catch java.lang.Throwable from label22 to label23 with label54;
        catch java.lang.Throwable from label23 to label24 with label54;
        catch java.lang.Exception from label25 to label26 with label53;
        catch java.lang.Exception from label27 to label28 with label53;
        catch java.lang.Exception from label29 to label30 with label53;
        catch java.lang.Exception from label31 to label32 with label53;
        catch java.lang.Exception from label35 to label36 with label53;
        catch java.lang.Throwable from label25 to label26 with label52;
        catch java.lang.Throwable from label27 to label28 with label52;
        catch java.lang.Throwable from label29 to label31 with label52;
        catch java.lang.Throwable from label31 to label33 with label52;
        catch java.lang.Throwable from label34 to label35 with label52;
        catch java.lang.Throwable from label35 to label36 with label52;
        catch java.lang.Exception from label40 to label41 with label51;
        catch java.lang.Throwable from label36 to label37 with label50;
        catch java.lang.Throwable from label38 to label39 with label50;
        catch java.lang.Throwable from label39 to label40 with label50;
        catch java.lang.Throwable from label40 to label41 with label50;
        catch java.lang.Exception from label42 to label43 with label49;
        catch java.lang.Exception from label44 to label45 with label49;
        catch java.lang.Exception from label46 to label47 with label49;
        catch java.lang.Throwable from label42 to label43 with label48;
        catch java.lang.Throwable from label44 to label45 with label48;
        catch java.lang.Throwable from label46 to label47 with label48;
        catch java.lang.Throwable from label60 to label61 with label62;
        catch java.lang.Throwable from label61 to label62 with label62;
    }
