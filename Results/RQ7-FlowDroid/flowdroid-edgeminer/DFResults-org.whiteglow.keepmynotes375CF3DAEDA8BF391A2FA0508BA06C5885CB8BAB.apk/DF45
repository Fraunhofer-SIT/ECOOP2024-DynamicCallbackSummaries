Source: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r2)
$i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r2) in <com.bytedance.sdk.component.b.a.a.a.e: int read(byte[])>
Sink: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0) in <com.bykv.vk.openvk.component.video.a.b.g$b: void b(byte[],int,int)>

<com.bytedance.sdk.component.b.a.a.a.e: int read(byte[])>: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r2)
<com.bytedance.sdk.component.b.a.a.a.e: int read(byte[])>: return $i0
<com.bykv.vk.openvk.component.video.a.b.g: void d(com.bykv.vk.openvk.component.video.a.b.g$b,com.bykv.vk.openvk.component.video.a.b.l$a)>: virtualinvoke $r1.<com.bykv.vk.openvk.component.video.a.b.g$b: void b(byte[],int,int)>($r11, 0, $i3)
<com.bykv.vk.openvk.component.video.a.b.g$b: void b(byte[],int,int)>: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
