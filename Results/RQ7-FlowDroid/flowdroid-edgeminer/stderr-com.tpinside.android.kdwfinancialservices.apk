[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loading sources and sinks from SourcesSinks/UnconstrainedSourcesSinks.xml...
[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loaded 273 sources and 91 sinks from the XML file
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] WARN soot.Scene - Android API version '31' not available, using minApkVersion '26' instead
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.043939772 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 12 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.app.Application
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 12 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 11 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 13 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 4 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 13 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 4 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 13 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 4 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 13 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 4 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 13 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 1 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Callback analysis terminated normally
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 273 sources, 91 sinks, and 132 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 98 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on storagepath2-data/androidApps/2023-AndroZoo-PlayStore/com.tpinside.android.kdwfinancialservices.apk with 273 sources and 91 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 1.07797845 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 14167 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 10 sources and 18 sinks.
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper hits: 3409434
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper misses: 29413320
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - IFDS problem with 139418825 forward and 77473604 backward edges solved in 757 seconds, processing 4 results...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Current memory consumption: 68765 MB
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after cleanup: 29131 MB
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 1 with 4 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 4 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after path building: 29293 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Path reconstruction took 7 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>($r0, 0, $i0) in method <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r0) in method <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>($r0, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r9.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r1) in method <com.cardinalcommerce.a.setHintTextColor: void cca_continue(java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, $r2) in method <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r4, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r5, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: java.lang.String getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setProgressDrawable: java.lang.String Cardinal> = $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: java.lang.String getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.cardinalcommerce.a.setProgressDrawable: java.lang.String Cardinal>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: java.lang.String getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: void <init>()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setProgressDrawable: java.lang.String Cardinal> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: void <init>()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintMode: void cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r4.<com.cardinalcommerce.a.setProgressDrawable: java.lang.String Cardinal>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintMode: void cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> <com.cardinalcommerce.a.setTextMetricsParams: java.lang.String Cardinal> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintMode: void cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>($r1, "ACS not reachable", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = <com.cardinalcommerce.a.setTextMetricsParams: java.lang.String Cardinal>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = specialinvoke r0.<com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>($r2, $r3, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r15.<com.cardinalcommerce.a.setAutoLinkMask: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: void <init>(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setAutoLinkMask: java.lang.String cca_continue> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: void <init>(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r15.<com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.cardinalcommerce.a.setAutoLinkMask: java.lang.String cca_continue>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("identifier", $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<com.cardinalcommerce.a.setHintTextColor: void cca_continue(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setHintTextColor: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, $r2) in method <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r4, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r5, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: java.lang.String getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setProgressDrawable: java.lang.String Cardinal> = $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: java.lang.String getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.cardinalcommerce.a.setProgressDrawable: java.lang.String Cardinal>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: java.lang.String getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: void <init>()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setProgressDrawable: java.lang.String Cardinal> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: void <init>()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintMode: void cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r4.<com.cardinalcommerce.a.setProgressDrawable: java.lang.String Cardinal>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintMode: void cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> <com.cardinalcommerce.a.setTextMetricsParams: java.lang.String Cardinal> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintMode: void cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>($r1, "ACS not reachable", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = <com.cardinalcommerce.a.setTextMetricsParams: java.lang.String Cardinal>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = specialinvoke r0.<com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>($r2, $r3, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r15.<com.cardinalcommerce.a.setAutoLinkMask: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: void <init>(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setAutoLinkMask: java.lang.String cca_continue> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: void <init>(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r15.<com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.cardinalcommerce.a.setAutoLinkMask: java.lang.String cca_continue>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("identifier", $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<com.cardinalcommerce.a.setHintTextColor: void cca_continue(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setHintTextColor: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r0) in method <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>($r0, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.crypto.impl.DeflateHelper: byte[] getInstance(com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEHeader,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setMaxWidth: byte[] init(com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEHeader,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,javax.crypto.SecretKey,com.cardinalcommerce.a.setMeasureWithLargestChildEnabled)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.crypto.DirectDecrypter: byte[] configure(com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEHeader,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r11
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEObject: void Cardinal(com.cardinalcommerce.a.setChecked)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload: void <init>(byte[])>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload: void <init>(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload: byte[] init> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload: void <init>(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEObject: void Cardinal(com.cardinalcommerce.a.setChecked)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setRendererPriorityPolicy: com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload cca_continue> = $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEObject: void Cardinal(com.cardinalcommerce.a.setChecked)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = $r6.<com.cardinalcommerce.a.setRendererPriorityPolicy: com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload cca_continue>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r26.<com.cardinalcommerce.a.setBaselineAligned: void <init>(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void <init>(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<org.json.JSONObject: void <init>(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void <init>(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("messageExtension")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void <init>(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.cardinalcommerce.a.setBaselineAligned: void cca_continue(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r13.<com.cardinalcommerce.a.setTransformationMethod: void getInstance(java.lang.String)>($r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTransformationMethod: void getInstance(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setTransformationMethod: java.lang.String configure> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTransformationMethod: void getInstance(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = r0.<com.cardinalcommerce.a.setBaselineAligned: com.cardinalcommerce.a.setTransformationMethod setRenderType>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void <init>(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = $r26.<com.cardinalcommerce.a.setBaselineAligned: com.cardinalcommerce.a.setTransformationMethod setRenderType>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = $r10.<com.cardinalcommerce.a.setTransformationMethod: java.lang.String configure>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r28.<com.cardinalcommerce.a.setSecondaryProgressTintList: java.lang.String init> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = $r28.<com.cardinalcommerce.a.setSecondaryProgressTintList: java.lang.String init>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r30.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r27.<com.cardinalcommerce.a.setImageMatrix: void <init>(int,java.lang.String)>(12203, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setImageMatrix: void <init>(int,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setImageMatrix: java.lang.String configure> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setImageMatrix: void <init>(int,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<com.cardinalcommerce.a.setProgressBackgroundTintMode: void init(com.cardinalcommerce.a.setImageMatrix)>($r27)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintMode: void init(com.cardinalcommerce.a.setImageMatrix)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r2.<com.cardinalcommerce.a.setImageMatrix: java.lang.String configure>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintMode: void init(com.cardinalcommerce.a.setImageMatrix)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>($r1, $r3, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1.<com.cardinalcommerce.a.setLinksClickable: java.lang.String getInstance> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = specialinvoke r0.<com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>($r2, $r3, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r1.<com.cardinalcommerce.a.setLinksClickable: org.json.JSONObject getInstance()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLinksClickable: org.json.JSONObject getInstance()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = r0.<com.cardinalcommerce.a.setLinksClickable: java.lang.String getInstance>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLinksClickable: org.json.JSONObject getInstance()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("detail", $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLinksClickable: org.json.JSONObject getInstance()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = $r15.<com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONArray init>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r15.<com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONArray init>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("data", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<com.cardinalcommerce.a.setHintTextColor: void cca_continue(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setHintTextColor: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r14.<java.io.Writer: void write(java.lang.String)>($r3) in method <com.cardinalcommerce.a.setKeyListener$4: void run()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r0) in method <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>($r0, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.crypto.impl.DeflateHelper: byte[] getInstance(com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEHeader,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setMaxWidth: byte[] init(com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEHeader,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,javax.crypto.SecretKey,com.cardinalcommerce.a.setMeasureWithLargestChildEnabled)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.crypto.DirectDecrypter: byte[] configure(com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEHeader,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r11
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEObject: void Cardinal(com.cardinalcommerce.a.setChecked)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload: void <init>(byte[])>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload: void <init>(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload: byte[] init> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload: void <init>(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEObject: void Cardinal(com.cardinalcommerce.a.setChecked)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setRendererPriorityPolicy: com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload cca_continue> = $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEObject: void Cardinal(com.cardinalcommerce.a.setChecked)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = $r6.<com.cardinalcommerce.a.setRendererPriorityPolicy: com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload cca_continue>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r26.<com.cardinalcommerce.a.setBaselineAligned: void <init>(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void <init>(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<org.json.JSONObject: void <init>(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void <init>(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("threeDSServerTransID")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void <init>(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setBaselineAligned: java.lang.String configure> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void <init>(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = $r26.<com.cardinalcommerce.a.setBaselineAligned: java.lang.String configure>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r28.<com.cardinalcommerce.a.setSecondaryProgressTintList: java.lang.String CardinalError> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(com.cardinalcommerce.a.setSecondaryProgressTintList)>($r28)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(com.cardinalcommerce.a.setSecondaryProgressTintList)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<com.cardinalcommerce.a.setProgressBackgroundTintBlendMode: void <init>(com.cardinalcommerce.a.setSecondaryProgressTintList,java.lang.String)>($r1, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintBlendMode: void <init>(com.cardinalcommerce.a.setSecondaryProgressTintList,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = $r1.<com.cardinalcommerce.a.setSecondaryProgressTintList: java.lang.String CardinalError>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintBlendMode: void <init>(com.cardinalcommerce.a.setSecondaryProgressTintList,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>("threeDSServerTransID", $r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintBlendMode: void <init>(com.cardinalcommerce.a.setSecondaryProgressTintList,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintBlendMode: void <init>(com.cardinalcommerce.a.setSecondaryProgressTintList,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.cardinalcommerce.a.setKeyListener: void configure(java.lang.String,java.lang.String,int)>($r2, $r6, 8000)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setKeyListener: void configure(java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setKeyListener: java.lang.String getWarnings> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setKeyListener: void configure(java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintBlendMode: void <init>(com.cardinalcommerce.a.setSecondaryProgressTintList,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(com.cardinalcommerce.a.setSecondaryProgressTintList)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r7.<com.cardinalcommerce.a.setKeyListener$4: void <init>(com.cardinalcommerce.a.setKeyListener)>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setKeyListener$4: void <init>(com.cardinalcommerce.a.setKeyListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setKeyListener$4: com.cardinalcommerce.a.setKeyListener getInstance> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setKeyListener$4: void <init>(com.cardinalcommerce.a.setKeyListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(com.cardinalcommerce.a.setSecondaryProgressTintList)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setKeyListener$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.cardinalcommerce.a.setKeyListener$4: com.cardinalcommerce.a.setKeyListener getInstance>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setKeyListener$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r2.<com.cardinalcommerce.a.setKeyListener: java.lang.String getWarnings>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setKeyListener$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<java.io.Writer: void write(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r9.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r1) in method <com.cardinalcommerce.a.setHintTextColor: void cca_continue(java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, $r2) in method <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r4, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r5, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: java.lang.String getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setProgressDrawable: java.lang.String Cardinal> = $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: java.lang.String getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.cardinalcommerce.a.setProgressDrawable: java.lang.String Cardinal>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: java.lang.String getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: void <init>()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setProgressDrawable: java.lang.String Cardinal> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: void <init>()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintMode: void cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r4.<com.cardinalcommerce.a.setProgressDrawable: java.lang.String Cardinal>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintMode: void cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> <com.cardinalcommerce.a.setTextMetricsParams: java.lang.String Cardinal> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintMode: void cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>($r1, "ACS not reachable", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = <com.cardinalcommerce.a.setTextMetricsParams: java.lang.String Cardinal>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = specialinvoke r0.<com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>($r2, $r3, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r15.<com.cardinalcommerce.a.setAutoLinkMask: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: void <init>(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setAutoLinkMask: java.lang.String cca_continue> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: void <init>(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r15.<com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.cardinalcommerce.a.setAutoLinkMask: java.lang.String cca_continue>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("identifier", $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<com.cardinalcommerce.a.setHintTextColor: void cca_continue(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setHintTextColor: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, $r2) in method <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r4, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r5, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLines: java.lang.String cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: java.lang.String getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setProgressDrawable: java.lang.String Cardinal> = $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: java.lang.String getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.cardinalcommerce.a.setProgressDrawable: java.lang.String Cardinal>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: java.lang.String getInstance(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: void <init>()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setProgressDrawable: java.lang.String Cardinal> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressDrawable: void <init>()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintMode: void cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r4.<com.cardinalcommerce.a.setProgressDrawable: java.lang.String Cardinal>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintMode: void cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> <com.cardinalcommerce.a.setTextMetricsParams: java.lang.String Cardinal> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintMode: void cca_continue(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>($r1, "ACS not reachable", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = <com.cardinalcommerce.a.setTextMetricsParams: java.lang.String Cardinal>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = specialinvoke r0.<com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>($r2, $r3, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r15.<com.cardinalcommerce.a.setAutoLinkMask: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: void <init>(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setAutoLinkMask: java.lang.String cca_continue> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: void <init>(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r15.<com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.cardinalcommerce.a.setAutoLinkMask: java.lang.String cca_continue>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("identifier", $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<com.cardinalcommerce.a.setHintTextColor: void cca_continue(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setHintTextColor: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r0) in method <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>($r0, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.valueOf: byte[] Cardinal(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.crypto.impl.DeflateHelper: byte[] getInstance(com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEHeader,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setMaxWidth: byte[] init(com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEHeader,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,javax.crypto.SecretKey,com.cardinalcommerce.a.setMeasureWithLargestChildEnabled)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.crypto.DirectDecrypter: byte[] configure(com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEHeader,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r11
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEObject: void Cardinal(com.cardinalcommerce.a.setChecked)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload: void <init>(byte[])>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload: void <init>(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload: byte[] init> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload: void <init>(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEObject: void Cardinal(com.cardinalcommerce.a.setChecked)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setRendererPriorityPolicy: com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload cca_continue> = $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEObject: void Cardinal(com.cardinalcommerce.a.setChecked)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = $r6.<com.cardinalcommerce.a.setRendererPriorityPolicy: com.cardinalcommerce.dependencies.internal.nimbusds.jose.Payload cca_continue>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r26.<com.cardinalcommerce.a.setBaselineAligned: void <init>(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void <init>(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<org.json.JSONObject: void <init>(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void <init>(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("messageExtension")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void <init>(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.cardinalcommerce.a.setBaselineAligned: void cca_continue(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r13.<com.cardinalcommerce.a.setTransformationMethod: void getInstance(java.lang.String)>($r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTransformationMethod: void getInstance(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setTransformationMethod: java.lang.String configure> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTransformationMethod: void getInstance(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = r0.<com.cardinalcommerce.a.setBaselineAligned: com.cardinalcommerce.a.setTransformationMethod setRenderType>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setBaselineAligned: void <init>(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = $r26.<com.cardinalcommerce.a.setBaselineAligned: com.cardinalcommerce.a.setTransformationMethod setRenderType>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = $r10.<com.cardinalcommerce.a.setTransformationMethod: java.lang.String configure>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r28.<com.cardinalcommerce.a.setSecondaryProgressTintList: java.lang.String init> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = $r28.<com.cardinalcommerce.a.setSecondaryProgressTintList: java.lang.String init>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r30.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r27.<com.cardinalcommerce.a.setImageMatrix: void <init>(int,java.lang.String)>(12203, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setImageMatrix: void <init>(int,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.cardinalcommerce.a.setImageMatrix: java.lang.String configure> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setImageMatrix: void <init>(int,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintList: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<com.cardinalcommerce.a.setProgressBackgroundTintMode: void init(com.cardinalcommerce.a.setImageMatrix)>($r27)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintMode: void init(com.cardinalcommerce.a.setImageMatrix)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r2.<com.cardinalcommerce.a.setImageMatrix: java.lang.String configure>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setProgressBackgroundTintMode: void init(com.cardinalcommerce.a.setImageMatrix)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>($r1, $r3, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1.<com.cardinalcommerce.a.setLinksClickable: java.lang.String getInstance> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = specialinvoke r0.<com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>($r2, $r3, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r1.<com.cardinalcommerce.a.setLinksClickable: org.json.JSONObject getInstance()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLinksClickable: org.json.JSONObject getInstance()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = r0.<com.cardinalcommerce.a.setLinksClickable: java.lang.String getInstance>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLinksClickable: org.json.JSONObject getInstance()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("detail", $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setLinksClickable: org.json.JSONObject getInstance()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = $r15.<com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONArray init>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r15.<com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONArray init>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("data", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setAutoLinkMask: org.json.JSONObject configure()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: com.cardinalcommerce.a.setJustificationMode getInstance(java.lang.String,java.lang.String,com.cardinalcommerce.a.setLinksClickable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setTextMetricsParams: void configure(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<com.cardinalcommerce.a.setHintTextColor: void cca_continue(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.cardinalcommerce.a.setHintTextColor: void cca_continue(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Data flow solver took 788 seconds. Maximum memory consumption: 68765 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication - Found 4 leaks
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-com.tpinside.android.kdwfinancialservices.apk/<com.cardinalcommerce.a.setMaxWidth: byte[] init(com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEHeader,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,javax.crypto.SecretKey,com.cardinalcommerce.a.setMeasureWithLargestChildEnabled)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:194)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:154)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-com.tpinside.android.kdwfinancialservices.apk/<com.cardinalcommerce.dependencies.internal.nimbusds.jose.crypto.DirectDecrypter: byte[] configure(com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEHeader,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:194)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:154)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-com.tpinside.android.kdwfinancialservices.apk/<com.cardinalcommerce.a.setMaxWidth: byte[] init(com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEHeader,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,javax.crypto.SecretKey,com.cardinalcommerce.a.setMeasureWithLargestChildEnabled)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:194)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:154)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-com.tpinside.android.kdwfinancialservices.apk/<com.cardinalcommerce.dependencies.internal.nimbusds.jose.crypto.DirectDecrypter: byte[] configure(com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEHeader,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:194)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:154)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-com.tpinside.android.kdwfinancialservices.apk/<com.cardinalcommerce.a.setMaxWidth: byte[] init(com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEHeader,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,javax.crypto.SecretKey,com.cardinalcommerce.a.setMeasureWithLargestChildEnabled)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:194)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:154)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-edgeminer/DFResults-com.tpinside.android.kdwfinancialservices.apk/<com.cardinalcommerce.dependencies.internal.nimbusds.jose.crypto.DirectDecrypter: byte[] configure(com.cardinalcommerce.dependencies.internal.nimbusds.jose.JWEHeader,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL,com.cardinalcommerce.dependencies.internal.nimbusds.jose.util.Base64URL)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:194)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:154)
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'SummaryStatistics'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Telemetry'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'Telemetry_sha256Hash_idx' for table 'Telemetry
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Callbacks'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallbackSummaries'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'CallbackSummaries_sha256Hash_idx' for table 'CallbackSummaries
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'AppSizes'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'AppSizes_sha256Hash_idx' for table 'AppSizes
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallgraphSizes'
