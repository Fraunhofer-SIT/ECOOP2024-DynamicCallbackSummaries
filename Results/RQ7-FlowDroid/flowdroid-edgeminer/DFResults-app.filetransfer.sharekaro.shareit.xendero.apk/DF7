Source: $i1 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i1)
$i1 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i1) in <fi.iki.elonen.NanoHTTPD$Response: void sendBody(java.io.OutputStream,long)>
Sink: specialinvoke $r8.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r9) in <fi.iki.elonen.NanoHTTPD$Response: void send(java.io.OutputStream)>

<fi.iki.elonen.NanoHTTPD$Response: void sendBody(java.io.OutputStream,long)>: $i1 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i1)
<fi.iki.elonen.NanoHTTPD$Response: void sendBody(java.io.OutputStream,long)>: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i1)
<fi.iki.elonen.NanoHTTPD$Response: void sendBody(java.io.OutputStream,long)>: r0 := @this: fi.iki.elonen.NanoHTTPD$Response
<fi.iki.elonen.NanoHTTPD$Response: void sendBodyWithCorrectEncoding(java.io.OutputStream,long)>: r0 := @this: fi.iki.elonen.NanoHTTPD$Response
<fi.iki.elonen.NanoHTTPD$Response: void sendBodyWithCorrectTransferAndEncoding(java.io.OutputStream,long)>: r0 := @this: fi.iki.elonen.NanoHTTPD$Response
<fi.iki.elonen.NanoHTTPD$Response: void send(java.io.OutputStream)>: r0 := @this: fi.iki.elonen.NanoHTTPD$Response
<fi.iki.elonen.NanoHTTPD$HTTPSession: void execute()>: $r16 = r0.<fi.iki.elonen.NanoHTTPD$HTTPSession: java.io.OutputStream outputStream>
<fi.iki.elonen.NanoHTTPD$HTTPSession: void execute()>: $r16 = r0.<fi.iki.elonen.NanoHTTPD$HTTPSession: java.io.OutputStream outputStream>
<fi.iki.elonen.NanoHTTPD$HTTPSession: void execute()>: virtualinvoke $r15.<fi.iki.elonen.NanoHTTPD$Response: void send(java.io.OutputStream)>($r16)
<fi.iki.elonen.NanoHTTPD$Response: void send(java.io.OutputStream)>: specialinvoke $r9.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r2, $r1)
<fi.iki.elonen.NanoHTTPD$Response: void send(java.io.OutputStream)>: specialinvoke $r8.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r9)
