    public static void copyFiles(android.content.Context, java.lang.String, java.lang.String, boolean)
    {
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14, $r15;
        android.content.Context $r0;
        byte[] $r3;
        long $l0, $l2;
        android.content.res.AssetManager $r6;
        byte $b3;
        int $i1;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;
        java.io.FileOutputStream $r8, $r17;
        java.io.IOException $r18;
        java.io.File $r4, $r16;
        java.lang.Exception $r9;
        java.lang.Object $r5;
        java.io.InputStream $r7;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r16 = new java.io.File;

        $r4 = virtualinvoke $r0.<android.content.Context: java.io.File getFilesDir()>();

        specialinvoke $r16.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "License.data");

        $r5 = null;

        $r3 = newarray (byte)[1024];

     label01:
        $r6 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r7 = virtualinvoke $r6.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

     label02:
        $z1 = virtualinvoke $r16.<java.io.File: boolean exists()>();

     label03:
        if $z1 == 0 goto label10;

     label04:
        $z0 = virtualinvoke $r16.<java.io.File: boolean exists()>();

     label05:
        if $z0 != 0 goto label10;

     label06:
        $z0 = virtualinvoke $r16.<java.io.File: boolean exists()>();

     label07:
        if $z0 == 0 goto label11;

     label08:
        $l0 = virtualinvoke $r16.<java.io.File: long length()>();

        $i1 = virtualinvoke $r7.<java.io.InputStream: int available()>();

     label09:
        $l2 = (long) $i1;

        $b3 = $l0 cmp $l2;

        if $b3 == 0 goto label11;

     label10:
        $z0 = 1;

        goto label12;

     label11:
        $z0 = 0;

     label12:
        if $z0 == 0 goto label23;

     label13:
        virtualinvoke $r16.<java.io.File: boolean delete()>();

     label14:
        $r17 = new java.io.FileOutputStream;

     label15:
        $r8 = $r17;

     label16:
        specialinvoke $r17.<java.io.FileOutputStream: void <init>(java.io.File)>($r16);

     label17:
        $i1 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>($r3);

     label18:
        if $i1 == -1 goto label22;

     label19:
        virtualinvoke $r17.<java.io.FileOutputStream: void write(byte[],int,int)>($r3, 0, $i1);

     label20:
        goto label17;

     label21:
        $r9 := @caughtexception;

        $r5 = $r7;

        goto label34;

     label22:
        $r5 = $r17;

     label23:
        if $r7 == null goto label27;

     label24:
        virtualinvoke $r7.<java.io.InputStream: void close()>();

     label25:
        goto label27;

     label26:
        $r10 := @caughtexception;

        $r18 = (java.io.IOException) $r10;

        virtualinvoke $r18.<java.io.IOException: void printStackTrace()>();

     label27:
        if $r5 == null goto label54;

        $r8 = (java.io.FileOutputStream) $r5;

     label28:
        virtualinvoke $r8.<java.io.FileOutputStream: void close()>();

     label29:
        return;

     label30:
        $r11 := @caughtexception;

        $r8 = null;

        $r5 = $r7;

        goto label45;

     label31:
        $r9 := @caughtexception;

        $r8 = null;

        $r5 = $r7;

        goto label34;

     label32:
        $r11 := @caughtexception;

        $r8 = null;

        goto label45;

     label33:
        $r9 := @caughtexception;

        $r8 = null;

     label34:
        virtualinvoke $r9.<java.lang.Exception: void printStackTrace()>();

     label35:
        if $r5 == null goto label39;

        $r7 = (java.io.InputStream) $r5;

     label36:
        virtualinvoke $r7.<java.io.InputStream: void close()>();

     label37:
        goto label39;

     label38:
        $r12 := @caughtexception;

        $r18 = (java.io.IOException) $r12;

        virtualinvoke $r18.<java.io.IOException: void printStackTrace()>();

     label39:
        if $r8 == null goto label54;

     label40:
        virtualinvoke $r8.<java.io.FileOutputStream: void close()>();

     label41:
        return;

     label42:
        $r13 := @caughtexception;

        $r18 = (java.io.IOException) $r13;

        virtualinvoke $r18.<java.io.IOException: void printStackTrace()>();

        return;

     label43:
        $r11 := @caughtexception;

        goto label45;

     label44:
        $r11 := @caughtexception;

        $r5 = $r7;

     label45:
        if $r5 == null goto label49;

        $r7 = (java.io.InputStream) $r5;

     label46:
        virtualinvoke $r7.<java.io.InputStream: void close()>();

     label47:
        goto label49;

     label48:
        $r14 := @caughtexception;

        $r18 = (java.io.IOException) $r14;

        virtualinvoke $r18.<java.io.IOException: void printStackTrace()>();

     label49:
        if $r8 == null goto label53;

     label50:
        virtualinvoke $r8.<java.io.FileOutputStream: void close()>();

     label51:
        goto label53;

     label52:
        $r15 := @caughtexception;

        $r18 = (java.io.IOException) $r15;

        virtualinvoke $r18.<java.io.IOException: void printStackTrace()>();

     label53:
        throw $r11;

     label54:
        return;

        catch java.lang.Exception from label01 to label02 with label33;
        catch java.lang.Throwable from label01 to label02 with label32;
        catch java.lang.Exception from label02 to label03 with label31;
        catch java.lang.Exception from label04 to label05 with label31;
        catch java.lang.Exception from label06 to label07 with label31;
        catch java.lang.Exception from label08 to label09 with label31;
        catch java.lang.Exception from label13 to label14 with label31;
        catch java.lang.Exception from label16 to label17 with label31;
        catch java.lang.Throwable from label02 to label03 with label30;
        catch java.lang.Throwable from label04 to label05 with label30;
        catch java.lang.Throwable from label06 to label07 with label30;
        catch java.lang.Throwable from label08 to label09 with label30;
        catch java.lang.Throwable from label13 to label15 with label30;
        catch java.lang.Throwable from label16 to label17 with label30;
        catch java.lang.Exception from label17 to label18 with label21;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Throwable from label17 to label18 with label44;
        catch java.lang.Throwable from label19 to label20 with label44;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.io.IOException from label28 to label29 with label42;
        catch java.lang.Throwable from label34 to label35 with label43;
        catch java.io.IOException from label36 to label37 with label38;
        catch java.io.IOException from label40 to label41 with label42;
        catch java.io.IOException from label46 to label47 with label48;
        catch java.io.IOException from label50 to label51 with label52;
    }
