    public static java.lang.String copyPluginFromAssets(android.content.Context, java.lang.String)
    {
        java.lang.Throwable $r0, $r1, $r2, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        android.content.Context $r3;
        byte[] $r10;
        android.content.res.AssetManager $r6;
        int $i0;
        java.lang.String $r4, $r5;
        boolean $z0;
        java.io.FileOutputStream $r9, $r19;
        java.io.IOException $r20;
        java.io.File $r18;
        java.io.InputStream $r7, $r8;

        $r3 := @parameter0: android.content.Context;

        $r4 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label01;

        return null;

     label01:
        $z0 = staticinvoke <com.netease.ntunisdk.ngplugin.utils.PluginFileUtils: boolean fileIsExists(java.lang.String)>($r4);

        if $z0 == 0 goto label02;

        $r18 = new java.io.File;

        specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>($r4);

        virtualinvoke $r18.<java.io.File: void deleteOnExit()>();

     label02:
        $r18 = new java.io.File;

        $r5 = staticinvoke <com.netease.ntunisdk.ngplugin.utils.PluginFileUtils: java.lang.String spliceSkinPath(android.content.Context,java.lang.String)>($r3, $r4);

        specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>($r5);

        $r5 = virtualinvoke $r18.<java.io.File: java.lang.String getAbsolutePath()>();

     label03:
        $r6 = virtualinvoke $r3.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r7 = virtualinvoke $r6.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r4);

     label04:
        $r8 = $r7;

     label05:
        $r19 = new java.io.FileOutputStream;

     label06:
        $r9 = $r19;

     label07:
        specialinvoke $r19.<java.io.FileOutputStream: void <init>(java.lang.String)>($r5);

     label08:
        $r10 = newarray (byte)[1024];

     label09:
        $i0 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>($r10);

     label10:
        if $i0 == -1 goto label13;

     label11:
        virtualinvoke $r19.<java.io.OutputStream: void write(byte[],int,int)>($r10, 0, $i0);

     label12:
        goto label09;

     label13:
        virtualinvoke $r19.<java.io.OutputStream: void close()>();

     label14:
        goto label16;

     label15:
        $r11 := @caughtexception;

        $r20 = (java.io.IOException) $r11;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

     label16:
        if $r7 == null goto label46;

     label17:
        virtualinvoke $r7.<java.io.InputStream: void close()>();

     label18:
        return $r5;

     label19:
        $r12 := @caughtexception;

        $r20 = (java.io.IOException) $r12;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

        return $r5;

     label20:
        $r13 := @caughtexception;

        $r9 = null;

        goto label34;

     label21:
        $r9 = null;

        goto label24;

     label22:
        $r13 := @caughtexception;

        $r8 = null;

        $r9 = null;

        goto label34;

     label23:
        $r8 = null;

        $r9 = null;

     label24:
        staticinvoke <com.netease.ntunisdk.ngplugin.common.PluginLogger: void d(java.lang.String)>("Skin pack copy failed, temporarily use the default skin");

     label25:
        if $r9 == null goto label29;

     label26:
        virtualinvoke $r9.<java.io.OutputStream: void close()>();

     label27:
        goto label29;

     label28:
        $r14 := @caughtexception;

        $r20 = (java.io.IOException) $r14;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

     label29:
        if $r8 == null goto label47;

     label30:
        virtualinvoke $r8.<java.io.InputStream: void close()>();

     label31:
        return null;

     label32:
        $r15 := @caughtexception;

        $r20 = (java.io.IOException) $r15;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

        return null;

     label33:
        $r13 := @caughtexception;

     label34:
        if $r9 == null goto label38;

     label35:
        virtualinvoke $r9.<java.io.OutputStream: void close()>();

     label36:
        goto label38;

     label37:
        $r16 := @caughtexception;

        $r20 = (java.io.IOException) $r16;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

     label38:
        if $r8 == null goto label42;

     label39:
        virtualinvoke $r8.<java.io.InputStream: void close()>();

     label40:
        goto label42;

     label41:
        $r17 := @caughtexception;

        $r20 = (java.io.IOException) $r17;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

     label42:
        throw $r13;

     label43:
        $r0 := @caughtexception;

        goto label23;

     label44:
        $r1 := @caughtexception;

        goto label21;

     label45:
        $r2 := @caughtexception;

        goto label24;

     label46:
        return $r5;

     label47:
        return null;

        catch java.io.IOException from label03 to label04 with label43;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.io.IOException from label07 to label08 with label44;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.io.IOException from label09 to label10 with label45;
        catch java.io.IOException from label11 to label12 with label45;
        catch java.lang.Throwable from label09 to label10 with label33;
        catch java.lang.Throwable from label11 to label12 with label33;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.Throwable from label24 to label25 with label33;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.io.IOException from label35 to label36 with label37;
        catch java.io.IOException from label39 to label40 with label41;
    }
