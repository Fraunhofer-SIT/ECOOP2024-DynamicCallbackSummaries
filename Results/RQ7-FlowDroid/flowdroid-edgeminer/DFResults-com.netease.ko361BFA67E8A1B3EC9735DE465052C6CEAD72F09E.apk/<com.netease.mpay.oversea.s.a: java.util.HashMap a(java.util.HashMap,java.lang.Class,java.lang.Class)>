    public static java.util.HashMap a(java.util.HashMap, java.lang.Class, java.lang.Class) throws java.lang.ClassCastException
    {
        java.lang.Object[] $r5;
        java.util.Set $r4;
        java.util.HashMap $r0, $r3;
        java.lang.ClassCastException $r8;
        int $i0, $i1;
        java.lang.Class $r1, $r2, $r7;
        java.lang.Object $r6, $r11;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;
        boolean $z0;

        $r0 := @parameter0: java.util.HashMap;

        $r1 := @parameter1: java.lang.Class;

        $r2 := @parameter2: java.lang.Class;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        if $r0 != null goto label1;

        return $r3;

     label1:
        $r4 = virtualinvoke $r0.<java.util.HashMap: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.lang.Object[] toArray()>();

        $i0 = lengthof $r5;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label5;

        $r6 = $r5[$i1];

        if $r6 == null goto label3;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r7);

        if $z0 != 0 goto label3;

        $r8 = new java.lang.ClassCastException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot cast to HashMap<");

        $r10 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r10 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">, key ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a ");

        $r10 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.ClassCastException: void <init>(java.lang.String)>($r10);

        throw $r8;

     label3:
        $r11 = virtualinvoke $r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        if $r11 == null goto label4;

        $r7 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r7);

        if $z0 != 0 goto label4;

        $r8 = new java.lang.ClassCastException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot cast to HashMap<");

        $r10 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r10 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">, value ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a ");

        $r10 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.ClassCastException: void <init>(java.lang.String)>($r10);

        throw $r8;

     label4:
        $r6 = virtualinvoke $r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r6);

        $r11 = virtualinvoke $r2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r11);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r11);

        $i1 = $i1 + 1;

        goto label2;

     label5:
        return $r3;
    }
