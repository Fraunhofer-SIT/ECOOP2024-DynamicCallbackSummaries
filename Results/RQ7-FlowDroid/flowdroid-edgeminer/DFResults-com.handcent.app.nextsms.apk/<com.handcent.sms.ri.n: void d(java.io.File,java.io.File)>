    public static void d(java.io.File, java.io.File) throws java.io.IOException
    {
        byte[] $r8;
        java.io.FileOutputStream $r7;
        java.lang.String[] $r3;
        java.io.FileInputStream $r6;
        java.io.File $r1, $r2, $r4, $r5;
        int $i0, $i1;
        java.lang.String $r0;
        boolean $z0;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        $i0 = 0;

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r2.<java.io.File: boolean mkdir()>();

     label1:
        $r3 = virtualinvoke $r1.<java.io.File: java.lang.String[] list()>();

     label2:
        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label6;

        $r4 = new java.io.File;

        $r0 = $r3[$i0];

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r0);

        $r5 = new java.io.File;

        $r0 = $r3[$i0];

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r0);

        staticinvoke <com.handcent.sms.ri.n: void d(java.io.File,java.io.File)>($r4, $r5);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $r6 = new java.io.FileInputStream;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        $r7 = new java.io.FileOutputStream;

        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>($r2);

        $r8 = newarray (byte)[2097152];

     label4:
        $i0 = virtualinvoke $r6.<java.io.InputStream: int read(byte[])>($r8);

        if $i0 <= 0 goto label5;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r8, 0, $i0);

        goto label4;

     label5:
        virtualinvoke $r6.<java.io.InputStream: void close()>();

        virtualinvoke $r7.<java.io.OutputStream: void close()>();

     label6:
        return;
    }
