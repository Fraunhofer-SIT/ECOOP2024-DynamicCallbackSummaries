Source: $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("com.j256.ormlite.logger.type")
$r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("com.j256.ormlite.logger.type") in <com.j256.ormlite.logger.LoggerFactory: com.j256.ormlite.logger.LoggerFactory$LogType findLogType()>
Sink: virtualinvoke $r1.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r10) in <com.j256.ormlite.logger.LocalLog: void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable)>

<com.j256.ormlite.logger.LoggerFactory: com.j256.ormlite.logger.LoggerFactory$LogType findLogType()>: $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("com.j256.ormlite.logger.type")
<com.j256.ormlite.logger.LoggerFactory: com.j256.ormlite.logger.LoggerFactory$LogType findLogType()>: virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
<com.j256.ormlite.logger.LoggerFactory: com.j256.ormlite.logger.LoggerFactory$LogType findLogType()>: $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
<com.j256.ormlite.logger.LoggerFactory: com.j256.ormlite.logger.LoggerFactory$LogType findLogType()>: interfaceinvoke $r3.<com.j256.ormlite.logger.Log: void log(com.j256.ormlite.logger.Log$Level,java.lang.String)>($r6, $r1)
<com.j256.ormlite.logger.LocalLog: void log(com.j256.ormlite.logger.Log$Level,java.lang.String)>: specialinvoke r0.<com.j256.ormlite.logger.LocalLog: void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable)>($r1, $r2, null)
<com.j256.ormlite.logger.LocalLog: void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable)>: virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
<com.j256.ormlite.logger.LocalLog: void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable)>: $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
<com.j256.ormlite.logger.LocalLog: void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable)>: virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r4)
<com.j256.ormlite.logger.LocalLog: void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable)>: $r10 = <com.j256.ormlite.logger.LocalLog: java.io.PrintStream printStream>
<com.j256.ormlite.logger.LocalLog: void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable)>: return
<com.j256.ormlite.logger.LocalLog: void log(com.j256.ormlite.logger.Log$Level,java.lang.String)>: return
<com.j256.ormlite.logger.LoggerFactory: com.j256.ormlite.logger.LoggerFactory$LogType findLogType()>: return $r2
<com.j256.ormlite.logger.LoggerFactory: com.j256.ormlite.logger.Logger getLogger(java.lang.String)>: return $r2
<com.j256.ormlite.logger.LoggerFactory: com.j256.ormlite.logger.Logger getLogger(java.lang.Class)>: return $r2
<com.j256.ormlite.android.apptools.OpenHelperManager: void <clinit>()>: return
<com.j256.ormlite.android.apptools.OpenHelperManager: com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper loadHelper(android.content.Context,java.lang.Class)>: staticinvoke <com.j256.ormlite.dao.DaoManager: void clearDaoCache()>()
<com.j256.ormlite.dao.DaoManager: void <clinit>()>: $r0 = staticinvoke <com.j256.ormlite.logger.LoggerFactory: com.j256.ormlite.logger.Logger getLogger(java.lang.Class)>(class "Lcom/j256/ormlite/dao/DaoManager;")
<com.j256.ormlite.logger.LoggerFactory: com.j256.ormlite.logger.Logger getLogger(java.lang.Class)>: $r2 = staticinvoke <com.j256.ormlite.logger.LoggerFactory: com.j256.ormlite.logger.Logger getLogger(java.lang.String)>($r1)
<com.j256.ormlite.logger.LoggerFactory: com.j256.ormlite.logger.Logger getLogger(java.lang.String)>: $r3 = virtualinvoke $r0.<com.j256.ormlite.logger.LoggerFactory$LogType: com.j256.ormlite.logger.Log createLog(java.lang.String)>($r1)
<com.j256.ormlite.logger.LoggerFactory$LogType: com.j256.ormlite.logger.Log createLog(java.lang.String)>: interfaceinvoke $r1.<com.j256.ormlite.logger.Log: void log(com.j256.ormlite.logger.Log$Level,java.lang.String)>($r6, $r3)
<com.j256.ormlite.logger.LocalLog: void log(com.j256.ormlite.logger.Log$Level,java.lang.String)>: specialinvoke r0.<com.j256.ormlite.logger.LocalLog: void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable)>($r1, $r2, null)
<com.j256.ormlite.logger.LocalLog: void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable)>: $r10 = <com.j256.ormlite.logger.LocalLog: java.io.PrintStream printStream>
<com.j256.ormlite.logger.LocalLog: void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable)>: virtualinvoke $r1.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r10)
