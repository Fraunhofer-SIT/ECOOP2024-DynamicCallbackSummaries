    public com.j256.ormlite.logger.Log createLog(java.lang.String)
    {
        com.j256.ormlite.logger.LocalLog $r1;
        com.j256.ormlite.logger.Log $r4;
        com.j256.ormlite.logger.LoggerFactory$LogType r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.Exception $r5;
        com.j256.ormlite.logger.Log$Level $r6;

        r0 := @this: com.j256.ormlite.logger.LoggerFactory$LogType;

        $r3 := @parameter0: java.lang.String;

     label1:
        $r4 = virtualinvoke r0.<com.j256.ormlite.logger.LoggerFactory$LogType: com.j256.ormlite.logger.Log createLogFromClassName(java.lang.String)>($r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r1 = new com.j256.ormlite.logger.LocalLog;

        specialinvoke $r1.<com.j256.ormlite.logger.LocalLog: void <init>(java.lang.String)>($r3);

        $r6 = <com.j256.ormlite.logger.Log$Level: com.j256.ormlite.logger.Log$Level WARNING>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to call constructor with single String argument for class ");

        $r3 = r0.<com.j256.ormlite.logger.LoggerFactory$LogType: java.lang.String logClassName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", so had to use local log: ");

        $r3 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<com.j256.ormlite.logger.Log: void log(com.j256.ormlite.logger.Log$Level,java.lang.String)>($r6, $r3);

        return $r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }
