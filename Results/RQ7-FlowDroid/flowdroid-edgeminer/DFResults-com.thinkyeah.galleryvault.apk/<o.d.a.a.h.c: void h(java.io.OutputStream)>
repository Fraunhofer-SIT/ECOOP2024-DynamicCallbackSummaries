    public void h(java.io.OutputStream)
    {
        o.d.a.a.f.a $r10;
        java.util.Date $r17;
        o.d.a.a.h.b $r6;
        o.d.a.a.h.a $r26;
        o.d.a.a.h.d $r13;
        java.lang.NullPointerException r31;
        o.d.a.a.h.c r0;
        java.util.Locale $r4;
        java.util.Map $r15;
        boolean $z0;
        java.io.PrintWriter $r7, $r12;
        java.util.TimeZone $r5;
        java.util.Set $r18;
        java.util.logging.Logger $r29;
        java.util.List $r22;
        java.lang.StringBuilder $r14;
        java.lang.Throwable $r28;
        o.d.a.a.g.a $r2, $r25;
        java.text.SimpleDateFormat $r3;
        java.lang.Error $r27;
        long $l1;
        o.d.a.a.h.c$b $r23;
        java.util.logging.Level $r30;
        int $i0;
        java.io.OutputStreamWriter $r9;
        java.lang.String $r11, $r21;
        java.io.OutputStream $r1;
        java.util.Map$Entry $r20;
        java.util.Iterator $r19;
        java.io.BufferedWriter $r8;
        java.lang.Object $r16;
        java.io.InputStream $r24;

        r0 := @this: o.d.a.a.h.c;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 = <o.d.a.a.g.a: o.d.a.a.g.a e>;

        $r3 = new java.text.SimpleDateFormat;

        $r4 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("E, d MMM yyyy HH:mm:ss \'GMT\'", $r4);

        $r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r3.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r5);

        $r6 = r0.<o.d.a.a.h.c: o.d.a.a.h.b a>;

        if $r6 == null goto label66;

        $r7 = new java.io.PrintWriter;

        $r8 = new java.io.BufferedWriter;

        $r9 = new java.io.OutputStreamWriter;

        $r10 = new o.d.a.a.f.a;

        $r11 = r0.<o.d.a.a.h.c: java.lang.String b>;

     label01:
        specialinvoke $r10.<o.d.a.a.f.a: void <init>(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<o.d.a.a.f.a: java.lang.String b()>();

        specialinvoke $r9.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r1, $r11);

        specialinvoke $r8.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r9);

        specialinvoke $r7.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r8, 0);

        $r12 = virtualinvoke $r7.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("HTTP/1.1 ");

     label02:
        $r6 = r0.<o.d.a.a.h.c: o.d.a.a.h.b a>;

        $r13 = (o.d.a.a.h.d) $r6;

        if $r13 == null goto label63;

        $r14 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

     label04:
        $i0 = $r13.<o.d.a.a.h.d: int a>;

     label05:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label06:
        $r11 = $r13.<o.d.a.a.h.d: java.lang.String b>;

     label07:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r11);

        virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(" \r\n");

     label08:
        $r11 = r0.<o.d.a.a.h.c: java.lang.String b>;

        if $r11 == null goto label10;

        $r11 = r0.<o.d.a.a.h.c: java.lang.String b>;

     label09:
        virtualinvoke r0.<o.d.a.a.h.c: void g(java.io.PrintWriter,java.lang.String,java.lang.String)>($r7, "Content-Type", $r11);

     label10:
        $r11 = "date";

        $r15 = r0.<o.d.a.a.h.c: java.util.Map f>;

     label11:
        $r11 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

     label12:
        $r11 = (java.lang.String) $r16;

        if $r11 != null goto label14;

        $r17 = new java.util.Date;

     label13:
        specialinvoke $r17.<java.util.Date: void <init>()>();

        $r11 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r17);

        virtualinvoke r0.<o.d.a.a.h.c: void g(java.io.PrintWriter,java.lang.String,java.lang.String)>($r7, "Date", $r11);

     label14:
        $r15 = r0.<o.d.a.a.h.c: java.util.Map e>;

     label15:
        $r18 = interfaceinvoke $r15.<java.util.Map: java.util.Set entrySet()>();

        $r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label16:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

     label17:
        if $z0 == 0 goto label26;

     label18:
        $r16 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

     label19:
        $r20 = (java.util.Map$Entry) $r16;

     label20:
        $r16 = interfaceinvoke $r20.<java.util.Map$Entry: java.lang.Object getKey()>();

     label21:
        $r11 = (java.lang.String) $r16;

     label22:
        $r16 = interfaceinvoke $r20.<java.util.Map$Entry: java.lang.Object getValue()>();

     label23:
        $r21 = (java.lang.String) $r16;

     label24:
        virtualinvoke r0.<o.d.a.a.h.c: void g(java.io.PrintWriter,java.lang.String,java.lang.String)>($r7, $r11, $r21);

     label25:
        goto label16;

     label26:
        $r22 = r0.<o.d.a.a.h.c: java.util.List j>;

     label27:
        $r19 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>();

     label28:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

     label29:
        if $z0 == 0 goto label34;

     label30:
        $r16 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

     label31:
        $r11 = (java.lang.String) $r16;

     label32:
        virtualinvoke r0.<o.d.a.a.h.c: void g(java.io.PrintWriter,java.lang.String,java.lang.String)>($r7, "Set-Cookie", $r11);

     label33:
        goto label28;

     label34:
        $r11 = "connection";

        $r15 = r0.<o.d.a.a.h.c: java.util.Map f>;

     label35:
        $r11 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

     label36:
        $r11 = (java.lang.String) $r16;

        if $r11 != null goto label39;

        $z0 = r0.<o.d.a.a.h.c: boolean i>;

        if $z0 == 0 goto label37;

        $r11 = "keep-alive";

        goto label38;

     label37:
        $r11 = "close";

     label38:
        virtualinvoke r0.<o.d.a.a.h.c: void g(java.io.PrintWriter,java.lang.String,java.lang.String)>($r7, "Connection", $r11);

     label39:
        $r11 = "content-length";

        $r15 = r0.<o.d.a.a.h.c: java.util.Map f>;

     label40:
        $r11 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

     label41:
        $r11 = (java.lang.String) $r16;

        if $r11 == null goto label42;

        $r23 = <o.d.a.a.h.c$b: o.d.a.a.h.c$b c>;

        r0.<o.d.a.a.h.c: o.d.a.a.h.c$b k> = $r23;

     label42:
        $z0 = virtualinvoke r0.<o.d.a.a.h.c: boolean w()>();

     label43:
        if $z0 == 0 goto label46;

     label44:
        virtualinvoke r0.<o.d.a.a.h.c: void g(java.io.PrintWriter,java.lang.String,java.lang.String)>($r7, "Content-Encoding", "gzip");

     label45:
        r0.<o.d.a.a.h.c: boolean h> = 1;

     label46:
        $r24 = r0.<o.d.a.a.h.c: java.io.InputStream c>;

        if $r24 == null goto label47;

        $l1 = r0.<o.d.a.a.h.c: long d>;

        goto label48;

     label47:
        $l1 = 0L;

     label48:
        $r25 = r0.<o.d.a.a.h.c: o.d.a.a.g.a g>;

        if $r25 == $r2 goto label51;

        $z0 = r0.<o.d.a.a.h.c: boolean h>;

        if $z0 == 0 goto label51;

     label49:
        virtualinvoke r0.<o.d.a.a.h.c: void g(java.io.PrintWriter,java.lang.String,java.lang.String)>($r7, "Transfer-Encoding", "chunked");

     label50:
        goto label54;

     label51:
        $z0 = virtualinvoke r0.<o.d.a.a.h.c: boolean w()>();

     label52:
        if $z0 != 0 goto label54;

     label53:
        $l1 = virtualinvoke r0.<o.d.a.a.h.c: long o(java.io.PrintWriter,long)>($r7, $l1);

     label54:
        virtualinvoke $r7.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("\r\n");

        virtualinvoke $r7.<java.io.PrintWriter: void flush()>();

     label55:
        $r25 = r0.<o.d.a.a.h.c: o.d.a.a.g.a g>;

        if $r25 == $r2 goto label58;

        $z0 = r0.<o.d.a.a.h.c: boolean h>;

        if $z0 == 0 goto label58;

        $r26 = new o.d.a.a.h.a;

     label56:
        specialinvoke $r26.<o.d.a.a.h.a: void <init>(java.io.OutputStream)>($r1);

        virtualinvoke r0.<o.d.a.a.h.c: void k(java.io.OutputStream,long)>($r26, -1L);

        virtualinvoke $r26.<o.d.a.a.h.a: void d()>();

     label57:
        goto label59;

     label58:
        virtualinvoke r0.<o.d.a.a.h.c: void k(java.io.OutputStream,long)>($r1, $l1);

     label59:
        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

     label60:
        $r24 = r0.<o.d.a.a.h.c: java.io.InputStream c>;

     label61:
        staticinvoke <o.d.a.a.d: void f(java.lang.Object)>($r24);

     label62:
        return;

     label63:
        r31 = new java.lang.NullPointerException;

     label64:
        specialinvoke r31.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null throw statement replaced by Soot");

     label65:
        throw r31;

     label66:
        $r27 = new java.lang.Error;

     label67:
        specialinvoke $r27.<java.lang.Error: void <init>(java.lang.String)>("sendResponse(): Status can\'t be null.");

     label68:
        throw $r27;

     label69:
        $r28 := @caughtexception;

        $r29 = <o.d.a.a.d: java.util.logging.Logger j>;

        $r30 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r29.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r30, "Could not send response to the client", $r28);

        return;

        catch java.io.IOException from label01 to label02 with label69;
        catch java.io.IOException from label03 to label04 with label69;
        catch java.io.IOException from label05 to label06 with label69;
        catch java.io.IOException from label07 to label08 with label69;
        catch java.io.IOException from label09 to label10 with label69;
        catch java.io.IOException from label11 to label12 with label69;
        catch java.io.IOException from label13 to label14 with label69;
        catch java.io.IOException from label15 to label17 with label69;
        catch java.io.IOException from label18 to label19 with label69;
        catch java.io.IOException from label20 to label21 with label69;
        catch java.io.IOException from label22 to label23 with label69;
        catch java.io.IOException from label24 to label25 with label69;
        catch java.io.IOException from label27 to label29 with label69;
        catch java.io.IOException from label30 to label31 with label69;
        catch java.io.IOException from label32 to label33 with label69;
        catch java.io.IOException from label35 to label36 with label69;
        catch java.io.IOException from label38 to label39 with label69;
        catch java.io.IOException from label40 to label41 with label69;
        catch java.io.IOException from label42 to label43 with label69;
        catch java.io.IOException from label44 to label45 with label69;
        catch java.io.IOException from label49 to label50 with label69;
        catch java.io.IOException from label51 to label52 with label69;
        catch java.io.IOException from label53 to label54 with label69;
        catch java.io.IOException from label54 to label55 with label69;
        catch java.io.IOException from label56 to label57 with label69;
        catch java.io.IOException from label58 to label60 with label69;
        catch java.io.IOException from label61 to label62 with label69;
        catch java.io.IOException from label64 to label65 with label69;
        catch java.io.IOException from label67 to label68 with label69;
    }
