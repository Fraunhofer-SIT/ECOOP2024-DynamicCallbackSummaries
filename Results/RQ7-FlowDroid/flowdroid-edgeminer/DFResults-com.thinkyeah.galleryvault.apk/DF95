Source: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
$i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0) in <com.fyber.inneractive.sdk.player.a.l: void b()>
Sink: virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3) in <com.fyber.inneractive.sdk.player.a.l: java.lang.String a()>

<com.fyber.inneractive.sdk.player.a.l: void b()>: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
<com.fyber.inneractive.sdk.player.a.l: void b()>: $r2 = r0.<com.fyber.inneractive.sdk.player.a.l: byte[] d>
<com.fyber.inneractive.sdk.player.a.l: void b()>: return
<com.fyber.inneractive.sdk.player.a.l: java.lang.String a()>: throw $r6
<com.fyber.inneractive.sdk.player.a.c: void f()>: $r6 = virtualinvoke $r17.<com.fyber.inneractive.sdk.player.a.l: java.lang.String a()>()
<com.fyber.inneractive.sdk.player.a.l: java.lang.String a()>: $r2 = r0.<com.fyber.inneractive.sdk.player.a.l: byte[] d>
<com.fyber.inneractive.sdk.player.a.l: java.lang.String a()>: virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3)
