Source: $i5 = virtualinvoke $r14.<java.io.FileInputStream: int read(byte[],int,int)>($r8, 0, $i5)
$i5 = virtualinvoke $r14.<java.io.FileInputStream: int read(byte[],int,int)>($r8, 0, $i5) in <com.fyber.inneractive.sdk.player.a.k: void a(int,int)>
Sink: virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>($r8, 0, $i5) in <com.fyber.inneractive.sdk.player.a.k: void a(int,int)>

<com.fyber.inneractive.sdk.player.a.k: void a(int,int)>: $i5 = virtualinvoke $r14.<java.io.FileInputStream: int read(byte[],int,int)>($r8, 0, $i5)
<com.fyber.inneractive.sdk.player.a.k: void a(int,int)>: $r8 = staticinvoke <com.fyber.inneractive.sdk.util.c: byte[] b(java.nio.ByteBuffer)>($r7)
<com.fyber.inneractive.sdk.util.c: byte[] b(java.nio.ByteBuffer)>: $r1 = virtualinvoke $r0.<java.nio.ByteBuffer: byte[] array()>()
<com.fyber.inneractive.sdk.util.c: byte[] b(java.nio.ByteBuffer)>: return $r1
<com.fyber.inneractive.sdk.player.a.k: void a(int,int)>: virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>($r8, 0, $i5)
