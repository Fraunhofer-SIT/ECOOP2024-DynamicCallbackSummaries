    protected void onRun()
    {
        java.lang.Throwable $r11, $r12, $r13, $r15, $r16;
        byte[] $r9;
        java.net.Socket $r4, $r17;
        long $l0;
        com.genonbeta.CoolSocket.CoolTransfer$TransferProgress $r10;
        com.genonbeta.CoolSocket.CoolTransfer$Send $r1;
        int $i1;
        java.lang.String $r5;
        boolean $z0;
        java.io.OutputStream $r6;
        com.genonbeta.CoolSocket.CoolTransfer$Flag $r2, $r3;
        java.io.IOException $r19;
        com.genonbeta.CoolSocket.CoolTransfer$Send$Handler r0;
        java.net.InetSocketAddress $r18;
        java.lang.Exception $r14;
        java.lang.Object $r8;
        java.io.InputStream $r7;

        r0 := @this: com.genonbeta.CoolSocket.CoolTransfer$Send$Handler;

        $r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Send this$0>;

        virtualinvoke $r1.<com.genonbeta.CoolSocket.CoolTransfer$Send: void addProcess(com.genonbeta.CoolSocket.CoolTransfer$TransferHandler)>(r0);

        $r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Send this$0>;

        $r2 = virtualinvoke $r1.<com.genonbeta.CoolSocket.CoolTransfer$Send: com.genonbeta.CoolSocket.CoolTransfer$Flag onPrepare(com.genonbeta.CoolSocket.CoolTransfer$TransferHandler)>(r0);

        virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: void setFlag(com.genonbeta.CoolSocket.CoolTransfer$Flag)>($r2);

     label01:
        $r2 = <com.genonbeta.CoolSocket.CoolTransfer$Flag: com.genonbeta.CoolSocket.CoolTransfer$Flag CONTINUE>;

     label02:
        $r3 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Flag getFlag()>();

        $z0 = virtualinvoke $r2.<com.genonbeta.CoolSocket.CoolTransfer$Flag: boolean equals(java.lang.Object)>($r3);

     label03:
        if $z0 == 0 goto label36;

     label04:
        $r4 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: java.net.Socket getSocket()>();

     label05:
        if $r4 != null goto label08;

     label06:
        $r17 = new java.net.Socket;

     label07:
        specialinvoke $r17.<java.net.Socket: void <init>()>();

        virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: void setSocket(java.net.Socket)>($r17);

        $r4 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: java.net.Socket getSocket()>();

        virtualinvoke $r4.<java.net.Socket: void bind(java.net.SocketAddress)>(null);

     label08:
        $r4 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: java.net.Socket getSocket()>();

     label09:
        $r18 = new java.net.InetSocketAddress;

     label10:
        $r5 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: java.lang.String getServerIp()>();

        $i1 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: int getPort()>();

        specialinvoke $r18.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r5, $i1);

        virtualinvoke $r4.<java.net.Socket: void connect(java.net.SocketAddress)>($r18);

        $r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Send this$0>;

        $r2 = virtualinvoke $r1.<com.genonbeta.CoolSocket.CoolTransfer$Send: com.genonbeta.CoolSocket.CoolTransfer$Flag onTaskPrepareSocket(com.genonbeta.CoolSocket.CoolTransfer$TransferHandler)>(r0);

        virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: void setFlag(com.genonbeta.CoolSocket.CoolTransfer$Flag)>($r2);

     label11:
        $r2 = <com.genonbeta.CoolSocket.CoolTransfer$Flag: com.genonbeta.CoolSocket.CoolTransfer$Flag CONTINUE>;

     label12:
        $r3 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Flag getFlag()>();

        $z0 = virtualinvoke $r2.<com.genonbeta.CoolSocket.CoolTransfer$Flag: boolean equals(java.lang.Object)>($r3);

     label13:
        if $z0 == 0 goto label36;

     label14:
        $r4 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: java.net.Socket getSocket()>();

        $r6 = virtualinvoke $r4.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        $r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Send this$0>;

        $r7 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: java.io.InputStream getInputStream()>();

        $r2 = virtualinvoke $r1.<com.genonbeta.CoolSocket.CoolTransfer$Send: com.genonbeta.CoolSocket.CoolTransfer$Flag onTaskOrientateStreams(com.genonbeta.CoolSocket.CoolTransfer$TransferHandler,java.io.InputStream,java.io.OutputStream)>(r0, $r7, $r6);

        virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: void setFlag(com.genonbeta.CoolSocket.CoolTransfer$Flag)>($r2);

     label15:
        $r2 = <com.genonbeta.CoolSocket.CoolTransfer$Flag: com.genonbeta.CoolSocket.CoolTransfer$Flag CONTINUE>;

     label16:
        $r3 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Flag getFlag()>();

        $z0 = virtualinvoke $r2.<com.genonbeta.CoolSocket.CoolTransfer$Flag: boolean equals(java.lang.Object)>($r3);

     label17:
        if $z0 == 0 goto label35;

        $i1 = 0;

     label18:
        if $i1 == -1 goto label31;

     label19:
        $r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Send this$0>;

        $r8 = virtualinvoke $r1.<com.genonbeta.CoolSocket.CoolTransfer$Send: java.lang.Object getBlockingObject()>();

        entermonitor $r8;

     label20:
        $r7 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: java.io.InputStream getInputStream()>();

        $r9 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: byte[] getBuffer()>();

        $i1 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>($r9);

        if $i1 <= 0 goto label21;

        $r9 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: byte[] getBuffer()>();

        virtualinvoke $r6.<java.io.OutputStream: void write(byte[],int,int)>($r9, 0, $i1);

        virtualinvoke $r6.<java.io.OutputStream: void flush()>();

        $r10 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$TransferProgress getTransferProgress()>();

        $l0 = (long) $i1;

        virtualinvoke $r10.<com.genonbeta.CoolSocket.CoolTransfer$TransferProgress: long incrementTransferredByte(long)>($l0);

     label21:
        exitmonitor $r8;

     label22:
        $r10 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$TransferProgress getTransferProgress()>();

        $r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Send this$0>;

        virtualinvoke $r10.<com.genonbeta.CoolSocket.CoolTransfer$TransferProgress: boolean doNotify(com.genonbeta.CoolSocket.CoolTransfer,com.genonbeta.CoolSocket.CoolTransfer$TransferHandler)>($r1, r0);

     label23:
        $r2 = <com.genonbeta.CoolSocket.CoolTransfer$Flag: com.genonbeta.CoolSocket.CoolTransfer$Flag CONTINUE>;

     label24:
        $r3 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Flag getFlag()>();

        $z0 = virtualinvoke $r2.<com.genonbeta.CoolSocket.CoolTransfer$Flag: boolean equals(java.lang.Object)>($r3);

     label25:
        if $z0 == 0 goto label31;

     label26:
        $r10 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$TransferProgress getTransferProgress()>();

        $z0 = virtualinvoke $r10.<com.genonbeta.CoolSocket.CoolTransfer$TransferProgress: boolean isInterrupted()>();

     label27:
        if $z0 != 0 goto label31;

        goto label18;

     label28:
        $r11 := @caughtexception;

     label29:
        exitmonitor $r8;

     label30:
        throw $r11;

     label31:
        $r2 = <com.genonbeta.CoolSocket.CoolTransfer$Flag: com.genonbeta.CoolSocket.CoolTransfer$Flag CONTINUE>;

     label32:
        $r3 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Flag getFlag()>();

        $z0 = virtualinvoke $r2.<com.genonbeta.CoolSocket.CoolTransfer$Flag: boolean equals(java.lang.Object)>($r3);

     label33:
        if $z0 == 0 goto label35;

     label34:
        $r10 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$TransferProgress getTransferProgress()>();

        virtualinvoke $r10.<com.genonbeta.CoolSocket.CoolTransfer$TransferProgress: int incrementTransferredFileCount()>();

        $r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Send this$0>;

        virtualinvoke $r1.<com.genonbeta.CoolSocket.CoolTransfer$Send: void onTaskEnd(com.genonbeta.CoolSocket.CoolTransfer$TransferHandler)>(r0);

     label35:
        virtualinvoke $r6.<java.io.OutputStream: void close()>();

        $r7 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: java.io.InputStream getInputStream()>();

        virtualinvoke $r7.<java.io.InputStream: void close()>();

     label36:
        $r4 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: java.net.Socket getSocket()>();

     label37:
        if $r4 == null goto label43;

     label38:
        $r4 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: java.net.Socket getSocket()>();

        $z0 = virtualinvoke $r4.<java.net.Socket: boolean isClosed()>();

     label39:
        if $z0 != 0 goto label43;

     label40:
        $r4 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: java.net.Socket getSocket()>();

        virtualinvoke $r4.<java.net.Socket: void close()>();

     label41:
        goto label43;

     label42:
        $r12 := @caughtexception;

        $r19 = (java.io.IOException) $r12;

        virtualinvoke $r19.<java.io.IOException: void printStackTrace()>();

     label43:
        $r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Send this$0>;

        virtualinvoke $r1.<com.genonbeta.CoolSocket.CoolTransfer$Send: void onDestroy(com.genonbeta.CoolSocket.CoolTransfer$TransferHandler)>(r0);

        $r2 = <com.genonbeta.CoolSocket.CoolTransfer$Flag: com.genonbeta.CoolSocket.CoolTransfer$Flag CANCEL_ALL>;

        $r3 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Flag getFlag()>();

        $z0 = virtualinvoke $r2.<com.genonbeta.CoolSocket.CoolTransfer$Flag: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label45;

     label44:
        $r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Send this$0>;

        virtualinvoke $r1.<com.genonbeta.CoolSocket.CoolTransfer$Send: void onPrepareNext(com.genonbeta.CoolSocket.CoolTransfer$TransferHandler)>(r0);

     label45:
        $r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Send this$0>;

        virtualinvoke $r1.<com.genonbeta.CoolSocket.CoolTransfer$Send: void removeProcess(com.genonbeta.CoolSocket.CoolTransfer$TransferHandler)>(r0);

        return;

     label46:
        $r13 := @caughtexception;

        goto label57;

     label47:
        $r14 := @caughtexception;

     label48:
        $r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Send this$0>;

        $r2 = virtualinvoke $r1.<com.genonbeta.CoolSocket.CoolTransfer$Send: com.genonbeta.CoolSocket.CoolTransfer$Flag onError(com.genonbeta.CoolSocket.CoolTransfer$TransferHandler,java.lang.Exception)>(r0, $r14);

        virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: void setFlag(com.genonbeta.CoolSocket.CoolTransfer$Flag)>($r2);

     label49:
        $r4 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: java.net.Socket getSocket()>();

     label50:
        if $r4 == null goto label56;

     label51:
        $r4 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: java.net.Socket getSocket()>();

        $z0 = virtualinvoke $r4.<java.net.Socket: boolean isClosed()>();

     label52:
        if $z0 != 0 goto label56;

     label53:
        $r4 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: java.net.Socket getSocket()>();

        virtualinvoke $r4.<java.net.Socket: void close()>();

     label54:
        goto label56;

     label55:
        $r15 := @caughtexception;

        $r19 = (java.io.IOException) $r15;

        virtualinvoke $r19.<java.io.IOException: void printStackTrace()>();

     label56:
        $r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Send this$0>;

        virtualinvoke $r1.<com.genonbeta.CoolSocket.CoolTransfer$Send: void onDestroy(com.genonbeta.CoolSocket.CoolTransfer$TransferHandler)>(r0);

        $r2 = <com.genonbeta.CoolSocket.CoolTransfer$Flag: com.genonbeta.CoolSocket.CoolTransfer$Flag CANCEL_ALL>;

        $r3 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Flag getFlag()>();

        $z0 = virtualinvoke $r2.<com.genonbeta.CoolSocket.CoolTransfer$Flag: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label45;

        goto label44;

     label57:
        $r4 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: java.net.Socket getSocket()>();

     label58:
        if $r4 == null goto label64;

     label59:
        $r4 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: java.net.Socket getSocket()>();

        $z0 = virtualinvoke $r4.<java.net.Socket: boolean isClosed()>();

     label60:
        if $z0 != 0 goto label64;

     label61:
        $r4 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: java.net.Socket getSocket()>();

        virtualinvoke $r4.<java.net.Socket: void close()>();

     label62:
        goto label64;

     label63:
        $r16 := @caughtexception;

        $r19 = (java.io.IOException) $r16;

        virtualinvoke $r19.<java.io.IOException: void printStackTrace()>();

     label64:
        $r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Send this$0>;

        virtualinvoke $r1.<com.genonbeta.CoolSocket.CoolTransfer$Send: void onDestroy(com.genonbeta.CoolSocket.CoolTransfer$TransferHandler)>(r0);

        $r2 = <com.genonbeta.CoolSocket.CoolTransfer$Flag: com.genonbeta.CoolSocket.CoolTransfer$Flag CANCEL_ALL>;

        $r3 = virtualinvoke r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Flag getFlag()>();

        $z0 = virtualinvoke $r2.<com.genonbeta.CoolSocket.CoolTransfer$Flag: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label65;

        $r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Send this$0>;

        virtualinvoke $r1.<com.genonbeta.CoolSocket.CoolTransfer$Send: void onPrepareNext(com.genonbeta.CoolSocket.CoolTransfer$TransferHandler)>(r0);

     label65:
        $r1 = r0.<com.genonbeta.CoolSocket.CoolTransfer$Send$Handler: com.genonbeta.CoolSocket.CoolTransfer$Send this$0>;

        virtualinvoke $r1.<com.genonbeta.CoolSocket.CoolTransfer$Send: void removeProcess(com.genonbeta.CoolSocket.CoolTransfer$TransferHandler)>(r0);

        throw $r13;

        catch java.lang.Exception from label02 to label03 with label47;
        catch java.lang.Exception from label04 to label05 with label47;
        catch java.lang.Exception from label07 to label09 with label47;
        catch java.lang.Exception from label10 to label11 with label47;
        catch java.lang.Exception from label12 to label13 with label47;
        catch java.lang.Exception from label14 to label15 with label47;
        catch java.lang.Exception from label16 to label17 with label47;
        catch java.lang.Exception from label19 to label20 with label47;
        catch java.lang.Throwable from label01 to label03 with label46;
        catch java.lang.Throwable from label04 to label05 with label46;
        catch java.lang.Throwable from label06 to label07 with label46;
        catch java.lang.Throwable from label07 to label10 with label46;
        catch java.lang.Throwable from label10 to label13 with label46;
        catch java.lang.Throwable from label14 to label17 with label46;
        catch java.lang.Throwable from label19 to label20 with label46;
        catch java.lang.Throwable from label20 to label22 with label28;
        catch java.lang.Exception from label22 to label23 with label47;
        catch java.lang.Exception from label24 to label25 with label47;
        catch java.lang.Exception from label26 to label27 with label47;
        catch java.lang.Throwable from label22 to label25 with label46;
        catch java.lang.Throwable from label26 to label27 with label46;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Exception from label30 to label31 with label47;
        catch java.lang.Exception from label32 to label33 with label47;
        catch java.lang.Exception from label34 to label36 with label47;
        catch java.lang.Throwable from label30 to label33 with label46;
        catch java.lang.Throwable from label34 to label36 with label46;
        catch java.io.IOException from label36 to label37 with label42;
        catch java.io.IOException from label38 to label39 with label42;
        catch java.io.IOException from label40 to label41 with label42;
        catch java.lang.Throwable from label48 to label49 with label46;
        catch java.io.IOException from label49 to label50 with label55;
        catch java.io.IOException from label51 to label52 with label55;
        catch java.io.IOException from label53 to label54 with label55;
        catch java.io.IOException from label57 to label58 with label63;
        catch java.io.IOException from label59 to label60 with label63;
        catch java.io.IOException from label61 to label62 with label63;
    }
