[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loading sources and sinks from SourcesSinks/UnconstrainedSourcesSinks.xml...
[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loaded 273 sources and 91 sinks from the XML file
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] WARN soot.Scene - Android API version '30' not available, using minApkVersion '21' instead
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.128090888 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 34 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class androidx.core.content.FileProvider
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] ERROR soot.jimple.toolkits.typing.fast.TypePromotionUseVisitor - Failed Typing in <com.drakeet.purewriter.Wwwmwm: boolean Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww()> at statement return $u1#2: Is not cast compatible: boolean <-- [0..127]
[main] ERROR soot.jimple.toolkits.typing.fast.TypePromotionUseVisitor - Failed Typing in <com.drakeet.purewriter.Wwwmwm$Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww: java.lang.Object invoke()> at statement $u-1#22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($u1#7): Is not cast compatible: boolean <-- [0..127]
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] WARN soot.jimple.infoflow.android.SetupApplication - Aborted callback collection because of low memory
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] WARN soot.jimple.infoflow.android.SetupApplication - Callback analysis aborted early due to time or memory exhaustion
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 273 sources, 91 sinks, and 0 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 656 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on storagepath2-data/androidApps/2021-AndroZoo-PlayStore/com.drakeet.purewriterFC0991484A8BF72AA0A076F0F04D0481E547DD86.apk with 273 sources and 91 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 71.673493463 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 1628498 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 172 sources and 90 sinks.
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper hits: 1975194
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper misses: 142694444
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - IFDS problem with 54887999 forward and 88385072 backward edges solved in 909 seconds, processing 9 results...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Current memory consumption: 101140 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after cleanup: 16291 MB
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 1 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 2 with 4 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 4 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after path building: 16291 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Path reconstruction took 6 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, 0, 4) in method <com.ta.utdid2.device.c: byte[] c()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r5 = virtualinvoke $r4.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>() in method <com.ta.utdid2.a.a.e: java.lang.String a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.e: java.lang.String a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.e: java.lang.String a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.e: java.lang.String a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.device.c: byte[] c()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = staticinvoke <com.ta.utdid2.a.a.g: int a(java.lang.String)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.g: int a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.g: int a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $c3 = $r1[$i1]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.g: int a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i2 = (int) $c3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.g: int a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = $i0 + $i2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.g: int a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.device.c: byte[] c()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <com.ta.utdid2.a.a.d: byte[] getBytes(int)>($i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.d: byte[] getBytes(int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = $i0 >> 8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.d: byte[] getBytes(int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = $i0 % 256
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.d: byte[] getBytes(int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b2 = (byte) $i1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.d: byte[] getBytes(int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0[2] = $b2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.d: byte[] getBytes(int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.device.c: byte[] c()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, 0, 4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, "android_id") in method <com.ta.utdid2.a.a.e: java.lang.String b(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.e: java.lang.String b(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, "android_id")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.e: java.lang.String b(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.e: java.lang.String a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.device.c: byte[] c()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = staticinvoke <com.ta.utdid2.a.a.g: int a(java.lang.String)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.g: int a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.g: int a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $c3 = $r1[$i1]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.g: int a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i2 = (int) $c3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.g: int a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = $i0 + $i2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.g: int a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.device.c: byte[] c()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <com.ta.utdid2.a.a.d: byte[] getBytes(int)>($i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.d: byte[] getBytes(int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = $i0 >> 8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.d: byte[] getBytes(int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = $i0 % 256
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.d: byte[] getBytes(int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b2 = (byte) $i1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.d: byte[] getBytes(int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0[2] = $b2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.a.a.d: byte[] getBytes(int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ta.utdid2.device.c: byte[] c()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, 0, 4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0) in method <com.drakeet.purewriter.dos: long Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(java.io.InputStream,java.io.OutputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, 1024) in method <com.drakeet.purewriter.dos: long Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.dos: long Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, 1024)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.dos: long Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r15.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r0, 0, $i0) in method <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r14.<java.util.zip.GZIPInputStream: int read(byte[],int,int)>($r0, 0, 4096) in method <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r14.<java.util.zip.GZIPInputStream: int read(byte[],int,int)>($r0, 0, 4096)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r15.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r0, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0) in method <com.drakeet.purewriter.atr: long copyTo(java.io.InputStream,java.io.OutputStream,int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2) in method <com.drakeet.purewriter.atr: long copyTo(java.io.InputStream,java.io.OutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.atr: long copyTo(java.io.InputStream,java.io.OutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.atr: long copyTo(java.io.InputStream,java.io.OutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2) in method <com.drakeet.purewriter.atr: long copyTo(java.io.InputStream,java.io.OutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.atr: long copyTo(java.io.InputStream,java.io.OutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.atr: long copyTo(java.io.InputStream,java.io.OutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r15.<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>($r6, 0, $i0) in method <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r13.<java.io.ByteArrayInputStream: int read(byte[])>($r6) in method <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r13.<java.io.ByteArrayInputStream: int read(byte[])>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r15.<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>($r6, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r8.<java.io.FileOutputStream: void write(byte[],int,int)>($r4, 0, $i0) in method <com.drakeet.purewriter.Wwwwwwwwwwwwwwuv: boolean Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(java.io.File,java.io.InputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r4) in method <com.drakeet.purewriter.Wwwwwwwwwwwwwwuv: boolean Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(java.io.File,java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwwwwwwwwwwwwuv: boolean Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(java.io.File,java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwwwwwwwwwwwwuv: boolean Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(java.io.File,java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<java.io.FileOutputStream: void write(byte[],int,int)>($r4, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r12.<java.io.DataOutputStream: void write(byte[])>($r0) in method <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwws: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[][])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r13.<java.io.ByteArrayInputStream: int read(byte[])>($r6) in method <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r13.<java.io.ByteArrayInputStream: int read(byte[])>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r15.<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>($r6, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r15.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r14)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r14.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwws: com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwws Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwwws,boolean,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwws: com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwws Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwwws,boolean,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9[1] = $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwws: com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwws Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwwws,boolean,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = staticinvoke <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwws: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[][])>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwws: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[][])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r9[$i1]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwws: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[][])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r12.<java.io.DataOutputStream: void write(byte[])>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r0, 0, $i0) in method <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwvwvvmv: void Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(java.io.InputStream,java.io.OutputStream,byte[])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r0) in method <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwvwvvmv: void Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(java.io.InputStream,java.io.OutputStream,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwvwvvmv: void Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(java.io.InputStream,java.io.OutputStream,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwvwvvmv: void Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(java.io.InputStream,java.io.OutputStream,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r0, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r12.<java.io.DataOutputStream: void write(byte[])>($r0) in method <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwws: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[][])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r13.<java.io.ByteArrayInputStream: int read(byte[])>($r6) in method <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r13.<java.io.ByteArrayInputStream: int read(byte[])>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r15.<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>($r6, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r15.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r14)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r14.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwxwww: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwws: com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwws Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwwws,boolean,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwws: com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwws Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwwws,boolean,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9[1] = $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwws: com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwws Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwwws,boolean,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = staticinvoke <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwws: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[][])>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwws: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[][])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r9[$i1]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwws: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(byte[][])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r12.<java.io.DataOutputStream: void write(byte[])>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r0, 0, $i0) in method <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwws: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(java.io.InputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r0, 0, 1024) in method <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwws: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwws: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r0, 0, 1024)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.drakeet.purewriter.Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwws: byte[] Wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r0, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Data flow solver took 1016 seconds. Maximum memory consumption: 101140 MB
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication - Found 10 leaks
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'SummaryStatistics'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Telemetry'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'Telemetry_sha256Hash_idx' for table 'Telemetry
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Callbacks'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallbackSummaries'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'CallbackSummaries_sha256Hash_idx' for table 'CallbackSummaries
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'AppSizes'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'AppSizes_sha256Hash_idx' for table 'AppSizes
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallgraphSizes'
