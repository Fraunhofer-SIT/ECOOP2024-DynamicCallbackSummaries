Source: $i0 = virtualinvoke $r14.<java.util.zip.ZipInputStream: int read(byte[])>($r6)
$i0 = virtualinvoke $r14.<java.util.zip.ZipInputStream: int read(byte[])>($r6) in <org.videolan.vlc.util.FileUtils$unpackZip$2: java.lang.Object invokeSuspend(java.lang.Object)>
Sink: virtualinvoke $r16.<java.io.FileOutputStream: void write(byte[])>($r8) in <org.videolan.vlc.util.FileUtils$unpackZip$2: java.lang.Object invokeSuspend(java.lang.Object)>

<org.videolan.vlc.util.FileUtils$unpackZip$2: java.lang.Object invokeSuspend(java.lang.Object)>: $i0 = virtualinvoke $r14.<java.util.zip.ZipInputStream: int read(byte[])>($r6)
<org.videolan.vlc.util.FileUtils$unpackZip$2: java.lang.Object invokeSuspend(java.lang.Object)>: virtualinvoke $r15.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r6, 0, $i0)
<org.videolan.vlc.util.FileUtils$unpackZip$2: java.lang.Object invokeSuspend(java.lang.Object)>: $r8 = virtualinvoke $r15.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
<org.videolan.vlc.util.FileUtils$unpackZip$2: java.lang.Object invokeSuspend(java.lang.Object)>: virtualinvoke $r16.<java.io.FileOutputStream: void write(byte[])>($r8)
