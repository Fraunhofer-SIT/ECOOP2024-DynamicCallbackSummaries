Source: $i0 = virtualinvoke $r4.<java.io.FileInputStream: int read(byte[])>($r1)
$i0 = virtualinvoke $r4.<java.io.FileInputStream: int read(byte[])>($r1) in <com.alfaisal.studio.Application$FileUtils: byte[] readFileBytes(java.io.File)>
Sink: virtualinvoke $r7.<java.io.FileOutputStream: void write(byte[])>($r4) in <com.alfaisal.studio.Application$c: void initDex(java.io.File,java.io.File)>

<com.alfaisal.studio.Application$FileUtils: byte[] readFileBytes(java.io.File)>: $i0 = virtualinvoke $r4.<java.io.FileInputStream: int read(byte[])>($r1)
<com.alfaisal.studio.Application$FileUtils: byte[] readFileBytes(java.io.File)>: virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i0)
<com.alfaisal.studio.Application$FileUtils: byte[] readFileBytes(java.io.File)>: $r1 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
<com.alfaisal.studio.Application$FileUtils: byte[] readFileBytes(java.io.File)>: return $r1
<com.alfaisal.studio.Application$c: void initDex(java.io.File,java.io.File)>: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, $i0, $r6, 0, $i2)
<com.alfaisal.studio.Application$c: void initDex(java.io.File,java.io.File)>: $r4 = staticinvoke <com.alfaisal.studio.Application$d: byte[] decrypt(byte[],byte[])>($r4, $r6)
<com.alfaisal.studio.Application$d: byte[] decrypt(byte[],byte[])>: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
<com.alfaisal.studio.Application$d: byte[] decrypt(byte[],byte[])>: return $r0
<com.alfaisal.studio.Application$c: void initDex(java.io.File,java.io.File)>: virtualinvoke $r7.<java.io.FileOutputStream: void write(byte[])>($r4)
