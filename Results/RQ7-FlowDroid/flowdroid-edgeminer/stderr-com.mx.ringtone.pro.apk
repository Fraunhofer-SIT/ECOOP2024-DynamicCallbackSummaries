[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loading sources and sinks from SourcesSinks/UnconstrainedSourcesSinks.xml...
[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loaded 273 sources and 91 sinks from the XML file
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] WARN soot.Scene - Android API version '30' not available, using minApkVersion '21' instead
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.074371303 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 92 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class androidx.lifecycle.ProcessLifecycleOwnerInitializer
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class androidx.work.impl.WorkManagerInitializer
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class androidx.core.content.FileProvider
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] WARN soot.jimple.infoflow.android.SetupApplication - Aborted callback collection because of low memory
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] WARN soot.jimple.infoflow.android.SetupApplication - Callback analysis aborted early due to time or memory exhaustion
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 273 sources, 91 sinks, and 0 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 223 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on storagepath2-data/androidApps/2022-AndroZoo-PlayStore/com.mx.ringtone.pro.apk with 273 sources and 91 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 5.004230189 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 100848 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 273 sources and 137 sinks.
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.NullConstant
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper hits: 15228298
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper misses: 51788825
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - IFDS problem with 70647796 forward and 74199728 backward edges solved in 903 seconds, processing 14 results...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Current memory consumption: 91893 MB
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after cleanup: 19802 MB
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 1 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 2 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 3 with 4 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 4 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after path building: 19805 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Path reconstruction took 4 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3) in method <OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: java.lang.String OooO0O0()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0) in method <OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: void OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: void OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: void OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: byte[] OooOOOO>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: void OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: java.lang.String OooO0O0()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: byte[] OooOOOO>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: java.lang.String OooO0O0()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r7.<java.io.OutputStream: void write(byte[])>($r6) in method <com.kochava.base.ab: void a(java.io.OutputStream,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.agent") in method <com.kochava.base.ab: java.lang.String f()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.ab: java.lang.String f()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.agent")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.ab: java.lang.String f()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.ab: java.lang.String a(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3[1] = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.ab: java.lang.String a(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.kochava.base.Tracker: void a(int,java.lang.String,java.lang.String,java.lang.Object[])>(4, "UTL", "httpPost", $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.Tracker: void a(int,java.lang.String,java.lang.String,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.ab: java.lang.String a(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3[3] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.ab: java.lang.String a(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.kochava.base.ab: void a(java.io.OutputStream,java.lang.String)>($r5, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.ab: void a(java.io.OutputStream,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.ab: void a(java.io.OutputStream,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<java.io.OutputStream: void write(byte[])>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r17.<java.io.DataOutputStream: void write(byte[])>($r7) in method <OooO0oO.OooO.OooO0O0.o0O0o00O: void OooOO0(OooO0oO.OooO.OooO0O0.o0O0o00O,OooO0oO.OooO.OooO0O0.oOo0o0oO)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $f0 = virtualinvoke $r2.<android.location.Location: float getSpeed()>() in method <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $f0 = virtualinvoke $r2.<android.location.Location: float getSpeed()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $d0 = (double) $f0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("fl.speed.value", $d0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oO0O0Oo0: java.lang.String e()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oO0O0Oo0: java.lang.String e()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.o0O0o00O: void OooOO0(OooO0oO.OooO.OooO0O0.o0O0o00O,OooO0oO.OooO.OooO0O0.oOo0o0oO)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.o0O0o00O: void OooOO0(OooO0oO.OooO.OooO0O0.o0O0o00O,OooO0oO.OooO.OooO0O0.oOo0o0oO)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r17.<java.io.DataOutputStream: void write(byte[])>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $f0 = virtualinvoke $r2.<android.location.Location: float getBearing()>() in method <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $f0 = virtualinvoke $r2.<android.location.Location: float getBearing()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $d0 = (double) $f0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("fl.bearing.value", $d0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oO0O0Oo0: java.lang.String e()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oO0O0Oo0: java.lang.String e()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.o0O0o00O: void OooOO0(OooO0oO.OooO.OooO0O0.o0O0o00O,OooO0oO.OooO.OooO0O0.oOo0o0oO)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.o0O0o00O: void OooOO0(OooO0oO.OooO.OooO0O0.o0O0o00O,OooO0oO.OooO.OooO0O0.oOo0o0oO)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r17.<java.io.DataOutputStream: void write(byte[])>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0) in method <com.facebook.login.OooOo00: long OooO00o(java.io.InputStream,java.io.OutputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2) in method <com.facebook.login.OooOo00: long OooO00o(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.login.OooOo00: long OooO00o(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.login.OooOo00: long OooO00o(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i0, $i1) in method <OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: java.lang.String OooO0O0()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0) in method <OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: void OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: void OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: void OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: byte[] OooOOOO>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: void OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: java.lang.String OooO0O0()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: byte[] OooOOOO>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO0o0.OooO00o.OooOO0o.OooO0O0: java.lang.String OooO0O0()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0) in method <OooO0oO.OooO.OooO0O0.o00OOOOo: void OooO00o(java.io.OutputStream,java.lang.Object)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2) in method <com.facebook.login.OooOo00: long OooO00o(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.login.OooOo00: long OooO00o(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.login.OooOo00: long OooO00o(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.login.OooOo00: long OooO00o(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $l1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.o00OOOOo: java.lang.Object OooO0O0(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.o00OOOOo: java.lang.Object OooO0O0(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.OooOo00: byte[] OooO0OO(java.security.Key)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (byte[]) $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.OooOo00: byte[] OooO0OO(java.security.Key)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.OooOo00: void OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<OooO0oO.OooO.OooO0O0.OooOo00: boolean OooO0O0(byte[],com.flurry.sdk.k$a)>($r5, $r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.OooOo00: boolean OooO0O0(byte[],com.flurry.sdk.k$a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r8.<OooO0oO.OooO.OooO0O0.o0O00o0: void OooO00o(java.io.OutputStream,java.lang.Object)>($r18, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.o00OOOOo: void OooO00o(java.io.OutputStream,java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (byte[]) $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.o00OOOOo: void OooO00o(java.io.OutputStream,java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0) in method <com.verizon.ads.utils.IOUtils: int read(java.io.InputStream,java.io.OutputStream[])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, 4096) in method <com.verizon.ads.utils.IOUtils: int read(java.io.InputStream,java.io.OutputStream[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.verizon.ads.utils.IOUtils: int read(java.io.InputStream,java.io.OutputStream[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, 4096)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.verizon.ads.utils.IOUtils: int read(java.io.InputStream,java.io.OutputStream[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>($r10, 0, $i0) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader makeAdsSdkClassLoader(android.content.Context)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r8.<java.io.InputStream: int read(byte[])>($r10) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader makeAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader makeAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r8.<java.io.InputStream: int read(byte[])>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader makeAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>($r10, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r7.<java.io.OutputStream: void write(byte[])>($r6) in method <com.kochava.base.ab: void a(java.io.OutputStream,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.agent") in method <com.kochava.base.ab: java.lang.String f()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.ab: java.lang.String f()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.agent")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.ab: java.lang.String f()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.ab: java.lang.String a(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3[1] = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.ab: java.lang.String a(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.kochava.base.Tracker: void a(int,java.lang.String,java.lang.String,java.lang.Object[])>(4, "UTL", "httpPost", $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.Tracker: void a(int,java.lang.String,java.lang.String,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.ab: java.lang.String a(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3[3] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.ab: java.lang.String a(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.kochava.base.ab: void a(java.io.OutputStream,java.lang.String)>($r5, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.ab: void a(java.io.OutputStream,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kochava.base.ab: void a(java.io.OutputStream,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<java.io.OutputStream: void write(byte[])>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3) in method <OooO0oO.OooOOOO.OooO00o.OooOOO: java.lang.String readLine()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0) in method <OooO0oO.OooOOOO.OooO00o.OooOOO: void OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooOOOO.OooO00o.OooOOO: void OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooOOOO.OooO00o.OooOOO: void OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<OooO0oO.OooOOOO.OooO00o.OooOOO: byte[] OooOOOO>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooOOOO.OooO00o.OooOOO: void OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooOOOO.OooO00o.OooOOO: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.common.DiskLruCache: void OooO0oo()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r1.<OooO0oO.OooOOOO.OooO00o.OooOOO: java.lang.String readLine()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooOOOO.OooO00o.OooOOO: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<OooO0oO.OooOOOO.OooO00o.OooOOO: byte[] OooOOOO>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooOOOO.OooO00o.OooOOO: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r3, 0, $i0) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader createInMemoryClassLoader(android.content.Context)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r3) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader createInMemoryClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader createInMemoryClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader createInMemoryClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r3, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0) in method <com.facebook.internal.o00Oo0: int OooO0oo(java.io.InputStream,java.io.OutputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r5.<java.io.BufferedInputStream: int read(byte[])>($r3) in method <com.facebook.internal.o00Oo0: int OooO0oo(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.internal.o00Oo0: int OooO0oo(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r5.<java.io.BufferedInputStream: int read(byte[])>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.internal.o00Oo0: int OooO0oo(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0) in method <com.mopub.common.util.Streams: void copyContent(java.io.InputStream,java.io.OutputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2) in method <com.mopub.common.util.Streams: void copyContent(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.common.util.Streams: void copyContent(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.common.util.Streams: void copyContent(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i0, $i1) in method <OooO0oO.OooOOOO.OooO00o.OooOOO: java.lang.String readLine()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0) in method <OooO0oO.OooOOOO.OooO00o.OooOOO: void OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooOOOO.OooO00o.OooOOO: void OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooOOOO.OooO00o.OooOOO: void OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<OooO0oO.OooOOOO.OooO00o.OooOOO: byte[] OooOOOO>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooOOOO.OooO00o.OooOOO: void OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooOOOO.OooO00o.OooOOO: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<OooO0oO.OooOOOO.OooO00o.OooOOO: byte[] OooOOOO>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooOOOO.OooO00o.OooOOO: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r6.<java.io.OutputStream: void write(byte[],int,int)>($r7, 0, $i0) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: dalvik.system.DexClassLoader makeLegacyAdsSdkClassLoader(android.content.Context)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r7) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: dalvik.system.DexClassLoader makeLegacyAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: dalvik.system.DexClassLoader makeLegacyAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: dalvik.system.DexClassLoader makeLegacyAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<java.io.OutputStream: void write(byte[],int,int)>($r7, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r17.<java.io.DataOutputStream: void write(byte[])>($r7) in method <OooO0oO.OooO.OooO0O0.o0O0o00O: void OooOO0(OooO0oO.OooO.OooO0O0.o0O0o00O,OooO0oO.OooO.OooO0O0.oOo0o0oO)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $f0 = virtualinvoke $r2.<android.location.Location: float getSpeed()>() in method <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $f0 = virtualinvoke $r2.<android.location.Location: float getSpeed()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $d0 = (double) $f0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("fl.speed.value", $d0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oO0O0Oo0: java.lang.String e()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oO0O0Oo0: java.lang.String e()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.o0O0o00O: void OooOO0(OooO0oO.OooO.OooO0O0.o0O0o00O,OooO0oO.OooO.OooO0O0.oOo0o0oO)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.o0O0o00O: void OooOO0(OooO0oO.OooO.OooO0O0.o0O0o00O,OooO0oO.OooO.OooO0O0.oOo0o0oO)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r17.<java.io.DataOutputStream: void write(byte[])>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $f0 = virtualinvoke $r2.<android.location.Location: float getBearing()>() in method <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $f0 = virtualinvoke $r2.<android.location.Location: float getBearing()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $d0 = (double) $f0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("fl.bearing.value", $d0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oOo00o0o: org.json.JSONObject OooO00o()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oO0O0Oo0: java.lang.String e()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.oO0O0Oo0: java.lang.String e()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.o0O0o00O: void OooOO0(OooO0oO.OooO.OooO0O0.o0O0o00O,OooO0oO.OooO.OooO0O0.oOo0o0oO)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <OooO0oO.OooO.OooO0O0.o0O0o00O: void OooOO0(OooO0oO.OooO.OooO0O0.o0O0o00O,OooO0oO.OooO.OooO0O0.oOo0o0oO)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r17.<java.io.DataOutputStream: void write(byte[])>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Data flow solver took 928 seconds. Maximum memory consumption: 91893 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication - Found 16 leaks
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'SummaryStatistics'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Telemetry'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'Telemetry_sha256Hash_idx' for table 'Telemetry
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Callbacks'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallbackSummaries'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'CallbackSummaries_sha256Hash_idx' for table 'CallbackSummaries
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'AppSizes'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'AppSizes_sha256Hash_idx' for table 'AppSizes
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallgraphSizes'
