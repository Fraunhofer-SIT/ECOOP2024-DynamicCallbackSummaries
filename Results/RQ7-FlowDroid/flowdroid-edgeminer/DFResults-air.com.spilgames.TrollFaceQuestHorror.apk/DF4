Source: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
$i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0) in <io.gamedock.sdk.utils.images.cache.disk.StrictLineReader: void fillBuf()>
Sink: virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3) in <io.gamedock.sdk.utils.images.cache.disk.StrictLineReader: java.lang.String readLine()>

<io.gamedock.sdk.utils.images.cache.disk.StrictLineReader: void fillBuf()>: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
<io.gamedock.sdk.utils.images.cache.disk.StrictLineReader: void fillBuf()>: $r2 = r0.<io.gamedock.sdk.utils.images.cache.disk.StrictLineReader: byte[] buf>
<io.gamedock.sdk.utils.images.cache.disk.StrictLineReader: void fillBuf()>: return
<io.gamedock.sdk.utils.images.cache.disk.StrictLineReader: java.lang.String readLine()>: throw $r6
<io.gamedock.sdk.utils.images.cache.disk.DiskLruCache: void readJournal()>: $r7 = virtualinvoke $r1.<io.gamedock.sdk.utils.images.cache.disk.StrictLineReader: java.lang.String readLine()>()
<io.gamedock.sdk.utils.images.cache.disk.StrictLineReader: java.lang.String readLine()>: $r2 = r0.<io.gamedock.sdk.utils.images.cache.disk.StrictLineReader: byte[] buf>
<io.gamedock.sdk.utils.images.cache.disk.StrictLineReader: java.lang.String readLine()>: virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3)
