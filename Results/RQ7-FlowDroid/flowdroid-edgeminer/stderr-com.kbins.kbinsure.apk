[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loading sources and sinks from SourcesSinks/UnconstrainedSourcesSinks.xml...
[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loaded 273 sources and 91 sinks from the XML file
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] WARN soot.Scene - Android API version '32' not available, using minApkVersion '21' instead
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.057678793 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 134 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class androidx.startup.InitializationProvider
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class androidx.core.content.FileProvider
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] ERROR soot.jimple.toolkits.typing.fast.TypePromotionUseVisitor - Failed Typing in <com.kbins.kbinsure.login.KakaoPayAgreementActivity$4: void onTextChanged(java.lang.CharSequence,int,int,int)> at statement staticinvoke <com.kbins.kbinsure.login.KakaoPayAgreementActivity: void access$100(com.kbins.kbinsure.login.KakaoPayAgreementActivity,boolean)>($u2#123, $u3#3): Is not cast compatible: boolean <-- [0..127]
[main] ERROR soot.jimple.toolkits.typing.fast.TypePromotionUseVisitor - Failed Typing in <hb$1: void onGranted()> at statement $u-1#47 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($u7#7): Is not cast compatible: boolean <-- [0..127]
[main] ERROR soot.jimple.toolkits.typing.fast.TypePromotionUseVisitor - Failed Typing in <com.nostra13.universalimageloader.core.decode.BaseImageDecoder: com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo defineExifOrientation(java.lang.String)> at statement specialinvoke $u5#15.<com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo: void <init>(int,boolean)>($u0#2, $u1#3): Is not cast compatible: boolean <-- [0..32767]
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] WARN soot.jimple.infoflow.android.SetupApplication - Aborted callback collection because of low memory
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] WARN soot.jimple.infoflow.android.SetupApplication - Callback analysis aborted early due to time or memory exhaustion
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 273 sources, 91 sinks, and 0 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 726 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on storagepath2-data/androidApps/2023-AndroZoo-PlayStore/com.kbins.kbinsure.apk with 273 sources and 91 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 14.832180959 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 158118 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] ERROR soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Constant <android.view.WindowManager$LayoutParams: int flags> was of unexpected type
[main] ERROR soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Constant <android.view.WindowManager$LayoutParams: int flags> was of unexpected type
[main] ERROR soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Constant <android.view.WindowManager$LayoutParams: int flags> was of unexpected type
[main] ERROR soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Constant <android.view.WindowManager$LayoutParams: int flags> was of unexpected type
[main] ERROR soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Constant <android.view.WindowManager$LayoutParams: int flags> was of unexpected type
[main] ERROR soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Constant <android.view.WindowManager$LayoutParams: int flags> was of unexpected type
[main] ERROR soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Constant <android.view.WindowManager$LayoutParams: int flags> was of unexpected type
[main] ERROR soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Constant <android.view.WindowManager$LayoutParams: int flags> was of unexpected type
[main] ERROR soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Constant <android.view.WindowManager$LayoutParams: int flags> was of unexpected type
[main] ERROR soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Constant <android.view.WindowManager$LayoutParams: int flags> was of unexpected type
[main] ERROR soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Constant <android.view.WindowManager$LayoutParams: int flags> was of unexpected type
[main] ERROR soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Constant <android.view.WindowManager$LayoutParams: int flags> was of unexpected type
[main] ERROR soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Constant <android.view.WindowManager$LayoutParams: int flags> was of unexpected type
[main] ERROR soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Constant <android.view.WindowManager$LayoutParams: int flags> was of unexpected type
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 135 sources and 104 sinks.
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper hits: 5416664
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper misses: 10329398
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - IFDS problem with 28541250 forward and 24244526 backward edges solved in 900 seconds, processing 20 results...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Current memory consumption: 24198 MB
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after cleanup: 6611 MB
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 1 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 2 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 3 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 4 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after path building: 6633 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Path reconstruction took 4 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1) in method <com.lumensoft.ks.k: void b(byte[])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryName()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryName()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubLocality()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubLocality()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r5 = virtualinvoke $r4.<android.telephony.TelephonyManager: java.lang.String getLine1Number()>() in method <sf: java.lang.String getPhoneNumber(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: java.lang.String getPhoneNumber(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<android.telephony.TelephonyManager: java.lang.String getLine1Number()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: java.lang.String getPhoneNumber(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: java.lang.String getPhoneNumber(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.ars.AgreementARS: void setUI()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5[$b2] = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.ars.AgreementARS: void setUI()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r8, $i0, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAdminArea()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAdminArea()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getPostalCode()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getPostalCode()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubAdminArea()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubAdminArea()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryCode()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryCode()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getThoroughfare()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getThoroughfare()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAddressLine(int)>($i0) in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAddressLine(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getLocality()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getLocality()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59) in method <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryName()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryName()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubLocality()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubLocality()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAdminArea()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAdminArea()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getPostalCode()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getPostalCode()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubAdminArea()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubAdminArea()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryCode()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryCode()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getThoroughfare()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getThoroughfare()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAddressLine(int)>($i0) in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAddressLine(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getLocality()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getLocality()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r91.<android.telephony.TelephonyManager: int getSimState()>() in method <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r91.<android.telephony.TelephonyManager: int getSimState()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.widget.JsonUtils: org.json.JSONArray arrayToJson(java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3[0] = $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.widget.JsonUtils: org.json.JSONArray arrayToJson(java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r11, $i4, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i0, $i1) in method <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0) in method <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: byte[] buf>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: byte[] buf>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r46.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r44, $i0, $i1) in method <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryName()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryName()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = (java.lang.String) $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5[$b1] = $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r8, $i0, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r44 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r46.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r44, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r0 = interfaceinvoke $r5.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r0, null) in method <sf: java.lang.String getSharedPreferencesString(java.lang.String,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: java.lang.String getSharedPreferencesString(java.lang.String,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = interfaceinvoke $r5.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r0, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: java.lang.String getSharedPreferencesString(java.lang.String,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.SplashScreen: boolean checkAdView()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4[0] = $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.SplashScreen: boolean checkAdView()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r44 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r46.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r44, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubLocality()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubLocality()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = (java.lang.String) $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5[$b1] = $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r8, $i0, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r44 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r46.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r44, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAdminArea()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAdminArea()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = (java.lang.String) $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5[$b1] = $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r8, $i0, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r44 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r46.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r44, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getPostalCode()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getPostalCode()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = (java.lang.String) $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5[$b1] = $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r8, $i0, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r44 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r46.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r44, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubAdminArea()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubAdminArea()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = (java.lang.String) $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5[$b1] = $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r8, $i0, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r44 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r46.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r44, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryCode()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryCode()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = (java.lang.String) $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5[$b1] = $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r8, $i0, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r44 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r46.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r44, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getThoroughfare()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getThoroughfare()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = (java.lang.String) $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5[$b1] = $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r8, $i0, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r44 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r46.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r44, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAddressLine(int)>($i0) in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAddressLine(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = (java.lang.String) $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5[$b1] = $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r8, $i0, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r44 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r46.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r44, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getLocality()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getLocality()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = (java.lang.String) $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5[$b1] = $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.MyWebView: void loadUrl(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r8, $i0, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r44 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hx: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r46.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r44, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r31.<java.io.BufferedOutputStream: void write(byte[])>($r11) in method <kr.co.deotis.wisemobile.common.WMCommonUtil: java.io.File downloadFile(java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>($r11) in method <kr.co.deotis.wisemobile.common.WMCommonUtil: java.io.File downloadFile(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: java.io.File downloadFile(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>($r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: java.io.File downloadFile(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r29.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r11, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: java.io.File downloadFile(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11 = virtualinvoke $r29.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: java.io.File downloadFile(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r31.<java.io.BufferedOutputStream: void write(byte[])>($r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i0, $i1) in method <com.bumptech.glide.disklrucache.StrictLineReader: java.lang.String readLine()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0) in method <com.bumptech.glide.disklrucache.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.bumptech.glide.disklrucache.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.bumptech.glide.disklrucache.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.bumptech.glide.disklrucache.StrictLineReader: byte[] buf>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.bumptech.glide.disklrucache.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.bumptech.glide.disklrucache.StrictLineReader: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.bumptech.glide.disklrucache.StrictLineReader: byte[] buf>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.bumptech.glide.disklrucache.StrictLineReader: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r3.<java.io.FileWriter: void write(java.lang.String)>($r1) in method <sf: void writeUUID(java.io.File,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryName()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryName()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.login.KBAgreementActivity: void actionAuthResult(tt)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = (java.lang.String) $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.login.KBAgreementActivity: void actionAuthResult(tt)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>(r0, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <sf: void writeUUID(java.io.File,java.lang.String)>($r8, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: void writeUUID(java.io.File,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.io.FileWriter: void write(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubLocality()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubLocality()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.SubContent$13: void onClick(android.view.View)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = (java.lang.String) $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.SubContent$13: void onClick(android.view.View)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>($r2, $r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <sf: void writeUUID(java.io.File,java.lang.String)>($r8, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: void writeUUID(java.io.File,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.io.FileWriter: void write(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAdminArea()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAdminArea()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.login.KakaoPayAgreementActivity: void kakaoReg(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.login.KakaoPayAgreementActivity: void kakaoReg(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = staticinvoke <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>(r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <sf: void writeUUID(java.io.File,java.lang.String)>($r8, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: void writeUUID(java.io.File,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.io.FileWriter: void write(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getPostalCode()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getPostalCode()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.SubContent$13: void onClick(android.view.View)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = (java.lang.String) $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.webview.SubContent$13: void onClick(android.view.View)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>($r2, $r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <sf: void writeUUID(java.io.File,java.lang.String)>($r8, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: void writeUUID(java.io.File,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.io.FileWriter: void write(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubAdminArea()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubAdminArea()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = staticinvoke <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>($r5, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <sf: void writeUUID(java.io.File,java.lang.String)>($r8, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: void writeUUID(java.io.File,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.io.FileWriter: void write(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryCode()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryCode()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.login.KakaoPayAgreementActivity: void kakaoReg(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.login.KakaoPayAgreementActivity: void kakaoReg(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = staticinvoke <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>(r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <sf: void writeUUID(java.io.File,java.lang.String)>($r8, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: void writeUUID(java.io.File,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.io.FileWriter: void write(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getThoroughfare()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getThoroughfare()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.login.KBAgreementActivity: void actionAuthResult(tt)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = (java.lang.String) $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.login.KBAgreementActivity: void actionAuthResult(tt)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>(r0, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <sf: void writeUUID(java.io.File,java.lang.String)>($r8, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: void writeUUID(java.io.File,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.io.FileWriter: void write(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAddressLine(int)>($i0) in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAddressLine(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.login.KakaoPayAgreementActivity: void kakaoReg(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.login.KakaoPayAgreementActivity: void kakaoReg(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = staticinvoke <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>(r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <sf: void writeUUID(java.io.File,java.lang.String)>($r8, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: void writeUUID(java.io.File,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.io.FileWriter: void write(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getLocality()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getLocality()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = staticinvoke <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>($r5, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: java.lang.String getDefaultUUID(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <sf: void writeUUID(java.io.File,java.lang.String)>($r8, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: void writeUUID(java.io.File,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.io.FileWriter: void write(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r20.<java.io.FileOutputStream: void write(byte[],int,int)>($r3, 0, $i8) in method <com.ahnlab.enginesdk.Updater: void backUpSuarezConf(java.lang.String,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i8 = virtualinvoke $r19.<java.io.FileInputStream: int read(byte[])>($r3) in method <com.ahnlab.enginesdk.Updater: void backUpSuarezConf(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ahnlab.enginesdk.Updater: void backUpSuarezConf(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i8 = virtualinvoke $r19.<java.io.FileInputStream: int read(byte[])>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ahnlab.enginesdk.Updater: void backUpSuarezConf(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r20.<java.io.FileOutputStream: void write(byte[],int,int)>($r3, 0, $i8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r29.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r11, 0, $i0) in method <kr.co.deotis.wisemobile.common.WMCommonUtil: java.io.File downloadFile(java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>($r11) in method <kr.co.deotis.wisemobile.common.WMCommonUtil: java.io.File downloadFile(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: java.io.File downloadFile(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>($r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: java.io.File downloadFile(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r29.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r11, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r15.<java.io.BufferedWriter: void write(java.lang.String)>($r0) in method <kr.co.deotis.wisemobile.common.WMCommonUtil: byte[] downloadKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r6 = interfaceinvoke $r9.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("REGISTRATION_ID", "") in method <kr.co.deotis.wiseportal.library.service.WMService: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wiseportal.library.service.WMService: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = interfaceinvoke $r9.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("REGISTRATION_ID", "")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wiseportal.library.service.WMService: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = staticinvoke <kr.co.deotis.wisemobile.common.WMCommonUtil: byte[] downloadKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r12, $r6, $r13, $r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: byte[] downloadKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("phone_id", $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: byte[] downloadKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <kr.co.deotis.wiseportal.library.common.WMPCommon: java.lang.String getParameterString(java.util.Map)>($r18)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wiseportal.library.common.WMPCommon: java.lang.String getParameterString(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wiseportal.library.common.WMPCommon: java.lang.String getParameterString(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = (java.lang.String) $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wiseportal.library.common.WMPCommon: java.lang.String getParameterString(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wiseportal.library.common.WMPCommon: java.lang.String getParameterString(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wiseportal.library.common.WMPCommon: java.lang.String getParameterString(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: byte[] downloadKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r15.<java.io.BufferedWriter: void write(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59) in method <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryName()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryName()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubLocality()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubLocality()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAdminArea()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAdminArea()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getPostalCode()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getPostalCode()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubAdminArea()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubAdminArea()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryCode()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryCode()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getThoroughfare()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getThoroughfare()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAddressLine(int)>($i0) in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAddressLine(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getLocality()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getLocality()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = (java.lang.String) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <rg: android.content.Intent getIntentParam(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>(null, $i0, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r91.<android.telephony.TelephonyManager: int getSimState()>() in method <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r91.<android.telephony.TelephonyManager: int getSimState()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.widget.JsonUtils: org.json.JSONArray arrayToJson(java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3[0] = $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.widget.JsonUtils: org.json.JSONArray arrayToJson(java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r11, $i4, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r59 = (byte[]) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1) in method <com.lumensoft.ks.k: void b(byte[])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryName()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryName()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubLocality()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubLocality()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r5 = virtualinvoke $r4.<android.telephony.TelephonyManager: java.lang.String getLine1Number()>() in method <sf: java.lang.String getPhoneNumber(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: java.lang.String getPhoneNumber(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<android.telephony.TelephonyManager: java.lang.String getLine1Number()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: java.lang.String getPhoneNumber(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <sf: java.lang.String getPhoneNumber(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.ars.AgreementARS: void setUI()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5[$b2] = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.ars.AgreementARS: void setUI()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r8, $i0, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAdminArea()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAdminArea()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getPostalCode()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getPostalCode()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubAdminArea()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getSubAdminArea()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryCode()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryCode()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getThoroughfare()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getThoroughfare()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAddressLine(int)>($i0) in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getAddressLine(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getLocality()>() in method <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getLocality()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8[0] = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.kbins.kbinsure.MenuActivity: void setTopMenuVisibility()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = staticinvoke <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r4, $i0, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <hz: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r107 = virtualinvoke $r108.<com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>($r109, $r110, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r0.<com.lumensoft.icrp.KSICRProtocol: byte[] a(java.lang.String,java.lang.String,byte[])>("S1", $r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>($r2, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, 12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("USERRANDOMVALUE", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: java.util.Hashtable a(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("INDEX")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (byte[]) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 4, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.a: byte[] a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.icrp.KSICRProtocol: java.util.Hashtable export1(byte[],byte[],java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<com.lumensoft.ks.k: void b(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.lumensoft.ks.k: void b(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r33.<java.io.FileOutputStream: void write(byte[],int,int)>($r10, 0, $i4) in method <com.ahnlab.enginesdk.Updater: void setupSuarez(java.lang.String,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i4 = virtualinvoke $r29.<java.util.zip.ZipInputStream: int read(byte[])>($r10) in method <com.ahnlab.enginesdk.Updater: void setupSuarez(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ahnlab.enginesdk.Updater: void setupSuarez(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = virtualinvoke $r29.<java.util.zip.ZipInputStream: int read(byte[])>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ahnlab.enginesdk.Updater: void setupSuarez(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r33.<java.io.FileOutputStream: void write(byte[],int,int)>($r10, 0, $i4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i2) in method <com.ahnlab.enginesdk.SDKUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i2 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r2) in method <com.ahnlab.enginesdk.SDKUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ahnlab.enginesdk.SDKUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i2 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ahnlab.enginesdk.SDKUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3) in method <com.bumptech.glide.disklrucache.StrictLineReader: java.lang.String readLine()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0) in method <com.bumptech.glide.disklrucache.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.bumptech.glide.disklrucache.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.bumptech.glide.disklrucache.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.bumptech.glide.disklrucache.StrictLineReader: byte[] buf>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.bumptech.glide.disklrucache.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.bumptech.glide.disklrucache.StrictLineReader: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.bumptech.glide.disklrucache.StrictLineReader: byte[] buf>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.bumptech.glide.disklrucache.StrictLineReader: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r15.<java.io.BufferedWriter: void write(java.lang.String)>($r0) in method <kr.co.deotis.wisemobile.common.WMCommonUtil: byte[] downloadKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r6 = interfaceinvoke $r9.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("REGISTRATION_ID", "") in method <kr.co.deotis.wiseportal.library.service.WMService: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wiseportal.library.service.WMService: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = interfaceinvoke $r9.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("REGISTRATION_ID", "")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wiseportal.library.service.WMService: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = staticinvoke <kr.co.deotis.wisemobile.common.WMCommonUtil: byte[] downloadKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r12, $r6, $r13, $r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: byte[] downloadKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("phone_id", $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: byte[] downloadKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <kr.co.deotis.wiseportal.library.common.WMPCommon: java.lang.String getParameterString(java.util.Map)>($r18)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wiseportal.library.common.WMPCommon: java.lang.String getParameterString(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wiseportal.library.common.WMPCommon: java.lang.String getParameterString(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = (java.lang.String) $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wiseportal.library.common.WMPCommon: java.lang.String getParameterString(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wiseportal.library.common.WMPCommon: java.lang.String getParameterString(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wiseportal.library.common.WMPCommon: java.lang.String getParameterString(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: byte[] downloadKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r15.<java.io.BufferedWriter: void write(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r31.<java.io.BufferedOutputStream: void write(byte[])>($r11) in method <kr.co.deotis.wisemobile.common.WMCommonUtil: java.io.File downloadFile(java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>($r11) in method <kr.co.deotis.wisemobile.common.WMCommonUtil: java.io.File downloadFile(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: java.io.File downloadFile(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>($r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: java.io.File downloadFile(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r29.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r11, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: java.io.File downloadFile(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11 = virtualinvoke $r29.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: java.io.File downloadFile(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r31.<java.io.BufferedOutputStream: void write(byte[])>($r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3) in method <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0) in method <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: byte[] buf>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: byte[] buf>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r15.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r6, 0, $i0) in method <com.softforum.xecure.util.XUtil: void copyAssetsToApp(android.content.Context,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r14.<java.io.BufferedInputStream: int read(byte[],int,int)>($r6, 0, 2048) in method <com.softforum.xecure.util.XUtil: void copyAssetsToApp(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.softforum.xecure.util.XUtil: void copyAssetsToApp(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r14.<java.io.BufferedInputStream: int read(byte[],int,int)>($r6, 0, 2048)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.softforum.xecure.util.XUtil: void copyAssetsToApp(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r15.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r6, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i3) in method <com.nostra13.universalimageloader.utils.IoUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i3 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0) in method <com.nostra13.universalimageloader.utils.IoUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.utils.IoUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i3 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.utils.IoUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, $i0, $i1) in method <com.nostra13.universalimageloader.core.assist.ContentLengthInputStream: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.core.assist.ContentLengthInputStream: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.core.assist.ContentLengthInputStream: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.utils.IoUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r22.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r21, 0, $i0) in method <kr.co.deotis.wisemobile.common.WMCommonUtil: byte[] downloadKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r19.<java.io.InputStream: int read(byte[])>($r21) in method <kr.co.deotis.wisemobile.common.WMCommonUtil: byte[] downloadKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: byte[] downloadKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r19.<java.io.InputStream: int read(byte[])>($r21)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <kr.co.deotis.wisemobile.common.WMCommonUtil: byte[] downloadKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r22.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r21, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Data flow solver took 935 seconds. Maximum memory consumption: 24198 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication - Found 21 leaks
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'SummaryStatistics'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Telemetry'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'Telemetry_sha256Hash_idx' for table 'Telemetry
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Callbacks'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallbackSummaries'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'CallbackSummaries_sha256Hash_idx' for table 'CallbackSummaries
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'AppSizes'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'AppSizes_sha256Hash_idx' for table 'AppSizes
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallgraphSizes'
