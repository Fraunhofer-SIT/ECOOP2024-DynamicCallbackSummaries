Source: $i3 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1)
$i3 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1) in <f.g.b.j.b: int read(byte[],int,int)>
Sink: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i0) in <f.g.b.g.j: long a(java.io.InputStream,java.io.OutputStream)>

<f.g.b.j.b: int read(byte[],int,int)>: $i3 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1)
<f.g.b.j.b: int read(byte[],int,int)>: r0 := @this: f.g.b.j.b
<f.g.b.j.b: int read(byte[])>: r0 := @this: f.g.b.j.b
<f.g.b.g.f: boolean f()>: $r2 = r0.<f.g.b.g.f: byte[] b>
<f.g.b.g.f: boolean f()>: return 0
<f.g.b.g.f: int read(byte[],int,int)>: $r2 = r0.<f.g.b.g.f: byte[] b>
<f.g.b.g.f: int read(byte[],int,int)>: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, $r1, $i0, $i1)
<f.g.b.g.f: int read(byte[],int,int)>: return $i1
<f.g.b.g.j: long a(java.io.InputStream,java.io.OutputStream)>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i0)
