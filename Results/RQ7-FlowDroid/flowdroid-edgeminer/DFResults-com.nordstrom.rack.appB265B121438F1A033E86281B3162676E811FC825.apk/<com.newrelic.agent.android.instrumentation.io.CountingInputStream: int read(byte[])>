    public int read(byte[]) throws java.io.IOException
    {
        java.lang.Throwable $r5, $r7;
        byte[] $r1;
        com.newrelic.agent.android.instrumentation.io.CountingInputStream r0;
        long $l0, $l3;
        java.nio.ByteBuffer $r2, $r4;
        int $i1, $i2, $i4;
        java.lang.String $r9;
        boolean $z0;
        java.io.PrintStream $r10;
        java.io.IOException $r3, $r12;
        java.lang.Exception $r14;
        com.newrelic.agent.android.logging.AgentLog $r8;
        java.lang.StringBuilder $r11, $r13;
        java.io.InputStream $r6;

        r0 := @this: com.newrelic.agent.android.instrumentation.io.CountingInputStream;

        $r1 := @parameter0: byte[];

        $i1 = lengthof $r1;

        $z0 = r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: boolean enableBuffering>;

        $i2 = 0;

        if $z0 == 0 goto label10;

        $r2 = r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: java.nio.ByteBuffer buffer>;

        entermonitor $r2;

        $l0 = (long) $i1;

     label01:
        $z0 = specialinvoke r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: boolean bufferHasBytes(long)>($l0);

        if $z0 == 0 goto label04;

        $i2 = specialinvoke r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: int readBufferBytes(byte[])>($r1);

        if $i2 < 0 goto label03;

        $l3 = r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: long count>;

        $l0 = (long) $i2;

        $l0 = $l3 + $l0;

        r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: long count> = $l0;

        exitmonitor $r2;

     label02:
        return $i2;

     label03:
        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("readBufferBytes failed");

        throw $r12;

     label04:
        $r4 = r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: java.nio.ByteBuffer buffer>;

        $i4 = virtualinvoke $r4.<java.nio.ByteBuffer: int remaining()>();

        if $i4 <= 0 goto label06;

        $i4 = specialinvoke r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: int readBufferBytes(byte[],int,int)>($r1, 0, $i4);

        $i2 = $i4;

        if $i4 < 0 goto label05;

        $i1 = $i1 - $i4;

        $l3 = r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: long count>;

        $l0 = (long) $i4;

        $l0 = $l3 + $l0;

        r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: long count> = $l0;

        goto label06;

     label05:
        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("partial read from buffer failed");

        throw $r12;

     label06:
        exitmonitor $r2;

     label07:
        goto label10;

     label08:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label09:
        throw $r5;

     label10:
        $r6 = r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: java.io.InputStream impl>;

     label11:
        $i1 = virtualinvoke $r6.<java.io.InputStream: int read(byte[],int,int)>($r1, $i2, $i1);

     label12:
        if $i1 < 0 goto label13;

        $l0 = r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: long count>;

        $l3 = (long) $i1;

        $l0 = $l0 + $l3;

        r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: long count> = $l0;

        $i2 = $i1 + $i2;

        return $i2;

     label13:
        if $i2 > 0 goto label16;

     label14:
        specialinvoke r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: void notifyStreamComplete()>();

     label15:
        return $i1;

     label16:
        return $i2;

     label17:
        $r7 := @caughtexception;

        $r8 = <com.newrelic.agent.android.instrumentation.io.CountingInputStream: com.newrelic.agent.android.logging.AgentLog log>;

        $r3 = (java.io.IOException) $r7;

        $r9 = virtualinvoke $r3.<java.io.IOException: java.lang.String toString()>();

        interfaceinvoke $r8.<com.newrelic.agent.android.logging.AgentLog: void error(java.lang.String)>($r9);

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOTIFY STREAM ERROR: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r3 = (java.io.IOException) $r7;

        virtualinvoke $r3.<java.io.IOException: void printStackTrace()>();

        $r14 = (java.lang.Exception) $r7;

        specialinvoke r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: void notifyStreamError(java.lang.Exception)>($r14);

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.io.IOException from label11 to label12 with label17;
        catch java.io.IOException from label14 to label15 with label17;
    }
