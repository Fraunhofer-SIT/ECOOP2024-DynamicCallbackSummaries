    private boolean a(java.io.OutputStream, java.io.InputStream)
    {
        java.io.OutputStream $r2;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10;
        com.tuya.smart.ipc.localphotovideo.utils.MediaStoreManager r0;
        byte[] $r3;
        java.io.IOException $r5, $r11;
        int $i0;
        java.util.concurrent.ExecutorService $r4;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: com.tuya.smart.ipc.localphotovideo.utils.MediaStoreManager;

        $r2 := @parameter0: java.io.OutputStream;

        $r1 := @parameter1: java.io.InputStream;

        if $r2 == null goto label25;

        if $r1 != null goto label01;

        return 0;

     label01:
        $r3 = newarray (byte)[1444];

     label02:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r3);

     label03:
        if $i0 == -1 goto label12;

     label04:
        $r4 = r0.<com.tuya.smart.ipc.localphotovideo.utils.MediaStoreManager: java.util.concurrent.ExecutorService a>;

     label05:
        $z0 = interfaceinvoke $r4.<java.util.concurrent.ExecutorService: boolean isShutdown()>();

     label06:
        if $z0 != 0 goto label09;

     label07:
        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0);

        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

     label08:
        goto label02;

     label09:
        staticinvoke <com.tuya.smart.camera.utils.t: void c(java.lang.String,java.lang.String)>("MediaStoreManager", "ExecutorService is shutdown!!");

     label10:
        $r11 = new java.io.IOException;

     label11:
        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("ExecutorService is shutdown!!");

        throw $r11;

     label12:
        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label13:
        return 1;

     label14:
        $r6 := @caughtexception;

        $r5 = (java.io.IOException) $r6;

        virtualinvoke $r5.<java.io.IOException: void printStackTrace()>();

        return 1;

     label15:
        $r7 := @caughtexception;

        goto label21;

     label16:
        $r8 := @caughtexception;

     label17:
        $r5 = (java.io.IOException) $r8;

        virtualinvoke $r5.<java.io.IOException: void printStackTrace()>();

     label18:
        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label19:
        return 0;

     label20:
        $r9 := @caughtexception;

        $r5 = (java.io.IOException) $r9;

        virtualinvoke $r5.<java.io.IOException: void printStackTrace()>();

        return 0;

     label21:
        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label22:
        goto label24;

     label23:
        $r10 := @caughtexception;

        $r5 = (java.io.IOException) $r10;

        virtualinvoke $r5.<java.io.IOException: void printStackTrace()>();

     label24:
        throw $r7;

     label25:
        return 0;

        catch java.io.IOException from label02 to label03 with label16;
        catch java.io.IOException from label05 to label06 with label16;
        catch java.io.IOException from label07 to label08 with label16;
        catch java.io.IOException from label09 to label10 with label16;
        catch java.io.IOException from label11 to label12 with label16;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label17 to label18 with label15;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.io.IOException from label21 to label22 with label23;
    }
