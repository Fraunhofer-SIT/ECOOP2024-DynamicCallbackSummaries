    public static com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity, int)
    {
        java.lang.Throwable r15, r16, r17, r18, r19;
        java.lang.IllegalStateException $r21;
        java.lang.Object[] $r12;
        com.actionbarsherlock.ActionBarSherlock$Implementation r5;
        java.util.HashMap $r1, $r20;
        java.lang.reflect.Constructor $r11;
        java.lang.Integer $r13;
        int $i0, i1, $i2, $i3;
        boolean z0, $z1;
        java.util.Iterator $r3;
        java.util.Collection $r8;
        java.util.Set $r2;
        java.lang.Class[] $r10;
        java.lang.RuntimeException $r22;
        android.util.DisplayMetrics $r7;
        com.actionbarsherlock.ActionBarSherlock $r14;
        java.lang.Object $r4;
        java.lang.Class r9;
        android.app.Activity $r0;
        android.content.res.Resources $r6;

        $r0 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $r20 = new java.util.HashMap;

        $r1 = <com.actionbarsherlock.ActionBarSherlock: java.util.HashMap IMPLEMENTATIONS>;

        specialinvoke $r20.<java.util.HashMap: void <init>(java.util.Map)>($r1);

        z0 = 0;

        $r2 = virtualinvoke $r20.<java.util.HashMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label02;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.actionbarsherlock.ActionBarSherlock$Implementation) $r4;

        $i2 = interfaceinvoke r5.<com.actionbarsherlock.ActionBarSherlock$Implementation: int dpi()>();

        if $i2 != 213 goto label01;

        z0 = 1;

     label02:
        if z0 == 0 goto label08;

        $r6 = virtualinvoke $r0.<android.app.Activity: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i2 = $r7.<android.util.DisplayMetrics: int densityDpi>;

        if $i2 != 213 goto label07;

        z0 = 1;

     label03:
        $r2 = virtualinvoke $r20.<java.util.HashMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.actionbarsherlock.ActionBarSherlock$Implementation) $r4;

        $i2 = interfaceinvoke r5.<com.actionbarsherlock.ActionBarSherlock$Implementation: int dpi()>();

        if z0 == 0 goto label05;

        if $i2 != 213 goto label06;

     label05:
        if z0 != 0 goto label04;

        if $i2 != 213 goto label04;

     label06:
        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        goto label04;

     label07:
        z0 = 0;

        goto label03;

     label08:
        z0 = 0;

        $r2 = virtualinvoke $r20.<java.util.HashMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.actionbarsherlock.ActionBarSherlock$Implementation) $r4;

        $i2 = interfaceinvoke r5.<com.actionbarsherlock.ActionBarSherlock$Implementation: int api()>();

        if $i2 == -1 goto label09;

        z0 = 1;

     label10:
        if z0 == 0 goto label15;

        i1 = <android.os.Build$VERSION: int SDK_INT>;

        $i2 = 0;

        $r2 = virtualinvoke $r20.<java.util.HashMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if z0 == 0 goto label13;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.actionbarsherlock.ActionBarSherlock$Implementation) $r4;

        $i3 = interfaceinvoke r5.<com.actionbarsherlock.ActionBarSherlock$Implementation: int api()>();

        if $i3 <= i1 goto label12;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        goto label11;

     label12:
        if $i3 <= $i2 goto label11;

        $i2 = $i3;

        goto label11;

     label13:
        $r2 = virtualinvoke $r20.<java.util.HashMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if z0 == 0 goto label15;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.actionbarsherlock.ActionBarSherlock$Implementation) $r4;

        i1 = interfaceinvoke r5.<com.actionbarsherlock.ActionBarSherlock$Implementation: int api()>();

        if i1 == $i2 goto label14;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        goto label14;

     label15:
        $i2 = virtualinvoke $r20.<java.util.HashMap: int size()>();

        if $i2 <= 1 goto label16;

        $r21 = new java.lang.IllegalStateException;

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("More than one implementation matches configuration.");

        throw $r21;

     label16:
        z0 = virtualinvoke $r20.<java.util.HashMap: boolean isEmpty()>();

        if z0 == 0 goto label17;

        $r21 = new java.lang.IllegalStateException;

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No implementations match configuration.");

        throw $r21;

     label17:
        $r8 = virtualinvoke $r20.<java.util.HashMap: java.util.Collection values()>();

        $r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.Class) $r4;

        $r10 = <com.actionbarsherlock.ActionBarSherlock: java.lang.Class[] CONSTRUCTOR_ARGS>;

     label18:
        $r11 = virtualinvoke r9.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r10);

     label19:
        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = $r0;

     label20:
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

     label21:
        $r12[1] = $r13;

     label22:
        $r4 = virtualinvoke $r11.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r12);

     label23:
        $r14 = (com.actionbarsherlock.ActionBarSherlock) $r4;

        return $r14;

     label24:
        r15 := @caughtexception;

        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r15);

        throw $r22;

     label25:
        r16 := @caughtexception;

        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r16);

        throw $r22;

     label26:
        r17 := @caughtexception;

        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r17);

        throw $r22;

     label27:
        r18 := @caughtexception;

        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r18);

        throw $r22;

     label28:
        r19 := @caughtexception;

        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r19);

        throw $r22;

        catch java.lang.NoSuchMethodException from label18 to label19 with label24;
        catch java.lang.NoSuchMethodException from label20 to label21 with label24;
        catch java.lang.NoSuchMethodException from label22 to label23 with label24;
        catch java.lang.IllegalArgumentException from label18 to label19 with label25;
        catch java.lang.IllegalArgumentException from label20 to label21 with label25;
        catch java.lang.IllegalArgumentException from label22 to label23 with label25;
        catch java.lang.InstantiationException from label18 to label19 with label26;
        catch java.lang.InstantiationException from label20 to label21 with label26;
        catch java.lang.InstantiationException from label22 to label23 with label26;
        catch java.lang.IllegalAccessException from label18 to label19 with label27;
        catch java.lang.IllegalAccessException from label20 to label21 with label27;
        catch java.lang.IllegalAccessException from label22 to label23 with label27;
        catch java.lang.reflect.InvocationTargetException from label18 to label19 with label28;
        catch java.lang.reflect.InvocationTargetException from label20 to label21 with label28;
        catch java.lang.reflect.InvocationTargetException from label22 to label23 with label28;
    }
