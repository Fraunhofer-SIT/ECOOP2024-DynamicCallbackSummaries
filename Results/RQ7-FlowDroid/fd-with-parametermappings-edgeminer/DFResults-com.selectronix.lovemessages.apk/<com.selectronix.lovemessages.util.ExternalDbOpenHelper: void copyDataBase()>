    private void copyDataBase()
    {
        android.content.Context $r1;
        byte[] $r7;
        java.io.FileOutputStream $r6;
        android.content.res.AssetManager $r2;
        int $i0;
        java.lang.StringBuilder $r5;
        java.lang.String $r3;
        com.selectronix.lovemessages.util.ExternalDbOpenHelper r0;
        java.io.InputStream $r4;

        r0 := @this: com.selectronix.lovemessages.util.ExternalDbOpenHelper;

        $r1 = r0.<com.selectronix.lovemessages.util.ExternalDbOpenHelper: android.content.Context context>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r3 = <com.selectronix.lovemessages.util.ExternalDbOpenHelper: java.lang.String DB_NAME>;

        $r4 = virtualinvoke $r2.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r3 = <com.selectronix.lovemessages.util.ExternalDbOpenHelper: java.lang.String DB_PATH>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = <com.selectronix.lovemessages.util.ExternalDbOpenHelper: java.lang.String DB_NAME>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.io.FileOutputStream;

        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.lang.String)>($r3);

        $r7 = newarray (byte)[1024];

     label1:
        $i0 = virtualinvoke $r4.<java.io.InputStream: int read(byte[])>($r7);

        if $i0 <= 0 goto label2;

        virtualinvoke $r6.<java.io.OutputStream: void write(byte[],int,int)>($r7, 0, $i0);

        goto label1;

     label2:
        virtualinvoke $r6.<java.io.OutputStream: void close()>();

        virtualinvoke $r4.<java.io.InputStream: void close()>();

        return;
    }
