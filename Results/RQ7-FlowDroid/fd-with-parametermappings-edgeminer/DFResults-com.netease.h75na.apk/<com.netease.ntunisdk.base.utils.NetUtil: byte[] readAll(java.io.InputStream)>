    public static byte[] readAll(java.io.InputStream)
    {
        java.lang.Throwable $r2;
        byte[] $r0;
        java.io.ByteArrayOutputStream $r3;
        int $i0;
        java.io.IOException $r4;
        java.io.InputStream $r1;

        $r1 := @parameter0: java.io.InputStream;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        $r0 = newarray (byte)[16384];

     label1:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r0, 0, 16384);

     label2:
        if $i0 == -1 goto label5;

     label3:
        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r0, 0, $i0);

     label4:
        goto label1;

     label5:
        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void flush()>();

     label6:
        goto label8;

     label7:
        $r2 := @caughtexception;

        $r4 = (java.io.IOException) $r2;

        virtualinvoke $r4.<java.io.IOException: void printStackTrace()>();

     label8:
        $r0 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r0;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }
