    public void addEvents(com.facebook.appevents.AccessTokenAppIdPair, java.util.List)
    {
        java.lang.Throwable $r6;
        java.util.HashMap $r3;
        java.util.List $r1, $r5;
        com.facebook.appevents.AccessTokenAppIdPair $r2;
        java.lang.Object $r4;
        com.facebook.appevents.PersistedEvents r0;
        boolean $z0;

        r0 := @this: com.facebook.appevents.PersistedEvents;

        $r2 := @parameter0: com.facebook.appevents.AccessTokenAppIdPair;

        $r1 := @parameter1: java.util.List;

        $z0 = staticinvoke <com.facebook.internal.instrument.crashshield.CrashShieldHandler: boolean isObjectCrashing(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.facebook.appevents.PersistedEvents: java.util.HashMap events>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

     label2:
        if $z0 != 0 goto label5;

     label3:
        $r3 = r0.<com.facebook.appevents.PersistedEvents: java.util.HashMap events>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

     label4:
        return;

     label5:
        $r3 = r0.<com.facebook.appevents.PersistedEvents: java.util.HashMap events>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (java.util.List) $r4;

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r1);

     label6:
        return;

     label7:
        $r6 := @caughtexception;

        staticinvoke <com.facebook.internal.instrument.crashshield.CrashShieldHandler: void handleThrowable(java.lang.Throwable,java.lang.Object)>($r6, r0);

        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }
