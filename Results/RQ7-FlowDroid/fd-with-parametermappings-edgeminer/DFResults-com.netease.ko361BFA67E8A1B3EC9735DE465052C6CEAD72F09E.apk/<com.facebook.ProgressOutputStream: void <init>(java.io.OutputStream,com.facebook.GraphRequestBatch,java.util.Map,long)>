    public void <init>(java.io.OutputStream, com.facebook.GraphRequestBatch, java.util.Map, long)
    {
        java.io.OutputStream $r3;
        com.facebook.FacebookSdk $r4;
        com.facebook.ProgressOutputStream r0;
        com.facebook.GraphRequestBatch $r1;
        java.util.Map $r2;
        long $l0;

        r0 := @this: com.facebook.ProgressOutputStream;

        $r3 := @parameter0: java.io.OutputStream;

        $r1 := @parameter1: com.facebook.GraphRequestBatch;

        $r2 := @parameter2: java.util.Map;

        $l0 := @parameter3: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "out");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "requests");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "progressMap");

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r3);

        r0.<com.facebook.ProgressOutputStream: com.facebook.GraphRequestBatch requests> = $r1;

        r0.<com.facebook.ProgressOutputStream: java.util.Map progressMap> = $r2;

        r0.<com.facebook.ProgressOutputStream: long maxProgress> = $l0;

        $r4 = <com.facebook.FacebookSdk: com.facebook.FacebookSdk INSTANCE>;

        $l0 = staticinvoke <com.facebook.FacebookSdk: long getOnProgressThreshold()>();

        r0.<com.facebook.ProgressOutputStream: long threshold> = $l0;

        return;
    }
