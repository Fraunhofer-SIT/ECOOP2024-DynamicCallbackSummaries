    public static java.lang.String unzipCopyFromAssets(android.content.Context, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r15, $r16, $r17, $r18, $r19, $r20;
        android.content.Context $r3;
        byte[] $r13;
        java.util.zip.ZipInputStream $r9, $r22;
        java.io.BufferedInputStream $r21;
        long $l0;
        android.content.res.AssetManager $r7;
        int $i1;
        java.lang.String $r4, $r5, $r6, $r11, $r12;
        java.util.zip.ZipEntry $r10;
        boolean $z0;
        java.io.FileOutputStream $r25;
        java.io.IOException $r26;
        java.lang.Exception $r0, $r1, $r2;
        java.io.File $r24;
        com.netease.ntunisdk.ngplugin.utils.CommonRes $r14;
        java.lang.StringBuilder $r23;
        java.io.InputStream $r8;

        $r3 := @parameter0: android.content.Context;

        $r4 := @parameter1: java.lang.String;

        $r5 := @parameter2: java.lang.String;

        $r6 := @parameter3: java.lang.String;

     label01:
        $r7 = virtualinvoke $r3.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r8 = virtualinvoke $r7.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r4);

     label02:
        $r22 = new java.util.zip.ZipInputStream;

     label03:
        $r9 = $r22;

     label04:
        $r21 = new java.io.BufferedInputStream;

     label05:
        specialinvoke $r21.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r8);

        specialinvoke $r22.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>($r21);

     label06:
        $r10 = virtualinvoke $r22.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>();

     label07:
        if $r10 == null goto label43;

     label08:
        $r11 = virtualinvoke $r10.<java.util.zip.ZipEntry: java.lang.String getName()>();

     label09:
        $r23 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unzip, name:");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", size:");

        $l0 = virtualinvoke $r10.<java.util.zip.ZipEntry: long getSize()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r12 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.netease.ntunisdk.ngplugin.common.PluginLogger: void detail(java.lang.String)>($r12);

        $z0 = virtualinvoke $r11.<java.lang.String: boolean contains(java.lang.CharSequence)>("AndroidManifest.xml");

     label11:
        if $z0 != 0 goto label39;

     label12:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r6);

     label13:
        if $z0 != 0 goto label39;

     label14:
        $z0 = virtualinvoke $r10.<java.util.zip.ZipEntry: boolean isDirectory()>();

     label15:
        if $z0 != 0 goto label06;

     label16:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r11);

     label17:
        if $z0 != 0 goto label06;

     label18:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean endsWith(java.lang.String)>($r6);

     label19:
        if $z0 == 0 goto label06;

     label20:
        $r24 = new java.io.File;

     label21:
        specialinvoke $r24.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r5, $r6);

        $z0 = virtualinvoke $r24.<java.io.File: boolean exists()>();

     label22:
        if $z0 == 0 goto label26;

     label23:
        $z0 = virtualinvoke $r24.<java.io.File: boolean delete()>();

     label24:
        $r23 = new java.lang.StringBuilder;

     label25:
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delete result: ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.netease.ntunisdk.ngplugin.common.PluginLogger: void detail(java.lang.String)>($r6);

     label26:
        $r13 = newarray (byte)[1024];

     label27:
        $r25 = new java.io.FileOutputStream;

     label28:
        specialinvoke $r25.<java.io.FileOutputStream: void <init>(java.io.File)>($r24);

     label29:
        $i1 = virtualinvoke $r22.<java.util.zip.ZipInputStream: int read(byte[],int,int)>($r13, 0, 1024);

     label30:
        if $i1 <= 0 goto label33;

     label31:
        virtualinvoke $r25.<java.io.OutputStream: void write(byte[],int,int)>($r13, 0, $i1);

     label32:
        goto label29;

     label33:
        virtualinvoke $r25.<java.io.OutputStream: void flush()>();

        virtualinvoke $r25.<java.io.OutputStream: void close()>();

        $r14 = staticinvoke <com.netease.ntunisdk.ngplugin.utils.CommonRes: com.netease.ntunisdk.ngplugin.utils.CommonRes getInstance()>();

        $z0 = virtualinvoke $r14.<com.netease.ntunisdk.ngplugin.utils.CommonRes: boolean copyFontFormAssets(android.content.Context,java.lang.String,java.lang.String)>($r3, $r5, $r4);

     label34:
        $r23 = new java.lang.StringBuilder;

     label35:
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loadFontResult : ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.netease.ntunisdk.ngplugin.common.PluginLogger: void detail(java.lang.String)>($r4);

        $r4 = virtualinvoke $r24.<java.io.File: java.lang.String getAbsolutePath()>();

     label36:
        virtualinvoke $r22.<java.util.zip.ZipInputStream: void close()>();

     label37:
        return $r4;

     label38:
        $r15 := @caughtexception;

        $r26 = (java.io.IOException) $r15;

        virtualinvoke $r26.<java.io.IOException: void printStackTrace()>();

        return $r4;

     label39:
        $r4 = staticinvoke <com.netease.ntunisdk.ngplugin.utils.PluginFileUtils: java.lang.String copyPluginFromAssets(android.content.Context,java.lang.String)>($r3, $r4);

     label40:
        virtualinvoke $r22.<java.util.zip.ZipInputStream: void close()>();

     label41:
        return $r4;

     label42:
        $r16 := @caughtexception;

        $r26 = (java.io.IOException) $r16;

        virtualinvoke $r26.<java.io.IOException: void printStackTrace()>();

        return $r4;

     label43:
        virtualinvoke $r22.<java.util.zip.ZipInputStream: void close()>();

     label44:
        return null;

     label45:
        $r17 := @caughtexception;

        $r26 = (java.io.IOException) $r17;

        virtualinvoke $r26.<java.io.IOException: void printStackTrace()>();

        return null;

     label46:
        $r18 := @caughtexception;

        goto label48;

     label47:
        $r18 := @caughtexception;

        $r9 = null;

     label48:
        if $r9 == null goto label52;

     label49:
        virtualinvoke $r9.<java.util.zip.ZipInputStream: void close()>();

     label50:
        goto label52;

     label51:
        $r19 := @caughtexception;

        $r26 = (java.io.IOException) $r19;

        virtualinvoke $r26.<java.io.IOException: void printStackTrace()>();

     label52:
        throw $r18;

     label53:
        $r9 = null;

     label54:
        if $r9 == null goto label61;

     label55:
        virtualinvoke $r9.<java.util.zip.ZipInputStream: void close()>();

     label56:
        return null;

     label57:
        $r20 := @caughtexception;

        $r26 = (java.io.IOException) $r20;

        virtualinvoke $r26.<java.io.IOException: void printStackTrace()>();

        return null;

     label58:
        $r0 := @caughtexception;

        goto label53;

     label59:
        $r1 := @caughtexception;

        goto label54;

     label60:
        $r2 := @caughtexception;

        goto label54;

     label61:
        return null;

        catch java.lang.Exception from label01 to label02 with label58;
        catch java.lang.Exception from label05 to label06 with label58;
        catch java.lang.Throwable from label01 to label03 with label47;
        catch java.lang.Throwable from label04 to label05 with label47;
        catch java.lang.Throwable from label05 to label06 with label47;
        catch java.lang.Exception from label06 to label07 with label59;
        catch java.lang.Exception from label08 to label09 with label59;
        catch java.lang.Exception from label10 to label11 with label59;
        catch java.lang.Exception from label12 to label13 with label59;
        catch java.lang.Exception from label14 to label15 with label59;
        catch java.lang.Exception from label16 to label17 with label59;
        catch java.lang.Exception from label18 to label19 with label59;
        catch java.lang.Exception from label21 to label22 with label59;
        catch java.lang.Exception from label23 to label24 with label59;
        catch java.lang.Exception from label25 to label26 with label59;
        catch java.lang.Exception from label28 to label30 with label59;
        catch java.lang.Exception from label31 to label32 with label59;
        catch java.lang.Exception from label33 to label34 with label59;
        catch java.lang.Exception from label35 to label36 with label59;
        catch java.lang.Throwable from label06 to label07 with label46;
        catch java.lang.Throwable from label08 to label10 with label46;
        catch java.lang.Throwable from label10 to label11 with label46;
        catch java.lang.Throwable from label12 to label13 with label46;
        catch java.lang.Throwable from label14 to label15 with label46;
        catch java.lang.Throwable from label16 to label17 with label46;
        catch java.lang.Throwable from label18 to label19 with label46;
        catch java.lang.Throwable from label20 to label21 with label46;
        catch java.lang.Throwable from label21 to label22 with label46;
        catch java.lang.Throwable from label23 to label25 with label46;
        catch java.lang.Throwable from label25 to label26 with label46;
        catch java.lang.Throwable from label27 to label28 with label46;
        catch java.lang.Throwable from label28 to label30 with label46;
        catch java.lang.Throwable from label31 to label32 with label46;
        catch java.lang.Throwable from label33 to label35 with label46;
        catch java.lang.Throwable from label35 to label36 with label46;
        catch java.io.IOException from label36 to label37 with label38;
        catch java.lang.Exception from label39 to label40 with label60;
        catch java.lang.Throwable from label39 to label40 with label46;
        catch java.io.IOException from label40 to label41 with label42;
        catch java.io.IOException from label43 to label44 with label45;
        catch java.io.IOException from label49 to label50 with label51;
        catch java.io.IOException from label55 to label56 with label57;
    }
