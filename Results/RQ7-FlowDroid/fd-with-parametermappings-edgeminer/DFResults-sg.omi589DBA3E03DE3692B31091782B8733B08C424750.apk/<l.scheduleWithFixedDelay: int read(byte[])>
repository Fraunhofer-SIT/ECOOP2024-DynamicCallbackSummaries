    public final int read(byte[]) throws java.io.IOException
    {
        java.lang.Throwable $r7;
        byte[] $r1;
        com.google.firebase.perf.util.Timer $r3;
        long $l0, $l2;
        l.newConstrainedExecutor $r5;
        java.util.concurrent.TimeUnit $r4;
        l.scheduleWithFixedDelay r0;
        byte $b3;
        int $i1;
        l.addValue$initVersionInfo $r6;
        java.io.InputStream $r2;

        r0 := @this: l.scheduleWithFixedDelay;

        $r1 := @parameter0: byte[];

        $r2 = r0.<l.scheduleWithFixedDelay: java.io.InputStream streamTracker>;

     label01:
        $i1 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r1);

     label02:
        $r3 = r0.<l.scheduleWithFixedDelay: com.google.firebase.perf.util.Timer immediateRemove>;

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

     label03:
        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

     label04:
        $l2 = $r3.<com.google.firebase.perf.util.Timer: long cleanupDatasource>;

        $l0 = $l0 - $l2;

     label05:
        $l0 = virtualinvoke $r4.<java.util.concurrent.TimeUnit: long toMicros(long)>($l0);

     label06:
        $l2 = r0.<l.scheduleWithFixedDelay: long groupingSafely>;

        $b3 = $l2 cmp -1L;

        if $b3 != 0 goto label07;

        r0.<l.scheduleWithFixedDelay: long groupingSafely> = $l0;

     label07:
        if $i1 != -1 goto label12;

        $l2 = r0.<l.scheduleWithFixedDelay: long updatingLinked>;

        $b3 = $l2 cmp -1L;

        if $b3 != 0 goto label12;

        r0.<l.scheduleWithFixedDelay: long updatingLinked> = $l0;

        $r5 = r0.<l.scheduleWithFixedDelay: l.newConstrainedExecutor htmlRules>;

     label08:
        virtualinvoke $r5.<l.newConstrainedExecutor: l.newConstrainedExecutor onPanelClosed(long)>($l0);

     label09:
        $r5 = r0.<l.scheduleWithFixedDelay: l.newConstrainedExecutor htmlRules>;

     label10:
        virtualinvoke $r5.<l.newConstrainedExecutor: l.addValue TailAppendingInputStream()>();

     label11:
        return $i1;

     label12:
        $l0 = r0.<l.scheduleWithFixedDelay: long drawnIdentity>;

        $l2 = (long) $i1;

        $l0 = $l0 + $l2;

        r0.<l.scheduleWithFixedDelay: long drawnIdentity> = $l0;

        $r5 = r0.<l.scheduleWithFixedDelay: l.newConstrainedExecutor htmlRules>;

        $r6 = $r5.<l.newConstrainedExecutor: l.addValue$initVersionInfo subdomainWakeful>;

     label13:
        virtualinvoke $r6.<l.addValue$initVersionInfo: l.addValue$initVersionInfo registerForActivityResult(long)>($l0);

     label14:
        return $i1;

     label15:
        $r7 := @caughtexception;

        $r5 = r0.<l.scheduleWithFixedDelay: l.newConstrainedExecutor htmlRules>;

        $r3 = r0.<l.scheduleWithFixedDelay: com.google.firebase.perf.util.Timer immediateRemove>;

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l2 = staticinvoke <java.lang.System: long nanoTime()>();

        $l0 = $r3.<com.google.firebase.perf.util.Timer: long cleanupDatasource>;

        $l0 = $l2 - $l0;

        $l0 = virtualinvoke $r4.<java.util.concurrent.TimeUnit: long toMicros(long)>($l0);

        virtualinvoke $r5.<l.newConstrainedExecutor: l.newConstrainedExecutor onPanelClosed(long)>($l0);

        $r5 = r0.<l.scheduleWithFixedDelay: l.newConstrainedExecutor htmlRules>;

        staticinvoke <l.SerialExecutorService: void Act(l.newConstrainedExecutor)>($r5);

        throw $r7;

        catch java.io.IOException from label01 to label02 with label15;
        catch java.io.IOException from label03 to label04 with label15;
        catch java.io.IOException from label05 to label06 with label15;
        catch java.io.IOException from label08 to label09 with label15;
        catch java.io.IOException from label10 to label11 with label15;
        catch java.io.IOException from label13 to label14 with label15;
    }
