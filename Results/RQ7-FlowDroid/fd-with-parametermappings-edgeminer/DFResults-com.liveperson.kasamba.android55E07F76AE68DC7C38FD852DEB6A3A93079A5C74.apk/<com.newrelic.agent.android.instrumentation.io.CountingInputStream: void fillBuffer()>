    public void fillBuffer()
    {
        java.lang.Throwable $r5, $r6;
        byte[] $r4;
        com.newrelic.agent.android.instrumentation.io.CountingInputStream r0;
        java.io.IOException $r9;
        java.nio.ByteBuffer $r1, $r2;
        com.newrelic.agent.android.logging.AgentLog $r7;
        int $i0, $i1;
        java.lang.String $r8;
        boolean $z0;
        java.io.InputStream $r3;

        r0 := @this: com.newrelic.agent.android.instrumentation.io.CountingInputStream;

        $r1 = r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: java.nio.ByteBuffer buffer>;

        if $r1 == null goto label21;

        $z0 = virtualinvoke $r1.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $r1 = r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: java.nio.ByteBuffer buffer>;

        entermonitor $r1;

        $i0 = 0;

     label02:
        $r2 = r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: java.nio.ByteBuffer buffer>;

     label03:
        $i1 = virtualinvoke $r2.<java.nio.ByteBuffer: int capacity()>();

     label04:
        if $i0 >= $i1 goto label11;

        $r3 = r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: java.io.InputStream impl>;

        $r2 = r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: java.nio.ByteBuffer buffer>;

     label05:
        $r4 = virtualinvoke $r2.<java.nio.ByteBuffer: byte[] array()>();

     label06:
        $r2 = r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: java.nio.ByteBuffer buffer>;

     label07:
        $i1 = virtualinvoke $r2.<java.nio.ByteBuffer: int capacity()>();

     label08:
        $i1 = $i1 - $i0;

     label09:
        $i1 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r4, $i0, $i1);

     label10:
        if $i1 <= 0 goto label11;

        $i0 = $i0 + $i1;

        goto label02;

     label11:
        $r2 = r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: java.nio.ByteBuffer buffer>;

     label12:
        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i0);

     label13:
        goto label17;

     label14:
        $r5 := @caughtexception;

        goto label19;

     label15:
        $r6 := @caughtexception;

     label16:
        $r7 = <com.newrelic.agent.android.instrumentation.io.CountingInputStream: com.newrelic.agent.android.logging.AgentLog log>;

        $r9 = (java.io.IOException) $r6;

        $r8 = virtualinvoke $r9.<java.io.IOException: java.lang.String toString()>();

        interfaceinvoke $r7.<com.newrelic.agent.android.logging.AgentLog: void error(java.lang.String)>($r8);

        $r2 = r0.<com.newrelic.agent.android.instrumentation.io.CountingInputStream: java.nio.ByteBuffer buffer>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(0);

     label17:
        exitmonitor $r1;

     label18:
        return;

     label19:
        exitmonitor $r1;

     label20:
        throw $r5;

     label21:
        return;

        catch java.io.IOException from label03 to label04 with label15;
        catch java.io.IOException from label05 to label06 with label15;
        catch java.io.IOException from label07 to label08 with label15;
        catch java.io.IOException from label09 to label10 with label15;
        catch java.io.IOException from label12 to label13 with label15;
        catch java.lang.Throwable from label02 to label13 with label14;
        catch java.lang.Throwable from label16 to label18 with label14;
        catch java.lang.Throwable from label19 to label20 with label14;
    }
