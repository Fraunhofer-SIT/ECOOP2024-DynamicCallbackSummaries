    public org.spongycastle.asn1.ASN1Encodable readObject() throws java.io.IOException
    {
        java.lang.Throwable $r8;
        byte[] $r4;
        org.spongycastle.asn1.ASN1Encodable $r3;
        org.spongycastle.asn1.DERSetParser $r16;
        org.spongycastle.asn1.IndefiniteLengthInputStream $r9;
        int $i0, $i1, $i2;
        org.spongycastle.asn1.BEROctetStringParser $r20;
        java.lang.String $r5;
        org.spongycastle.asn1.ASN1StreamParser r0, $r2, $r10;
        org.spongycastle.asn1.BERTaggedObjectParser $r12;
        boolean $z0;
        org.spongycastle.asn1.DEROctetStringParser $r22;
        org.spongycastle.asn1.ASN1Exception $r21;
        org.spongycastle.asn1.DefiniteLengthInputStream $r14;
        org.spongycastle.asn1.ASN1Primitive $r7;
        java.io.IOException $r13;
        org.spongycastle.asn1.DERExternalParser $r19;
        org.spongycastle.asn1.DERSequenceParser $r18;
        byte[][] $r6;
        org.spongycastle.asn1.DERApplicationSpecific $r15;
        java.lang.StringBuilder $r17;
        org.spongycastle.asn1.BERApplicationSpecificParser $r11;
        java.io.InputStream $r1;

        r0 := @this: org.spongycastle.asn1.ASN1StreamParser;

        $r1 = r0.<org.spongycastle.asn1.ASN1StreamParser: java.io.InputStream _in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $i0 != -1 goto label01;

        return null;

     label01:
        $z0 = 0;

        specialinvoke r0.<org.spongycastle.asn1.ASN1StreamParser: void set00Check(boolean)>(0);

        $r1 = r0.<org.spongycastle.asn1.ASN1StreamParser: java.io.InputStream _in>;

        $i1 = staticinvoke <org.spongycastle.asn1.ASN1InputStream: int readTagNumber(java.io.InputStream,int)>($r1, $i0);

        $i2 = $i0 & 32;

        if $i2 == 0 goto label02;

        $z0 = 1;

     label02:
        $r1 = r0.<org.spongycastle.asn1.ASN1StreamParser: java.io.InputStream _in>;

        $i2 = r0.<org.spongycastle.asn1.ASN1StreamParser: int _limit>;

        $i2 = staticinvoke <org.spongycastle.asn1.ASN1InputStream: int readLength(java.io.InputStream,int)>($r1, $i2);

        if $i2 >= 0 goto label06;

        if $z0 == 0 goto label05;

        $r9 = new org.spongycastle.asn1.IndefiniteLengthInputStream;

        $r1 = r0.<org.spongycastle.asn1.ASN1StreamParser: java.io.InputStream _in>;

        $i2 = r0.<org.spongycastle.asn1.ASN1StreamParser: int _limit>;

        specialinvoke $r9.<org.spongycastle.asn1.IndefiniteLengthInputStream: void <init>(java.io.InputStream,int)>($r1, $i2);

        $r10 = new org.spongycastle.asn1.ASN1StreamParser;

        $i2 = r0.<org.spongycastle.asn1.ASN1StreamParser: int _limit>;

        specialinvoke $r10.<org.spongycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream,int)>($r9, $i2);

        $i2 = $i0 & 64;

        if $i2 == 0 goto label03;

        $r11 = new org.spongycastle.asn1.BERApplicationSpecificParser;

        specialinvoke $r11.<org.spongycastle.asn1.BERApplicationSpecificParser: void <init>(int,org.spongycastle.asn1.ASN1StreamParser)>($i1, $r10);

        return $r11;

     label03:
        $i0 = $i0 & 128;

        if $i0 == 0 goto label04;

        $r12 = new org.spongycastle.asn1.BERTaggedObjectParser;

        specialinvoke $r12.<org.spongycastle.asn1.BERTaggedObjectParser: void <init>(boolean,int,org.spongycastle.asn1.ASN1StreamParser)>(1, $i1, $r10);

        return $r12;

     label04:
        $r3 = virtualinvoke $r10.<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1Encodable readIndef(int)>($i1);

        return $r3;

     label05:
        $r13 = new java.io.IOException;

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>("indefinite-length primitive encoding encountered");

        throw $r13;

     label06:
        $r14 = new org.spongycastle.asn1.DefiniteLengthInputStream;

        $r1 = r0.<org.spongycastle.asn1.ASN1StreamParser: java.io.InputStream _in>;

        specialinvoke $r14.<org.spongycastle.asn1.DefiniteLengthInputStream: void <init>(java.io.InputStream,int)>($r1, $i2);

        $i2 = $i0 & 64;

        if $i2 == 0 goto label07;

        $r15 = new org.spongycastle.asn1.DERApplicationSpecific;

        $r4 = virtualinvoke $r14.<org.spongycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>();

        specialinvoke $r15.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(boolean,int,byte[])>($z0, $i1, $r4);

        return $r15;

     label07:
        $i0 = $i0 & 128;

        if $i0 == 0 goto label08;

        $r12 = new org.spongycastle.asn1.BERTaggedObjectParser;

        $r2 = new org.spongycastle.asn1.ASN1StreamParser;

        specialinvoke $r2.<org.spongycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream)>($r14);

        specialinvoke $r12.<org.spongycastle.asn1.BERTaggedObjectParser: void <init>(boolean,int,org.spongycastle.asn1.ASN1StreamParser)>($z0, $i1, $r2);

        return $r12;

     label08:
        if $z0 == 0 goto label13;

        if $i1 == 4 goto label12;

        if $i1 == 8 goto label11;

        if $i1 == 16 goto label10;

        if $i1 != 17 goto label09;

        $r16 = new org.spongycastle.asn1.DERSetParser;

        $r2 = new org.spongycastle.asn1.ASN1StreamParser;

        specialinvoke $r2.<org.spongycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream)>($r14);

        specialinvoke $r16.<org.spongycastle.asn1.DERSetParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>($r2);

        return $r16;

     label09:
        $r13 = new java.io.IOException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown tag ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" encountered");

        $r5 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r13;

     label10:
        $r18 = new org.spongycastle.asn1.DERSequenceParser;

        $r2 = new org.spongycastle.asn1.ASN1StreamParser;

        specialinvoke $r2.<org.spongycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream)>($r14);

        specialinvoke $r18.<org.spongycastle.asn1.DERSequenceParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>($r2);

        return $r18;

     label11:
        $r19 = new org.spongycastle.asn1.DERExternalParser;

        $r2 = new org.spongycastle.asn1.ASN1StreamParser;

        specialinvoke $r2.<org.spongycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream)>($r14);

        specialinvoke $r19.<org.spongycastle.asn1.DERExternalParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>($r2);

        return $r19;

     label12:
        $r20 = new org.spongycastle.asn1.BEROctetStringParser;

        $r2 = new org.spongycastle.asn1.ASN1StreamParser;

        specialinvoke $r2.<org.spongycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream)>($r14);

        specialinvoke $r20.<org.spongycastle.asn1.BEROctetStringParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>($r2);

        return $r20;

     label13:
        if $i1 == 4 goto label17;

        $r6 = r0.<org.spongycastle.asn1.ASN1StreamParser: byte[][] tmpBuffers>;

     label14:
        $r7 = staticinvoke <org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive createPrimitiveDERObject(int,org.spongycastle.asn1.DefiniteLengthInputStream,byte[][])>($i1, $r14, $r6);

     label15:
        return $r7;

     label16:
        $r8 := @caughtexception;

        $r21 = new org.spongycastle.asn1.ASN1Exception;

        specialinvoke $r21.<org.spongycastle.asn1.ASN1Exception: void <init>(java.lang.String,java.lang.Throwable)>("corrupted stream detected", $r8);

        throw $r21;

     label17:
        $r22 = new org.spongycastle.asn1.DEROctetStringParser;

        specialinvoke $r22.<org.spongycastle.asn1.DEROctetStringParser: void <init>(org.spongycastle.asn1.DefiniteLengthInputStream)>($r14);

        return $r22;

        catch java.lang.IllegalArgumentException from label14 to label15 with label16;
    }
