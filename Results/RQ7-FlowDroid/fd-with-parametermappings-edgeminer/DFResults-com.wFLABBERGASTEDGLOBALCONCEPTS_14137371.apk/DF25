Source: $i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i2)
$i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i2) in <org.spongycastle.asn1.IndefiniteLengthInputStream: int read(byte[],int,int)>
Sink: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i1) in <org.spongycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>

<org.spongycastle.asn1.IndefiniteLengthInputStream: int read(byte[],int,int)>: $i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i2)
<org.spongycastle.asn1.IndefiniteLengthInputStream: int read(byte[],int,int)>: throw $r3
<org.spongycastle.asn1.IndefiniteLengthInputStream: int read(byte[],int,int)>: return $i1
<org.spongycastle.util.io.Streams: int readFully(java.io.InputStream,byte[],int,int)>: $r0 := @parameter0: java.io.InputStream
<org.spongycastle.util.io.Streams: int readFully(java.io.InputStream,byte[])>: $r1 := @parameter0: java.io.InputStream
<org.spongycastle.asn1.ASN1InputStream: byte[] getBuffer(org.spongycastle.asn1.DefiniteLengthInputStream,byte[][])>: $r2 = $r0[$i1]
<org.spongycastle.asn1.ASN1InputStream: byte[] getBuffer(org.spongycastle.asn1.DefiniteLengthInputStream,byte[][])>: $r1 := @parameter0: org.spongycastle.asn1.DefiniteLengthInputStream
<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive createPrimitiveDERObject(int,org.spongycastle.asn1.DefiniteLengthInputStream,byte[][])>: $i0 := @parameter0: int
<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1Encodable readObject()>: $r6 = r0.<org.spongycastle.asn1.ASN1StreamParser: byte[][] tmpBuffers>
<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1Encodable readObject()>: r0 := @this: org.spongycastle.asn1.ASN1StreamParser
<org.spongycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: $r3 = r0.<org.spongycastle.asn1.ConstructedOctetStream: org.spongycastle.asn1.ASN1StreamParser _parser>
<org.spongycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: return -1
<org.spongycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: $r2 = r0.<org.spongycastle.asn1.ConstructedOctetStream: java.io.InputStream _currentStream>
<org.spongycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: return $i4
<org.spongycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>: $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
<org.spongycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i1)
