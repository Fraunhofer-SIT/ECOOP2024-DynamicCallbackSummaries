    public static byte[] encodeBytesToBytes(byte[], int, int, int) throws java.io.IOException
    {
        byte[] $r0, $r1;
        org.whispersystems.util.Base64$OutputStream $r10, $r18;
        java.lang.Integer $r15;
        byte $b6;
        boolean $z0;
        java.lang.Exception $r2, $r3, $r4, $r5, $r6, $r7;
        java.util.zip.GZIPOutputStream $r11, $r19;
        java.lang.StringBuilder $r21;
        java.lang.Throwable $r12, $r13;
        java.lang.Object[] $r14;
        java.io.ByteArrayOutputStream $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9;
        java.lang.String $r16;
        java.io.OutputStream $r22;
        java.lang.IllegalArgumentException $r20;
        java.lang.Object $r8, $r9;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r0, "Cannot serialize a null array.");

        if $i1 < 0 goto label44;

        $i4 = 0 + $i1;

        $i5 = lengthof $r0;

        if $i4 > $i5 goto label43;

        $i4 = $i2 & 2;

        if $i4 == 0 goto label32;

        $r8 = null;

     label01:
        $r17 = new java.io.ByteArrayOutputStream;

     label02:
        $r9 = $r17;

     label03:
        specialinvoke $r17.<java.io.ByteArrayOutputStream: void <init>()>();

     label04:
        $r18 = new org.whispersystems.util.Base64$OutputStream;

     label05:
        $r10 = $r18;

        $i2 = $i2 | 1;

     label06:
        $r22 = (java.io.OutputStream) $r17;

     label07:
        specialinvoke $r18.<org.whispersystems.util.Base64$OutputStream: void <init>(java.io.OutputStream,int)>($r22, $i2);

     label08:
        $r19 = new java.util.zip.GZIPOutputStream;

     label09:
        $r11 = $r19;

     label10:
        specialinvoke $r19.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r18);

     label11:
        virtualinvoke $r19.<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>($r0, 0, $i1);

        virtualinvoke $r19.<java.util.zip.GZIPOutputStream: void close()>();

     label12:
        virtualinvoke $r19.<java.util.zip.GZIPOutputStream: void close()>();

     label13:
        virtualinvoke $r18.<org.whispersystems.util.Base64$OutputStream: void close()>();

     label14:
        $r17 = (java.io.ByteArrayOutputStream) $r9;

        virtualinvoke $r17.<java.io.ByteArrayOutputStream: void close()>();

     label15:
        $r17 = (java.io.ByteArrayOutputStream) $r9;

        $r0 = virtualinvoke $r17.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r0;

     label16:
        $r12 := @caughtexception;

        goto label27;

     label17:
        $r13 := @caughtexception;

        goto label22;

     label18:
        $r12 := @caughtexception;

        goto label28;

     label19:
        $r13 := @caughtexception;

        $r11 = null;

        goto label22;

     label20:
        $r12 := @caughtexception;

        $r10 = null;

        goto label28;

     label21:
        $r13 := @caughtexception;

        $r10 = null;

        $r11 = null;

     label22:
        $r8 = $r9;

        goto label25;

     label23:
        $r12 := @caughtexception;

        $r9 = null;

        $r10 = null;

        goto label28;

     label24:
        $r13 := @caughtexception;

        $r10 = null;

        $r11 = null;

     label25:
        throw $r13;

     label26:
        $r12 := @caughtexception;

        $r9 = $r8;

     label27:
        $r8 = $r11;

     label28:
        $r11 = (java.util.zip.GZIPOutputStream) $r8;

        virtualinvoke $r11.<java.util.zip.GZIPOutputStream: void close()>();

     label29:
        virtualinvoke $r10.<org.whispersystems.util.Base64$OutputStream: void close()>();

     label30:
        $r17 = (java.io.ByteArrayOutputStream) $r9;

        virtualinvoke $r17.<java.io.ByteArrayOutputStream: void close()>();

     label31:
        throw $r12;

     label32:
        $i4 = $i2 & 8;

        if $i4 <= 0 goto label33;

        $z0 = 1;

        goto label34;

     label33:
        $z0 = 0;

     label34:
        $i4 = $i1 / 3;

        $i4 = $i4 * 4;

        $i5 = $i1 % 3;

        if $i5 <= 0 goto label35;

        $b6 = 4;

        goto label36;

     label35:
        $b6 = 0;

     label36:
        $i5 = $i4 + $b6;

        if $z0 == 0 goto label37;

        $i4 = $i5 / 76;

        $i5 = $i5 + $i4;

     label37:
        $i4 = $i5;

        $r1 = newarray (byte)[$i5];

        $i3 = $i1 + -2;

        $i7 = 0;

        $i5 = 0;

        $i8 = 0;

     label38:
        if $i7 >= $i3 goto label40;

        $i9 = $i7 + 0;

        staticinvoke <org.whispersystems.util.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>($r0, $i9, 3, $r1, $i5, $i2);

        $i8 = $i8 + 4;

        if $z0 == 0 goto label39;

        if $i8 < 76 goto label39;

        $i8 = $i5 + 4;

        $r1[$i8] = 10;

        $i5 = $i5 + 1;

        $i8 = 0;

     label39:
        $i7 = $i7 + 3;

        $i5 = $i5 + 4;

        goto label38;

     label40:
        if $i7 >= $i1 goto label41;

        $i0 = $i7 + 0;

        $i1 = $i1 - $i7;

        staticinvoke <org.whispersystems.util.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>($r0, $i0, $i1, $r1, $i5, $i2);

        $i5 = $i5 + 4;

     label41:
        $i0 = $i4 - 1;

        if $i5 >= $i0 goto label42;

        $r0 = newarray (byte)[$i5];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r0, 0, $i5);

        return $r0;

     label42:
        return $r1;

     label43:
        $r20 = new java.lang.IllegalArgumentException;

        $r14 = newarray (java.lang.Object)[3];

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r14[0] = $r15;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r14[1] = $r15;

        $i0 = lengthof $r0;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r14[2] = $r15;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot have offset of %d and length of %d with array of length %d", $r14);

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r20;

     label44:
        $r20 = new java.lang.IllegalArgumentException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot have length offset: ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r16 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r20;

     label45:
        $r2 := @caughtexception;

        goto label13;

     label46:
        $r3 := @caughtexception;

        goto label14;

     label47:
        $r4 := @caughtexception;

        goto label15;

     label48:
        $r5 := @caughtexception;

        goto label29;

     label49:
        $r6 := @caughtexception;

        goto label30;

     label50:
        $r7 := @caughtexception;

        goto label31;

        catch java.io.IOException from label03 to label04 with label24;
        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.io.IOException from label07 to label08 with label21;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label06 to label08 with label20;
        catch java.io.IOException from label10 to label11 with label19;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.io.IOException from label11 to label12 with label17;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Exception from label12 to label13 with label45;
        catch java.lang.Exception from label13 to label14 with label46;
        catch java.lang.Exception from label14 to label15 with label47;
        catch java.lang.Throwable from label25 to label26 with label26;
        catch java.lang.Exception from label28 to label29 with label48;
        catch java.lang.Exception from label29 to label30 with label49;
        catch java.lang.Exception from label30 to label31 with label50;
    }
