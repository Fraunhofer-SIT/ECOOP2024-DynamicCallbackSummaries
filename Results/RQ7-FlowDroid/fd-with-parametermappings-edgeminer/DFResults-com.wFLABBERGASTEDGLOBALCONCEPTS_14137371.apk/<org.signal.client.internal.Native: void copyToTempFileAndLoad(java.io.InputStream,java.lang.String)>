    private static void copyToTempFileAndLoad(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r6, $r7, $r8;
        byte[] $r5;
        java.io.FileOutputStream $r9;
        java.io.File $r4;
        java.nio.file.attribute.FileAttribute[] $r2;
        int $i0;
        java.lang.String $r1;
        java.nio.file.Path $r3;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.lang.String;

        $r2 = newarray (java.nio.file.attribute.FileAttribute)[0];

        $r3 = staticinvoke <java.nio.file.Files: java.nio.file.Path createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[])>("resource", $r1, $r2);

        $r4 = interfaceinvoke $r3.<java.nio.file.Path: java.io.File toFile()>();

        virtualinvoke $r4.<java.io.File: void deleteOnExit()>();

        $r9 = new java.io.FileOutputStream;

        specialinvoke $r9.<java.io.FileOutputStream: void <init>(java.io.File)>($r4);

        $r5 = newarray (byte)[4096];

     label01:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r5);

     label02:
        if $i0 == -1 goto label05;

     label03:
        virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i0);

     label04:
        goto label01;

     label05:
        virtualinvoke $r9.<java.io.OutputStream: void close()>();

        $r1 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <java.lang.System: void load(java.lang.String)>($r1);

        return;

     label06:
        $r6 := @caughtexception;

     label07:
        throw $r6;

     label08:
        $r7 := @caughtexception;

     label09:
        virtualinvoke $r9.<java.io.OutputStream: void close()>();

     label10:
        goto label12;

     label11:
        $r8 := @caughtexception;

        virtualinvoke $r6.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

     label12:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label11;
    }
