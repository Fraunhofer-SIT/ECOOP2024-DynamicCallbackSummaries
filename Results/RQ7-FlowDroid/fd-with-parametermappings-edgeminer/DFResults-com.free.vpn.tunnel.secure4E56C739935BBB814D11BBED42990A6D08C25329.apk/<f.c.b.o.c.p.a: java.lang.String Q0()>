    public static java.lang.String Q0()
    {
        android.app.Application $r2;
        f.c.b.o.c.s.b $r1;
        android.telephony.TelephonyManager $r4;
        java.lang.Object $r3;
        java.lang.String $r0;
        java.lang.Exception $r5;
        boolean $z0;

        $r0 = staticinvoke <f.c.b.o.c.e: java.lang.String w()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label01;

        return $r0;

     label01:
        $r1 = new f.c.b.o.c.s.b;

        specialinvoke $r1.<f.c.b.o.c.s.b: void <init>()>();

     label02:
        $r2 = staticinvoke <f.c.b.o.c.m.i: android.app.Application b()>();

        $r3 = virtualinvoke $r2.<android.app.Application: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r4 = (android.telephony.TelephonyManager) $r3;

        $r0 = virtualinvoke $r4.<android.telephony.TelephonyManager: java.lang.String getSimOperator()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

     label03:
        if $z0 != 0 goto label08;

     label04:
        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r0);

     label05:
        if $z0 == 0 goto label08;

     label06:
        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        $r0 = (java.lang.String) $r3;

     label07:
        return $r0;

     label08:
        $r0 = virtualinvoke $r4.<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

     label09:
        if $z0 != 0 goto label11;

        return $r0;

     label10:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

     label11:
        return "NULL";

        catch java.lang.Exception from label02 to label03 with label10;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }
