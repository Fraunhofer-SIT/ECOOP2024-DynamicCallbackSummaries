    public final void a(android.content.Context)
    {
        byte[] $r19;
        android.os.Bundle $r7;
        f.c.b.i $r18, $r20;
        java.lang.Integer $r29;
        java.util.Vector $r33;
        java.util.Locale $r16;
        boolean $z0;
        java.util.Collection $r26;
        f.c.b.l.v $r11, $r22;
        java.util.UUID $r21;
        java.lang.Exception $r35;
        f.c.b.l.y$b $r25;
        f.c.b.l.c $r31;
        java.lang.Throwable $r1, $r2, $r3, $r24;
        android.content.Context $r4;
        java.lang.Object[] $r28;
        java.util.HashMap $r23;
        java.util.HashSet $r30;
        android.os.Parcelable[] $r10;
        int $i0, $i1, $i2;
        java.lang.String $r8, $r9, $r13, $r14, $r15, $r17;
        android.os.Parcelable $r12;
        java.util.Iterator $r27;
        android.content.RestrictionsManager $r6;
        java.lang.NumberFormatException $r34;
        java.io.StringReader $r32;
        java.lang.Object $r5;
        f.c.b.k.c r0;

        r0 := @this: f.c.b.k.c;

        $r4 := @parameter0: android.content.Context;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("restrictions");

        $r6 = (android.content.RestrictionsManager) $r5;

        r0.<f.c.b.k.c: android.content.RestrictionsManager a> = $r6;

        if $r6 != null goto label01;

        return;

     label01:
        $r7 = virtualinvoke $r6.<android.content.RestrictionsManager: android.os.Bundle getApplicationRestrictions()>();

        if $r7 != null goto label02;

        return;

     label02:
        $r8 = "(not set)";

        $r9 = virtualinvoke $r7.<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)>("version", "(not set)");

     label03:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

     label04:
        if $i0 != 1 goto label38;

        $r10 = virtualinvoke $r7.<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>("vpn_configuration_list");

        if $r10 != null goto label06;

        $r8 = "App restriction does not contain a profile list (vpn_configuration_list)";

     label05:
        staticinvoke <f.c.b.l.y: void l(java.lang.String)>($r8);

        return;

     label06:
        $r30 = new java.util.HashSet;

        specialinvoke $r30.<java.util.HashSet: void <init>()>();

        $r11 = staticinvoke <f.c.b.l.v: f.c.b.l.v f(android.content.Context)>($r4);

        $i0 = lengthof $r10;

        $i1 = 0;

     label07:
        $r8 = "com.free.vpn.api.AppRestrictions";

        if $i1 >= $i0 goto label33;

        $r12 = $r10[$i1];

        $z0 = $r12 instanceof android.os.Bundle;

        if $z0 != 0 goto label09;

        $r8 = "App restriction profile has wrong type";

     label08:
        staticinvoke <f.c.b.l.y: void l(java.lang.String)>($r8);

        goto label32;

     label09:
        $r7 = (android.os.Bundle) $r12;

        $r8 = virtualinvoke $r7.<android.os.Bundle: java.lang.String getString(java.lang.String)>("uuid");

        $r13 = virtualinvoke $r7.<android.os.Bundle: java.lang.String getString(java.lang.String)>("ovpn");

        $r9 = $r13;

        $r14 = virtualinvoke $r7.<android.os.Bundle: java.lang.String getString(java.lang.String)>("name");

        if $r8 == null goto label31;

        if $r13 == null goto label31;

        if $r14 == null goto label31;

        $r15 = virtualinvoke r0.<f.c.b.k.c: java.lang.String b(java.lang.String)>($r13);

        $r16 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r17 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r16);

        virtualinvoke $r30.<java.util.HashSet: boolean add(java.lang.Object)>($r17);

        $r18 = staticinvoke <f.c.b.l.v: f.c.b.i c(android.content.Context,java.lang.String)>($r4, $r8);

        if $r18 == null goto label10;

        $r17 = $r18.<f.c.b.i: java.lang.String n0>;

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z0 != 0 goto label32;

     label10:
        $r15 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $z0 = virtualinvoke $r13.<java.lang.String: boolean contains(java.lang.CharSequence)>($r15);

        if $z0 != 0 goto label15;

        $z0 = virtualinvoke $r13.<java.lang.String: boolean contains(java.lang.CharSequence)>(" ");

        if $z0 != 0 goto label15;

     label11:
        $r19 = virtualinvoke $r13.<java.lang.String: byte[] getBytes()>();

        $r19 = staticinvoke <android.util.Base64: byte[] decode(byte[],int)>($r19, 0);

     label12:
        $r15 = new java.lang.String;

     label13:
        specialinvoke $r15.<java.lang.String: void <init>(byte[])>($r19);

     label14:
        $r9 = $r15;

     label15:
        $r31 = new f.c.b.l.c;

        specialinvoke $r31.<f.c.b.l.c: void <init>()>();

        $r32 = new java.io.StringReader;

     label16:
        specialinvoke $r32.<java.io.StringReader: void <init>(java.lang.String)>($r9);

        virtualinvoke $r31.<f.c.b.l.c: void j(java.io.Reader)>($r32);

        $r20 = virtualinvoke $r31.<f.c.b.l.c: f.c.b.i c()>();

     label17:
        $r20.<f.c.b.i: java.lang.String g0> = "com.free.vpn.api.AppRestrictions";

        $r20.<f.c.b.i: boolean S> = 0;

        $r20.<f.c.b.i: java.lang.String b> = $r14;

     label18:
        $r21 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>($r8);

     label19:
        $r20.<f.c.b.i: java.util.UUID t0> = $r21;

     label20:
        $r8 = virtualinvoke r0.<f.c.b.k.c: java.lang.String b(java.lang.String)>($r9);

     label21:
        $r20.<f.c.b.i: java.lang.String n0> = $r8;

     label22:
        $r22 = staticinvoke <f.c.b.l.v: f.c.b.l.v f(android.content.Context)>($r4);

     label23:
        if $r18 == null goto label24;

        $i2 = $r18.<f.c.b.i: int l0>;

        $i2 = $i2 + 1;

        $r20.<f.c.b.i: int l0> = $i2;

        $r8 = $r18.<f.c.b.i: java.lang.String d>;

        $r20.<f.c.b.i: java.lang.String d> = $r8;

     label24:
        $r23 = $r22.<f.c.b.l.v: java.util.HashMap a>;

        $r21 = $r20.<f.c.b.i: java.util.UUID t0>;

     label25:
        $r8 = virtualinvoke $r21.<java.util.UUID: java.lang.String toString()>();

        virtualinvoke $r23.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r20);

        virtualinvoke $r22.<f.c.b.l.v: void k(android.content.Context,f.c.b.i)>($r4, $r20);

        virtualinvoke $r22.<f.c.b.l.v: void m(android.content.Context)>($r4);

     label26:
        goto label32;

     label27:
        $r24 := @caughtexception;

        goto label30;

     label28:
        $r24 := @caughtexception;

        goto label30;

     label29:
        $r24 := @caughtexception;

     label30:
        $r25 = <f.c.b.l.y$b: f.c.b.l.y$b d>;

        $r35 = (java.lang.Exception) $r24;

        staticinvoke <f.c.b.l.y: void m(f.c.b.l.y$b,java.lang.String,java.lang.Exception)>($r25, "Error during import of managed profile", $r35);

        goto label32;

     label31:
        $r8 = "App restriction profile misses uuid, ovpn or name key";

        goto label08;

     label32:
        $i1 = $i1 + 1;

        goto label07;

     label33:
        $r33 = new java.util.Vector;

        specialinvoke $r33.<java.util.Vector: void <init>()>();

        $r26 = virtualinvoke $r11.<f.c.b.l.v: java.util.Collection h()>();

        $r27 = interfaceinvoke $r26.<java.util.Collection: java.util.Iterator iterator()>();

     label34:
        $z0 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label35;

        $r5 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (f.c.b.i) $r5;

        $r9 = $r18.<f.c.b.i: java.lang.String g0>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label34;

        $r9 = virtualinvoke $r18.<f.c.b.i: java.lang.String m()>();

        $z0 = virtualinvoke $r30.<java.util.HashSet: boolean contains(java.lang.Object)>($r9);

        if $z0 != 0 goto label34;

        virtualinvoke $r33.<java.util.Vector: boolean add(java.lang.Object)>($r18);

        goto label34;

     label35:
        $r27 = virtualinvoke $r33.<java.util.Vector: java.util.Iterator iterator()>();

     label36:
        $z0 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label37;

        $r5 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (f.c.b.i) $r5;

        staticinvoke <f.c.b.l.y: void p(java.lang.String)>("Remove with uuid: %s and name: %s since it is no longer in the list of managed profiles");

        virtualinvoke $r11.<f.c.b.l.v: void j(android.content.Context,f.c.b.i)>($r4, $r18);

        goto label36;

     label37:
        return;

     label38:
        $r34 = new java.lang.NumberFormatException;

     label39:
        specialinvoke $r34.<java.lang.NumberFormatException: void <init>(java.lang.String)>("Wrong version");

        throw $r34;

     label40:
        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label41;

        return;

     label41:
        $r16 = <java.util.Locale: java.util.Locale US>;

        $r28 = newarray (java.lang.Object)[2];

        $r28[0] = $r9;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r28[1] = $r29;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r16, "App restriction version %s does not match expected version %d", $r28);

        goto label05;

     label42:
        $r1 := @caughtexception;

        goto label40;

     label43:
        $r2 := @caughtexception;

        goto label15;

     label44:
        $r3 := @caughtexception;

        goto label40;

        catch java.lang.NumberFormatException from label03 to label04 with label42;
        catch java.lang.IllegalArgumentException from label11 to label12 with label43;
        catch java.lang.IllegalArgumentException from label13 to label14 with label43;
        catch f.c.b.l.c$a from label16 to label17 with label29;
        catch f.c.b.l.c$a from label18 to label19 with label29;
        catch f.c.b.l.c$a from label20 to label21 with label29;
        catch f.c.b.l.c$a from label22 to label23 with label29;
        catch f.c.b.l.c$a from label25 to label26 with label29;
        catch java.io.IOException from label16 to label17 with label28;
        catch java.io.IOException from label18 to label19 with label28;
        catch java.io.IOException from label20 to label21 with label28;
        catch java.io.IOException from label22 to label23 with label28;
        catch java.io.IOException from label25 to label26 with label28;
        catch java.lang.IllegalArgumentException from label16 to label17 with label27;
        catch java.lang.IllegalArgumentException from label18 to label19 with label27;
        catch java.lang.IllegalArgumentException from label20 to label21 with label27;
        catch java.lang.IllegalArgumentException from label22 to label23 with label27;
        catch java.lang.IllegalArgumentException from label25 to label26 with label27;
        catch java.lang.NumberFormatException from label39 to label40 with label44;
    }
