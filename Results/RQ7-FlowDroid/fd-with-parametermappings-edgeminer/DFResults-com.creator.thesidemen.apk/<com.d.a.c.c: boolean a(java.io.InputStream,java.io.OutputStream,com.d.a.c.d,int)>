    public static boolean a(java.io.InputStream, java.io.OutputStream, com.d.a.c.d, int)
    {
        java.io.OutputStream $r1;
        byte[] $r3;
        com.d.a.c.d $r2;
        int $i0, $i1, $i2, $i3;
        java.io.InputStream $r0;
        boolean $z0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 := @parameter2: com.d.a.c.d;

        $i0 := @parameter3: int;

        $i1 = virtualinvoke $r0.<java.io.InputStream: int available()>();

        $i2 = $i1;

        if $i1 > 0 goto label1;

        $i2 = 512000;

     label1:
        $r3 = newarray (byte)[$i0];

        $z0 = staticinvoke <com.d.a.c.c: boolean a(com.d.a.c.d,int,int)>($r2, 0, $i2);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $i1 = 0;

     label3:
        $i3 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r3, 0, $i0);

        if $i3 == -1 goto label4;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i3);

        $i1 = $i1 + $i3;

        $z0 = staticinvoke <com.d.a.c.c: boolean a(com.d.a.c.d,int,int)>($r2, $i1, $i2);

        if $z0 == 0 goto label3;

        return 0;

     label4:
        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return 1;
    }
