[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loading sources and sinks from SourcesSinks/UnconstrainedSourcesSinks.xml...
[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loaded 273 sources and 91 sinks from the XML file
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] WARN soot.Scene - Android API version '32' not available, using minApkVersion '23' instead
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.055623528 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 19 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] ERROR soot.jimple.infoflow.android.SetupApplication - Unexpected resource type for layout class
[main] ERROR soot.jimple.infoflow.android.SetupApplication - Unexpected resource type for layout class
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 20 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.cN, because it is abstract and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.dy, because it is abstract and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.setExpandedFormat, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.getFillAlpha, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.BroadcastReceiverEntryPointCreator - Cannot create valid constructor for o.aT, because it is abstract and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 13 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] WARN soot.jimple.infoflow.android.SetupApplication - Aborted callback collection because of low memory
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] WARN soot.jimple.infoflow.android.SetupApplication - Callback analysis aborted early due to time or memory exhaustion
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 273 sources, 91 sinks, and 85 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 218 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on storagepath2-data/androidApps/2023-AndroZoo-PlayStore/com.doubleoctopus.authenticator067892A386659D5A78F4AEDCA89BFFA820D6669F.apk with 273 sources and 91 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 7.399939567 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 119347 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 67 sources and 118 sinks.
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Map: java.lang.Object[] keys>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Map: java.lang.Object[] values>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Map: java.lang.Object[] values>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Map: java.lang.Object[] keys>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qr: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper hits: 9825159
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper misses: 23632581
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - IFDS problem with 63500750 forward and 58425517 backward edges solved in 901 seconds, processing 20 results...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Current memory consumption: 124390 MB
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after cleanup: 50296 MB
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 1 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
