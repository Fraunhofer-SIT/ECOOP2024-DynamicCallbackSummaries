    public final void a(com.bumptech.glide.load.c, com.bumptech.glide.load.b.b.a$b)
    {
        java.lang.Throwable $r15, $r16, $r17, $r18;
        com.bumptech.glide.load.b.b.j $r3;
        com.bumptech.glide.a.a $r12;
        com.bumptech.glide.a.a$a $r13;
        java.util.Map $r6;
        com.bumptech.glide.load.b.b.e r0;
        int $i0;
        com.bumptech.glide.load.b.b.c $r5;
        java.lang.String $r4;
        com.bumptech.glide.load.b.b.a$b $r2;
        com.bumptech.glide.load.b.b.c$a $r8, $r10;
        com.bumptech.glide.load.b.b.c$b $r9;
        boolean $z0;
        java.io.File $r14;
        java.util.concurrent.locks.Lock $r11;
        java.lang.Object $r7;
        com.bumptech.glide.load.c $r1;

        r0 := @this: com.bumptech.glide.load.b.b.e;

        $r1 := @parameter0: com.bumptech.glide.load.c;

        $r2 := @parameter1: com.bumptech.glide.load.b.b.a$b;

        $r3 = r0.<com.bumptech.glide.load.b.b.e: com.bumptech.glide.load.b.b.j c>;

        $r4 = virtualinvoke $r3.<com.bumptech.glide.load.b.b.j: java.lang.String a(com.bumptech.glide.load.c)>($r1);

        $r5 = r0.<com.bumptech.glide.load.b.b.e: com.bumptech.glide.load.b.b.c b>;

        entermonitor $r5;

     label01:
        $r6 = $r5.<com.bumptech.glide.load.b.b.c: java.util.Map a>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r8 = (com.bumptech.glide.load.b.b.c$a) $r7;

        if $r8 != null goto label02;

        $r9 = $r5.<com.bumptech.glide.load.b.b.c: com.bumptech.glide.load.b.b.c$b b>;

        $r10 = virtualinvoke $r9.<com.bumptech.glide.load.b.b.c$b: com.bumptech.glide.load.b.b.c$a a()>();

        $r8 = $r10;

        $r6 = $r5.<com.bumptech.glide.load.b.b.c: java.util.Map a>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r10);

     label02:
        $i0 = $r8.<com.bumptech.glide.load.b.b.c$a: int b>;

        $i0 = $i0 + 1;

        $r8.<com.bumptech.glide.load.b.b.c$a: int b> = $i0;

        exitmonitor $r5;

     label03:
        $r11 = $r8.<com.bumptech.glide.load.b.b.c$a: java.util.concurrent.locks.Lock a>;

        interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void lock()>();

     label04:
        $r12 = specialinvoke r0.<com.bumptech.glide.load.b.b.e: com.bumptech.glide.a.a a()>();

        $r13 = virtualinvoke $r12.<com.bumptech.glide.a.a: com.bumptech.glide.a.a$a b(java.lang.String)>($r4);

     label05:
        if $r13 == null goto label13;

     label06:
        $r14 = virtualinvoke $r13.<com.bumptech.glide.a.a$a: java.io.File a()>();

        $z0 = interfaceinvoke $r2.<com.bumptech.glide.load.b.b.a$b: boolean a(java.io.File)>($r14);

     label07:
        if $z0 == 0 goto label09;

     label08:
        virtualinvoke $r13.<com.bumptech.glide.a.a$a: void b()>();

     label09:
        virtualinvoke $r13.<com.bumptech.glide.a.a$a: void d()>();

     label10:
        goto label13;

     label11:
        $r15 := @caughtexception;

     label12:
        virtualinvoke $r13.<com.bumptech.glide.a.a$a: void d()>();

        throw $r15;

     label13:
        $r5 = r0.<com.bumptech.glide.load.b.b.e: com.bumptech.glide.load.b.b.c b>;

        virtualinvoke $r5.<com.bumptech.glide.load.b.b.c: void a(com.bumptech.glide.load.c)>($r1);

        return;

     label14:
        $r16 := @caughtexception;

        goto label20;

     label15:
        $r17 := @caughtexception;

     label16:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DiskLruCacheWrapper", 5);

     label17:
        if $z0 == 0 goto label13;

     label18:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("DiskLruCacheWrapper", "Unable to put to disk cache", $r17);

     label19:
        goto label13;

     label20:
        $r5 = r0.<com.bumptech.glide.load.b.b.e: com.bumptech.glide.load.b.b.c b>;

        virtualinvoke $r5.<com.bumptech.glide.load.b.b.c: void a(com.bumptech.glide.load.c)>($r1);

        throw $r16;

     label21:
        $r18 := @caughtexception;

     label22:
        exitmonitor $r5;

     label23:
        throw $r18;

        catch java.lang.Throwable from label01 to label03 with label21;
        catch java.io.IOException from label04 to label05 with label15;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.io.IOException from label09 to label10 with label15;
        catch java.io.IOException from label12 to label13 with label15;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label16 to label17 with label14;
        catch java.lang.Throwable from label18 to label19 with label14;
        catch java.lang.Throwable from label22 to label23 with label21;
    }
