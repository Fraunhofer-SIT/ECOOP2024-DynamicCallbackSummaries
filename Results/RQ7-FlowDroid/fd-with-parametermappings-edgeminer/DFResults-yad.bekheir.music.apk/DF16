Source: $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0)
$i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0) in <ir.tapsell.sdk.h.h: int a(byte[])>
Sink: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0) in <ir.tapsell.sdk.h.e: void b(java.io.OutputStream,long)>

<ir.tapsell.sdk.h.h: int a(byte[])>: $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0)
<ir.tapsell.sdk.h.h: int a(byte[])>: throw $r3
<ir.tapsell.sdk.h.e: void b(java.io.OutputStream,long)>: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0)
