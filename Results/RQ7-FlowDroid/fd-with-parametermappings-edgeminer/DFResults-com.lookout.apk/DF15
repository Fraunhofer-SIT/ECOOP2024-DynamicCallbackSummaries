Source: specialinvoke r0.<p.b.a.a2: void <init>(java.io.InputStream,int)>($r1, $i0)
specialinvoke r0.<p.b.a.a2: void <init>(java.io.InputStream,int)>($r1, $i0) in <p.b.a.x1: void <init>(java.io.InputStream,int)>
Sink: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0) in <p.b.i.n.a: void a(java.io.InputStream,java.io.OutputStream)>

<p.b.a.x1: void <init>(java.io.InputStream,int)>: specialinvoke r0.<p.b.a.a2: void <init>(java.io.InputStream,int)>($r1, $i0)
<p.b.a.x1: void <init>(java.io.InputStream,int)>: throw $r2
<p.b.a.y: p.b.a.f a()>: $r1 = r0.<p.b.a.y: java.io.InputStream a>
<p.b.a.y: p.b.a.f a()>: r0 := @this: p.b.a.y
<p.b.a.p0: int read(byte[],int,int)>: $r3 = r0.<p.b.a.p0: p.b.a.y a>
<p.b.a.p0: int read(byte[],int,int)>: return -1
<p.b.a.p0: int read(byte[],int,int)>: $r2 = r0.<p.b.a.p0: java.io.InputStream c>
<p.b.a.p0: int read(byte[],int,int)>: r0 := @this: p.b.a.p0
<p.b.i.n.a: void a(java.io.InputStream,java.io.OutputStream)>: $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
<p.b.i.n.a: void a(java.io.InputStream,java.io.OutputStream)>: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
