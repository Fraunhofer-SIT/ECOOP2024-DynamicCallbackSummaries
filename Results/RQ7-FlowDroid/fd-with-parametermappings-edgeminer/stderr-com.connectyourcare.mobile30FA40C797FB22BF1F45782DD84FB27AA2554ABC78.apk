[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loading sources and sinks from SourcesSinks/UnconstrainedSourcesSinks.xml...
[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loaded 273 sources and 91 sinks from the XML file
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] WARN soot.Scene - Android API version '30' not available, using minApkVersion '21' instead
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.064937236 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 18 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class androidx.core.content.FileProvider
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class androidx.multidex.MultiDexApplication
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 19 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ContentProviderEntryPointCreator - Cannot create valid constructor for io.fabric.sdk.android.ActivityLifecycleManager$Callbacks, because it is abstract and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 17 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 20 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ContentProviderEntryPointCreator - Cannot create valid constructor for io.fabric.sdk.android.ActivityLifecycleManager$Callbacks, because it is abstract and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 4 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 20 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ContentProviderEntryPointCreator - Cannot create valid constructor for io.fabric.sdk.android.ActivityLifecycleManager$Callbacks, because it is abstract and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 4 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 20 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ContentProviderEntryPointCreator - Cannot create valid constructor for io.fabric.sdk.android.ActivityLifecycleManager$Callbacks, because it is abstract and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 4 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 20 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ContentProviderEntryPointCreator - Cannot create valid constructor for io.fabric.sdk.android.ActivityLifecycleManager$Callbacks, because it is abstract and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 3 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 20 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ContentProviderEntryPointCreator - Cannot create valid constructor for io.fabric.sdk.android.ActivityLifecycleManager$Callbacks, because it is abstract and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 2 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Callback analysis terminated normally
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 273 sources, 91 sinks, and 168 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 78 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on storagepath2-data/androidApps/2022-AndroZoo-PlayStore/com.connectyourcare.mobile30FA40C797FB22BF1F45782DD84FB27AA2554ABC78.apk with 273 sources and 91 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 0.640415221 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 35092 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 27 sources and 15 sinks.
[Low memory monitor] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Triggering memory warning at 243855 MB (268435 MB max, 242009 in watched memory pool)...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper hits: 2466286
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper misses: 33867523
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - IFDS problem with 48052235 forward and 44852298 backward edges solved in 670 seconds, processing 11 results...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Current memory consumption: 243922 MB
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[Low memory monitor] WARN soot.jimple.infoflow.memory.FlowDroidMemoryWatcher - Running out of memory, solvers terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after cleanup: 173545 MB
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 1 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 2 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 3 with 1 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 1 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after path building: 187021 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Path reconstruction took 414 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0) in method <io.fabric.sdk.android.services.common.CommonUtils: void copyStream(java.io.InputStream,java.io.OutputStream,byte[])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2) in method <io.fabric.sdk.android.services.common.CommonUtils: void copyStream(java.io.InputStream,java.io.OutputStream,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.CommonUtils: void copyStream(java.io.InputStream,java.io.OutputStream,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.CommonUtils: void copyStream(java.io.InputStream,java.io.OutputStream,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i3) in method <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i3 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i1) in method <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i3 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i0, $i1) in method <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[],int,int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, $i2, $i1) in method <com.crashlytics.android.core.CrashlyticsController: void copyToCodedOutputStream(java.io.InputStream,com.crashlytics.android.core.CodedOutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void copyToCodedOutputStream(java.io.InputStream,com.crashlytics.android.core.CodedOutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, $i2, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void copyToCodedOutputStream(java.io.InputStream,com.crashlytics.android.core.CodedOutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0) in method <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r2) in method <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.FileOutputStream: void write(byte[])>($r5) in method <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null) in method <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r11.<com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>(r0, $r5, $r2, $r3, $r7, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.core.CrashlyticsController$20: java.lang.String val$installUuid> = $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction)>($r1, "SessionApp.json", $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r6.<com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction: void writeTo(java.io.FileOutputStream)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = $r1.<com.crashlytics.android.core.CrashlyticsController$20: java.lang.String val$installUuid>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("install_uuid", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<org.json.JSONObject: void <init>(java.util.Map)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.FileOutputStream: void write(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null) in method <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r11.<com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>(r0, $r5, $r2, $r3, $r7, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.core.CrashlyticsController$20: java.lang.String val$installUuid> = $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction)>($r1, "SessionApp.json", $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r6.<com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction: void writeTo(java.io.FileOutputStream)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = $r1.<com.crashlytics.android.core.CrashlyticsController$20: java.lang.String val$installUuid>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("install_uuid", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<org.json.JSONObject: void <init>(java.util.Map)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.FileOutputStream: void write(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink specialinvoke $r2.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r3) in method <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null) in method <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r17.<com.crashlytics.android.answers.SessionEventMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, $r16, $r6, $r7, $r10, $r12, $r13, $r14, $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionEventMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.SessionEventMetadata: java.lang.String installationId> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionEventMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r17
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)>($r8, $r10, $r1, $r7, $r11, $r5, $r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionEventMetadata metadata> = $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionAnalyticsManagerStrategy strategy> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler$4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>(r0, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = staticinvoke <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = specialinvoke $r1.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>(r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: io.fabric.sdk.android.ActivityLifecycleManager$Callbacks val$callbacks> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: java.util.Set registeredCallbacks>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 := @parameter0: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<io.fabric.sdk.android.ActivityLifecycleManager: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper callbacksWrapper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: io.fabric.sdk.android.ActivityLifecycleManager lifecycleManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>(r0, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>($l0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>($r1, 0, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>(r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r2.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionAnalyticsManagerStrategy strategy>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<io.fabric.sdk.android.services.events.FileRollOverManager: boolean rollFileOver()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<io.fabric.sdk.android.services.events.EventsStorage: void rollOver(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File targetDirectory>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>($r5, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null) in method <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r17.<com.crashlytics.android.answers.SessionEventMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, $r16, $r6, $r7, $r10, $r12, $r13, $r14, $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionEventMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.SessionEventMetadata: java.lang.String installationId> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionEventMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r17
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)>($r8, $r10, $r1, $r7, $r11, $r5, $r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionEventMetadata metadata> = $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionAnalyticsManagerStrategy strategy> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler$4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>(r0, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = staticinvoke <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = specialinvoke $r1.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>(r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: io.fabric.sdk.android.ActivityLifecycleManager$Callbacks val$callbacks> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: java.util.Set registeredCallbacks>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 := @parameter0: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<io.fabric.sdk.android.ActivityLifecycleManager: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper callbacksWrapper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: io.fabric.sdk.android.ActivityLifecycleManager lifecycleManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>(r0, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>($l0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>($r1, 0, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>(r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r2.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionAnalyticsManagerStrategy strategy>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<io.fabric.sdk.android.services.events.FileRollOverManager: boolean rollFileOver()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<io.fabric.sdk.android.services.events.EventsStorage: void rollOver(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File targetDirectory>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>($r5, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("limit_ad_tracking_enabled", 0) in method <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getInfoFromPreferences()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getInfoFromPreferences()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("limit_ad_tracking_enabled", 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getInfoFromPreferences()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<io.fabric.sdk.android.services.common.AdvertisingInfo: void <init>(java.lang.String,boolean)>($r3, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfo: void <init>(java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.services.common.AdvertisingInfo: boolean limitAdTrackingEnabled> = $z0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfo: void <init>(java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getInfoFromPreferences()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo advertisingInfo> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.Boolean explicitCheckLimitAdTracking()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return null
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.Boolean isLimitAdTrackingEnabled()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.SessionMetadataCollector: io.fabric.sdk.android.services.common.IdManager idManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.SessionMetadataCollector
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionMetadataCollector access$000(com.crashlytics.android.answers.AnswersEventsHandler)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionMetadataCollector access$000(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionMetadataCollector metadataCollector>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionMetadataCollector access$000(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler$4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler$4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>(r0, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = staticinvoke <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = specialinvoke $r1.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>(r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: io.fabric.sdk.android.ActivityLifecycleManager$Callbacks val$callbacks> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: java.util.Set registeredCallbacks>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 := @parameter0: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<io.fabric.sdk.android.ActivityLifecycleManager: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper callbacksWrapper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: io.fabric.sdk.android.ActivityLifecycleManager lifecycleManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>($l0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>($r1, 0, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>(r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r2.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionAnalyticsManagerStrategy strategy>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<io.fabric.sdk.android.services.events.FileRollOverManager: boolean rollFileOver()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<io.fabric.sdk.android.services.events.EventsStorage: void rollOver(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File targetDirectory>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>($r5, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("advertising_id", "") in method <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getInfoFromPreferences()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getInfoFromPreferences()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("advertising_id", "")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getInfoFromPreferences()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<io.fabric.sdk.android.services.common.AdvertisingInfo: void <init>(java.lang.String,boolean)>($r3, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfo: void <init>(java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.services.common.AdvertisingInfo: java.lang.String advertisingId> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfo: void <init>(java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getInfoFromPreferences()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo advertisingInfo> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: void checkAdvertisingIdRotation(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.SessionMetadataCollector: io.fabric.sdk.android.services.common.IdManager idManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.SessionMetadataCollector
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionMetadataCollector access$000(com.crashlytics.android.answers.AnswersEventsHandler)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionMetadataCollector access$000(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionMetadataCollector metadataCollector>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionMetadataCollector access$000(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler$4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler$4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>(r0, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = staticinvoke <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = specialinvoke $r1.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>(r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: io.fabric.sdk.android.ActivityLifecycleManager$Callbacks val$callbacks> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: java.util.Set registeredCallbacks>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 := @parameter0: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<io.fabric.sdk.android.ActivityLifecycleManager: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper callbacksWrapper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: io.fabric.sdk.android.ActivityLifecycleManager lifecycleManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>($l0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>($r1, 0, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>(r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r2.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionAnalyticsManagerStrategy strategy>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<io.fabric.sdk.android.services.events.FileRollOverManager: boolean rollFileOver()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<io.fabric.sdk.android.services.events.EventsStorage: void rollOver(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File targetDirectory>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>($r5, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r2.<java.util.zip.GZIPOutputStream: void write(byte[])>($r4) in method <com.crashlytics.android.core.CrashlyticsController: void gzip(byte[],java.io.File)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1) in method <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readFile(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void finalizeMostRecentNativeCrash(android.content.Context,java.io.File,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void gzipIfNotEmpty(byte[],java.io.File)>($r12, $r19)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void gzipIfNotEmpty(byte[],java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void gzip(byte[],java.io.File)>($r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void gzip(byte[],java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.util.zip.GZIPOutputStream: void write(byte[])>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.FileOutputStream: void write(byte[])>($r5) in method <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null) in method <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r11.<com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>(r0, $r5, $r2, $r3, $r7, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.core.CrashlyticsController$20: java.lang.String val$installUuid> = $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction)>($r1, "SessionApp.json", $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r6.<com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction: void writeTo(java.io.FileOutputStream)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = $r1.<com.crashlytics.android.core.CrashlyticsController$20: java.lang.String val$installUuid>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("install_uuid", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<org.json.JSONObject: void <init>(java.util.Map)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.FileOutputStream: void write(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null) in method <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r11.<com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>(r0, $r5, $r2, $r3, $r7, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.core.CrashlyticsController$20: java.lang.String val$installUuid> = $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction)>($r1, "SessionApp.json", $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r6.<com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction: void writeTo(java.io.FileOutputStream)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = $r1.<com.crashlytics.android.core.CrashlyticsController$20: java.lang.String val$installUuid>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("install_uuid", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<org.json.JSONObject: void <init>(java.util.Map)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.FileOutputStream: void write(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink specialinvoke $r2.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r3) in method <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null) in method <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r17.<com.crashlytics.android.answers.SessionEventMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, $r16, $r6, $r7, $r10, $r12, $r13, $r14, $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionEventMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.SessionEventMetadata: java.lang.String installationId> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionEventMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r17
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)>($r8, $r10, $r1, $r7, $r11, $r5, $r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionEventMetadata metadata> = $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionAnalyticsManagerStrategy strategy> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler$4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>(r0, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = staticinvoke <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = specialinvoke $r1.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>(r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: io.fabric.sdk.android.ActivityLifecycleManager$Callbacks val$callbacks> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: java.util.Set registeredCallbacks>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 := @parameter0: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<io.fabric.sdk.android.ActivityLifecycleManager: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper callbacksWrapper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: io.fabric.sdk.android.ActivityLifecycleManager lifecycleManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>(r0, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>($l0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>($r1, 0, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>(r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r2.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionAnalyticsManagerStrategy strategy>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<io.fabric.sdk.android.services.events.FileRollOverManager: boolean rollFileOver()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<io.fabric.sdk.android.services.events.EventsStorage: void rollOver(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File targetDirectory>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>($r5, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null) in method <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r17.<com.crashlytics.android.answers.SessionEventMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, $r16, $r6, $r7, $r10, $r12, $r13, $r14, $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionEventMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.SessionEventMetadata: java.lang.String installationId> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionEventMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r17
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)>($r8, $r10, $r1, $r7, $r11, $r5, $r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionEventMetadata metadata> = $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionAnalyticsManagerStrategy strategy> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler$4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>(r0, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = staticinvoke <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = specialinvoke $r1.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>(r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: io.fabric.sdk.android.ActivityLifecycleManager$Callbacks val$callbacks> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: java.util.Set registeredCallbacks>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 := @parameter0: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<io.fabric.sdk.android.ActivityLifecycleManager: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper callbacksWrapper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: io.fabric.sdk.android.ActivityLifecycleManager lifecycleManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>(r0, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>($l0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>($r1, 0, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>(r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r2.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionAnalyticsManagerStrategy strategy>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<io.fabric.sdk.android.services.events.FileRollOverManager: boolean rollFileOver()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<io.fabric.sdk.android.services.events.EventsStorage: void rollOver(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File targetDirectory>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>($r5, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("limit_ad_tracking_enabled", 0) in method <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getInfoFromPreferences()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getInfoFromPreferences()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("limit_ad_tracking_enabled", 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getInfoFromPreferences()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<io.fabric.sdk.android.services.common.AdvertisingInfo: void <init>(java.lang.String,boolean)>($r3, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfo: void <init>(java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.services.common.AdvertisingInfo: boolean limitAdTrackingEnabled> = $z0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfo: void <init>(java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getInfoFromPreferences()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo advertisingInfo> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.Boolean explicitCheckLimitAdTracking()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return null
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.Boolean isLimitAdTrackingEnabled()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.SessionMetadataCollector: io.fabric.sdk.android.services.common.IdManager idManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.SessionMetadataCollector
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionMetadataCollector access$000(com.crashlytics.android.answers.AnswersEventsHandler)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionMetadataCollector access$000(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionMetadataCollector metadataCollector>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionMetadataCollector access$000(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler$4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler$4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>(r0, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = staticinvoke <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = specialinvoke $r1.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>(r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: io.fabric.sdk.android.ActivityLifecycleManager$Callbacks val$callbacks> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: java.util.Set registeredCallbacks>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 := @parameter0: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<io.fabric.sdk.android.ActivityLifecycleManager: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper callbacksWrapper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: io.fabric.sdk.android.ActivityLifecycleManager lifecycleManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>($l0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>($r1, 0, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>(r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r2.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionAnalyticsManagerStrategy strategy>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<io.fabric.sdk.android.services.events.FileRollOverManager: boolean rollFileOver()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<io.fabric.sdk.android.services.events.EventsStorage: void rollOver(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File targetDirectory>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>($r5, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("advertising_id", "") in method <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getInfoFromPreferences()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getInfoFromPreferences()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("advertising_id", "")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getInfoFromPreferences()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<io.fabric.sdk.android.services.common.AdvertisingInfo: void <init>(java.lang.String,boolean)>($r3, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfo: void <init>(java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.services.common.AdvertisingInfo: java.lang.String advertisingId> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfo: void <init>(java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getInfoFromPreferences()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo advertisingInfo> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: void checkAdvertisingIdRotation(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.SessionMetadataCollector: io.fabric.sdk.android.services.common.IdManager idManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.SessionMetadataCollector
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionMetadataCollector access$000(com.crashlytics.android.answers.AnswersEventsHandler)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionMetadataCollector access$000(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionMetadataCollector metadataCollector>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionMetadataCollector access$000(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler$4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler$4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>(r0, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = staticinvoke <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = specialinvoke $r1.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>(r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: io.fabric.sdk.android.ActivityLifecycleManager$Callbacks val$callbacks> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: java.util.Set registeredCallbacks>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 := @parameter0: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<io.fabric.sdk.android.ActivityLifecycleManager: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper callbacksWrapper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: io.fabric.sdk.android.ActivityLifecycleManager lifecycleManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>($l0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>($r1, 0, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>(r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r2.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionAnalyticsManagerStrategy strategy>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<io.fabric.sdk.android.services.events.FileRollOverManager: boolean rollFileOver()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<io.fabric.sdk.android.services.events.EventsStorage: void rollOver(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File targetDirectory>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>($r5, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i0) in method <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1) in method <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r4.<java.io.FileWriter: void write(java.lang.String)>($r9) in method <io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: void writeCachedSettings(long,org.json.JSONObject)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r2) in method <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<io.fabric.sdk.android.services.network.HttpRequest$6: java.io.OutputStream val$output>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$Operation: java.lang.Object call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.services.network.HttpRequest$Operation
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest copy(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest$6: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Closeable,boolean,java.io.InputStream,java.io.OutputStream)>(r0, $r4, $z0, $r4, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$6: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Closeable,boolean,java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.services.network.HttpRequest$6: java.io.OutputStream val$output> = $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$6: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Closeable,boolean,java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest copy(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String body(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String body(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String body()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsSpiCall: org.json.JSONObject handleResponse(io.fabric.sdk.android.services.network.HttpRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = specialinvoke r0.<io.fabric.sdk.android.services.settings.DefaultSettingsSpiCall: org.json.JSONObject getJsonObjectFrom(java.lang.String)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsSpiCall: org.json.JSONObject getJsonObjectFrom(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<org.json.JSONObject: void <init>(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsSpiCall: org.json.JSONObject getJsonObjectFrom(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsSpiCall: org.json.JSONObject handleResponse(io.fabric.sdk.android.services.network.HttpRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsSpiCall: org.json.JSONObject invoke(io.fabric.sdk.android.services.settings.SettingsRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.settings.SettingsData loadSettingsData(io.fabric.sdk.android.services.settings.SettingsCacheBehavior)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r9.<io.fabric.sdk.android.services.settings.CachedSettingsIo: void writeCachedSettings(long,org.json.JSONObject)>($l0, $r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: void writeCachedSettings(long,org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: void writeCachedSettings(long,org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<java.io.FileWriter: void write(java.lang.String)>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - specialinvoke $r1.<java.util.Scanner: void <init>(java.io.InputStream)>($r0) in method <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String streamToString(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String streamToString(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<java.util.Scanner: void <init>(java.io.InputStream)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String streamToString(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: org.json.JSONObject readCachedSettings()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r2, "Error while closing settings cache file.")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: org.json.JSONObject readCachedSettings()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String streamToString(java.io.InputStream)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String streamToString(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<java.util.Scanner: void <init>(java.io.InputStream)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String streamToString(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<java.util.Scanner: java.lang.String next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String streamToString(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: org.json.JSONObject readCachedSettings()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<org.json.JSONObject: void <init>(java.lang.String)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: org.json.JSONObject readCachedSettings()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.settings.SettingsData getCachedSettingsData(io.fabric.sdk.android.services.settings.SettingsCacheBehavior)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = interfaceinvoke $r6.<io.fabric.sdk.android.services.settings.SettingsJsonTransform: io.fabric.sdk.android.services.settings.SettingsData buildFromJson(io.fabric.sdk.android.services.common.CurrentTimeProvider,org.json.JSONObject)>($r7, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsJsonTransform: io.fabric.sdk.android.services.settings.SettingsData buildFromJson(io.fabric.sdk.android.services.common.CurrentTimeProvider,org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = virtualinvoke $r1.<org.json.JSONObject: int optInt(java.lang.String,int)>("cache_duration", 3600)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsJsonTransform: io.fabric.sdk.android.services.settings.SettingsData buildFromJson(io.fabric.sdk.android.services.common.CurrentTimeProvider,org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = (long) $i1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsJsonTransform: io.fabric.sdk.android.services.settings.SettingsData buildFromJson(io.fabric.sdk.android.services.common.CurrentTimeProvider,org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<io.fabric.sdk.android.services.settings.SettingsData: void <init>(long,io.fabric.sdk.android.services.settings.AppSettingsData,io.fabric.sdk.android.services.settings.SessionSettingsData,io.fabric.sdk.android.services.settings.PromptSettingsData,io.fabric.sdk.android.services.settings.FeaturesSettingsData,io.fabric.sdk.android.services.settings.AnalyticsSettingsData,io.fabric.sdk.android.services.settings.BetaSettingsData,int,int)>($l2, $r4, $r5, $r6, $r7, $r8, $r9, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.SettingsData: void <init>(long,io.fabric.sdk.android.services.settings.AppSettingsData,io.fabric.sdk.android.services.settings.SessionSettingsData,io.fabric.sdk.android.services.settings.PromptSettingsData,io.fabric.sdk.android.services.settings.FeaturesSettingsData,io.fabric.sdk.android.services.settings.AnalyticsSettingsData,io.fabric.sdk.android.services.settings.BetaSettingsData,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.services.settings.SettingsData: long expiresAtMillis> = $l0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.SettingsData: void <init>(long,io.fabric.sdk.android.services.settings.AppSettingsData,io.fabric.sdk.android.services.settings.SessionSettingsData,io.fabric.sdk.android.services.settings.PromptSettingsData,io.fabric.sdk.android.services.settings.FeaturesSettingsData,io.fabric.sdk.android.services.settings.AnalyticsSettingsData,io.fabric.sdk.android.services.settings.BetaSettingsData,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsJsonTransform: io.fabric.sdk.android.services.settings.SettingsData buildFromJson(io.fabric.sdk.android.services.common.CurrentTimeProvider,org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.settings.SettingsData getCachedSettingsData(io.fabric.sdk.android.services.settings.SettingsCacheBehavior)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.settings.SettingsData loadSettingsData(io.fabric.sdk.android.services.settings.SettingsCacheBehavior)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l0 = $r3.<io.fabric.sdk.android.services.settings.SettingsData: long expiresAtMillis>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.settings.SettingsData loadSettingsData(io.fabric.sdk.android.services.settings.SettingsCacheBehavior)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r9.<io.fabric.sdk.android.services.settings.CachedSettingsIo: void writeCachedSettings(long,org.json.JSONObject)>($l0, $r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: void writeCachedSettings(long,org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("expires_at", $l0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: void writeCachedSettings(long,org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.settings.SettingsData loadSettingsData(io.fabric.sdk.android.services.settings.SettingsCacheBehavior)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r9.<io.fabric.sdk.android.services.settings.CachedSettingsIo: void writeCachedSettings(long,org.json.JSONObject)>($l0, $r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: void writeCachedSettings(long,org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: void writeCachedSettings(long,org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<java.io.FileWriter: void write(java.lang.String)>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0) in method <com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null) in method <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<com.crashlytics.android.core.CrashlyticsController$19: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>(r0, $r5, $r2, $r3, $r7, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$19: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.core.CrashlyticsController$19: java.lang.String val$installUuid> = $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$19: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction)>($r1, "SessionApp", $r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r4.<com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction: void writeTo(com.crashlytics.android.core.CodedOutputStream)>($r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$19: void writeTo(com.crashlytics.android.core.CodedOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.crashlytics.android.core.CrashlyticsController$19: java.lang.String val$installUuid>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$19: void writeTo(com.crashlytics.android.core.CodedOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionApp(com.crashlytics.android.core.CodedOutputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>($r1, $r2, $r3, $r4, $r5, $r6, $i0, $r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionApp(com.crashlytics.android.core.CodedOutputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11 = staticinvoke <com.crashlytics.android.core.ByteString: com.crashlytics.android.core.ByteString copyFromUtf8(java.lang.String)>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: com.crashlytics.android.core.ByteString copyFromUtf8(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: com.crashlytics.android.core.ByteString copyFromUtf8(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.core.ByteString: void <init>(byte[])>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void <init>(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.core.ByteString: byte[] bytes> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void <init>(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: com.crashlytics.android.core.ByteString copyFromUtf8(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionApp(com.crashlytics.android.core.CodedOutputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<com.crashlytics.android.core.CodedOutputStream: void writeBytes(int,com.crashlytics.android.core.ByteString)>(6, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeBytes(int,com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeBytesNoTag(com.crashlytics.android.core.ByteString)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeBytesNoTag(com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>($r2, 0, $i3, $i2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.core.ByteString: byte[] bytes>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, $r1, $i1, $i2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, $i2, $i1) in method <com.crashlytics.android.core.CrashlyticsController: void copyToCodedOutputStream(java.io.InputStream,com.crashlytics.android.core.CodedOutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void copyToCodedOutputStream(java.io.InputStream,com.crashlytics.android.core.CodedOutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, $i2, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void copyToCodedOutputStream(java.io.InputStream,com.crashlytics.android.core.CodedOutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, $i3, $i2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null) in method <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<com.crashlytics.android.core.CrashlyticsController$19: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>(r0, $r5, $r2, $r3, $r7, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$19: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.core.CrashlyticsController$19: java.lang.String val$installUuid> = $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$19: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction)>($r1, "SessionApp", $r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r4.<com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction: void writeTo(com.crashlytics.android.core.CodedOutputStream)>($r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$19: void writeTo(com.crashlytics.android.core.CodedOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.crashlytics.android.core.CrashlyticsController$19: java.lang.String val$installUuid>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$19: void writeTo(com.crashlytics.android.core.CodedOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionApp(com.crashlytics.android.core.CodedOutputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>($r1, $r2, $r3, $r4, $r5, $r6, $i0, $r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionApp(com.crashlytics.android.core.CodedOutputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11 = staticinvoke <com.crashlytics.android.core.ByteString: com.crashlytics.android.core.ByteString copyFromUtf8(java.lang.String)>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: com.crashlytics.android.core.ByteString copyFromUtf8(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: com.crashlytics.android.core.ByteString copyFromUtf8(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.core.ByteString: void <init>(byte[])>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void <init>(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.core.ByteString: byte[] bytes> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void <init>(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: com.crashlytics.android.core.ByteString copyFromUtf8(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionApp(com.crashlytics.android.core.CodedOutputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<com.crashlytics.android.core.CodedOutputStream: void writeBytes(int,com.crashlytics.android.core.ByteString)>(6, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeBytes(int,com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeBytesNoTag(com.crashlytics.android.core.ByteString)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeBytesNoTag(com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>($r2, 0, $i3, $i2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.core.ByteString: byte[] bytes>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, $r1, $i1, $i2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r2.<java.util.zip.GZIPOutputStream: void write(byte[])>($r4) in method <com.crashlytics.android.core.CrashlyticsController: void gzip(byte[],java.io.File)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1) in method <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readFile(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void finalizeMostRecentNativeCrash(android.content.Context,java.io.File,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void gzipIfNotEmpty(byte[],java.io.File)>($r12, $r19)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void gzipIfNotEmpty(byte[],java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void gzip(byte[],java.io.File)>($r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void gzip(byte[],java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.util.zip.GZIPOutputStream: void write(byte[])>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Data flow solver took 1132 seconds. Maximum memory consumption: 243922 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication - Found 13 leaks
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/fd-with-parametermappings-edgeminer/DFResults-com.connectyourcare.mobile30FA40C797FB22BF1F45782DD84FB27AA2554ABC78.apk/<io.fabric.sdk.android.services.settings.SettingsData: void <init>(long,io.fabric.sdk.android.services.settings.AppSettingsData,io.fabric.sdk.android.services.settings.SessionSettingsData,io.fabric.sdk.android.services.settings.PromptSettingsData,io.fabric.sdk.android.services.settings.FeaturesSettingsData,io.fabric.sdk.android.services.settings.AnalyticsSettingsData,io.fabric.sdk.android.services.settings.BetaSettingsData,int,int)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/fd-with-parametermappings-edgeminer/DFResults-com.connectyourcare.mobile30FA40C797FB22BF1F45782DD84FB27AA2554ABC78.apk/<io.fabric.sdk.android.services.settings.SettingsData: void <init>(long,io.fabric.sdk.android.services.settings.AppSettingsData,io.fabric.sdk.android.services.settings.SessionSettingsData,io.fabric.sdk.android.services.settings.PromptSettingsData,io.fabric.sdk.android.services.settings.FeaturesSettingsData,io.fabric.sdk.android.services.settings.AnalyticsSettingsData,io.fabric.sdk.android.services.settings.BetaSettingsData,int,int)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/fd-with-parametermappings-edgeminer/DFResults-com.connectyourcare.mobile30FA40C797FB22BF1F45782DD84FB27AA2554ABC78.apk/<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/fd-with-parametermappings-edgeminer/DFResults-com.connectyourcare.mobile30FA40C797FB22BF1F45782DD84FB27AA2554ABC78.apk/<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/fd-with-parametermappings-edgeminer/DFResults-com.connectyourcare.mobile30FA40C797FB22BF1F45782DD84FB27AA2554ABC78.apk/<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/fd-with-parametermappings-edgeminer/DFResults-com.connectyourcare.mobile30FA40C797FB22BF1F45782DD84FB27AA2554ABC78.apk/<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/fd-with-parametermappings-edgeminer/DFResults-com.connectyourcare.mobile30FA40C797FB22BF1F45782DD84FB27AA2554ABC78.apk/<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/fd-with-parametermappings-edgeminer/DFResults-com.connectyourcare.mobile30FA40C797FB22BF1F45782DD84FB27AA2554ABC78.apk/<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/fd-with-parametermappings-edgeminer/DFResults-com.connectyourcare.mobile30FA40C797FB22BF1F45782DD84FB27AA2554ABC78.apk/<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/fd-with-parametermappings-edgeminer/DFResults-com.connectyourcare.mobile30FA40C797FB22BF1F45782DD84FB27AA2554ABC78.apk/<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'SummaryStatistics'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Telemetry'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'Telemetry_sha256Hash_idx' for table 'Telemetry
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Callbacks'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallbackSummaries'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'CallbackSummaries_sha256Hash_idx' for table 'CallbackSummaries
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'AppSizes'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'AppSizes_sha256Hash_idx' for table 'AppSizes
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallgraphSizes'
