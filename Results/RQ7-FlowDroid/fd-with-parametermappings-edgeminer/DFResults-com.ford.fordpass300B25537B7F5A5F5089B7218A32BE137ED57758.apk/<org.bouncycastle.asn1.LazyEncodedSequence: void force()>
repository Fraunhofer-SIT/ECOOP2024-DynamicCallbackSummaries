    private void force()
    {
        org.bouncycastle.asn1.ASN1Primitive $r5;
        byte[] $r3;
        org.bouncycastle.asn1.LazyConstructionEnumeration $r1;
        org.bouncycastle.asn1.LazyEncodedSequence r0;
        org.bouncycastle.asn1.ASN1EncodableVector $r2;
        java.lang.Object $r4;
        org.bouncycastle.asn1.ASN1Encodable[] $r6;
        boolean $z0;

        r0 := @this: org.bouncycastle.asn1.LazyEncodedSequence;

        $r3 = r0.<org.bouncycastle.asn1.LazyEncodedSequence: byte[] encoded>;

        if $r3 == null goto label3;

        $r2 = new org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r2.<org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r1 = new org.bouncycastle.asn1.LazyConstructionEnumeration;

        $r3 = r0.<org.bouncycastle.asn1.LazyEncodedSequence: byte[] encoded>;

        specialinvoke $r1.<org.bouncycastle.asn1.LazyConstructionEnumeration: void <init>(byte[])>($r3);

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r5 = (org.bouncycastle.asn1.ASN1Primitive) $r4;

        virtualinvoke $r2.<org.bouncycastle.asn1.ASN1EncodableVector: void add(org.bouncycastle.asn1.ASN1Encodable)>($r5);

        goto label1;

     label2:
        $r6 = virtualinvoke $r2.<org.bouncycastle.asn1.ASN1EncodableVector: org.bouncycastle.asn1.ASN1Encodable[] takeElements()>();

        r0.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.ASN1Encodable[] elements> = $r6;

        r0.<org.bouncycastle.asn1.LazyEncodedSequence: byte[] encoded> = null;

     label3:
        return;
    }
