    public void <init>(java.io.InputStream, int, int)
    {
        org.bouncycastle.asn1.DefiniteLengthInputStream r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;
        java.io.InputStream $r1;

        r0 := @this: org.bouncycastle.asn1.DefiniteLengthInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<org.bouncycastle.asn1.LimitedInputStream: void <init>(java.io.InputStream,int)>($r1, $i1);

        if $i0 < 0 goto label1;

        r0.<org.bouncycastle.asn1.DefiniteLengthInputStream: int _originalLength> = $i0;

        r0.<org.bouncycastle.asn1.DefiniteLengthInputStream: int _remaining> = $i0;

        if $i0 != 0 goto label2;

        virtualinvoke r0.<org.bouncycastle.asn1.LimitedInputStream: void setParentEofDetect(boolean)>(1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("negative lengths not allowed");

        throw $r2;

     label2:
        return;
    }
