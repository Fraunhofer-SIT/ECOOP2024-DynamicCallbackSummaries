    protected void send(java.io.OutputStream)
    {
        java.lang.Throwable $r20;
        java.util.Date $r12;
        java.text.SimpleDateFormat $r3;
        java.lang.Error $r19;
        com.app.shareall.service.WebShareServer$ZipBundleResponse r0;
        java.util.Locale $r4;
        fi.iki.elonen.NanoHTTPD$Method $r17, $r18;
        java.util.Map $r13;
        java.io.OutputStreamWriter $r9;
        java.lang.String $r2, $r11;
        boolean $z0;
        java.io.OutputStream $r1;
        java.io.PrintWriter $r7;
        java.util.Iterator $r15;
        java.util.TimeZone $r5;
        java.io.BufferedWriter $r8;
        java.util.Set $r14;
        fi.iki.elonen.NanoHTTPD$Response$IStatus $r6;
        java.lang.StringBuilder $r10;
        java.lang.Object $r16;
        java.lang.Class $r21;

        r0 := @this: com.app.shareall.service.WebShareServer$ZipBundleResponse;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 = virtualinvoke r0.<com.app.shareall.service.WebShareServer$ZipBundleResponse: java.lang.String getMimeType()>();

        $r3 = new java.text.SimpleDateFormat;

        $r4 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("E, d MMM yyyy HH:mm:ss \'GMT\'", $r4);

        $r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r3.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r5);

     label01:
        $r6 = virtualinvoke r0.<com.app.shareall.service.WebShareServer$ZipBundleResponse: fi.iki.elonen.NanoHTTPD$Response$IStatus getStatus()>();

     label02:
        if $r6 == null goto label34;

        $r7 = new java.io.PrintWriter;

        $r8 = new java.io.BufferedWriter;

        $r9 = new java.io.OutputStreamWriter;

     label03:
        specialinvoke $r9.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r1, "UTF-8");

        specialinvoke $r8.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r9);

        specialinvoke $r7.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r8, 0);

     label04:
        $r10 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP/1.1 ");

        $r6 = virtualinvoke r0.<com.app.shareall.service.WebShareServer$ZipBundleResponse: fi.iki.elonen.NanoHTTPD$Response$IStatus getStatus()>();

        $r11 = interfaceinvoke $r6.<fi.iki.elonen.NanoHTTPD$Response$IStatus: java.lang.String getDescription()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \r\n");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintWriter: void print(java.lang.String)>($r11);

     label06:
        if $r2 == null goto label08;

        $r10 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Type: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintWriter: void print(java.lang.String)>($r2);

     label08:
        $r2 = virtualinvoke r0.<com.app.shareall.service.WebShareServer$ZipBundleResponse: java.lang.String getHeader(java.lang.String)>("Date");

     label09:
        if $r2 != null goto label13;

        $r10 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Date: ");

     label11:
        $r12 = new java.util.Date;

     label12:
        specialinvoke $r12.<java.util.Date: void <init>()>();

        $r2 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r12);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintWriter: void print(java.lang.String)>($r2);

     label13:
        $r13 = r0.<com.app.shareall.service.WebShareServer$ZipBundleResponse: java.util.Map mHeader>;

     label14:
        $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Set keySet()>();

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label15:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

     label16:
        if $z0 == 0 goto label23;

     label17:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

     label18:
        $r2 = (java.lang.String) $r16;

        $r13 = r0.<com.app.shareall.service.WebShareServer$ZipBundleResponse: java.util.Map mHeader>;

     label19:
        $r16 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

     label20:
        $r11 = (java.lang.String) $r16;

        $r10 = new java.lang.StringBuilder;

     label21:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintWriter: void print(java.lang.String)>($r2);

     label22:
        goto label15;

     label23:
        $r13 = r0.<com.app.shareall.service.WebShareServer$ZipBundleResponse: java.util.Map mHeader>;

     label24:
        $z0 = staticinvoke <com.app.shareall.service.WebShareServer: boolean access$000(java.util.Map,java.lang.String)>($r13, "connection");

     label25:
        if $z0 != 0 goto label30;

        $r10 = new java.lang.StringBuilder;

     label26:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connection: ");

     label27:
        $z0 = r0.<com.app.shareall.service.WebShareServer$ZipBundleResponse: boolean mKeepAlive>;

        if $z0 == 0 goto label28;

        $r2 = "keep-alive";

        goto label29;

     label28:
        $r2 = "close";

     label29:
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintWriter: void print(java.lang.String)>($r2);

     label30:
        $r17 = r0.<com.app.shareall.service.WebShareServer$ZipBundleResponse: fi.iki.elonen.NanoHTTPD$Method mRequestMethod>;

        $r18 = <fi.iki.elonen.NanoHTTPD$Method: fi.iki.elonen.NanoHTTPD$Method HEAD>;

        if $r17 == $r18 goto label32;

     label31:
        virtualinvoke $r7.<java.io.PrintWriter: void print(java.lang.String)>("Transfer-Encoding: chunked\r\n");

     label32:
        virtualinvoke $r7.<java.io.PrintWriter: void print(java.lang.String)>("\r\n");

        virtualinvoke $r7.<java.io.PrintWriter: void flush()>();

        specialinvoke r0.<com.app.shareall.service.WebShareServer$ZipBundleResponse: void sendBody(java.io.OutputStream)>($r1);

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

     label33:
        return;

     label34:
        $r19 = new java.lang.Error;

     label35:
        specialinvoke $r19.<java.lang.Error: void <init>(java.lang.String)>("sendResponse(): Status can\'t be null.");

     label36:
        throw $r19;

     label37:
        $r20 := @caughtexception;

        $r21 = class "Lcom/app/shareall/service/WebShareServer;";

        $r2 = virtualinvoke $r21.<java.lang.Class: java.lang.String getSimpleName()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Could not send response to the client", $r20);

        return;

        catch java.io.IOException from label01 to label02 with label37;
        catch java.io.IOException from label03 to label04 with label37;
        catch java.io.IOException from label05 to label06 with label37;
        catch java.io.IOException from label07 to label09 with label37;
        catch java.io.IOException from label10 to label11 with label37;
        catch java.io.IOException from label12 to label13 with label37;
        catch java.io.IOException from label14 to label16 with label37;
        catch java.io.IOException from label17 to label18 with label37;
        catch java.io.IOException from label19 to label20 with label37;
        catch java.io.IOException from label21 to label22 with label37;
        catch java.io.IOException from label24 to label25 with label37;
        catch java.io.IOException from label26 to label27 with label37;
        catch java.io.IOException from label29 to label30 with label37;
        catch java.io.IOException from label31 to label33 with label37;
        catch java.io.IOException from label35 to label36 with label37;
    }
