    private static void debug(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable $r2;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r3;
        int $i0, $i1;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $z0 = <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: boolean consoleLoggingEnabled>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2);

     label1:
        $z0 = <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: boolean fileLoggingEnabled>;

        if $z0 == 0 goto label2;

        $i1 = <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: int logLevel>;

        $r3 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $i0 = virtualinvoke $r3.<com.adobe.creativesdk.foundation.internal.utils.logging.Level: int getValue()>();

        if $i1 > $i0 goto label2;

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2);

     label2:
        return;
    }
