    private static java.lang.String toString(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud) throws java.io.IOException
    {
        byte[] $r6;
        com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud $r0;
        java.io.ByteArrayOutputStream r1;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r3;
        java.io.ObjectOutputStream r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @parameter0: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud;

        $r3 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adobe Cloud being saved to cache =");

        $r5 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r3, "AdobeCloudManager", $r5);

        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        r2 = new java.io.ObjectOutputStream;

        specialinvoke r2.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r1);

        virtualinvoke r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r0);

        virtualinvoke r2.<java.io.ObjectOutputStream: void close()>();

        $r5 = new java.lang.String;

        $r6 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r6 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>($r6, 0);

        specialinvoke $r5.<java.lang.String: void <init>(byte[],java.lang.String)>($r6, "UTF-8");

        return $r5;
    }
