Source: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r0, $i2, $i0)
$i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r0, $i2, $i0) in <o.ικ: void ɩ(java.io.InputStream,o.ει,int)>
Sink: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0) in <o.ει: void ı()>

<o.ικ: void ɩ(java.io.InputStream,o.ει,int)>: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r0, $i2, $i0)
<o.ικ: void ɩ(java.io.InputStream,o.ει,int)>: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r3, $i0, $i2)
<o.ικ: void ɩ(java.io.InputStream,o.ει,int)>: $r3 = $r2.<o.ει: byte[] ι>
<o.ικ: void ɩ(java.io.InputStream,o.ει,int)>: virtualinvoke $r2.<o.ει: void ı()>()
<o.ει: void ı()>: $r1 = r0.<o.ει: byte[] ι>
<o.ει: void ı()>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0)
