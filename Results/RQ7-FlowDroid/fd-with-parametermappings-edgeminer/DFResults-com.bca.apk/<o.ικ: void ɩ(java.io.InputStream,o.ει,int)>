    private static void \u0269(java.io.InputStream, o.\u03b5\u03b9, int)
    {
        java.io.OutputStream $r4;
        byte[] $r0, $r3;
        o.\u03b5\u03b9 $r2;
        int $i0, $i1, $i2;
        java.io.InputStream $r1;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: o.\u03b5\u03b9;

        $i1 := @parameter2: int;

        $r0 = newarray (byte)[$i1];

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $i0 = $i1 - $i2;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r0, $i2, $i0);

        if $i0 < 0 goto label2;

        $i2 = $i2 + $i0;

        goto label1;

     label2:
        $i2 = $r2.<o.\u03b5\u03b9: int \u0399>;

        $i2 = 4096 - $i2;

        if $i2 < $i1 goto label3;

        $r3 = $r2.<o.\u03b5\u03b9: byte[] \u03b9>;

        $i2 = $r2.<o.\u03b5\u03b9: int \u0399>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r3, $i2, $i1);

        $i2 = $r2.<o.\u03b5\u03b9: int \u0399>;

        $i1 = $i2 + $i1;

        $r2.<o.\u03b5\u03b9: int \u0399> = $i1;

        return;

     label3:
        $i2 = $r2.<o.\u03b5\u03b9: int \u0399>;

        $i2 = 4096 - $i2;

        $r3 = $r2.<o.\u03b5\u03b9: byte[] \u03b9>;

        $i0 = $r2.<o.\u03b5\u03b9: int \u0399>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r3, $i0, $i2);

        $i1 = $i1 - $i2;

        $r2.<o.\u03b5\u03b9: int \u0399> = 4096;

        virtualinvoke $r2.<o.\u03b5\u03b9: void \u0131()>();

        if $i1 > 4096 goto label4;

        $r3 = $r2.<o.\u03b5\u03b9: byte[] \u03b9>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, $i2, $r3, 0, $i1);

        $r2.<o.\u03b5\u03b9: int \u0399> = $i1;

        return;

     label4:
        $r4 = $r2.<o.\u03b5\u03b9: java.io.OutputStream \u01c3>;

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r0, $i2, $i1);

        return;
    }
