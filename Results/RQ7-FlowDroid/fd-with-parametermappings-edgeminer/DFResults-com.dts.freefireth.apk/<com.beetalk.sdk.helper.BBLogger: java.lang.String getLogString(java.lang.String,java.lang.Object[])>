    private static transient java.lang.String getLogString(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] $r1;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r0, $r4;
        java.lang.Exception r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object[];

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label5;

        if $r1 == null goto label4;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label4;

        $r3 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <com.beetalk.sdk.helper.BBLogger: java.lang.String __generateLineInfo()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = staticinvoke <com.beetalk.sdk.helper.BBLogger: java.lang.String getThreadInfo()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = staticinvoke <com.beetalk.sdk.helper.BBLogger: java.lang.String format(java.lang.String,java.lang.Object[])>($r0, $r1);

        $r4 = staticinvoke <com.beetalk.sdk.helper.BBLogger: java.lang.String stripTokens(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r4;

     label3:
        r2 := @caughtexception;

        staticinvoke <com.beetalk.sdk.helper.BBLogger: void e(java.lang.Exception)>(r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <com.beetalk.sdk.helper.BBLogger: java.lang.String __generateLineInfo()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = staticinvoke <com.beetalk.sdk.helper.BBLogger: java.lang.String getThreadInfo()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <com.beetalk.sdk.helper.BBLogger: java.lang.String __generateLineInfo()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = staticinvoke <com.beetalk.sdk.helper.BBLogger: java.lang.String getThreadInfo()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label5:
        return "";

        catch java.lang.Exception from label1 to label2 with label3;
    }
