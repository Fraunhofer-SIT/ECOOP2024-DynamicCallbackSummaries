    public static byte[] a(byte[])
    {
        byte[] $r0, $r1;
        java.util.zip.GZIPInputStream $r3;
        java.io.ByteArrayInputStream $r2;
        java.io.ByteArrayOutputStream $r4;
        int $i0;

        $r0 := @parameter0: byte[];

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r0);

        $r3 = new java.util.zip.GZIPInputStream;

        specialinvoke $r3.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r2);

        $r1 = newarray (byte)[4096];

        $r4 = new java.io.ByteArrayOutputStream;

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

     label1:
        $i0 = virtualinvoke $r3.<java.util.zip.GZIPInputStream: int read(byte[])>($r1);

        if $i0 == -1 goto label2;

        virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i0);

        goto label1;

     label2:
        $r0 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r2.<java.io.ByteArrayInputStream: void close()>();

        virtualinvoke $r3.<java.util.zip.GZIPInputStream: void close()>();

        virtualinvoke $r4.<java.io.ByteArrayOutputStream: void close()>();

        return $r0;
    }
