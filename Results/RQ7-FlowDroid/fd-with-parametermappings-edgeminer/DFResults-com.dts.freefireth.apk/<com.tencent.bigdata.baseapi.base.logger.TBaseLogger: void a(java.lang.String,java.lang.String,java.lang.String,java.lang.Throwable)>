    private static void a(java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable $r1, $r11;
        java.io.PrintWriter $r13;
        java.util.Date $r6;
        java.io.StringWriter $r12;
        java.text.SimpleDateFormat $r5;
        java.io.StringReader $r7;
        java.lang.StringBuilder $r9;
        java.lang.String $r0, $r2, $r3, $r4, $r10;
        java.io.BufferedReader $r8;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r1 := @parameter3: java.lang.Throwable;

        if $r2 == null goto label01;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label02;

     label01:
        $r2 = "TBase - TPush";

     label02:
        $r5 = <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: java.text.SimpleDateFormat e>;

        $r6 = new java.util.Date;

        specialinvoke $r6.<java.util.Date: void <init>()>();

        $r4 = virtualinvoke $r5.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r6);

        if $r3 != null goto label03;

        $r3 = "";

     label03:
        $r7 = new java.io.StringReader;

        specialinvoke $r7.<java.io.StringReader: void <init>(java.lang.String)>($r3);

        $r8 = new java.io.BufferedReader;

        specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r7, 256);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = staticinvoke <com.tencent.bigdata.baseapi.base.logger.LogUtil: java.lang.String fixedLengthString(java.lang.String,int)>($r2, 24);

     label04:
        $r3 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>();

     label05:
        if $r3 == null goto label13;

        $r9 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

     label07:
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: java.lang.String h()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label08:
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = staticinvoke <com.tencent.bigdata.baseapi.base.logger.LogUtil: java.lang.String fixedLengthString(java.lang.String,int)>($r0, 5);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label09:
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label10:
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>($r3);

     label11:
        goto label04;

     label12:
        $r11 := @caughtexception;

        staticinvoke <com.google.devtools.build.android.desugar.runtime.ThrowableExtension: void printStackTrace(java.lang.Throwable)>($r11);

     label13:
        if $r1 == null goto label14;

        $r12 = new java.io.StringWriter;

        specialinvoke $r12.<java.io.StringWriter: void <init>()>();

        $r13 = new java.io.PrintWriter;

        specialinvoke $r13.<java.io.PrintWriter: void <init>(java.io.Writer)>($r12);

        staticinvoke <com.google.devtools.build.android.desugar.runtime.ThrowableExtension: void printStackTrace(java.lang.Throwable,java.io.PrintWriter)>($r1, $r13);

        $r2 = virtualinvoke $r12.<java.io.StringWriter: java.lang.String toString()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r3 = staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: java.lang.String h()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r0 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>($r0);

     label14:
        return;

        catch java.io.IOException from label04 to label05 with label12;
        catch java.io.IOException from label06 to label07 with label12;
        catch java.io.IOException from label07 to label08 with label12;
        catch java.io.IOException from label08 to label09 with label12;
        catch java.io.IOException from label09 to label10 with label12;
        catch java.io.IOException from label10 to label11 with label12;
    }
