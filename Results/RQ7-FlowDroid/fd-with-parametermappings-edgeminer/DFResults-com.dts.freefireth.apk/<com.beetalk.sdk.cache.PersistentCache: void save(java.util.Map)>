    public void save(java.util.Map)
    {
        java.lang.Object[] $r9;
        java.util.Iterator $r6;
        java.util.Set $r5;
        java.util.HashMap r4;
        com.beetalk.sdk.cache.PersistentCache r0;
        com.beetalk.sdk.cache.SharedPrefStorage $r2;
        java.util.Map r1, $r3;
        java.lang.Object $r7;
        java.lang.String r8;
        boolean $z0;

        r0 := @this: com.beetalk.sdk.cache.PersistentCache;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<com.beetalk.sdk.cache.PersistentCache: com.beetalk.sdk.cache.SharedPrefStorage mFallbackStorage>;

        virtualinvoke $r2.<com.beetalk.sdk.cache.SharedPrefStorage: void save(java.util.Map)>(r1);

        $z0 = specialinvoke r0.<com.beetalk.sdk.cache.PersistentCache: boolean isExternalAccessible()>();

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r0.<com.beetalk.sdk.cache.PersistentCache: java.util.Map load()>();

        r4 = (java.util.HashMap) $r3;

        $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r7);

        goto label1;

     label2:
        specialinvoke r0.<com.beetalk.sdk.cache.PersistentCache: void saveExternal(java.util.Map)>(r4);

        return;

     label3:
        $r9 = newarray (java.lang.Object)[0];

        staticinvoke <com.beetalk.sdk.helper.BBLogger: void d(java.lang.String,java.lang.Object[])>("external storage not accessible, save in internal storage only", $r9);

        return;
    }
