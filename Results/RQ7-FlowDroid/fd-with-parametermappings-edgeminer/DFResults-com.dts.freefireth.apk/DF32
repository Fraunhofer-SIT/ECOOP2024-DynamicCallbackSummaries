Source: $r1 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("VK_SDK_ACCESS_TOKEN_PLEASE_DONT_TOUCH", null)
$r1 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("VK_SDK_ACCESS_TOKEN_PLEASE_DONT_TOUCH", null) in <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromSharedPreferences(android.content.Context,java.lang.String)>
Sink: virtualinvoke $r20.<java.io.BufferedWriter: void write(java.lang.String)>($r3) in <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)>

<com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromSharedPreferences(android.content.Context,java.lang.String)>: $r1 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("VK_SDK_ACCESS_TOKEN_PLEASE_DONT_TOUCH", null)
<com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromSharedPreferences(android.content.Context,java.lang.String)>: $r3 = staticinvoke <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromUrlString(java.lang.String)>($r1)
<com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromUrlString(java.lang.String)>: $r1 = staticinvoke <com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>($r0)
<com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>: $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("&")
<com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>: $r0 = $r1[$i1]
<com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>: $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("=")
<com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>: $r4 = $r3[1]
<com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>: virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r4)
<com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>: return r2
<com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromUrlString(java.lang.String)>: $r2 = staticinvoke <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromParameters(java.util.Map)>($r1)
<com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromParameters(java.util.Map)>: $r5 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("access_token")
<com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromParameters(java.util.Map)>: r2 = (java.lang.String) $r5
<com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromParameters(java.util.Map)>: r4.<com.vk.sdk.VKAccessToken: java.lang.String accessToken> = r2
<com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromParameters(java.util.Map)>: return r4
<com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromUrlString(java.lang.String)>: return $r2
<com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromSharedPreferences(android.content.Context,java.lang.String)>: return $r3
<com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken currentToken()>: <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken sCurrentToken> = $r0
<com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken currentToken()>: $r0 = <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken sCurrentToken>
<com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken currentToken()>: return $r0
<com.beetalk.sdk.VKAuthRequestHandler: void onLoggedIn()>: $r3 = $r2.<com.vk.sdk.VKAccessToken: java.lang.String accessToken>
<com.beetalk.sdk.VKAuthRequestHandler: void onLoggedIn()>: $r13 = specialinvoke r0.<com.beetalk.sdk.VKAuthRequestHandler: bolts.Task exchangeToken(java.lang.String)>($r3)
<com.beetalk.sdk.VKAuthRequestHandler: bolts.Task exchangeToken(java.lang.String)>: specialinvoke $r4.<com.beetalk.sdk.VKAuthRequestHandler$3: void <init>(com.beetalk.sdk.VKAuthRequestHandler,java.lang.String,com.beetalk.sdk.AuthClient$AuthClientRequest)>(r0, $r1, $r3)
<com.beetalk.sdk.VKAuthRequestHandler$3: void <init>(com.beetalk.sdk.VKAuthRequestHandler,java.lang.String,com.beetalk.sdk.AuthClient$AuthClientRequest)>: r0.<com.beetalk.sdk.VKAuthRequestHandler$3: java.lang.String val$token> = $r2
<com.beetalk.sdk.VKAuthRequestHandler$3: void <init>(com.beetalk.sdk.VKAuthRequestHandler,java.lang.String,com.beetalk.sdk.AuthClient$AuthClientRequest)>: return
<com.beetalk.sdk.VKAuthRequestHandler: bolts.Task exchangeToken(java.lang.String)>: $r5 = staticinvoke <bolts.Task: bolts.Task callInBackground(java.util.concurrent.Callable)>($r4)
<bolts.Task: bolts.Task callInBackground(java.util.concurrent.Callable)>: $r1 = staticinvoke <bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>(r0, $r2, null)
<bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>: specialinvoke $r6.<bolts.Task$4: void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable)>(null, r4, r0)
<bolts.Task$4: void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable)>: r0.<bolts.Task$4: java.util.concurrent.Callable val$callable> = $r3
<bolts.Task$4: void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable)>: return
<bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>: interfaceinvoke $r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6)
<bolts.Task$4: void run()>: $r3 = r0.<bolts.Task$4: java.util.concurrent.Callable val$callable>
<bolts.Task$4: void run()>: $r4 = interfaceinvoke $r3.<java.util.concurrent.Callable: java.lang.Object call()>()
<com.beetalk.sdk.VKAuthRequestHandler$3: com.beetalk.sdk.AuthClient$Result call()>: $r6 = r0.<com.beetalk.sdk.VKAuthRequestHandler$3: java.lang.String val$token>
<com.beetalk.sdk.VKAuthRequestHandler$3: com.beetalk.sdk.AuthClient$Result call()>: $r9 = staticinvoke <com.beetalk.sdk.networking.service.AuthService: org.json.JSONObject exchangeVkTokenSync(java.lang.String,java.lang.String)>($r6, $r8)
<com.beetalk.sdk.networking.service.AuthService: org.json.JSONObject exchangeVkTokenSync(java.lang.String,java.lang.String)>: virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("vk_access_token", $r0)
<com.beetalk.sdk.networking.service.AuthService: org.json.JSONObject exchangeVkTokenSync(java.lang.String,java.lang.String)>: $r4 = virtualinvoke $r3.<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.Map)>($r0, r2)
<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.Map)>: $r3 = virtualinvoke r0.<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map)>($r1, null, r2)
<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map)>: $r4 = virtualinvoke r0.<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>($r1, r2, r3, 0)
<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>: $r8 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9)
<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>: $r10 = (java.lang.String) $r8
<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>: specialinvoke $r11.<com.beetalk.sdk.networking.HttpParam: void <init>(java.lang.String,java.lang.String)>(r9, $r10)
<com.beetalk.sdk.networking.HttpParam: void <init>(java.lang.String,java.lang.String)>: r0.<com.beetalk.sdk.networking.HttpParam: java.lang.String value> = r2
<com.beetalk.sdk.networking.HttpParam: void <init>(java.lang.String,java.lang.String)>: return
<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>: interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r11)
<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>: r9 = staticinvoke <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>(r5)
<com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>: $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
<com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>: $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>()
<com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>: r4 = (com.beetalk.sdk.networking.HttpParam) $r3
<com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>: $r5 = r4.<com.beetalk.sdk.networking.HttpParam: java.lang.String value>
<com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>: $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "UTF-8")
<com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>: virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
<com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>: $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()
<com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>: return $r5
<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>: $r13 = specialinvoke r0.<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)>($r1, r5, r9, $z0)
<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)>: virtualinvoke $r20.<java.io.BufferedWriter: void write(java.lang.String)>($r3)
