    private void sync(java.util.Map, java.util.Map)
    {
        java.util.HashMap r3, r4, r5, $r14;
        long l0, l1;
        com.beetalk.sdk.cache.PersistentCache r0;
        byte $b2;
        com.beetalk.sdk.cache.SharedPrefStorage $r13;
        java.util.Map r1, r2;
        int $i3;
        java.lang.String $r6, r8;
        boolean $z0;
        java.util.Map$Entry r11;
        java.util.Iterator $r10;
        java.util.Set $r9;
        java.lang.Object $r7, $r12;

        r0 := @this: com.beetalk.sdk.cache.PersistentCache;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        $r6 = virtualinvoke r0.<com.beetalk.sdk.cache.PersistentCache: java.lang.String getGuestUidKey()>();

        $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r8 = (java.lang.String) $r7;

        $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r6 = (java.lang.String) $r7;

        l0 = 0L;

        if r8 == null goto label01;

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r8);

     label01:
        l1 = 0L;

        if $r6 == null goto label02;

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

     label02:
        r5 = new java.util.HashMap;

        r3 = r5;

        specialinvoke r5.<java.util.HashMap: void <init>()>();

        r4 = new java.util.HashMap;

        r5 = r4;

        specialinvoke r4.<java.util.HashMap: void <init>()>();

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        $r9 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r7 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r7;

        if r11 == null goto label03;

        $r7 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r7 == null goto label03;

        $r7 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r7 == null goto label03;

        $r7 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r7);

        if $z0 != 0 goto label03;

        $r7 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r12);

        goto label03;

     label04:
        $r9 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r7 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r7;

        if r11 == null goto label05;

        $r7 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r7 == null goto label05;

        $r7 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r7 == null goto label05;

        $r7 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r7);

        if $z0 != 0 goto label06;

        $r7 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r12);

        goto label05;

     label06:
        $r7 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        r8 = (java.lang.String) $r7;

        $r7 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        $z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label05;

        $r7 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r12);

        goto label05;

     label07:
        interfaceinvoke r1.<java.util.Map: void putAll(java.util.Map)>($r14);

        $b2 = l0 cmp l1;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label10;

        $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label08;

        $z0 = interfaceinvoke $r14.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label09;

     label08:
        interfaceinvoke r1.<java.util.Map: void putAll(java.util.Map)>(r3);

        $r13 = r0.<com.beetalk.sdk.cache.PersistentCache: com.beetalk.sdk.cache.SharedPrefStorage mFallbackStorage>;

        virtualinvoke $r13.<com.beetalk.sdk.cache.SharedPrefStorage: void save(java.util.Map)>(r1);

     label09:
        $z0 = interfaceinvoke r5.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label13;

        specialinvoke r0.<com.beetalk.sdk.cache.PersistentCache: void saveExternal(java.util.Map)>(r1);

        return;

     label10:
        $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label11;

        $z0 = interfaceinvoke r5.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label12;

     label11:
        specialinvoke r0.<com.beetalk.sdk.cache.PersistentCache: void saveExternal(java.util.Map)>(r1);

     label12:
        $z0 = interfaceinvoke $r14.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label13;

        $r13 = r0.<com.beetalk.sdk.cache.PersistentCache: com.beetalk.sdk.cache.SharedPrefStorage mFallbackStorage>;

        virtualinvoke $r13.<com.beetalk.sdk.cache.SharedPrefStorage: void save(java.util.Map)>(r1);

     label13:
        return;
    }
