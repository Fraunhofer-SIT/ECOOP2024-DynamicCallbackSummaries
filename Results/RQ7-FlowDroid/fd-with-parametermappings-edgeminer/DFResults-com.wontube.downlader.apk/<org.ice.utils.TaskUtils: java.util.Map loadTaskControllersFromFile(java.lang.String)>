    public static java.util.Map loadTaskControllersFromFile(java.lang.String)
    {
        java.io.PrintStream $r2;
        java.lang.Throwable r6;
        java.lang.String[] $r3;
        char $c2;
        java.util.HashMap $r8;
        java.io.IOException $r11;
        java.io.File $r9;
        int i0, i1;
        java.lang.StringBuilder $r4, $r10;
        java.lang.ClassNotFoundException r7;
        java.lang.String $r0, r1;
        org.ice.controller.TaskController $r5;

        $r0 := @parameter0: java.lang.String;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("loadTaskControllersFromFile");

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r0);

        $r3 = virtualinvoke $r9.<java.io.File: java.lang.String[] list()>();

        if $r3 == null goto label9;

        i0 = lengthof $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label9;

        r1 = $r3[i1];

        $r10 = new java.lang.StringBuilder;

     label2:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label3:
        $c2 = <java.io.File: char separatorChar>;

     label4:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <org.ice.utils.TaskUtils: org.ice.controller.TaskController loadTaskController(java.lang.String)>(r1);

     label5:
        if $r5 == null goto label6;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, null);

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        r6 := @caughtexception;

        $r5 = null;

        $r11 = (java.io.IOException) r6;

        virtualinvoke $r11.<java.io.IOException: void printStackTrace()>();

        goto label5;

     label8:
        r7 := @caughtexception;

        $r5 = null;

        virtualinvoke r7.<java.lang.ClassNotFoundException: void printStackTrace()>();

        goto label5;

     label9:
        return $r8;

        catch java.io.IOException from label2 to label3 with label7;
        catch java.io.IOException from label4 to label5 with label7;
        catch java.lang.ClassNotFoundException from label2 to label3 with label8;
        catch java.lang.ClassNotFoundException from label4 to label5 with label8;
    }
