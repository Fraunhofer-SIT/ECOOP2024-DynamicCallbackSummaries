    public static void a(java.io.InputStream, java.lang.String)
    {
        java.lang.Throwable $r7;
        byte[] $r6;
        int $i0;
        java.lang.String $r1;
        boolean $z0;
        java.io.FileOutputStream $r3, $r15;
        java.io.File $r2, $r4;
        java.lang.Exception $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.StringBuilder $r14;
        com.changdu.changdulib.f $r5;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.lang.String;

        $r4 = new java.io.File;

        $r2 = $r4;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r4.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label01;

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $r3 = null;

     label02:
        $r4 = virtualinvoke $r2.<java.io.File: java.io.File getParentFile()>();

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

     label03:
        if $z0 != 0 goto label05;

     label04:
        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

     label05:
        $r5 = staticinvoke <com.changdu.changdulib.f: com.changdu.changdulib.f a()>();

        $z0 = virtualinvoke $r5.<com.changdu.changdulib.f: boolean e()>();

     label06:
        if $z0 == 0 goto label09;

     label07:
        $r14 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("retFile:");

        $r1 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.changdu.changdulib.d: void a(java.lang.String)>($r1);

     label09:
        $z0 = virtualinvoke $r2.<java.io.File: boolean createNewFile()>();

     label10:
        if $z0 == 0 goto label21;

     label11:
        $r15 = new java.io.FileOutputStream;

     label12:
        specialinvoke $r15.<java.io.FileOutputStream: void <init>(java.io.File)>($r2);

     label13:
        $r6 = newarray (byte)[8192];

     label14:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r6);

     label15:
        if $i0 == -1 goto label18;

     label16:
        virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[],int,int)>($r6, 0, $i0);

     label17:
        goto label14;

     label18:
        $r3 = $r15;

        goto label21;

     label19:
        $r7 := @caughtexception;

        $r3 = $r15;

        goto label39;

     label20:
        $r8 := @caughtexception;

        $r3 = $r15;

        goto label30;

     label21:
        if $r0 == null goto label25;

     label22:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label23:
        goto label25;

     label24:
        $r9 := @caughtexception;

        staticinvoke <com.changdu.changdulib.e.i: void a(java.lang.Object)>($r9);

     label25:
        if $r3 == null goto label48;

     label26:
        virtualinvoke $r3.<java.io.FileOutputStream: void close()>();

     label27:
        return;

     label28:
        $r7 := @caughtexception;

        goto label39;

     label29:
        $r8 := @caughtexception;

     label30:
        staticinvoke <com.changdu.changdulib.e.i: void e(java.lang.Object)>($r8);

     label31:
        if $r0 == null goto label35;

     label32:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label33:
        goto label35;

     label34:
        $r10 := @caughtexception;

        staticinvoke <com.changdu.changdulib.e.i: void a(java.lang.Object)>($r10);

     label35:
        if $r3 == null goto label48;

     label36:
        virtualinvoke $r3.<java.io.FileOutputStream: void close()>();

     label37:
        return;

     label38:
        $r11 := @caughtexception;

        staticinvoke <com.changdu.changdulib.e.i: void a(java.lang.Object)>($r11);

        return;

     label39:
        if $r0 == null goto label43;

     label40:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label41:
        goto label43;

     label42:
        $r12 := @caughtexception;

        staticinvoke <com.changdu.changdulib.e.i: void a(java.lang.Object)>($r12);

     label43:
        if $r3 == null goto label47;

     label44:
        virtualinvoke $r3.<java.io.FileOutputStream: void close()>();

     label45:
        goto label47;

     label46:
        $r13 := @caughtexception;

        staticinvoke <com.changdu.changdulib.e.i: void a(java.lang.Object)>($r13);

     label47:
        throw $r7;

     label48:
        return;

        catch java.lang.Exception from label02 to label03 with label29;
        catch java.lang.Exception from label04 to label06 with label29;
        catch java.lang.Exception from label08 to label10 with label29;
        catch java.lang.Exception from label12 to label13 with label29;
        catch java.lang.Throwable from label02 to label03 with label28;
        catch java.lang.Throwable from label04 to label06 with label28;
        catch java.lang.Throwable from label07 to label08 with label28;
        catch java.lang.Throwable from label08 to label10 with label28;
        catch java.lang.Throwable from label11 to label12 with label28;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.lang.Exception from label14 to label15 with label20;
        catch java.lang.Exception from label16 to label17 with label20;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Exception from label22 to label23 with label24;
        catch java.lang.Exception from label26 to label27 with label38;
        catch java.lang.Throwable from label30 to label31 with label28;
        catch java.lang.Exception from label32 to label33 with label34;
        catch java.lang.Exception from label36 to label37 with label38;
        catch java.lang.Exception from label40 to label41 with label42;
        catch java.lang.Exception from label44 to label45 with label46;
    }
