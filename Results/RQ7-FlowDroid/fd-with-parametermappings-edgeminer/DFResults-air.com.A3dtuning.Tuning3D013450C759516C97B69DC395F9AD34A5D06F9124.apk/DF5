Source: $r6 = virtualinvoke $r4.<com.facebook.appevents.AppEventStore$MovedClassObjectInputStream: java.lang.Object readObject()>()
$r6 = virtualinvoke $r4.<com.facebook.appevents.AppEventStore$MovedClassObjectInputStream: java.lang.Object readObject()>() in <com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>
Sink: virtualinvoke $r4.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1) in <com.facebook.appevents.AppEventStore: void saveEventsToDisk(com.facebook.appevents.PersistedEvents)>

<com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>: $r6 = virtualinvoke $r4.<com.facebook.appevents.AppEventStore$MovedClassObjectInputStream: java.lang.Object readObject()>()
<com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>: $r7 = (com.facebook.appevents.PersistedEvents) $r6
<com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>: return $r7
<com.facebook.appevents.AppEventQueue: void flushAndWait(com.facebook.appevents.FlushReason)>: virtualinvoke $r2.<com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>($r1)
<com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>: $r2 = virtualinvoke $r1.<com.facebook.appevents.PersistedEvents: java.util.Set keySet()>()
<com.facebook.appevents.PersistedEvents: java.util.Set keySet()>: $r1 = r0.<com.facebook.appevents.PersistedEvents: java.util.HashMap events>
<com.facebook.appevents.PersistedEvents: java.util.Set keySet()>: $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>()
<com.facebook.appevents.PersistedEvents: java.util.Set keySet()>: return $r2
<com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>: $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>()
<com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>: $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>()
<com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>: $r5 = (com.facebook.appevents.AccessTokenAppIdPair) $r4
<com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>: $r6 = specialinvoke r0.<com.facebook.appevents.AppEventCollection: com.facebook.appevents.SessionEventsState getSessionEventsState(com.facebook.appevents.AccessTokenAppIdPair)>($r5)
<com.facebook.appevents.AppEventCollection: com.facebook.appevents.SessionEventsState getSessionEventsState(com.facebook.appevents.AccessTokenAppIdPair)>: virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4)
<com.facebook.appevents.AppEventCollection: com.facebook.appevents.SessionEventsState getSessionEventsState(com.facebook.appevents.AccessTokenAppIdPair)>: $r2 = r0.<com.facebook.appevents.AppEventCollection: java.util.HashMap stateMap>
<com.facebook.appevents.AppEventCollection: com.facebook.appevents.SessionEventsState getSessionEventsState(com.facebook.appevents.AccessTokenAppIdPair)>: return $r4
<com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>: r0 := @this: com.facebook.appevents.AppEventCollection
<com.facebook.appevents.AppEventQueue: void flushAndWait(com.facebook.appevents.FlushReason)>: $r2 = <com.facebook.appevents.AppEventQueue: com.facebook.appevents.AppEventCollection appEventCollection>
<dummyMainClass: com.facebook.internal.FacebookInitProvider dummyMainMethod_com_facebook_internal_FacebookInitProvider(android.content.Intent)>: virtualinvoke $r2.<com.facebook.appevents.internal.ActivityLifecycleTracker$2: void onActivityStopped(android.app.Activity)>(null)
<com.facebook.appevents.internal.ActivityLifecycleTracker$2: void onActivityStopped(android.app.Activity)>: staticinvoke <com.facebook.appevents.AppEventsLogger: void onContextStop()>()
<com.facebook.appevents.AppEventsLogger: void onContextStop()>: staticinvoke <com.facebook.appevents.AppEventsLoggerImpl: void onContextStop()>()
<com.facebook.appevents.AppEventsLoggerImpl: void onContextStop()>: staticinvoke <com.facebook.appevents.AppEventQueue: void persistToDisk()>()
<com.facebook.appevents.AppEventQueue: void persistToDisk()>: interfaceinvoke $r0.<java.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)>($r1)
<com.facebook.appevents.AppEventQueue$2: void run()>: $r1 = staticinvoke <com.facebook.appevents.AppEventQueue: com.facebook.appevents.AppEventCollection access$100()>()
<com.facebook.appevents.AppEventQueue: com.facebook.appevents.AppEventCollection access$100()>: r1 = <com.facebook.appevents.AppEventQueue: com.facebook.appevents.AppEventCollection appEventCollection>
<com.facebook.appevents.AppEventQueue: com.facebook.appevents.AppEventCollection access$100()>: return r1
<com.facebook.appevents.AppEventQueue$2: void run()>: staticinvoke <com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>($r1)
<com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>: $r2 = virtualinvoke $r0.<com.facebook.appevents.AppEventCollection: java.util.Set keySet()>()
<com.facebook.appevents.AppEventCollection: java.util.Set keySet()>: $r2 = r0.<com.facebook.appevents.AppEventCollection: java.util.HashMap stateMap>
<com.facebook.appevents.AppEventCollection: java.util.Set keySet()>: $r1 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>()
<com.facebook.appevents.AppEventCollection: java.util.Set keySet()>: return $r1
<com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>: $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>()
<com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>: $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>()
<com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>: $r5 = (com.facebook.appevents.AccessTokenAppIdPair) $r4
<com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>: virtualinvoke $r1.<com.facebook.appevents.PersistedEvents: void addEvents(com.facebook.appevents.AccessTokenAppIdPair,java.util.List)>($r5, $r7)
<com.facebook.appevents.PersistedEvents: void addEvents(com.facebook.appevents.AccessTokenAppIdPair,java.util.List)>: virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1)
<com.facebook.appevents.PersistedEvents: void addEvents(com.facebook.appevents.AccessTokenAppIdPair,java.util.List)>: $r3 = r0.<com.facebook.appevents.PersistedEvents: java.util.HashMap events>
<com.facebook.appevents.PersistedEvents: void addEvents(com.facebook.appevents.AccessTokenAppIdPair,java.util.List)>: return
<com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>: staticinvoke <com.facebook.appevents.AppEventStore: void saveEventsToDisk(com.facebook.appevents.PersistedEvents)>($r1)
<com.facebook.appevents.AppEventStore: void saveEventsToDisk(com.facebook.appevents.PersistedEvents)>: virtualinvoke $r4.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1)
