    public void <init>(o.dkm, o.dlm, o.dkq, o.dlz, boolean, o.dki) throws java.io.IOException
    {
        int[][] $r29, $r34;
        o.dka $r37;
        byte $b0;
        int[] $r28, $r33;
        boolean $z0, $z1;
        float $f0, $f1;
        java.lang.StringBuilder $r40;
        java.lang.Throwable $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r36;
        o.dly $r35;
        o.dlz $r3, $r25;
        java.lang.Error $r38;
        short $s10;
        o.dlm $r24;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r30, $r31, $r32;
        o.dki$Fragment $r27;
        double $d0, $d1;
        java.lang.IllegalArgumentException $r41;
        o.dki $r4, $r26;
        o.dkl r0;
        o.dkm $r1;
        o.dkj $r39;
        o.dkq $r2;

        r0 := @this: o.dkl;

        $r1 := @parameter0: o.dkm;

        $r24 := @parameter1: o.dlm;

        $r2 := @parameter2: o.dkq;

        $r3 := @parameter3: o.dlz;

        $z0 := @parameter4: boolean;

        $r4 := @parameter5: o.dki;

        specialinvoke r0.<o.dkn: void <init>(o.dkm,o.dkq)>($r1, $r2);

        r0.<o.dkl: boolean setTransitioning> = 1;

        r0.<o.dkl: int setStackedBackground> = 0;

        r0.<o.dkl: int setOverflowIcon> = 0;

        r0.<o.dkl: boolean setVisibility> = 0;

        r0.<o.dkl: boolean setOnMenuItemClickListener> = 0;

        r0.<o.dkl: boolean setMenu> = $z0;

        r0.<o.dkl: o.dki setPrimaryBackground> = $r4;

        $z0 = virtualinvoke $r3.<o.dlz: boolean ModerationWorker(java.lang.String)>("poc_quit");

        r0.<o.dkl: boolean setOnMenuItemClickListener> = $z0;

        virtualinvoke $r3.<o.dlz: boolean ModerationWorker(java.lang.String)>("parsing");

     label001:
        $f0 = virtualinvoke $r3.<o.dlz: float read(java.lang.String)>("rate");

     label002:
        r0.<o.dkn: float setForceShowIcon> = $f0;

        $f0 = r0.<o.dkn: float setForceShowIcon>;

        $b0 = $f0 cmpl -1.0F;

        if $b0 != 0 goto label003;

        r0.<o.dkn: float setForceShowIcon> = 3.4028235E38F;

     label003:
        $i1 = virtualinvoke $r3.<o.dlz: int valueOf(java.lang.String)>("nbytes");

     label004:
        r0.<o.dkn: int setGroupDividerEnabled> = $i1;

        $r25 = virtualinvoke $r3.<o.dlz: o.dlz ModerationWorker()>();

        $i1 = r0.<o.dkn: int setGroupDividerEnabled>;

        $f0 = (float) $i1;

        $f1 = virtualinvoke $r25.<o.dlz: float read(java.lang.String)>("nbytes");

        $b0 = $f0 cmpl $f1;

        if $b0 == 0 goto label005;

        $z0 = 1;

        goto label006;

     label005:
        $z0 = 0;

     label006:
        if $z0 == 0 goto label007;

        $i1 = r0.<o.dkn: int setGroupDividerEnabled>;

        $f0 = (float) $i1;

        $f0 = $f0 * 8.0F;

        $r26 = $r1.<o.dkm: o.dki RemoteActionCompatParcelizer>;

        $r27 = $r26.<o.dki: o.dki$Fragment IconCompatParcelizer>;

        $i1 = virtualinvoke $r27.<o.dki$Fragment: int ModerationWorker()>();

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        $r26 = $r1.<o.dkm: o.dki RemoteActionCompatParcelizer>;

        $r27 = $r26.<o.dki: o.dki$Fragment IconCompatParcelizer>;

        $i1 = virtualinvoke $r27.<o.dki$Fragment: int RemoteActionCompatParcelizer()>();

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        r0.<o.dkn: float setForceShowIcon> = $f0;

        goto label008;

     label007:
        $f0 = r0.<o.dkn: float setForceShowIcon>;

        $r26 = $r1.<o.dkm: o.dki RemoteActionCompatParcelizer>;

        $r27 = $r26.<o.dki: o.dki$Fragment IconCompatParcelizer>;

        $i1 = virtualinvoke $r27.<o.dki$Fragment: int ModerationWorker()>();

        $f1 = (float) $i1;

        $f0 = $f0 * $f1;

        $r26 = $r1.<o.dkm: o.dki RemoteActionCompatParcelizer>;

        $r27 = $r26.<o.dki: o.dki$Fragment IconCompatParcelizer>;

        $i1 = virtualinvoke $r27.<o.dki$Fragment: int RemoteActionCompatParcelizer()>();

        $f1 = (float) $i1;

        $f0 = $f0 * $f1;

        $i1 = (int) $f0;

        $i1 = $i1 / 8;

        r0.<o.dkn: int setGroupDividerEnabled> = $i1;

     label008:
        $z0 = virtualinvoke $r3.<o.dlz: boolean ModerationWorker(java.lang.String)>("parsing");

        $z0 = $z0 ^ 1;

        r0.<o.dkl: boolean setTitleOptional> = $z0;

     label009:
        $i1 = virtualinvoke $r3.<o.dlz: int valueOf(java.lang.String)>("ncb_quit");

     label010:
        if $i1 == -1 goto label011;

        $z0 = r0.<o.dkl: boolean setTitleOptional>;

        if $z0 != 0 goto label011;

        $r38 = new java.lang.Error;

        specialinvoke $r38.<java.lang.Error: void <init>(java.lang.String)>("Cannot use -parsing and -ncb_quit condition at the same time.");

        throw $r38;

     label011:
        $i2 = virtualinvoke $r3.<o.dlz: int valueOf(java.lang.String)>("l_quit");

     label012:
        r0.<o.dkl: int setCustomView> = $i2;

        r0.<o.dkl: o.dlm setTabContainer> = $r24;

        $r39 = new o.dkj;

        $z0 = r0.<o.dkl: boolean setTitleOptional>;

        specialinvoke $r39.<o.dkj: void <init>(o.dkq,o.dkm,o.dlm,o.dkn,boolean,int)>($r2, $r1, $r24, r0, $z0, $i1);

        r0.<o.dkl: o.dkj setActionBarVisibilityCallback> = $r39;

        $i2 = r0.<o.dkn: int ActivityResultRegistry$1>;

        $r28 = newarray (int)[$i2];

        r0.<o.dkl: int[] setMenuPrepared> = $r28;

        $i2 = r0.<o.dkn: int ActivityResultRegistry$1>;

        $r28 = newarray (int)[$i2];

        r0.<o.dkl: int[] setExpandedActionViewsExclusive> = $r28;

        $i2 = r0.<o.dkn: int ActivityResultRegistry$1>;

        $r29 = newarray (int[])[$i2];

        r0.<o.dkl: int[][] setShowingForActionMode> = $r29;

        $i2 = r0.<o.dkn: int ActivityResultRegistry$1>;

        $r29 = newarray (int[])[$i2];

        r0.<o.dkl: int[][] setWindowCallback> = $r29;

        $i2 = r0.<o.dkn: int ActivityResultRegistry$1>;

        $r29 = newarray (int[])[$i2];

        r0.<o.dkl: int[][] setSplitBackground> = $r29;

        $i2 = r0.<o.dkn: int ActivityResultRegistry$1>;

        $r28 = newarray (int)[$i2];

        r0.<o.dkl: int[] setUiOptions> = $r28;

        $i2 = r0.<o.dkn: int ActivityResultRegistry$1>;

        $r28 = newarray (int)[$i2];

        r0.<o.dkl: int[] setWindowTitle> = $r28;

        $i2 = r0.<o.dkn: int ActivityResultRegistry$1>;

        $r29 = newarray (int[])[$i2];

        r0.<o.dkl: int[][] setLogo> = $r29;

        $i2 = r0.<o.dkn: int ActivityResultRegistry$1>;

        $r28 = newarray (int)[$i2];

        r0.<o.dkl: int[] setSubtitle> = $r28;

        $i2 = r0.<o.dkn: int ActivityResultRegistry$1>;

        $r28 = newarray (int)[$i2];

        r0.<o.dkl: int[] setTitle> = $r28;

        $i2 = r0.<o.dkn: int ActivityResultRegistry$1>;

        $r28 = newarray (int)[$i2];

        $r1.<o.dkm: int[] ImmLeaksCleaner> = $r28;

        $z0 = r0.<o.dkl: boolean setTitleOptional>;

        r0.<o.dkl: boolean setTitleOptional> = $z0;

        $i3 = $r1.<o.dkm: int read>;

        $r24 = r0.<o.dkl: o.dlm setTabContainer>;

        $i2 = interfaceinvoke $r24.<o.dlm: int valueOf()>();

        $i2 = $i2 - $i3;

        r0.<o.dkl: int setActionBarHideOffset> = $i2;

        r0.<o.dkl: int setStackedBackground> = $i2;

        if $i1 != -1 goto label013;

        r0.<o.dkn: int ModerationWorker> = $i2;

        goto label014;

     label013:
        r0.<o.dkn: int ModerationWorker> = 0;

     label014:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>(java.lang.String)>("Codestream elements information in bytes (offset, total length, header length):\n\nMain header length    : ");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i2 = r0.<o.dkl: int setActionBarHideOffset>;

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i2 = r0.<o.dkl: int setActionBarHideOffset>;

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r31 = virtualinvoke $r40.<java.lang.Object: java.lang.String toString()>();

        $i2 = r0.<o.dkn: int ModerationWorker>;

        $i4 = r0.<o.dkn: int setGroupDividerEnabled>;

        if $i2 > $i4 goto label086;

        $i5 = $i1;

        r0.<o.dkl: double setOverlayMode> = 0.0;

        $i1 = r0.<o.dkn: int ActivityResultRegistry$1>;

        r0.<o.dkl: int setHasNonEmbeddedTabs> = $i1;

        $i4 = 0;

        $i1 = 0;

     label015:
        $i2 = r0.<o.dkl: int setHasNonEmbeddedTabs>;

        if $i2 == 0 goto label048;

        $r24 = r0.<o.dkl: o.dlm setTabContainer>;

     label016:
        $i6 = interfaceinvoke $r24.<o.dlm: int valueOf()>();

     label017:
        $i2 = specialinvoke r0.<o.dkl: int ActivityResultRegistry$1()>();

     label018:
        $i4 = $i2;

        $z0 = r0.<o.dkl: boolean setVisibility>;

        if $z0 != 0 goto label048;

        $r28 = r0.<o.dkl: int[] setUiOptions>;

        $i1 = $r28[$i2];

        $z0 = r0.<o.dkl: boolean setTransitioning>;

        if $z0 == 0 goto label021;

        $r29 = r0.<o.dkl: int[][] setShowingForActionMode>;

        $r28 = $r29[$i2];

        $r24 = r0.<o.dkl: o.dlm setTabContainer>;

     label019:
        $i7 = interfaceinvoke $r24.<o.dlm: int write()>();

     label020:
        $i7 = $i7 + -2;

        $i7 = $i7 - $i6;

        $r28[$i1] = $i7;

     label021:
        $r24 = r0.<o.dkl: o.dlm setTabContainer>;

     label022:
        $i8 = interfaceinvoke $r24.<o.dlm: int valueOf()>();

     label023:
        $z0 = r0.<o.dkl: boolean setTitleOptional>;

        if $z0 == 0 goto label026;

        $i7 = $i5;

        if $i5 != -1 goto label027;

        $i5 = $i8 - $i3;

        $i9 = r0.<o.dkn: int setGroupDividerEnabled>;

        if $i5 <= $i9 goto label027;

        $r29 = r0.<o.dkl: int[][] setSplitBackground>;

        $r28 = $r29[$i2];

        $r24 = r0.<o.dkl: o.dlm setTabContainer>;

     label024:
        $i2 = interfaceinvoke $r24.<o.dlm: int write()>();

     label025:
        $r28[$i1] = $i2;

        goto label034;

     label026:
        $i7 = $i5;

     label027:
        $r29 = r0.<o.dkl: int[][] setSplitBackground>;

        $r28 = $r29[$i2];

        $r28[$i1] = $i8;

        $r29 = r0.<o.dkl: int[][] setLogo>;

        $r28 = $r29[$i2];

        $i5 = $i8 - $i6;

        $r28[$i1] = $i5;

        $r40 = new java.lang.StringBuilder;

     label028:
        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tile-part ");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of tile ");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label029:
        $r29 = r0.<o.dkl: int[][] setShowingForActionMode>;

        $r28 = $r29[$i2];

        $i5 = $r28[$i1];

     label030:
        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label031:
        $r29 = r0.<o.dkl: int[][] setLogo>;

        $r28 = $r29[$i2];

        $i5 = $r28[$i1];

     label032:
        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r32 = virtualinvoke $r40.<java.lang.Object: java.lang.String toString()>();

     label033:
        $r28 = r0.<o.dkl: int[] setExpandedActionViewsExclusive>;

        $i5 = $r28[$i2];

        $r29 = r0.<o.dkl: int[][] setShowingForActionMode>;

        $r33 = $r29[$i2];

        $i8 = $r33[$i1];

        $i5 = $i5 + $i8;

        $r28[$i2] = $i5;

        $r28 = r0.<o.dkl: int[] setWindowTitle>;

        $i5 = $r28[$i2];

        $r34 = r0.<o.dkl: int[][] setLogo>;

        $r33 = $r34[$i2];

        $i8 = $r33[$i1];

        $i5 = $i5 + $i8;

        $r28[$i2] = $i5;

        $d0 = r0.<o.dkl: double setOverlayMode>;

        $r28 = $r29[$i2];

        $i5 = $r28[$i1];

        $d1 = (double) $i5;

        $d0 = $d0 + $d1;

        r0.<o.dkl: double setOverlayMode> = $d0;

        $z0 = r0.<o.dkl: boolean setTitleOptional>;

        if $z0 == 0 goto label036;

        $i5 = r0.<o.dkn: int ModerationWorker>;

        $r29 = r0.<o.dkl: int[][] setShowingForActionMode>;

        $r28 = $r29[$i2];

        $i8 = $r28[$i1];

        $i5 = $i5 + $i8;

        $i8 = r0.<o.dkn: int setGroupDividerEnabled>;

        if $i5 <= $i8 goto label035;

        $i4 = r0.<o.dkn: int ModerationWorker>;

        $r29 = r0.<o.dkl: int[][] setLogo>;

        $r28 = $r29[$i2];

        $i6 = $r28[$i1];

        $i4 = $i4 + $i6;

        r0.<o.dkn: int ModerationWorker> = $i4;

        $i4 = r0.<o.dkl: int setStackedBackground>;

        $r29 = r0.<o.dkl: int[][] setLogo>;

        $r28 = $r29[$i2];

        $i1 = $r28[$i1];

        $i1 = $i4 + $i1;

        r0.<o.dkl: int setStackedBackground> = $i1;

        $r28 = r0.<o.dkl: int[] setSubtitle>;

        $i1 = $r28[$i2];

        $i4 = r0.<o.dkn: int setGroupDividerEnabled>;

        $i6 = r0.<o.dkn: int ModerationWorker>;

        $i4 = $i4 - $i6;

        $i1 = $i1 + $i4;

        $r28[$i2] = $i1;

        $r31 = $r32;

     label034:
        $z0 = 1;

        goto label049;

     label035:
        $i5 = r0.<o.dkn: int ModerationWorker>;

        $r29 = r0.<o.dkl: int[][] setLogo>;

        $r28 = $r29[$i2];

        $i8 = $r28[$i1];

        $i5 = $i5 + $i8;

        r0.<o.dkn: int ModerationWorker> = $i5;

        $i5 = r0.<o.dkl: int setStackedBackground>;

        $r29 = r0.<o.dkl: int[][] setLogo>;

        $r28 = $r29[$i2];

        $i8 = $r28[$i1];

        $i5 = $i5 + $i8;

        r0.<o.dkl: int setStackedBackground> = $i5;

        $r28 = r0.<o.dkl: int[] setSubtitle>;

        $i5 = $r28[$i2];

        $r34 = r0.<o.dkl: int[][] setShowingForActionMode>;

        $r33 = $r34[$i2];

        $i8 = $r33[$i1];

        $r33 = $r29[$i2];

        $i9 = $r33[$i1];

        $i8 = $i8 - $i9;

        $i5 = $i5 + $i8;

        $r28[$i2] = $i5;

        goto label037;

     label036:
        $i5 = r0.<o.dkn: int ModerationWorker>;

        $r29 = r0.<o.dkl: int[][] setLogo>;

        $r28 = $r29[$i2];

        $i8 = $r28[$i1];

        $i5 = $i5 + $i8;

        $i8 = r0.<o.dkn: int setGroupDividerEnabled>;

        if $i5 > $i8 goto label041;

        $i5 = r0.<o.dkn: int ModerationWorker>;

        $r29 = r0.<o.dkl: int[][] setLogo>;

        $r28 = $r29[$i2];

        $i8 = $r28[$i1];

        $i5 = $i5 + $i8;

        r0.<o.dkn: int ModerationWorker> = $i5;

        $i5 = r0.<o.dkl: int setStackedBackground>;

        $r29 = r0.<o.dkl: int[][] setLogo>;

        $r28 = $r29[$i2];

        $i8 = $r28[$i1];

        $i5 = $i5 + $i8;

        r0.<o.dkl: int setStackedBackground> = $i5;

     label037:
        $r28 = r0.<o.dkl: int[] setUiOptions>;

        $i5 = $r28[$i2];

        $i5 = $i5 + 1;

        $r28[$i2] = $i5;

        $r24 = r0.<o.dkl: o.dlm setTabContainer>;

        $r29 = r0.<o.dkl: int[][] setShowingForActionMode>;

        $r28 = $r29[$i2];

        $i2 = $r28[$i1];

        $i2 = $i6 + $i2;

     label038:
        interfaceinvoke $r24.<o.dlm: void valueOf(int)>($i2);

     label039:
        $i2 = r0.<o.dkl: int setHasNonEmbeddedTabs>;

        $i2 = $i2 - 1;

        r0.<o.dkl: int setHasNonEmbeddedTabs> = $i2;

        $z0 = r0.<o.dkl: boolean setTransitioning>;

        if $z0 == 0 goto label042;

        if $i2 == 0 goto label041;

     label040:
        $r35 = staticinvoke <o.dlt: o.dly values()>();

        interfaceinvoke $r35.<o.dly: void RemoteActionCompatParcelizer(int,java.lang.String)>(2, "Some tile-parts have not been found. The codestream may be corrupted.");

     label041:
        $r31 = $r32;

        goto label048;

     label042:
        $r31 = $r32;

        $i5 = $i7;

        goto label015;

     label043:
        $r31 = $r32;

        goto label071;

     label044:
        $r36 := @caughtexception;

        $r29 = r0.<o.dkl: int[][] setSplitBackground>;

        $r28 = $r29[$i4];

        $r24 = r0.<o.dkl: o.dlm setTabContainer>;

     label045:
        $i2 = interfaceinvoke $r24.<o.dlm: int write()>();

     label046:
        $r28[$i1] = $i2;

     label047:
        throw $r36;

     label048:
        $z0 = 0;

     label049:
        r0.<o.dkl: int setHasNonEmbeddedTabs> = 0;

        $r30 = virtualinvoke $r3.<o.dlz: java.lang.String values(java.lang.String)>("res");

        if $r30 != null goto label050;

        $r37 = $r2.<o.dkq: o.dka values>;

        $i1 = virtualinvoke $r37.<o.dka: int values()>();

        r0.<o.dkn: int setPopupCallback> = $i1;

        goto label052;

     label050:
        $i1 = virtualinvoke $r3.<o.dlz: int valueOf(java.lang.String)>("res");

     label051:
        r0.<o.dkn: int setPopupCallback> = $i1;

        $i1 = r0.<o.dkn: int setPopupCallback>;

        if $i1 < 0 goto label066;

     label052:
        $r37 = $r2.<o.dkq: o.dka values>;

        $i1 = virtualinvoke $r37.<o.dka: int values()>();

        $i2 = r0.<o.dkn: int setPopupCallback>;

        if $i2 <= $i1 goto label053;

        $r35 = staticinvoke <o.dlt: o.dly values()>();

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>(java.lang.String)>("Specified resolution level (");

        $i2 = r0.<o.dkn: int setPopupCallback>;

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is larger than the maximum possible. Setting it to ");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (maximum possible)");

        $r30 = virtualinvoke $r40.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r35.<o.dly: void RemoteActionCompatParcelizer(int,java.lang.String)>(2, $r30);

        r0.<o.dkn: int setPopupCallback> = $i1;

     label053:
        $z1 = r0.<o.dkl: boolean setMenu>;

        if $z1 == 0 goto label054;

        $r35 = staticinvoke <o.dlt: o.dly values()>();

        interfaceinvoke $r35.<o.dly: void RemoteActionCompatParcelizer(int,java.lang.String)>(1, $r31);

     label054:
        $z1 = r0.<o.dkl: boolean setVisibility>;

        if $z1 != 0 goto label060;

        $z1 = r0.<o.dkl: boolean setTransitioning>;

        if $z1 != 0 goto label060;

        if $z0 != 0 goto label060;

        if $z1 != 0 goto label060;

        $r24 = r0.<o.dkl: o.dlm setTabContainer>;

     label055:
        $s10 = interfaceinvoke $r24.<o.dlm: short ModerationWorker()>();

     label056:
        $i1 = (int) $s10;

        if $i1 == -39 goto label060;

     label057:
        $r35 = staticinvoke <o.dlt: o.dly values()>();

        interfaceinvoke $r35.<o.dly: void RemoteActionCompatParcelizer(int,java.lang.String)>(2, "EOC marker not found. Codestream is corrupted.");

     label058:
        goto label060;

     label059:
        $r35 = staticinvoke <o.dlt: o.dly values()>();

        interfaceinvoke $r35.<o.dly: void RemoteActionCompatParcelizer(int,java.lang.String)>(2, "EOC marker is missing");

     label060:
        $z0 = r0.<o.dkl: boolean setTitleOptional>;

        if $z0 != 0 goto label061;

        specialinvoke r0.<o.dkl: void ImmLeaksCleaner()>();

        goto label062;

     label061:
        $r24 = r0.<o.dkl: o.dlm setTabContainer>;

        $i1 = interfaceinvoke $r24.<o.dlm: int valueOf()>();

        $i2 = r0.<o.dkn: int setGroupDividerEnabled>;

        if $i1 < $i2 goto label062;

        $i1 = r0.<o.dkn: int ModerationWorker>;

        $i1 = $i1 + 2;

        r0.<o.dkn: int ModerationWorker> = $i1;

     label062:
        $i1 = 0;

     label063:
        $i2 = r0.<o.dkn: int ActivityResultRegistry$1>;

        if $i1 >= $i2 goto label065;

        $r28 = r0.<o.dkl: int[] setTitle>;

        $r33 = r0.<o.dkl: int[] setSubtitle>;

        $i2 = $r33[$i1];

        $r28[$i1] = $i2;

        $z0 = r0.<o.dkl: boolean setMenu>;

        if $z0 == 0 goto label064;

        $r35 = staticinvoke <o.dlt: o.dly values()>();

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r29 = r0.<o.dkl: int[][] setShowingForActionMode>;

        $r28 = $r29[$i1];

        $i2 = lengthof $r28;

        $r31 = virtualinvoke $r4.<o.dki: java.lang.String valueOf(int,int)>($i1, $i2);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r31 = virtualinvoke $r40.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r35.<o.dly: void valueOf(java.lang.String)>($r31);

     label064:
        $i1 = $i1 + 1;

        goto label063;

     label065:
        return;

     label066:
        $r41 = new java.lang.IllegalArgumentException;

        $r40 = new java.lang.StringBuilder;

     label067:
        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Specified negative resolution level index: ");

     label068:
        $i1 = r0.<o.dkn: int setPopupCallback>;

     label069:
        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r31 = virtualinvoke $r40.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r41;

     label070:
        $r41 = new java.lang.IllegalArgumentException;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid resolution level index (\'-res\' option) ");

        $r31 = virtualinvoke $r3.<o.dlz: java.lang.String values(java.lang.String)>("res");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r31 = virtualinvoke $r40.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r41;

     label071:
        $z0 = r0.<o.dkl: boolean setMenu>;

        if $z0 == 0 goto label072;

        $r35 = staticinvoke <o.dlt: o.dly values()>();

        interfaceinvoke $r35.<o.dly: void RemoteActionCompatParcelizer(int,java.lang.String)>(1, $r31);

     label072:
        $r35 = staticinvoke <o.dlt: o.dly values()>();

        $r31 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4);

        $r30 = "Codestream truncated in tile ";

        $r31 = virtualinvoke $r30.<java.lang.String: java.lang.String concat(java.lang.String)>($r31);

        interfaceinvoke $r35.<o.dly: void RemoteActionCompatParcelizer(int,java.lang.String)>(2, $r31);

        $r24 = r0.<o.dkl: o.dlm setTabContainer>;

        $i1 = interfaceinvoke $r24.<o.dlm: int write()>();

        $i2 = r0.<o.dkn: int setGroupDividerEnabled>;

        if $i1 >= $i2 goto label073;

        r0.<o.dkn: int setGroupDividerEnabled> = $i1;

        $i1 = r0.<o.dkn: int setGroupDividerEnabled>;

        $f0 = (float) $i1;

        $f0 = $f0 * 8.0F;

        $r4 = $r1.<o.dkm: o.dki RemoteActionCompatParcelizer>;

        $r27 = $r4.<o.dki: o.dki$Fragment IconCompatParcelizer>;

        $i1 = virtualinvoke $r27.<o.dki$Fragment: int ModerationWorker()>();

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        $r4 = $r1.<o.dkm: o.dki RemoteActionCompatParcelizer>;

        $r27 = $r4.<o.dki: o.dki$Fragment IconCompatParcelizer>;

        $i1 = virtualinvoke $r27.<o.dki$Fragment: int RemoteActionCompatParcelizer()>();

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        r0.<o.dkn: float setForceShowIcon> = $f0;

     label073:
        $z0 = r0.<o.dkl: boolean setTitleOptional>;

        if $z0 != 0 goto label074;

        specialinvoke r0.<o.dkl: void ImmLeaksCleaner()>();

     label074:
        $r31 = virtualinvoke $r3.<o.dlz: java.lang.String values(java.lang.String)>("res");

        if $r31 != null goto label075;

        $r37 = $r2.<o.dkq: o.dka values>;

        $i1 = virtualinvoke $r37.<o.dka: int values()>();

        r0.<o.dkn: int setPopupCallback> = $i1;

        goto label077;

     label075:
        $i1 = virtualinvoke $r3.<o.dlz: int valueOf(java.lang.String)>("res");

     label076:
        r0.<o.dkn: int setPopupCallback> = $i1;

        $i1 = r0.<o.dkn: int setPopupCallback>;

        if $i1 < 0 goto label081;

     label077:
        $r37 = $r2.<o.dkq: o.dka values>;

        $i1 = virtualinvoke $r37.<o.dka: int values()>();

        $i2 = r0.<o.dkn: int setPopupCallback>;

        if $i2 <= $i1 goto label078;

        $r35 = staticinvoke <o.dlt: o.dly values()>();

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>(java.lang.String)>("Specified resolution level (");

        $i2 = r0.<o.dkn: int setPopupCallback>;

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is larger than the maximum value. Setting it to ");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (maximum value)");

        $r31 = virtualinvoke $r40.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r35.<o.dly: void RemoteActionCompatParcelizer(int,java.lang.String)>(2, $r31);

        r0.<o.dkn: int setPopupCallback> = $i1;

     label078:
        $i1 = 0;

     label079:
        $i2 = r0.<o.dkn: int ActivityResultRegistry$1>;

        if $i1 >= $i2 goto label080;

        $r28 = r0.<o.dkl: int[] setTitle>;

        $r33 = r0.<o.dkl: int[] setSubtitle>;

        $i2 = $r33[$i1];

        $r28[$i1] = $i2;

        $i1 = $i1 + 1;

        goto label079;

     label080:
        return;

     label081:
        $r41 = new java.lang.IllegalArgumentException;

        $r40 = new java.lang.StringBuilder;

     label082:
        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Specified negative resolution level index: ");

     label083:
        $i1 = r0.<o.dkn: int setPopupCallback>;

     label084:
        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r31 = virtualinvoke $r40.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r41;

     label085:
        $r41 = new java.lang.IllegalArgumentException;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid resolution level index (\'-res\' option) ");

        $r31 = virtualinvoke $r3.<o.dlz: java.lang.String values(java.lang.String)>("res");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r31 = virtualinvoke $r40.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r41;

     label086:
        $r38 = new java.lang.Error;

        specialinvoke $r38.<java.lang.Error: void <init>(java.lang.String)>("Requested bitrate is too small.");

        throw $r38;

     label087:
        $r38 = new java.lang.Error;

        specialinvoke $r38.<java.lang.Error: void <init>(java.lang.String)>("\'l_quit\' option is missing");

        throw $r38;

     label088:
        $r38 = new java.lang.Error;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid value in \'l_quit\' option: ");

        $r31 = virtualinvoke $r3.<o.dlz: java.lang.String values(java.lang.String)>("l_quit");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r31 = virtualinvoke $r40.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r38.<java.lang.Error: void <init>(java.lang.String)>($r31);

        throw $r38;

     label089:
        $r38 = new java.lang.Error;

        specialinvoke $r38.<java.lang.Error: void <init>(java.lang.String)>("\'ncb_quit\' option is missing");

        throw $r38;

     label090:
        $r38 = new java.lang.Error;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid value in \'ncb_quit\' option: ");

        $r31 = virtualinvoke $r3.<o.dlz: java.lang.String values(java.lang.String)>("ncb_quit");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r31 = virtualinvoke $r40.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r38.<java.lang.Error: void <init>(java.lang.String)>($r31);

        throw $r38;

     label091:
        $r38 = new java.lang.Error;

        specialinvoke $r38.<java.lang.Error: void <init>(java.lang.String)>("\'nbytes\' option is missing");

        throw $r38;

     label092:
        $r38 = new java.lang.Error;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid value in \'nbytes\' option: ");

        $r31 = virtualinvoke $r3.<o.dlz: java.lang.String values(java.lang.String)>("nbytes");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r31 = virtualinvoke $r40.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r38.<java.lang.Error: void <init>(java.lang.String)>($r31);

        throw $r38;

     label093:
        $r38 = new java.lang.Error;

        specialinvoke $r38.<java.lang.Error: void <init>(java.lang.String)>("\'rate\' option is missing");

        throw $r38;

     label094:
        $r38 = new java.lang.Error;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid value in \'rate\' option: ");

        $r31 = virtualinvoke $r3.<o.dlz: java.lang.String values(java.lang.String)>("rate");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r31 = virtualinvoke $r40.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r38.<java.lang.Error: void <init>(java.lang.String)>($r31);

        throw $r38;

     label095:
        $r5 := @caughtexception;

        goto label094;

     label096:
        $r6 := @caughtexception;

        goto label093;

     label097:
        $r7 := @caughtexception;

        goto label092;

     label098:
        $r8 := @caughtexception;

        goto label091;

     label099:
        $r9 := @caughtexception;

        goto label090;

     label100:
        $r10 := @caughtexception;

        goto label089;

     label101:
        $r11 := @caughtexception;

        goto label088;

     label102:
        $r12 := @caughtexception;

        goto label087;

     label103:
        $r13 := @caughtexception;

        goto label071;

     label104:
        $r14 := @caughtexception;

        goto label071;

     label105:
        $r15 := @caughtexception;

        goto label071;

     label106:
        $r16 := @caughtexception;

        goto label071;

     label107:
        $r17 := @caughtexception;

        goto label043;

     label108:
        $r18 := @caughtexception;

        goto label071;

     label109:
        $r19 := @caughtexception;

        goto label070;

     label110:
        $r20 := @caughtexception;

        goto label059;

     label111:
        $r21 := @caughtexception;

        goto label070;

     label112:
        $r22 := @caughtexception;

        goto label085;

     label113:
        $r23 := @caughtexception;

        goto label085;

        catch java.lang.NumberFormatException from label001 to label002 with label095;
        catch java.lang.IllegalArgumentException from label001 to label002 with label096;
        catch java.lang.NumberFormatException from label003 to label004 with label097;
        catch java.lang.IllegalArgumentException from label003 to label004 with label098;
        catch java.lang.NumberFormatException from label009 to label010 with label099;
        catch java.lang.IllegalArgumentException from label009 to label010 with label100;
        catch java.lang.NumberFormatException from label011 to label012 with label101;
        catch java.lang.IllegalArgumentException from label011 to label012 with label102;
        catch java.io.EOFException from label016 to label017 with label103;
        catch java.io.EOFException from label017 to label018 with label044;
        catch java.io.EOFException from label019 to label020 with label044;
        catch java.io.EOFException from label022 to label023 with label104;
        catch java.io.EOFException from label024 to label025 with label105;
        catch java.io.EOFException from label028 to label029 with label106;
        catch java.io.EOFException from label030 to label031 with label106;
        catch java.io.EOFException from label032 to label033 with label106;
        catch java.io.EOFException from label038 to label039 with label107;
        catch java.io.EOFException from label040 to label041 with label107;
        catch java.io.EOFException from label045 to label046 with label108;
        catch java.io.EOFException from label047 to label048 with label108;
        catch java.lang.NumberFormatException from label050 to label051 with label109;
        catch java.io.EOFException from label055 to label056 with label110;
        catch java.io.EOFException from label057 to label058 with label110;
        catch java.lang.NumberFormatException from label067 to label068 with label111;
        catch java.lang.NumberFormatException from label069 to label070 with label111;
        catch java.lang.NumberFormatException from label075 to label076 with label112;
        catch java.lang.NumberFormatException from label082 to label083 with label113;
        catch java.lang.NumberFormatException from label084 to label085 with label113;
    }
