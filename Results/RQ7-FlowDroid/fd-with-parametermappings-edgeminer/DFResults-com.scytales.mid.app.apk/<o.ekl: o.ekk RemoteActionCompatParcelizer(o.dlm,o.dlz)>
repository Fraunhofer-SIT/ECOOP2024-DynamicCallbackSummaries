    private static o.ekk RemoteActionCompatParcelizer(o.dlm, o.dlz) throws java.io.IOException
    {
        java.lang.Integer $r13;
        java.util.Vector $r12, $r37;
        int[] $r18;
        boolean $z0, $z1;
        java.lang.Exception $r4, $r5, $r6;
        o.dmk $r42;
        o.ekk $r30;
        float $f0;
        java.lang.StringBuilder $r38;
        java.lang.Throwable $r0, $r1, $r2, $r3, $r7;
        o.dly $r11;
        o.dlz $r9;
        o.dlg[] $r26;
        java.lang.Error $r36;
        o.dli $r43;
        o.dlj $r44;
        short $s5;
        o.dlg $r28, $r46;
        o.dlh $r27;
        o.dlm $r8, $r10;
        o.CaptureFailure$Activity $r32, $r33;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r14, $r34;
        o.dlp $r22;
        o.dki$Fragment $r16;
        o.dls $r21;
        double $d0;
        o.dky $r20;
        o.dkz $r35;
        o.dla $r23, $r25;
        java.io.IOException $r39;
        o.dle $r29;
        o.CaptureFailure $r24, $r45;
        o.dki $r40;
        o.dkm $r41;
        o.GetCommand $r31;
        o.dkq $r17;
        java.lang.Object $r15;
        o.dkn $r19;

        $r8 := @parameter0: o.dlm;

        $r9 := @parameter1: o.dlz;

        $f0 = virtualinvoke $r9.<o.dlz: float read(java.lang.String)>("rate");

        $d0 = (double) $f0;

        $r35 = new o.dkz;

        specialinvoke $r35.<o.dkz: void <init>(o.dlm)>($r8);

        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label001:
        $i0 = interfaceinvoke $r10.<o.dlm: int read()>();

     label002:
        if $i0 != 12 goto label086;

        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label003:
        $i0 = interfaceinvoke $r10.<o.dlm: int read()>();

     label004:
        if $i0 != 1783636000 goto label086;

        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label005:
        $i0 = interfaceinvoke $r10.<o.dlm: int read()>();

     label006:
        if $i0 != 218793738 goto label086;

        $r35.<o.dkz: boolean values> = 1;

        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label007:
        interfaceinvoke $r10.<o.dlm: int valueOf()>();

     label008:
        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label009:
        $i0 = interfaceinvoke $r10.<o.dlm: int read()>();

     label010:
        if $i0 == 0 goto label083;

        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label011:
        $i1 = interfaceinvoke $r10.<o.dlm: int read()>();

     label012:
        if $i1 == 1718909296 goto label014;

     label013:
        $z0 = 0;

        goto label024;

     label014:
        if $i0 == 1 goto label079;

        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label015:
        interfaceinvoke $r10.<o.dlm: int read()>();

     label016:
        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label017:
        interfaceinvoke $r10.<o.dlm: int read()>();

     label018:
        $i0 = $i0 + -16;

        $i0 = $i0 / 4;

        $z0 = 0;

     label019:
        if $i0 <= 0 goto label023;

        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label020:
        $i1 = interfaceinvoke $r10.<o.dlm: int read()>();

     label021:
        if $i1 != 1785737760 goto label022;

        $z0 = 1;

     label022:
        $i0 = $i0 + -1;

        goto label019;

     label023:
        if $z0 == 0 goto label013;

        $z0 = 1;

     label024:
        if $z0 == 0 goto label076;

        $z0 = 0;

        $z1 = 0;

     label025:
        if $z0 != 0 goto label075;

        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label026:
        $i0 = interfaceinvoke $r10.<o.dlm: int valueOf()>();

     label027:
        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label028:
        $i2 = interfaceinvoke $r10.<o.dlm: int read()>();

     label029:
        $i1 = $i2;

        $i3 = $i0 + $i2;

        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label030:
        $i4 = interfaceinvoke $r10.<o.dlm: int write()>();

     label031:
        if $i3 != $i4 goto label032;

        $z0 = 1;

     label032:
        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label033:
        $i3 = interfaceinvoke $r10.<o.dlm: int read()>();

     label034:
        if $i2 != 0 goto label039;

        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label035:
        $i1 = interfaceinvoke $r10.<o.dlm: int write()>();

     label036:
        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label037:
        $i2 = interfaceinvoke $r10.<o.dlm: int valueOf()>();

     label038:
        $i1 = $i1 - $i2;

        $z0 = 1;

        goto label040;

     label039:
        if $i2 == 1 goto label071;

     label040:
        lookupswitch($i3)
        {
            case 1685074537: goto label068;
            case 1785737827: goto label050;
            case 1785737832: goto label043;
            case 1969843814: goto label068;
            case 1970628964: goto label068;
            case 2020437024: goto label068;
            default: goto label041;
        };

     label041:
        $r11 = staticinvoke <o.dlt: o.dly values()>();

     label042:
        goto label066;

     label043:
        if $z1 != 0 goto label047;

        if $i1 == 0 goto label044;

        $z1 = 1;

        goto label068;

     label044:
        $r36 = new java.lang.Error;

     label045:
        specialinvoke $r36.<java.lang.Error: void <init>(java.lang.String)>("Zero-length of JP2Header Box");

     label046:
        throw $r36;

     label047:
        $r36 = new java.lang.Error;

     label048:
        specialinvoke $r36.<java.lang.Error: void <init>(java.lang.String)>("Invalid JP2 file: Multiple JP2Header boxes found");

     label049:
        throw $r36;

     label050:
        if $z1 == 0 goto label063;

        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label051:
        $i2 = interfaceinvoke $r10.<o.dlm: int valueOf()>();

     label052:
        $r12 = $r35.<o.dkz: java.util.Vector valueOf>;

        if $r12 != null goto label055;

        $r37 = new java.util.Vector;

     label053:
        specialinvoke $r37.<java.util.Vector: void <init>()>();

     label054:
        $r35.<o.dkz: java.util.Vector valueOf> = $r37;

     label055:
        $r12 = $r35.<o.dkz: java.util.Vector valueOf>;

     label056:
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r12.<java.util.Vector: void addElement(java.lang.Object)>($r13);

     label057:
        $r12 = $r35.<o.dkz: java.util.Vector read>;

        if $r12 != null goto label060;

        $r37 = new java.util.Vector;

     label058:
        specialinvoke $r37.<java.util.Vector: void <init>()>();

     label059:
        $r35.<o.dkz: java.util.Vector read> = $r37;

     label060:
        $r12 = $r35.<o.dkz: java.util.Vector read>;

     label061:
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r12.<java.util.Vector: void addElement(java.lang.Object)>($r13);

     label062:
        goto label068;

     label063:
        $r36 = new java.lang.Error;

     label064:
        specialinvoke $r36.<java.lang.Error: void <init>(java.lang.String)>("Invalid JP2 file: JP2Header box not found before Contiguous codestream box ");

     label065:
        throw $r36;

     label066:
        $r38 = new java.lang.StringBuilder;

     label067:
        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown box-type: 0x");

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r38.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r11.<o.dly: void RemoteActionCompatParcelizer(int,java.lang.String)>(2, $r14);

     label068:
        if $z0 != 0 goto label075;

        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

        $i0 = $i0 + $i1;

     label069:
        interfaceinvoke $r10.<o.dlm: void valueOf(int)>($i0);

     label070:
        goto label025;

     label071:
        $r8 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label072:
        interfaceinvoke $r8.<o.dlm: long RemoteActionCompatParcelizer()>();

     label073:
        $r39 = new java.io.IOException;

     label074:
        specialinvoke $r39.<java.io.IOException: void <init>(java.lang.String)>("File too long.");

        throw $r39;

     label075:
        $r12 = $r35.<o.dkz: java.util.Vector valueOf>;

        $i0 = virtualinvoke $r12.<java.util.AbstractCollection: int size()>();

        if $i0 != 0 goto label092;

        $r36 = new java.lang.Error;

        specialinvoke $r36.<java.lang.Error: void <init>(java.lang.String)>("Invalid JP2 file: Contiguous codestream box missing");

        throw $r36;

     label076:
        $r36 = new java.lang.Error;

     label077:
        specialinvoke $r36.<java.lang.Error: void <init>(java.lang.String)>("Invalid JP2 file: File Type box missing");

     label078:
        throw $r36;

     label079:
        $r8 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label080:
        interfaceinvoke $r8.<o.dlm: long RemoteActionCompatParcelizer()>();

     label081:
        $r39 = new java.io.IOException;

     label082:
        specialinvoke $r39.<java.io.IOException: void <init>(java.lang.String)>("File too long.");

        throw $r39;

     label083:
        $r36 = new java.lang.Error;

     label084:
        specialinvoke $r36.<java.lang.Error: void <init>(java.lang.String)>("Zero-length of Profile Box");

     label085:
        throw $r36;

     label086:
        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label087:
        interfaceinvoke $r10.<o.dlm: void valueOf(int)>(0);

     label088:
        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label089:
        $s5 = interfaceinvoke $r10.<o.dlm: short ModerationWorker()>();

     label090:
        $i0 = (int) $s5;

        if $i0 != -177 goto label121;

        $r35.<o.dkz: boolean values> = 0;

        $r10 = $r35.<o.dkz: o.dlm ModerationWorker>;

     label091:
        interfaceinvoke $r10.<o.dlm: void valueOf(int)>(0);

     label092:
        $z0 = $r35.<o.dkz: boolean values>;

        if $z0 == 0 goto label093;

        $r12 = $r35.<o.dkz: java.util.Vector valueOf>;

        $r15 = virtualinvoke $r12.<java.util.Vector: java.lang.Object elementAt(int)>(0);

        $r13 = (java.lang.Integer) $r15;

        $i0 = virtualinvoke $r13.<java.lang.Number: int intValue()>();

        interfaceinvoke $r8.<o.dlm: void valueOf(int)>($i0);

        goto label094;

     label093:
        staticinvoke <o.btl: void values(java.lang.String,java.lang.String)>("JJ2000Decoder", "Assuming codestream not wrapped in JP2 format");

     label094:
        $r40 = new o.dki;

        specialinvoke $r40.<o.dki: void <init>()>();

        $r41 = new o.dkm;

     label095:
        specialinvoke $r41.<o.dkm: void <init>(o.dlm,o.dlz,o.dki)>($r8, $r9, $r40);

     label096:
        $i0 = $r41.<o.dkm: int ComponentActivity$4>;

        $r16 = $r40.<o.dki: o.dki$Fragment IconCompatParcelizer>;

        virtualinvoke $r16.<o.dki$Fragment: int read()>();

        $r17 = $r41.<o.dkm: o.dkq ModerationWorker>;

        $r18 = newarray (int)[$i0];

        $i1 = 0;

     label097:
        if $i1 >= $i0 goto label098;

        $i2 = virtualinvoke $r41.<o.dkm: int values(int)>($i1);

        $r18[$i1] = $i2;

        $i1 = $i1 + 1;

        goto label097;

     label098:
        $z0 = virtualinvoke $r9.<o.dlz: boolean ModerationWorker(java.lang.String)>("cdstr_info");

        $r19 = staticinvoke <o.dkn: o.dkn read(o.dlm,o.dkm,o.dlz,o.dkq,boolean,o.dki)>($r8, $r41, $r9, $r17, $z0, $r40);

        $r20 = virtualinvoke $r41.<o.dkm: o.dky read(o.dkv,o.dlz)>($r19, $r9);

        $r21 = staticinvoke <o.dkm: o.dls valueOf(o.dlo,o.dlz,o.dkq)>($r20, $r9, $r17);

        $r22 = staticinvoke <o.dkm: o.dlp ModerationWorker(o.dlo,int[],o.dkq)>($r21, $r18, $r17);

        $r42 = new o.dmk;

        specialinvoke $r42.<o.dmk: void <init>(o.dmd,o.dkq)>($r22, $r17);

        $i0 = virtualinvoke $r19.<o.dkn: int ModerationWorker()>();

        virtualinvoke $r42.<o.dmg: void ComponentActivity$4(int)>($i0);

        $r43 = new o.dli;

        specialinvoke $r43.<o.dli: void <init>(o.dla)>($r42);

        $r44 = new o.dlj;

        $r23 = $r44;

        specialinvoke $r44.<o.dlj: void <init>(o.dla,o.dkq,int[],o.dlz)>($r43, $r17, $r18, $r9);

        $z0 = $r35.<o.dkz: boolean values>;

        if $z0 == 0 goto label104;

        $r45 = new o.CaptureFailure;

        $r24 = $r45;

     label099:
        specialinvoke $r45.<o.CaptureFailure: void <init>(o.dlm,o.dlz)>($r8, $r9);

     label100:
        $r25 = staticinvoke <o.dkm: o.dla read(o.dla,o.CaptureFailure)>($r44, $r45);

        $r25 = staticinvoke <o.dkm: o.dla valueOf(o.dla,o.CaptureFailure)>($r25, $r45);

        $r25 = staticinvoke <o.dkm: o.dla values(o.dla,o.CaptureFailure)>($r25, $r45);

        $r25 = staticinvoke <o.dkm: o.dla RemoteActionCompatParcelizer(o.dla,o.CaptureFailure)>($r25, $r45);

     label101:
        goto label105;

     label102:
        $r24 = null;

     label103:
        staticinvoke <o.btl: void values(java.lang.String,java.lang.String)>("JJ2000Decoder", "DEBUG: Ignoring jp2 colorspace processing error");

        $r25 = null;

        goto label105;

     label104:
        $r25 = $r44;

        $r24 = null;

     label105:
        if $r25 == null goto label106;

        $r23 = $r25;

     label106:
        $i0 = interfaceinvoke $r23.<o.dla: int p_()>();

        $r26 = newarray (o.dlg)[$i0];

        $r18 = newarray (int)[$i0];

        $i1 = interfaceinvoke $r23.<o.dla: int setBackgroundResource()>();

        $i2 = interfaceinvoke $r23.<o.dla: int e_()>();

        $r27 = interfaceinvoke $r23.<o.dla: o.dlh ModerationWorker(o.dlh)>(null);

        $i3 = 0;

     label107:
        $i4 = $r27.<o.dlh: int values>;

        if $i3 >= $i4 goto label116;

        $i4 = 0;

     label108:
        $i6 = $r27.<o.dlh: int RemoteActionCompatParcelizer>;

        if $i4 >= $i6 goto label115;

     label109:
        interfaceinvoke $r23.<o.dla: void ModerationWorker(int,int)>($i4, $i3);

     label110:
        goto label112;

     label111:
        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>("DEBUG: Ignoring exception in JJ2000Decoder setTile(");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r38.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <o.btl: void ModerationWorker(java.lang.String,java.lang.String)>("JJ2000Decoder", $r14);

     label112:
        $i6 = interfaceinvoke $r23.<o.dla: int setBackgroundResource()>();

        $i7 = interfaceinvoke $r23.<o.dla: int e_()>();

        $i8 = interfaceinvoke $r23.<o.dla: int A_()>();

        $i9 = interfaceinvoke $r23.<o.dla: int B_()>();

        $i10 = 0;

     label113:
        if $i10 >= $i0 goto label114;

        $r46 = new o.dlg;

        specialinvoke $r46.<o.dlg: void <init>(int,int,int,int)>($i8, $i9, $i6, $i7);

        $r26[$i10] = $r46;

        $r28 = $r26[$i10];

        $r28.<o.dlg: int[] IconCompatParcelizer> = null;

        $r28 = $r26[$i10];

        $r29 = interfaceinvoke $r23.<o.dla: o.dle values(o.dle,int)>($r28, $i10);

        $r28 = (o.dlg) $r29;

        $r26[$i10] = $r28;

        $i11 = interfaceinvoke $r23.<o.dla: int IconCompatParcelizer(int)>($i10);

        $r18[$i10] = $i11;

        $i10 = $i10 + 1;

        goto label113;

     label114:
        $i4 = $i4 + 1;

        goto label108;

     label115:
        $i3 = $i3 + 1;

        goto label107;

     label116:
        if $r24 != null goto label117;

        staticinvoke <o.btl: void values(java.lang.String,java.lang.String)>("JJ2000Decoder", "Could not determine color space type, assuming sRGB");

        $r30 = staticinvoke <o.ekl: o.ekk values(o.dlg[],int,int,int[],double)>($r26, $i1, $i2, $r18, $d0);

        return $r30;

     label117:
        $r31 = $r24.<o.CaptureFailure: o.GetCommand ComponentActivity$3>;

        $r32 = $r31.<o.GetCommand: o.CaptureFailure$Activity read>;

        $r33 = <o.CaptureFailure: o.CaptureFailure$Activity RemoteActionCompatParcelizer>;

        $z0 = virtualinvoke $r33.<java.lang.Object: boolean equals(java.lang.Object)>($r32);

        if $z0 == 0 goto label118;

        $r30 = staticinvoke <o.ekl: o.ekk read(o.dlg[],int,int,int[])>($r26, $i1, $i2, $r18);

        return $r30;

     label118:
        $r33 = <o.CaptureFailure: o.CaptureFailure$Activity read>;

        $z0 = virtualinvoke $r33.<java.lang.Object: boolean equals(java.lang.Object)>($r32);

        if $z0 == 0 goto label119;

        $r30 = staticinvoke <o.ekl: o.ekk values(o.dlg[],int,int,int[],double)>($r26, $i1, $i2, $r18, $d0);

        return $r30;

     label119:
        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r32);

        $r34 = "Unsupported color space type: ";

        $r14 = virtualinvoke $r34.<java.lang.String: java.lang.String concat(java.lang.String)>($r14);

        staticinvoke <o.btl: void values(java.lang.String,java.lang.String)>("JJ2000Decoder", $r14);

        $r30 = staticinvoke <o.ekl: o.ekk values(o.dlg[],int,int,int[],double)>($r26, $i1, $i2, $r18, $d0);

        return $r30;

     label120:
        $r39 = new java.io.IOException;

        specialinvoke $r39.<java.io.IOException: void <init>(java.lang.String)>("Codestream too short or bad header, unable to decode");

        throw $r39;

     label121:
        $r36 = new java.lang.Error;

     label122:
        specialinvoke $r36.<java.lang.Error: void <init>(java.lang.String)>("File is neither valid JP2 file nor valid JPEG 2000 codestream");

     label123:
        throw $r36;

     label124:
        $r36 = new java.lang.Error;

        specialinvoke $r36.<java.lang.Error: void <init>(java.lang.String)>("EOF reached before finding Contiguous Codestream Box");

        throw $r36;

     label125:
        $r0 := @caughtexception;

        goto label124;

     label126:
        $r1 := @caughtexception;

        goto label124;

     label127:
        $r2 := @caughtexception;

        goto label124;

     label128:
        $r3 := @caughtexception;

        goto label120;

     label129:
        $r4 := @caughtexception;

        goto label102;

     label130:
        $r5 := @caughtexception;

        goto label103;

     label131:
        $r6 := @caughtexception;

        goto label111;

     label132:
        $r7 := @caughtexception;

        goto label124;

        catch java.io.EOFException from label001 to label002 with label125;
        catch java.io.EOFException from label003 to label004 with label125;
        catch java.io.EOFException from label005 to label006 with label125;
        catch java.io.EOFException from label007 to label008 with label125;
        catch java.io.EOFException from label009 to label010 with label125;
        catch java.io.EOFException from label011 to label012 with label125;
        catch java.io.EOFException from label015 to label016 with label126;
        catch java.io.EOFException from label017 to label018 with label126;
        catch java.io.EOFException from label020 to label021 with label126;
        catch java.io.EOFException from label026 to label027 with label126;
        catch java.io.EOFException from label028 to label029 with label126;
        catch java.io.EOFException from label030 to label031 with label126;
        catch java.io.EOFException from label033 to label034 with label126;
        catch java.io.EOFException from label035 to label036 with label126;
        catch java.io.EOFException from label037 to label038 with label126;
        catch java.io.EOFException from label041 to label042 with label126;
        catch java.io.EOFException from label045 to label046 with label126;
        catch java.io.EOFException from label048 to label049 with label126;
        catch java.io.EOFException from label051 to label052 with label126;
        catch java.io.EOFException from label053 to label054 with label126;
        catch java.io.EOFException from label056 to label057 with label126;
        catch java.io.EOFException from label058 to label059 with label126;
        catch java.io.EOFException from label061 to label062 with label126;
        catch java.io.EOFException from label064 to label065 with label126;
        catch java.io.EOFException from label067 to label068 with label126;
        catch java.io.EOFException from label069 to label070 with label126;
        catch java.io.EOFException from label072 to label073 with label126;
        catch java.io.EOFException from label074 to label075 with label126;
        catch java.io.EOFException from label077 to label078 with label127;
        catch java.io.EOFException from label080 to label081 with label127;
        catch java.io.EOFException from label082 to label083 with label127;
        catch java.io.EOFException from label084 to label085 with label127;
        catch java.io.EOFException from label087 to label088 with label127;
        catch java.io.EOFException from label089 to label090 with label127;
        catch java.io.EOFException from label091 to label092 with label127;
        catch java.io.EOFException from label095 to label096 with label128;
        catch java.lang.Exception from label099 to label100 with label129;
        catch java.lang.Exception from label100 to label101 with label130;
        catch java.lang.Exception from label109 to label110 with label131;
        catch java.io.EOFException from label122 to label123 with label132;
    }
