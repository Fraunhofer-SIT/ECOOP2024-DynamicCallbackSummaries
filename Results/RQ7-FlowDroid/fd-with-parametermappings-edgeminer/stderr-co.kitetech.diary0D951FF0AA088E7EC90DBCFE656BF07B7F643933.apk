[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loading sources and sinks from SourcesSinks/UnconstrainedSourcesSinks.xml...
[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loaded 273 sources and 91 sinks from the XML file
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] WARN soot.Scene - Android API version '30' not available, using minApkVersion '16' instead
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.103317812 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 74 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class androidx.core.content.FileProvider
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class androidx.startup.InitializationProvider
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class androidx.multidex.MultiDexApplication
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] ERROR soot.jimple.toolkits.typing.fast.TypePromotionUseVisitor - Failed Typing in <com.appbrain.c.f: byte[] a(java.lang.String,byte[])> at statement throw $u3#6: Is not cast compatible: java.lang.Throwable <-- java.lang.Object
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] WARN soot.jimple.infoflow.android.SetupApplication - Aborted callback collection because of low memory
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] WARN soot.jimple.infoflow.android.SetupApplication - Callback analysis aborted early due to time or memory exhaustion
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 273 sources, 91 sinks, and 0 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 578 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on storagepath2-data/androidApps/2022-AndroZoo-PlayStore/co.kitetech.diary0D951FF0AA088E7EC90DBCFE656BF07B7F643933.apk with 273 sources and 91 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 48.798641075 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 261017 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 351 sources and 154 sinks.
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid] ERROR soot.jimple.infoflow.data.AccessPathFactory - Access paths cannot be rooted in values of type soot.jimple.StringConstant
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper hits: 2997793
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper misses: 86900084
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - IFDS problem with 26402661 forward and 48976229 backward edges solved in 903 seconds, processing 30 results...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Current memory consumption: 63300 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after cleanup: 12671 MB
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 1 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 2 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 3 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 4 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 5 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 6 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after path building: 12672 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Path reconstruction took 7 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>($i0) in method <com.safedk.android.internal.f: int read()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>() in method <com.safedk.android.internal.f: int read()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4) in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>() in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = (long) $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 << 40
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l3 | $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 + $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -4417276706812531889L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -8796714831421723037L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l3 >> 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l8 & 255L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l5 = $l5 ^ $l8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b1 = (byte) $i4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $b1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>() in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = (long) $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 << 56
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 + $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -4417276706812531889L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -8796714831421723037L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l3 >> 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l8 & 255L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l5 = $l5 ^ $l8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b1 = (byte) $i4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $b1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>() in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = (long) $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 << 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l3 | $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 + $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -4417276706812531889L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -8796714831421723037L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l3 >> 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l8 & 255L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l5 = $l5 ^ $l8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b1 = (byte) $i4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $b1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>() in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = (long) $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 << 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l3 | $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 + $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -4417276706812531889L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -8796714831421723037L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l3 >> 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l8 & 255L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l5 = $l5 ^ $l8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b1 = (byte) $i4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $b1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>() in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = (long) $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 << 16
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l3 | $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 + $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -4417276706812531889L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -8796714831421723037L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l3 >> 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l8 & 255L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l5 = $l5 ^ $l8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b1 = (byte) $i4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $b1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>() in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = (long) $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 << 8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l3 | $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 + $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -4417276706812531889L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -8796714831421723037L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l3 >> 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l8 & 255L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l5 = $l5 ^ $l8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b1 = (byte) $i4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $b1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>() in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = (long) $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 << 24
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l3 | $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 + $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -4417276706812531889L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -8796714831421723037L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l3 >> 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l8 & 255L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l5 = $l5 ^ $l8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b1 = (byte) $i4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $b1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>() in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = (long) $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 << 32
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l3 | $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 + $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -4417276706812531889L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -8796714831421723037L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l3 >> 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l8 & 255L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l5 = $l5 ^ $l8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b1 = (byte) $i4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $b1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r11.<java.io.BufferedWriter: void write(java.lang.String)>($r1) in method <d.j.m$3: void run()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = interfaceinvoke $r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("aidx", 0) in method <d.j.m$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.m$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = interfaceinvoke $r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("aidx", 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.m$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("index", $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.m$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.m$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r11.<java.io.BufferedWriter: void write(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r2, null) in method <d.j.o: int getInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: int getInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r2, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: int getInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = specialinvoke r0.<d.j.o: java.lang.String c(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String c(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: int getInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: int getInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.m$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("index", $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.m$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.m$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r11.<java.io.BufferedWriter: void write(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r15.<java.io.OutputStream: void write(byte[],int,int)>($r9, 0, $i0) in method <com.bytedance.sdk.component.utils.y: boolean a(java.io.File,java.util.List,java.util.zip.ZipFile,java.util.zip.ZipEntry,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r14.<java.io.InputStream: int read(byte[])>($r9) in method <com.bytedance.sdk.component.utils.y: boolean a(java.io.File,java.util.List,java.util.zip.ZipFile,java.util.zip.ZipEntry,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.bytedance.sdk.component.utils.y: boolean a(java.io.File,java.util.List,java.util.zip.ZipFile,java.util.zip.ZipEntry,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r14.<java.io.InputStream: int read(byte[])>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.bytedance.sdk.component.utils.y: boolean a(java.io.File,java.util.List,java.util.zip.ZipFile,java.util.zip.ZipEntry,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r15.<java.io.OutputStream: void write(byte[],int,int)>($r9, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r24.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r16, 0, $i2) in method <d.d.d: void l(d.h.i)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i2 = virtualinvoke $r22.<java.io.BufferedInputStream: int read(byte[])>($r16) in method <d.d.d: void l(d.h.i)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.d.d: void l(d.h.i)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i2 = virtualinvoke $r22.<java.io.BufferedInputStream: int read(byte[])>($r16)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.d.d: void l(d.h.i)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r24.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r16, 0, $i2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, $i0, $i1) in method <com.safedk.android.internal.f: void a(byte[],int,int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r1) in method <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.safedk.android.internal.f: void a(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i1 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1) in method <com.safedk.android.internal.f: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.safedk.android.internal.f: void a(byte[],int,int)>($r1, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4) in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>() in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = (long) $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 << 40
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l3 | $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 + $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -4417276706812531889L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -8796714831421723037L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l3 >> 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l8 & 255L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l5 = $l5 ^ $l8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b1 = (byte) $i4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $b1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>() in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = (long) $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 << 56
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 + $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -4417276706812531889L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -8796714831421723037L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l3 >> 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l8 & 255L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l5 = $l5 ^ $l8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b1 = (byte) $i4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $b1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>() in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = (long) $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 << 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l3 | $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 + $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -4417276706812531889L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -8796714831421723037L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l3 >> 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l8 & 255L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l5 = $l5 ^ $l8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b1 = (byte) $i4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $b1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>() in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = (long) $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 << 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l3 | $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 + $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -4417276706812531889L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -8796714831421723037L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l3 >> 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l8 & 255L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l5 = $l5 ^ $l8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b1 = (byte) $i4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $b1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>() in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = (long) $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 << 16
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l3 | $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 + $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -4417276706812531889L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -8796714831421723037L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l3 >> 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l8 & 255L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l5 = $l5 ^ $l8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b1 = (byte) $i4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $b1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>() in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = (long) $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 << 8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l3 | $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 + $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -4417276706812531889L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -8796714831421723037L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l3 >> 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l8 & 255L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l5 = $l5 ^ $l8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b1 = (byte) $i4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $b1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>() in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = (long) $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 << 24
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l3 | $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 + $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -4417276706812531889L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -8796714831421723037L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l3 >> 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l8 & 255L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l5 = $l5 ^ $l8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b1 = (byte) $i4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $b1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>() in method <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r9.<java.io.ByteArrayInputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = (long) $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 << 32
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l3 | $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l2 = $l2 | $l3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 + $l2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -4417276706812531889L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 * -8796714831421723037L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l3 = $l3 ^ $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l3 >> 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l8 = $l8 & 255L
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l5 = $l5 ^ $l8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $l5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $b1 = (byte) $i4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i4 = (int) $b1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.k: java.lang.String a(java.lang.String,java.lang.String,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>($i4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r3, 0, $i0) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader createInMemoryClassLoader(android.content.Context)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r3) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader createInMemoryClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader createInMemoryClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader createInMemoryClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r3, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0) in method <com.appbrain.c.c: void a(java.io.InputStream,java.io.OutputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r1) in method <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.safedk.android.internal.f: void a(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.safedk.android.internal.f: java.io.ByteArrayOutputStream h>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.safedk.android.internal.f: java.io.InputStream e>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.safedk.android.internal.f
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appbrain.c.c: void a(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appbrain.c.c: void a(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i1 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1) in method <com.safedk.android.internal.f: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.safedk.android.internal.f: void a(byte[],int,int)>($r1, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.safedk.android.internal.f: java.io.ByteArrayOutputStream h>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.safedk.android.internal.f
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.safedk.android.internal.f
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.safedk.android.internal.f: java.io.InputStream e>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.safedk.android.internal.f
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.safedk.android.internal.f: java.io.InputStream e>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.safedk.android.internal.f: void a(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.safedk.android.internal.f
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.safedk.android.internal.f: java.io.InputStream e>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.safedk.android.internal.f: java.io.InputStream e>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.safedk.android.internal.f
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appbrain.c.c: void a(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appbrain.c.c: void a(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r6, 0, $i0) in method <com.applovin.impl.sdk.utils.g: java.lang.String a(java.io.InputStream,com.applovin.impl.sdk.m)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r1) in method <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.safedk.android.internal.f: void a(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.safedk.android.internal.f: java.io.ByteArrayOutputStream h>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.safedk.android.internal.f: java.io.InputStream e>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.safedk.android.internal.f
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.g: java.lang.String a(java.io.InputStream,com.applovin.impl.sdk.m)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.utils.g: java.lang.String a(java.io.InputStream,com.applovin.impl.sdk.m)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r6, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r18.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r11, 0, $i1) in method <d.j.p: java.io.File b(java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i1 = virtualinvoke $r16.<java.io.BufferedInputStream: int read(byte[])>($r11) in method <d.j.p: java.io.File b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.p: java.io.File b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = virtualinvoke $r16.<java.io.BufferedInputStream: int read(byte[])>($r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.p: java.io.File b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r18.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r11, 0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, 0, $i0) in method <d.j.o: java.lang.String b(java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r2, null) in method <d.j.o: int getInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: int getInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r2, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: int getInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = specialinvoke r0.<d.j.o: java.lang.String c(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String c(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: int getInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: int getInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <co.kitetech.diary.activity.MyActivity: void b()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = $i0 + $i1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <co.kitetech.diary.activity.MyActivity: void b()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = interfaceinvoke $r7.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r6, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o$a: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o$a: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <d.j.o: java.lang.String b(d.j.o,java.lang.String)>($r3, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(d.j.o,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = specialinvoke $r1.<d.j.o: java.lang.String b(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i2 = interfaceinvoke $r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("aidx", 0) in method <d.j.m: void a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.m: void a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i2 = interfaceinvoke $r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("aidx", 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.m: void a()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("aidx", $i2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o$a: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o$a: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <d.j.o: java.lang.String b(d.j.o,java.lang.String)>($r3, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(d.j.o,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = specialinvoke $r1.<d.j.o: java.lang.String b(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = interfaceinvoke $r36.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("aidx", 0) in method <d.j.q: void a(d.b.d,android.view.ViewGroup)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.q: void a(d.b.d,android.view.ViewGroup)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = interfaceinvoke $r36.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("aidx", 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.q: void a(d.b.d,android.view.ViewGroup)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r37 = interfaceinvoke $r37.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("aidx", $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o$a: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o$a: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <d.j.o: java.lang.String b(d.j.o,java.lang.String)>($r3, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(d.j.o,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = specialinvoke $r1.<d.j.o: java.lang.String b(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = interfaceinvoke $r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("aidx", 0) in method <d.j.m$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.m$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = interfaceinvoke $r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("aidx", 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.m$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = $i0 + 1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.m$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r21 = interfaceinvoke $r21.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("aidx", $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o$a: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o$a: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <d.j.o: java.lang.String b(d.j.o,java.lang.String)>($r3, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(d.j.o,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = specialinvoke $r1.<d.j.o: java.lang.String b(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = interfaceinvoke $r5.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r6, 0) in method <co.kitetech.diary.activity.MyActivity: void b()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <co.kitetech.diary.activity.MyActivity: void b()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = interfaceinvoke $r5.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r6, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <co.kitetech.diary.activity.MyActivity: void b()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = $i0 + $i1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <co.kitetech.diary.activity.MyActivity: void b()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = interfaceinvoke $r7.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r6, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o$a: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o$a: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <d.j.o: java.lang.String b(d.j.o,java.lang.String)>($r3, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(d.j.o,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = specialinvoke $r1.<d.j.o: java.lang.String b(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.o: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r6.<java.io.OutputStream: void write(byte[],int,int)>($r7, 0, $i0) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: dalvik.system.DexClassLoader makeLegacyAdsSdkClassLoader(android.content.Context)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r7) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: dalvik.system.DexClassLoader makeLegacyAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: dalvik.system.DexClassLoader makeLegacyAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: dalvik.system.DexClassLoader makeLegacyAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<java.io.OutputStream: void write(byte[],int,int)>($r7, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r33.<javax.crypto.CipherOutputStream: void write(byte[],int,int)>($r16, 0, $i1) in method <d.j.p: java.io.File a(java.io.File,java.lang.String,d.f.h)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i1 = virtualinvoke $r30.<java.io.BufferedInputStream: int read(byte[])>($r16) in method <d.j.p: java.io.File a(java.io.File,java.lang.String,d.f.h)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.p: java.io.File a(java.io.File,java.lang.String,d.f.h)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = virtualinvoke $r30.<java.io.BufferedInputStream: int read(byte[])>($r16)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.p: java.io.File a(java.io.File,java.lang.String,d.f.h)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r33.<javax.crypto.CipherOutputStream: void write(byte[],int,int)>($r16, 0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r11.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r6, 0, $i0) in method <d.j.q: byte[] a(android.net.Uri)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r6) in method <d.j.q: byte[] a(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.q: byte[] a(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.q: byte[] a(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r11.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r6, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r13.<java.io.FileOutputStream: void write(byte[],int,int)>($r14, 0, $i0) in method <com.pgl.a.b.e: java.lang.String a(android.content.Context,java.lang.String,java.io.File)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r12.<java.io.InputStream: int read(byte[])>($r14) in method <com.pgl.a.b.e: java.lang.String a(android.content.Context,java.lang.String,java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.pgl.a.b.e: java.lang.String a(android.content.Context,java.lang.String,java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r12.<java.io.InputStream: int read(byte[])>($r14)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.pgl.a.b.e: java.lang.String a(android.content.Context,java.lang.String,java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r13.<java.io.FileOutputStream: void write(byte[],int,int)>($r14, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i0) in method <com.adcolony.sdk.p: boolean a(java.io.InputStream,java.io.OutputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r14.<java.io.BufferedInputStream: int read(byte[],int,int)>($r5, 0, 4096) in method <com.adcolony.sdk.p: boolean a(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adcolony.sdk.p: boolean a(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r14.<java.io.BufferedInputStream: int read(byte[],int,int)>($r5, 0, 4096)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adcolony.sdk.p: boolean a(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i0) in method <com.inmobi.media.hg: byte[] a(java.io.InputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r1) in method <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.safedk.android.internal.f: void a(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.safedk.android.internal.f: java.io.ByteArrayOutputStream h>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.safedk.android.internal.f
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.safedk.android.internal.f
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.safedk.android.internal.f: java.io.InputStream e>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.safedk.android.internal.f
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.inmobi.media.hg: byte[] a(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.inmobi.media.hg: byte[] a(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r10.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r4, 0, $i0) in method <d.j.q: void a(java.io.File,java.io.File)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r8.<java.io.BufferedInputStream: int read(byte[])>($r4) in method <d.j.q: void a(java.io.File,java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.q: void a(java.io.File,java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r8.<java.io.BufferedInputStream: int read(byte[])>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.q: void a(java.io.File,java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r4, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r22.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r15, 0, $i2) in method <d.d.d: java.io.File a(java.lang.Long)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i2 = virtualinvoke $r24.<java.io.BufferedInputStream: int read(byte[])>($r15) in method <d.d.d: java.io.File a(java.lang.Long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.d.d: java.io.File a(java.lang.Long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i2 = virtualinvoke $r24.<java.io.BufferedInputStream: int read(byte[])>($r15)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.d.d: java.io.File a(java.lang.Long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r22.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r15, 0, $i2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r22.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r18, 0, $i0) in method <com.applovin.impl.sdk.r: java.io.ByteArrayOutputStream a(java.lang.String,java.util.List,boolean,com.applovin.impl.sdk.d.e)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r1) in method <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.safedk.android.internal.f: void a(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.safedk.android.internal.f: java.io.ByteArrayOutputStream h>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.safedk.android.internal.f
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.safedk.android.internal.f
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.safedk.android.internal.f: java.io.InputStream e>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.safedk.android.internal.f
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.partials.AppLovinNetworkBridge: java.io.InputStream urlConnectionGetInputStream(java.net.URLConnection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = (com.safedk.android.internal.f) $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.partials.AppLovinNetworkBridge: java.io.InputStream urlConnectionGetInputStream(java.net.URLConnection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.r: java.io.ByteArrayOutputStream a(java.lang.String,java.util.List,boolean,com.applovin.impl.sdk.d.e)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r16.<java.io.InputStream: int read(byte[],int,int)>($r18, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.r: java.io.ByteArrayOutputStream a(java.lang.String,java.util.List,boolean,com.applovin.impl.sdk.d.e)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r22.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r18, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r16.<java.io.InputStream: int read(byte[],int,int)>($r18, 0, $i0) in method <com.applovin.impl.sdk.r: java.io.ByteArrayOutputStream a(java.lang.String,java.util.List,boolean,com.applovin.impl.sdk.d.e)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.r: java.io.ByteArrayOutputStream a(java.lang.String,java.util.List,boolean,com.applovin.impl.sdk.d.e)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r16.<java.io.InputStream: int read(byte[],int,int)>($r18, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.r: java.io.ByteArrayOutputStream a(java.lang.String,java.util.List,boolean,com.applovin.impl.sdk.d.e)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r22.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r18, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i1 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1) in method <com.safedk.android.internal.f: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.safedk.android.internal.f: void a(byte[],int,int)>($r1, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.safedk.android.internal.f: java.io.ByteArrayOutputStream h>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: void a(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.safedk.android.internal.f: java.io.InputStream e>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.safedk.android.internal.f
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.r: java.io.ByteArrayOutputStream a(java.lang.String,java.util.List,boolean,com.applovin.impl.sdk.d.e)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r16.<java.io.InputStream: int read(byte[],int,int)>($r18, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.r: java.io.ByteArrayOutputStream a(java.lang.String,java.util.List,boolean,com.applovin.impl.sdk.d.e)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r22.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r18, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r30.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r9, 0, $i1) in method <d.j.p: java.io.File b(java.io.File,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i1 = virtualinvoke $r31.<javax.crypto.CipherInputStream: int read(byte[])>($r9) in method <d.j.p: java.io.File b(java.io.File,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.p: java.io.File b(java.io.File,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = virtualinvoke $r31.<javax.crypto.CipherInputStream: int read(byte[])>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.p: java.io.File b(java.io.File,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r30.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r9, 0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>($r10, 0, $i0) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader makeAdsSdkClassLoader(android.content.Context)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r8.<java.io.InputStream: int read(byte[])>($r10) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader makeAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader makeAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r8.<java.io.InputStream: int read(byte[])>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader makeAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>($r10, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r12.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r7, 0, $i0) in method <d.j.p: byte[] a(java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r10.<java.io.BufferedInputStream: int read(byte[])>($r7) in method <d.j.p: byte[] a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.p: byte[] a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r10.<java.io.BufferedInputStream: int read(byte[])>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.p: byte[] a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r12.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r7, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r9, 0, $i0) in method <com.applovin.impl.sdk.r: java.io.ByteArrayOutputStream a(java.io.File)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r7.<java.io.FileInputStream: int read(byte[],int,int)>($r9, 0, $i0) in method <com.applovin.impl.sdk.r: java.io.ByteArrayOutputStream a(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.r: java.io.ByteArrayOutputStream a(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r7.<java.io.FileInputStream: int read(byte[],int,int)>($r9, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.applovin.impl.sdk.r: java.io.ByteArrayOutputStream a(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r9, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0) in method <com.bykv.vk.openvk.component.video.a.b.g$b: void b(byte[],int,int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i3 = virtualinvoke $r16.<java.io.InputStream: int read(byte[])>($r11) in method <com.bykv.vk.openvk.component.video.a.b.g: void d(com.bykv.vk.openvk.component.video.a.b.g$b,com.bykv.vk.openvk.component.video.a.b.l$a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.bykv.vk.openvk.component.video.a.b.g: void d(com.bykv.vk.openvk.component.video.a.b.g$b,com.bykv.vk.openvk.component.video.a.b.l$a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i3 = virtualinvoke $r16.<java.io.InputStream: int read(byte[])>($r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.bykv.vk.openvk.component.video.a.b.g: void d(com.bykv.vk.openvk.component.video.a.b.g$b,com.bykv.vk.openvk.component.video.a.b.l$a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.bykv.vk.openvk.component.video.a.b.g$b: void b(byte[],int,int)>($r11, 0, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.bykv.vk.openvk.component.video.a.b.g$b: void b(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<java.io.OutputStream: void write(byte[],int,int)>($r10, 0, $i0) in method <d.j.a: void a(java.io.OutputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r24.<java.io.InputStream: int read(byte[])>($r10) in method <d.j.a: void a(java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.a: void a(java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r24.<java.io.InputStream: int read(byte[])>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <d.j.a: void a(java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<java.io.OutputStream: void write(byte[],int,int)>($r10, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>($i0) in method <com.safedk.android.internal.f: int read()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>() in method <com.safedk.android.internal.f: int read()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.safedk.android.internal.f: int read()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Data flow solver took 1009 seconds. Maximum memory consumption: 63300 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication - Found 28 leaks
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'SummaryStatistics'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Telemetry'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'Telemetry_sha256Hash_idx' for table 'Telemetry
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Callbacks'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallbackSummaries'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'CallbackSummaries_sha256Hash_idx' for table 'CallbackSummaries
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'AppSizes'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'AppSizes_sha256Hash_idx' for table 'AppSizes
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallgraphSizes'
