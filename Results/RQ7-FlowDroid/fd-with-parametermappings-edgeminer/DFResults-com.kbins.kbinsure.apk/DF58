Source: $r11 = virtualinvoke $r49.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>()
$r11 = virtualinvoke $r49.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>() in <hp: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
Sink: virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59) in <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>

<hp: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: $r11 = virtualinvoke $r49.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>()
<hp: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: return $r11
<com.kbins.kbinsure.cert.CertPasswordInput: void validationCertPasswordJoin(java.lang.String)>: $r1 = (java.lang.String) $r7
<com.kbins.kbinsure.cert.CertPasswordInput: void validationCertPasswordJoin(java.lang.String)>: virtualinvoke $r21.<lx: void setVidMsg(java.lang.String)>($r1)
<lx: void setVidMsg(java.lang.String)>: r0.<lx: java.lang.String vidMsg> = $r1
<lx: void setVidMsg(java.lang.String)>: return
<com.kbins.kbinsure.cert.CertPasswordInput: void validationCertPasswordJoin(java.lang.String)>: $r21 = r0.<com.kbins.kbinsure.cert.CertPasswordInput: lx authValidEntry>
<com.kbins.kbinsure.cert.CertPasswordInput: void validationCertPasswordJoin(java.lang.String)>: return
<com.kbins.kbinsure.cert.CertPasswordInput: void access$1000(com.kbins.kbinsure.cert.CertPasswordInput,java.lang.String)>: return
<com.kbins.kbinsure.cert.CertPasswordInput$11: void submitData(android.view.View,java.lang.String,java.lang.String,java.lang.String)>: $r5 = r0.<com.kbins.kbinsure.cert.CertPasswordInput$11: com.kbins.kbinsure.cert.CertPasswordInput this$0>
<com.kbins.kbinsure.cert.CertPasswordInput$11: void submitData(android.view.View,java.lang.String,java.lang.String,java.lang.String)>: return
<rg: void rh(android.view.View,java.lang.String,java.lang.String,java.lang.String)>: $r11 = r0.<rg: gx mTransKeyCtrlInterface>
<rg: void rh(android.view.View,java.lang.String,java.lang.String,java.lang.String)>: return
<rg: void cancel(android.content.Intent)>: return
<com.softsecurity.transkey.TransKeyCtrl: void J(java.lang.String)>: $r9 = r0.<com.softsecurity.transkey.TransKeyCtrl: com.softsecurity.transkey.ITransKeyActionListener h>
<com.softsecurity.transkey.TransKeyCtrl: void J(java.lang.String)>: return
<com.softsecurity.transkey.TransKeyCtrl: void cancel()>: r0 := @this: com.softsecurity.transkey.TransKeyCtrl
<com.kbins.kbinsure.widget.JsonUtils: org.json.JSONObject mapToJson(java.util.Map)>: $r5 = staticinvoke <com.kbins.kbinsure.widget.JsonUtils: java.lang.Object wrap(java.lang.Object)>($r5)
<com.kbins.kbinsure.widget.JsonUtils: java.lang.Object wrap(java.lang.Object)>: $r8 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>()
<com.kbins.kbinsure.widget.JsonUtils: java.lang.Object wrap(java.lang.Object)>: return $r8
<com.kbins.kbinsure.widget.JsonUtils: org.json.JSONObject mapToJson(java.util.Map)>: virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r3, $r5)
<com.kbins.kbinsure.widget.JsonUtils: org.json.JSONObject mapToJson(java.util.Map)>: return $r1
<com.kbins.kbinsure.widget.JsonUtils: java.lang.Object wrap(java.lang.Object)>: return $r6
<com.kbins.kbinsure.widget.JsonUtils: org.json.JSONArray collectionToJson(java.util.Collection)>: $r4[$b2] = $r5
<com.kbins.kbinsure.widget.JsonUtils: org.json.JSONArray collectionToJson(java.util.Collection)>: $r5 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r0, $i0, $r4)
<ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: $r0 = $r1[0]
<ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: $r11 = (android.app.Activity) $r0
<ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: $r9 = staticinvoke <com.karumi.dexter.Dexter: com.karumi.dexter.DexterBuilder$Permission withActivity(android.app.Activity)>($r11)
<com.karumi.dexter.Dexter: com.karumi.dexter.DexterBuilder$Permission withActivity(android.app.Activity)>: return $r1
<ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: $r11 = (android.app.Activity) $r0
<ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: $r0 = $r1[0]
<ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: $r0 = $r1[0]
<ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: $r59 = (byte[]) $r0
<ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
