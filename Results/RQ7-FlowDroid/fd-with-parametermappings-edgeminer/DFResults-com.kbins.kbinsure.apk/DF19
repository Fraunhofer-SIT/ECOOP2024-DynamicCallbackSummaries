Source: $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryName()>()
$r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryName()>() in <hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>
Sink: virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59) in <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>

<hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: $r10 = virtualinvoke $r50.<android.location.Address: java.lang.String getCountryName()>()
<hy: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: return $r10
<com.kbins.kbinsure.cert.ImportCertActivity: void setUI()>: $r3 = (java.lang.String) $r6
<com.kbins.kbinsure.cert.ImportCertActivity: void setUI()>: r0.<com.kbins.kbinsure.cert.ImportCertActivity: java.lang.String mAction> = $r3
<com.kbins.kbinsure.cert.ImportCertActivity: void setUI()>: r0 := @this: com.kbins.kbinsure.cert.ImportCertActivity
<com.kbins.kbinsure.cert.ImportCertActivity: void access$400(com.kbins.kbinsure.cert.ImportCertActivity)>: $r0 := @parameter0: com.kbins.kbinsure.cert.ImportCertActivity
<com.kbins.kbinsure.cert.ImportCertActivity$3: void handleMessage(android.os.Message)>: $r3 = r0.<com.kbins.kbinsure.cert.ImportCertActivity$3: com.kbins.kbinsure.cert.ImportCertActivity this$0>
<com.kbins.kbinsure.cert.ImportCertActivity$3: void handleMessage(android.os.Message)>: r0 := @this: com.kbins.kbinsure.cert.ImportCertActivity$3
<com.kbins.kbinsure.widget.JsonUtils: org.json.JSONObject mapToJson(java.util.Map)>: $r5 = staticinvoke <com.kbins.kbinsure.widget.JsonUtils: java.lang.Object wrap(java.lang.Object)>($r5)
<com.kbins.kbinsure.widget.JsonUtils: java.lang.Object wrap(java.lang.Object)>: $r8 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>()
<com.kbins.kbinsure.widget.JsonUtils: java.lang.Object wrap(java.lang.Object)>: return $r8
<com.kbins.kbinsure.widget.JsonUtils: org.json.JSONObject mapToJson(java.util.Map)>: virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r3, $r5)
<com.kbins.kbinsure.widget.JsonUtils: org.json.JSONObject mapToJson(java.util.Map)>: return $r1
<com.kbins.kbinsure.widget.JsonUtils: java.lang.Object wrap(java.lang.Object)>: return $r6
<com.kbins.kbinsure.widget.JsonUtils: org.json.JSONArray collectionToJson(java.util.Collection)>: $r4[$b2] = $r5
<com.kbins.kbinsure.widget.JsonUtils: org.json.JSONArray collectionToJson(java.util.Collection)>: $r5 = staticinvoke <ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>($r0, $i0, $r4)
<ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: $r0 = $r1[0]
<ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: $r11 = (android.app.Activity) $r0
<ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: $r9 = staticinvoke <com.karumi.dexter.Dexter: com.karumi.dexter.DexterBuilder$Permission withActivity(android.app.Activity)>($r11)
<com.karumi.dexter.Dexter: com.karumi.dexter.DexterBuilder$Permission withActivity(android.app.Activity)>: return $r1
<ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: $r11 = (android.app.Activity) $r0
<ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: $r0 = $r1[0]
<ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: $r0 = $r1[0]
<ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: $r59 = (byte[]) $r0
<ho: java.lang.Object djsflxlftm1(java.lang.Object,int,java.lang.Object[])>: virtualinvoke $r81.<java.util.zip.GZIPOutputStream: void write(byte[])>($r59)
