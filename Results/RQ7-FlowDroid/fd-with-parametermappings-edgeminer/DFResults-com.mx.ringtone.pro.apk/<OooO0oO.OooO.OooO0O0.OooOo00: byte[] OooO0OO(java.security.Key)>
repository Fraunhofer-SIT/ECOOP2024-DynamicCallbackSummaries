    public final byte[] OooO0OO(java.security.Key)
    {
        java.lang.Throwable $r3, $r4, $r5, $r15;
        byte[] $r1, $r10;
        javax.crypto.Cipher $r13;
        OooO0oO.OooO.OooO0O0.o0O00o0 $r14;
        java.security.GeneralSecurityException $r18;
        javax.crypto.spec.IvParameterSpec $r16;
        java.io.ByteArrayInputStream $r17;
        int $i0;
        OooO0oO.OooO.OooO0O0.OooOo00 r0;
        OooO0oO.OooO.OooO0O0.OooOOOO $r9;
        java.lang.String $r12;
        boolean $z0;
        OooO0oO.OooO.OooO0O0.oO0oO000 $r7;
        com.flurry.sdk.k$a $r11;
        com.flurry.sdk.k $r2;
        java.security.Key $r6;
        java.lang.Object $r8;

        r0 := @this: OooO0oO.OooO.OooO0O0.OooOo00;

        $r6 := @parameter0: java.security.Key;

        $r7 = r0.<OooO0oO.OooO.OooO0O0.OooOo00: OooO0oO.OooO.OooO0O0.oO0oO000 OooO0Oo>;

     label01:
        $r8 = virtualinvoke $r7.<OooO0oO.OooO.OooO0O0.oO0oO000: java.lang.Object OooO00o()>();

     label02:
        $r9 = (OooO0oO.OooO.OooO0O0.OooOOOO) $r8;

        if $r9 == null goto label27;

        $z0 = $r9.<OooO0oO.OooO.OooO0O0.OooOOOO: boolean OooO00o>;

        if $z0 == 0 goto label23;

        $r10 = $r9.<OooO0oO.OooO.OooO0O0.OooOOOO: byte[] OooO0O0>;

        $r1 = $r9.<OooO0oO.OooO.OooO0O0.OooOOOO: byte[] OooO0OO>;

        $i0 = $r9.<OooO0oO.OooO.OooO0O0.OooOOOO: int OooO0Oo>;

     label03:
        $r11 = staticinvoke <com.flurry.sdk.k$a: com.flurry.sdk.k$a a(int)>($i0);

     label04:
        if $r10 == null goto label27;

        if $r1 == null goto label27;

        $r2 = r0.<OooO0oO.OooO.OooO0O0.OooOo00: com.flurry.sdk.k OooO0OO>;

        $r16 = new javax.crypto.spec.IvParameterSpec;

     label05:
        specialinvoke $r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r10);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r2);

     label06:
        if $r6 == null goto label21;

        if $r11 == null goto label21;

        $r12 = $r11.<com.flurry.sdk.k$a: java.lang.String d>;

     label07:
        $r13 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r12);

        virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r6, $r16);

        $r1 = virtualinvoke $r13.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label08:
        $r17 = new java.io.ByteArrayInputStream;

     label09:
        specialinvoke $r17.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

     label10:
        $r14 = $r2.<com.flurry.sdk.k: OooO0oO.OooO.OooO0O0.o0O00o0 OooO00o>;

     label11:
        $r8 = interfaceinvoke $r14.<OooO0oO.OooO.OooO0O0.o0O00o0: java.lang.Object OooO0O0(java.io.InputStream)>($r17);

     label12:
        goto label22;

     label13:
        $r15 := @caughtexception;

        goto label19;

     label14:
        $r15 := @caughtexception;

        goto label19;

     label15:
        $r15 := @caughtexception;

        goto label19;

     label16:
        $r15 := @caughtexception;

        goto label19;

     label17:
        $r15 := @caughtexception;

        goto label19;

     label18:
        $r15 := @caughtexception;

     label19:
        $r18 = (java.security.GeneralSecurityException) $r15;

     label20:
        virtualinvoke $r18.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

     label21:
        $r8 = null;

     label22:
        $r1 = (byte[]) $r8;

        return $r1;

     label23:
        $r1 = $r9.<OooO0oO.OooO.OooO0O0.OooOOOO: byte[] OooO0OO>;

        return $r1;

     label24:
        $r3 := @caughtexception;

        return null;

     label25:
        $r4 := @caughtexception;

        return null;

     label26:
        $r5 := @caughtexception;

     label27:
        return null;

        catch java.io.IOException from label01 to label02 with label24;
        catch java.io.IOException from label03 to label04 with label24;
        catch java.io.IOException from label05 to label06 with label24;
        catch java.security.InvalidKeyException from label07 to label08 with label18;
        catch java.security.InvalidAlgorithmParameterException from label07 to label08 with label17;
        catch javax.crypto.BadPaddingException from label07 to label08 with label16;
        catch javax.crypto.IllegalBlockSizeException from label07 to label08 with label15;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label14;
        catch javax.crypto.NoSuchPaddingException from label07 to label08 with label13;
        catch java.io.IOException from label07 to label08 with label25;
        catch java.io.IOException from label09 to label10 with label26;
        catch java.io.IOException from label11 to label12 with label26;
        catch java.io.IOException from label20 to label21 with label26;
    }
