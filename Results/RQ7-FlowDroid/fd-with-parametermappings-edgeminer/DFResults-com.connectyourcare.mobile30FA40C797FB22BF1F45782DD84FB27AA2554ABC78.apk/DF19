Source: $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
$r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null) in <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
Sink: specialinvoke $r2.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r3) in <io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>

<io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>: $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
<io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>: $r4 = $r3
<io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>: return $r4
<io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>: return $r1
<com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>: specialinvoke $r17.<com.crashlytics.android.answers.SessionEventMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, $r16, $r6, $r7, $r10, $r12, $r13, $r14, $r1, $r2)
<com.crashlytics.android.answers.SessionEventMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: r0.<com.crashlytics.android.answers.SessionEventMetadata: java.lang.String installationId> = $r3
<com.crashlytics.android.answers.SessionEventMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: return
<com.crashlytics.android.answers.SessionMetadataCollector: com.crashlytics.android.answers.SessionEventMetadata getMetadata()>: return $r17
<com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>: specialinvoke $r2.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)>($r8, $r10, $r1, $r7, $r11, $r5, $r12)
<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)>: r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionEventMetadata metadata> = $r6
<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void <init>(io.fabric.sdk.android.Kit,android.content.Context,java.util.concurrent.ScheduledExecutorService,com.crashlytics.android.answers.SessionAnalyticsFilesManager,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.answers.SessionEventMetadata,com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)>: return
<com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>: $r3.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionAnalyticsManagerStrategy strategy> = $r2
<com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>: $r3 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0>
<com.crashlytics.android.answers.AnswersEventsHandler$4: void run()>: r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler$4
<com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>: r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
<com.crashlytics.android.answers.AnswersEventsHandler: void enable()>: specialinvoke $r1.<com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>(r0)
<com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>: r0.<com.crashlytics.android.answers.AnswersEventsHandler$4: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
<com.crashlytics.android.answers.AnswersEventsHandler$4: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>: return
<com.crashlytics.android.answers.AnswersEventsHandler: void enable()>: r0 := @this: com.crashlytics.android.answers.AnswersEventsHandler
<com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>: $r3 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
<com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>: specialinvoke $r1.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>(r0, $r2)
<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>: r0.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager> = $r1
<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>: return
<com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>: virtualinvoke $r4.<io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1)
<io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>: $z0 = staticinvoke <io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r1, $r2)
<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>: $z0 = specialinvoke $r1.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r0)
<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>: specialinvoke $r3.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>(r0, $r1)
<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>: r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: io.fabric.sdk.android.ActivityLifecycleManager$Callbacks val$callbacks> = $r2
<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1: void <init>(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>: return
<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>: interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r3)
<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>: $r4 = r0.<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: java.util.Set registeredCallbacks>
<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean registerLifecycleCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>: r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
<io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper: boolean access$000(io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper,io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>: $r1 := @parameter0: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
<io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>: $r1 = r0.<io.fabric.sdk.android.ActivityLifecycleManager: io.fabric.sdk.android.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper callbacksWrapper>
<io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>: r0 := @this: io.fabric.sdk.android.ActivityLifecycleManager
<com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>: $r4 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: io.fabric.sdk.android.ActivityLifecycleManager lifecycleManager>
<com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>: specialinvoke $r1.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>(r0, $r2)
<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager,com.crashlytics.android.answers.BackgroundManager)>: return
<com.crashlytics.android.answers.SessionAnalyticsManager: void enable()>: virtualinvoke r0.<com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>($l0)
<com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>: $r2 = r0.<com.crashlytics.android.answers.SessionAnalyticsManager: com.crashlytics.android.answers.AnswersEventsHandler eventsHandler>
<com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall(long)>: virtualinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>($r3)
<com.crashlytics.android.answers.AnswersEventsHandler: void processEventAsyncAndFlush(com.crashlytics.android.answers.SessionEvent$Builder)>: virtualinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>($r1, 0, 1)
<com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>: specialinvoke $r2.<com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>(r0, $r1, $z1)
<com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>: r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0> = $r1
<com.crashlytics.android.answers.AnswersEventsHandler$6: void <init>(com.crashlytics.android.answers.AnswersEventsHandler,com.crashlytics.android.answers.SessionEvent$Builder,boolean)>: return
<com.crashlytics.android.answers.AnswersEventsHandler: void processEvent(com.crashlytics.android.answers.SessionEvent$Builder,boolean,boolean)>: specialinvoke r0.<com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>($r2)
<com.crashlytics.android.answers.AnswersEventsHandler: void executeAsync(java.lang.Runnable)>: interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r2)
<com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>: $r2 = r0.<com.crashlytics.android.answers.AnswersEventsHandler$6: com.crashlytics.android.answers.AnswersEventsHandler this$0>
<com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>: $r3 = $r2.<com.crashlytics.android.answers.AnswersEventsHandler: com.crashlytics.android.answers.SessionAnalyticsManagerStrategy strategy>
<com.crashlytics.android.answers.AnswersEventsHandler$6: void run()>: interfaceinvoke $r3.<io.fabric.sdk.android.services.events.FileRollOverManager: boolean rollFileOver()>()
<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>: $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>
<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean rollFileOver()>: $z0 = virtualinvoke $r2.<io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>()
<io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>: $r2 = r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>
<io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>: interfaceinvoke $r2.<io.fabric.sdk.android.services.events.EventsStorage: void rollOver(java.lang.String)>($r3)
<io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>: $r2 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File targetDirectory>
<io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>: specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3)
<io.fabric.sdk.android.services.events.QueueFileEventStorage: void rollOver(java.lang.String)>: specialinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>($r5, $r1)
<io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>: $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>($r3)
<io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>: specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>($r1)
<io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>: specialinvoke $r2.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r3)
