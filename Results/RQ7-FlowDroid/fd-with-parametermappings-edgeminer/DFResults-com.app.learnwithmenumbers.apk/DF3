Source: $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>(r2)
$i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>(r2) in <org.appcelerator.kroll.util.KrollStreamHelper: void pump(java.io.InputStream,java.io.OutputStream,int)>
Sink: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i0) in <org.appcelerator.kroll.util.KrollStreamHelper: void pump(java.io.InputStream,java.io.OutputStream,int)>

<org.appcelerator.kroll.util.KrollStreamHelper: void pump(java.io.InputStream,java.io.OutputStream,int)>: $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>(r2)
<org.appcelerator.kroll.util.KrollStreamHelper: void pump(java.io.InputStream,java.io.OutputStream,int)>: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i0)
