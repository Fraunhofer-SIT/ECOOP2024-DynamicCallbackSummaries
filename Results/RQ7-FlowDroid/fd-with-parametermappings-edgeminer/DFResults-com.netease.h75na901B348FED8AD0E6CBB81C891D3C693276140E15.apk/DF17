Source: $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0)
$i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0) in <com.netease.mcount.c.m: byte[] a(java.io.InputStream)>
Sink: virtualinvoke $r31.<java.io.DataOutputStream: void write(byte[])>($r5) in <com.netease.mcount.c.d: com.netease.mcount.c.b$b a(int,java.lang.String,java.util.HashMap,byte[],int,int,com.netease.mcount.c.e$a,boolean)>

<com.netease.mcount.c.m: byte[] a(java.io.InputStream)>: $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0)
<com.netease.mcount.c.m: byte[] a(java.io.InputStream)>: virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i0)
<com.netease.mcount.c.m: byte[] a(java.io.InputStream)>: $r1 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
<com.netease.mcount.c.m: byte[] a(java.io.InputStream)>: return $r1
<com.netease.mcount.c.f: com.netease.mcount.c.b$b a(java.lang.String,java.util.HashMap,org.json.JSONObject,int,int)>: $r8 = virtualinvoke r0.<com.netease.mcount.c.f: com.netease.mcount.c.b$b a(int,java.lang.String,java.util.HashMap,byte[],int,int,com.netease.mcount.c.e$a,boolean)>(1, $r1, $r2, $r5, $i0, $i1, null, 1)
<com.netease.mcount.c.d: com.netease.mcount.c.b$b a(int,java.lang.String,java.util.HashMap,byte[],int,int,com.netease.mcount.c.e$a,boolean)>: virtualinvoke $r31.<java.io.DataOutputStream: void write(byte[])>($r5)
