Source: $i1 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r1, $i2, $i1)
$i1 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r1, $i2, $i1) in <util.h.xy.cy.mz: int read(byte[],int,int)>
Sink: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0) in <util.h.xy.ef.ma: void ᐝ(java.io.InputStream,java.io.OutputStream)>

<util.h.xy.cy.mz: int read(byte[],int,int)>: $i1 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r1, $i2, $i1)
<util.h.xy.cy.mz: int read(byte[],int,int)>: r0 := @this: util.h.xy.cy.mz
<util.h.xy.cy.my: int read(byte[],int,int)>: r0 := @this: util.h.xy.cy.my
<util.h.xy.ef.ma: int ˎ(java.io.InputStream,byte[],int,int)>: $r0 := @parameter0: java.io.InputStream
<util.h.xy.ef.ma: int ᐝ(java.io.InputStream,byte[])>: $r0 := @parameter0: java.io.InputStream
<util.h.xy.cy.md: byte[] ˋ(util.h.xy.cy.my,byte[][])>: $r2 = $r1[$i0]
<util.h.xy.cy.md: byte[] ˋ(util.h.xy.cy.my,byte[][])>: return $r2
<util.h.xy.cy.md: util.h.xy.cy.f ˏ(int,util.h.xy.cy.my,byte[][])>: $i0 := @parameter0: int
<util.h.xy.cy.rg: util.h.xy.cy.rb ˋ()>: $r6 = r0.<util.h.xy.cy.rg: byte[][] ˏ>
<util.h.xy.cy.rg: util.h.xy.cy.rb ˋ()>: throw $r21
<util.h.xy.cy.ro: int read(byte[],int,int)>: $r3 = r0.<util.h.xy.cy.ro: util.h.xy.cy.rg ˊ>
<util.h.xy.cy.ro: int read(byte[],int,int)>: r0 := @this: util.h.xy.cy.ro
<util.h.xy.ef.ma: void ᐝ(java.io.InputStream,java.io.OutputStream)>: $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i1)
<util.h.xy.ef.ma: void ᐝ(java.io.InputStream,java.io.OutputStream)>: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
