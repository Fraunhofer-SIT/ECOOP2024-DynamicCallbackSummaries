[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loading sources and sinks from SourcesSinks/UnconstrainedSourcesSinks.xml...
[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loaded 273 sources and 91 sinks from the XML file
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] WARN soot.Scene - Android API version '31' not available, using minApkVersion '19' instead
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.071294367 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 41 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] WARN soot.jimple.infoflow.android.SetupApplication - Aborted callback collection because of low memory
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] WARN soot.jimple.infoflow.android.SetupApplication - Callback analysis aborted early due to time or memory exhaustion
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 273 sources, 91 sinks, and 0 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 181 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on storagepath2-data/androidApps/2023-AndroZoo-PlayStore/com.kiwoom.app.kiwoomaccountD190DC5DEA327352710315015BAE9E61399823BC.apk with 273 sources and 91 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 12.365067598 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 103049 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 52 sources and 78 sinks.
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String errorMessage>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: byte[] secureKey>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataEx>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherData>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String cipherDataExWithPadding>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<com.softsecurity.transkey.TranskeyResultData: java.lang.String dummyData>]
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper hits: 4114664
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper misses: 34030127
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - IFDS problem with 59678038 forward and 28647046 backward edges solved in 899 seconds, processing 13 results...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Current memory consumption: 78259 MB
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after cleanup: 35770 MB
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 1 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
