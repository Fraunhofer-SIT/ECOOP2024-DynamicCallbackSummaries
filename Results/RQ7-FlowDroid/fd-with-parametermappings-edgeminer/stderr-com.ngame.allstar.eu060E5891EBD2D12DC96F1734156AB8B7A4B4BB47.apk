[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loading sources and sinks from SourcesSinks/UnconstrainedSourcesSinks.xml...
[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loaded 273 sources and 91 sinks from the XML file
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] WARN soot.Scene - Android API version '30' not available, using minApkVersion '16' instead
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
Lcom/ano/gshell/AnoApplication;->dec(Ljava/lang/String;)Ljava/lang/String;: Invalid debug offset
Lcom/ano/gshell/AnoApplication;->dec(Ljava/lang/String;)Ljava/lang/String;: Invalid debug offset
Lcom/ano/gshell/AnoApplication;->attachBaseContext(Landroid/content/Context;)V: Invalid debug offset
Lcom/ano/gshell/AnoApplication;->attachBaseContext(Landroid/content/Context;)V: Invalid debug offset
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.04781131 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 37 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class androidx.core.content.FileProvider
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
Lcom/ano/gshell/AnoApplication;-><clinit>()V: Invalid debug offset
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 41 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.intlgame.webview.ShareAnimMenu$IDismissListener, because it is an interface and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 34 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 41 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class androidx.multidex.MultiDexApplication
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.intlgame.webview.ShareAnimMenu$IDismissListener, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Could not create call to application callback <androidx.multidex.MultiDexApplication: void attachBaseContext(android.content.Context)>. Local was null.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 11 components...
Lcom/ano/gshell/AnoApplication;->attachBaseContext(Landroid/content/Context;)V: Invalid debug offset
Lcom/ano/gshell/AnoApplication;->attachBaseContext(Landroid/content/Context;)V: Invalid debug offset
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 41 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.intlgame.webview.ShareAnimMenu$IDismissListener, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Could not create call to application callback <androidx.multidex.MultiDexApplication: void attachBaseContext(android.content.Context)>. Local was null.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
Lcom/ano/gshell/AnoApplication;-><init>()V: Invalid debug offset
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 5 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 41 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.intlgame.webview.ShareAnimMenu$IDismissListener, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Could not create call to application callback <androidx.multidex.MultiDexApplication: void attachBaseContext(android.content.Context)>. Local was null.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 3 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 41 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.intlgame.webview.ShareAnimMenu$IDismissListener, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Could not create call to application callback <androidx.multidex.MultiDexApplication: void attachBaseContext(android.content.Context)>. Local was null.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 0 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Callback analysis terminated normally
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 273 sources, 91 sinks, and 282 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 153 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on storagepath2-data/androidApps/2022-AndroZoo-PlayStore/com.ngame.allstar.eu060E5891EBD2D12DC96F1734156AB8B7A4B4BB47.apk with 273 sources and 91 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 2.215758359 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 51719 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 105 sources and 61 sinks.
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper hits: 13193534
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper misses: 80823841
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - IFDS problem with 91878071 forward and 101616456 backward edges solved in 901 seconds, processing 18 results...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Current memory consumption: 162973 MB
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after cleanup: 84955 MB
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 1 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 2 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 3 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 4 with 3 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 3 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after path building: 214433 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Path reconstruction took 12305 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r15.<java.io.OutputStream: void write(byte[])>($r12) in method <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttps(org.json.JSONObject)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r0.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, "") in method <com.ljoy.chatbot.utils.ABSharePreferenceUtil: java.lang.String getSPString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.ABSharePreferenceUtil: java.lang.String getSPString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r0.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, "")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.ABSharePreferenceUtil: java.lang.String getSPString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.data.ElvaData: java.lang.String getLanguage()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.data.ElvaData: java.lang.String getUserLanguage()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.SendLogUtil$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("appId", $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.SendLogUtil$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r11.<com.ljoy.chatbot.utils.HttpURLData: void sendLogRequestJson(org.json.JSONObject)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendLogRequestJson(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJson(org.json.JSONObject)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJson(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttps(org.json.JSONObject)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttps(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttps(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttps(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttps(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttps(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r15.<java.io.OutputStream: void write(byte[])>($r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r27.<java.io.DataOutputStream: void write(byte[],int,int)>($r19, 0, $i3) in method <com.ljoy.chatbot.utils.ABUploadFileUtil: void uploadImage(java.io.File,java.lang.String,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i3 = virtualinvoke $r29.<java.io.InputStream: int read(byte[])>($r19) in method <com.ljoy.chatbot.utils.ABUploadFileUtil: void uploadImage(java.io.File,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.ABUploadFileUtil: void uploadImage(java.io.File,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i3 = virtualinvoke $r29.<java.io.InputStream: int read(byte[])>($r19)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.ABUploadFileUtil: void uploadImage(java.io.File,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r27.<java.io.DataOutputStream: void write(byte[],int,int)>($r19, 0, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3) in method <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0) in method <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: byte[] buf>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: byte[] buf>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0) in method <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r5.<java.io.BufferedInputStream: int read(byte[])>($r3) in method <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r5.<java.io.BufferedInputStream: int read(byte[])>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r33.<java.io.DataOutputStream: void write(byte[],int,int)>($r25, 0, $i3) in method <com.ljoy.chatbot.utils.ABUploadFileUtil: void uploadVedio(java.io.File,java.lang.String,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i3 = virtualinvoke $r35.<java.io.InputStream: int read(byte[])>($r25) in method <com.ljoy.chatbot.utils.ABUploadFileUtil: void uploadVedio(java.io.File,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.ABUploadFileUtil: void uploadVedio(java.io.File,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i3 = virtualinvoke $r35.<java.io.InputStream: int read(byte[])>($r25)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.ABUploadFileUtil: void uploadVedio(java.io.File,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r33.<java.io.DataOutputStream: void write(byte[],int,int)>($r25, 0, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r3) in method <com.facebook.ProgressOutputStream: void <init>(java.io.OutputStream,com.facebook.GraphRequestBatch,java.util.Map,long)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r5.<java.io.BufferedInputStream: int read(byte[])>($r3) in method <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r5.<java.io.BufferedInputStream: int read(byte[])>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: java.io.InputStream
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest$Serializer: void writeContentUri(java.lang.String,android.net.Uri,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.facebook.GraphRequest$Serializer: java.io.OutputStream outputStream>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest$Serializer: void writeContentUri(java.lang.String,android.net.Uri,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest$Serializer: void writeObject(java.lang.String,java.lang.Object,com.facebook.GraphRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void serializeParameters(android.os.Bundle,com.facebook.GraphRequest$Serializer,com.facebook.GraphRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void processRequest(com.facebook.GraphRequestBatch,com.facebook.internal.Logger,int,java.net.URL,java.io.OutputStream,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<com.facebook.GraphRequest$Serializer: void <init>(java.io.OutputStream,com.facebook.internal.Logger,boolean)>($r4, $r2, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest$Serializer: void <init>(java.io.OutputStream,com.facebook.internal.Logger,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.facebook.GraphRequest$Serializer: java.io.OutputStream outputStream> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest$Serializer: void <init>(java.io.OutputStream,com.facebook.internal.Logger,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void processRequest(com.facebook.GraphRequestBatch,com.facebook.internal.Logger,int,java.net.URL,java.io.OutputStream,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 := @parameter0: com.facebook.GraphRequestBatch
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = (java.io.OutputStream) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = $r15
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r15.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = $r15
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = (java.io.OutputStream) $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r18.<com.facebook.ProgressOutputStream: void <init>(java.io.OutputStream,com.facebook.GraphRequestBatch,java.util.Map,long)>($r9, $r0, $r12, $l2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ProgressOutputStream: void <init>(java.io.OutputStream,com.facebook.GraphRequestBatch,java.util.Map,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r3, 0, $i0) in method <com.ljoy.chatbot.utils.HttpURLData: java.lang.String getResponseDataHttps()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r3) in method <com.ljoy.chatbot.utils.HttpURLData: java.lang.String getResponseDataHttps()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: java.lang.String getResponseDataHttps()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: java.lang.String getResponseDataHttps()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r3, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r14.<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>($r4, 0, $i0) in method <com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r15.<java.io.ByteArrayInputStream: int read(byte[])>($r4) in method <com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r15.<java.io.ByteArrayInputStream: int read(byte[])>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>($r4, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r4.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1) in method <com.facebook.appevents.AppEventStore: void saveEventsToDisk(com.facebook.appevents.PersistedEvents)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r7 = virtualinvoke $r5.<com.facebook.appevents.AppEventStore$MovedClassObjectInputStream: java.lang.Object readObject()>() in method <com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r5.<com.facebook.appevents.AppEventStore$MovedClassObjectInputStream: java.lang.Object readObject()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = (com.facebook.appevents.PersistedEvents) $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventQueue: void flushAndWait(com.facebook.appevents.FlushReason)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<com.facebook.appevents.PersistedEvents: java.util.Set keySet()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.PersistedEvents: java.util.Set keySet()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.facebook.appevents.PersistedEvents: java.util.HashMap events>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.PersistedEvents: java.util.Set keySet()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.PersistedEvents: java.util.Set keySet()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = (com.facebook.appevents.AccessTokenAppIdPair) $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = specialinvoke r0.<com.facebook.appevents.AppEventCollection: com.facebook.appevents.SessionEventsState getSessionEventsState(com.facebook.appevents.AccessTokenAppIdPair)>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventCollection: com.facebook.appevents.SessionEventsState getSessionEventsState(com.facebook.appevents.AccessTokenAppIdPair)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventCollection: com.facebook.appevents.SessionEventsState getSessionEventsState(com.facebook.appevents.AccessTokenAppIdPair)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.facebook.appevents.AppEventCollection: java.util.HashMap stateMap>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventCollection: com.facebook.appevents.SessionEventsState getSessionEventsState(com.facebook.appevents.AccessTokenAppIdPair)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventCollection: void addPersistedEvents(com.facebook.appevents.PersistedEvents)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.facebook.appevents.AppEventCollection
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventQueue: void flushAndWait(com.facebook.appevents.FlushReason)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = <com.facebook.appevents.AppEventQueue: com.facebook.appevents.AppEventCollection appEventCollection>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventsLoggerImpl: void logEvent(java.lang.String,java.lang.Double,android.os.Bundle,boolean,java.util.UUID)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventsLoggerImpl: void logEventImplicitly(java.lang.String,java.lang.Double,android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.InternalAppEventsLogger: void logEventImplicitly(java.lang.String,android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.login.LoginLogger: void logAuthorizationMethodNotTried(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.login.LoginClient: boolean tryCurrentHandler()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return 1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.login.LoginClient: void tryNextHandler()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.login.LoginClient: void authorize(com.facebook.login.LoginClient$Request)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.login.LoginClient: void startOrContinueAuth(com.facebook.login.LoginClient$Request)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.login.LoginFragment: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: com.facebook.login.LoginFragment dummyMainMethod_com_facebook_login_LoginFragment(android.content.Intent,android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<com.facebook.appevents.internal.ActivityLifecycleTracker$2: void onActivityStopped(android.app.Activity)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.internal.ActivityLifecycleTracker$2: void onActivityStopped(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.facebook.appevents.AppEventsLogger: void onContextStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventsLogger: void onContextStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.facebook.appevents.AppEventsLoggerImpl: void onContextStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventsLoggerImpl: void onContextStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.facebook.appevents.AppEventQueue: void persistToDisk()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventQueue: void persistToDisk()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r0.<java.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventQueue$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = staticinvoke <com.facebook.appevents.AppEventQueue: com.facebook.appevents.AppEventCollection access$100()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventQueue: com.facebook.appevents.AppEventCollection access$100()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 = <com.facebook.appevents.AppEventQueue: com.facebook.appevents.AppEventCollection appEventCollection>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventQueue: com.facebook.appevents.AppEventCollection access$100()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventQueue$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r0.<com.facebook.appevents.AppEventCollection: java.util.Set keySet()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventCollection: java.util.Set keySet()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.facebook.appevents.AppEventCollection: java.util.HashMap stateMap>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventCollection: java.util.Set keySet()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventCollection: java.util.Set keySet()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = (com.facebook.appevents.AccessTokenAppIdPair) $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.facebook.appevents.PersistedEvents: void addEvents(com.facebook.appevents.AccessTokenAppIdPair,java.util.List)>($r5, $r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.PersistedEvents: void addEvents(com.facebook.appevents.AccessTokenAppIdPair,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.PersistedEvents: void addEvents(com.facebook.appevents.AccessTokenAppIdPair,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.facebook.appevents.PersistedEvents: java.util.HashMap events>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.PersistedEvents: void addEvents(com.facebook.appevents.AccessTokenAppIdPair,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.facebook.appevents.AppEventStore: void saveEventsToDisk(com.facebook.appevents.PersistedEvents)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventStore: void saveEventsToDisk(com.facebook.appevents.PersistedEvents)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>($r11) in method <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttp(org.json.JSONObject)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r0.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, "") in method <com.ljoy.chatbot.utils.ABSharePreferenceUtil: java.lang.String getSPString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.ABSharePreferenceUtil: java.lang.String getSPString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r0.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, "")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.ABSharePreferenceUtil: java.lang.String getSPString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.data.ElvaData: java.lang.String getLanguage()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.data.ElvaData: java.lang.String getUserLanguage()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.sfsapi.SendSetCRMPushTokenTask: java.lang.String getInitReqData()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("language", $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.sfsapi.SendSetCRMPushTokenTask: java.lang.String getInitReqData()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJson(org.json.JSONObject)>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJson(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttp(org.json.JSONObject)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttp(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttp(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttp(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttp(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11 = virtualinvoke $r5.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttp(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>($r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r2.<com.centauri.comm.log.util.compressor.GzipCompressorOutputStream: void write(byte[],int,int)>($r1, 0, $i0) in method <com.centauri.comm.log.processor.CTILogCompressor: byte[] compress(byte[])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, "android_id") in method <com.centauri.oversea.comm.GDPR: java.lang.String getAndroidId(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.comm.GDPR: java.lang.String getAndroidId(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, "android_id")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.comm.GDPR: java.lang.String getAndroidId(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.comm.GDPR: java.lang.String getDeviceInfo(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.comm.GDPR: java.lang.String getDeviceInfo(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.comm.GDPR: java.lang.String getDeviceInfo(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.business.CTIPayManager: void reportData(int,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<com.centauri.oversea.comm.CTIDataReportManager: void insertData(java.lang.String,java.lang.String)>("sdk.oversea.deviceinfo", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.comm.CTIDataReportManager: void insertData(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.comm.CTIDataReportManager: void insertData(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.comm.CTIDataReportManager: void insertData(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.centauri.comm.CTILog: void d(java.lang.String,java.lang.String)>("APDataReportManager", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: void d(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>($r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: void d(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.centauri.comm.CTILog: void writeLog(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: void writeLog(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.centauri.comm.CTILog: void write(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: void write(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.centauri.comm.log.internal.CTILogger: void write(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogger: void write(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.centauri.comm.log.internal.CTILogAppender: void append(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: void append(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = specialinvoke r0.<com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r5.<com.centauri.comm.log.processor.CTILogCompressor: byte[] compress(byte[])>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.processor.CTILogCompressor: byte[] compress(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.centauri.comm.log.util.compressor.GzipCompressorOutputStream: void write(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r15.<java.io.ByteArrayInputStream: int read(byte[])>($r4) in method <com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r15.<java.io.ByteArrayInputStream: int read(byte[])>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>($r4, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r13)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r13.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>($r4, 2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r16.<java.lang.String: void <init>(byte[])>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r16, "UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.model.CTIDataReportReq: void constructParam()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.model.CTIDataReportReq: void constructParam()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.model.CTIDataReportReq: void constructParam()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.centauri.comm.CTILog: void d(java.lang.String,java.lang.String)>("DataReport", $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: void d(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>($r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: void d(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.centauri.comm.CTILog: void writeLog(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: void writeLog(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.centauri.comm.CTILog: void write(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: void write(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.centauri.comm.log.internal.CTILogger: void write(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogger: void write(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.centauri.comm.log.internal.CTILogAppender: void append(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: void append(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = specialinvoke r0.<com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r5.<com.centauri.comm.log.processor.CTILogCompressor: byte[] compress(byte[])>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.processor.CTILogCompressor: byte[] compress(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.centauri.comm.log.util.compressor.GzipCompressorOutputStream: void write(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = interfaceinvoke $r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r0, 0) in method <com.centauri.oversea.comm.CTISPTools: int getInt(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.comm.CTISPTools: int getInt(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = interfaceinvoke $r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r0, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.comm.CTISPTools: int getInt(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.business.h5.webview.MWebView: boolean isUseCache(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.business.h5.webview.MWebView: boolean isUseCache(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.business.h5.webview.MWebView: boolean isUseCache(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.centauri.comm.CTILog: void d(java.lang.String,java.lang.String)>("MWebView", $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: void d(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>($r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: void d(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.centauri.comm.CTILog: void writeLog(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: void writeLog(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.centauri.comm.CTILog: void write(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: void write(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.centauri.comm.log.internal.CTILogger: void write(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogger: void write(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.centauri.comm.log.internal.CTILogAppender: void append(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: void append(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = specialinvoke r0.<com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r5.<com.centauri.comm.log.processor.CTILogCompressor: byte[] compress(byte[])>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.processor.CTILogCompressor: byte[] compress(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.centauri.comm.log.util.compressor.GzipCompressorOutputStream: void write(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r3, "") in method <com.centauri.oversea.newnetwork.http.CTIIPManager: java.lang.String readSPFile(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.http.CTIIPManager: java.lang.String readSPFile(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r3, "")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.http.CTIIPManager: java.lang.String readSPFile(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.http.CTIIPManager: java.lang.String readSPFile(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(";")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.http.CTIIPManager: java.lang.String readSPFile(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r8[$i4]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.oversea.newnetwork.http.CTIIPManager: java.lang.String readSPFile(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.centauri.comm.CTILog: void i(java.lang.String,java.lang.String)>("APIPManager", $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: void i(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>($r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: void i(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.centauri.comm.CTILog: void writeLog(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: void writeLog(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.centauri.comm.CTILog: void write(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.CTILog: void write(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.centauri.comm.log.internal.CTILogger: void write(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogger: void write(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.centauri.comm.log.internal.CTILogAppender: void append(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: void append(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = specialinvoke r0.<com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r5.<com.centauri.comm.log.processor.CTILogCompressor: byte[] compress(byte[])>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.centauri.comm.log.processor.CTILogCompressor: byte[] compress(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.centauri.comm.log.util.compressor.GzipCompressorOutputStream: void write(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i0, $i1) in method <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0) in method <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: byte[] buf>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: byte[] buf>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r15.<java.io.OutputStream: void write(byte[])>($r12) in method <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttps(org.json.JSONObject)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r0.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, "") in method <com.ljoy.chatbot.utils.ABSharePreferenceUtil: java.lang.String getSPString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.ABSharePreferenceUtil: java.lang.String getSPString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r0.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, "")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.ABSharePreferenceUtil: java.lang.String getSPString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.data.ElvaData: java.lang.String getLanguage()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.data.ElvaData: java.lang.String getUserLanguage()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.SendLogUtil$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("appId", $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.SendLogUtil$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r11.<com.ljoy.chatbot.utils.HttpURLData: void sendLogRequestJson(org.json.JSONObject)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendLogRequestJson(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJson(org.json.JSONObject)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJson(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttps(org.json.JSONObject)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttps(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttps(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttps(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttps(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttps(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r15.<java.io.OutputStream: void write(byte[])>($r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r3) in method <com.facebook.ProgressOutputStream: void <init>(java.io.OutputStream,com.facebook.GraphRequestBatch,java.util.Map,long)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r5.<java.io.BufferedInputStream: int read(byte[])>($r3) in method <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r5.<java.io.BufferedInputStream: int read(byte[])>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: java.io.InputStream
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest$Serializer: void writeContentUri(java.lang.String,android.net.Uri,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.facebook.GraphRequest$Serializer: java.io.OutputStream outputStream>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest$Serializer: void writeContentUri(java.lang.String,android.net.Uri,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest$Serializer: void writeObject(java.lang.String,java.lang.Object,com.facebook.GraphRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void serializeParameters(android.os.Bundle,com.facebook.GraphRequest$Serializer,com.facebook.GraphRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void processRequest(com.facebook.GraphRequestBatch,com.facebook.internal.Logger,int,java.net.URL,java.io.OutputStream,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<com.facebook.GraphRequest$Serializer: void <init>(java.io.OutputStream,com.facebook.internal.Logger,boolean)>($r4, $r2, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest$Serializer: void <init>(java.io.OutputStream,com.facebook.internal.Logger,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.facebook.GraphRequest$Serializer: java.io.OutputStream outputStream> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest$Serializer: void <init>(java.io.OutputStream,com.facebook.internal.Logger,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void processRequest(com.facebook.GraphRequestBatch,com.facebook.internal.Logger,int,java.net.URL,java.io.OutputStream,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 := @parameter0: com.facebook.GraphRequestBatch
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = (java.io.OutputStream) $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = $r15
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r15.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = $r15
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = (java.io.OutputStream) $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r18.<com.facebook.ProgressOutputStream: void <init>(java.io.OutputStream,com.facebook.GraphRequestBatch,java.util.Map,long)>($r9, $r0, $r12, $l2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ProgressOutputStream: void <init>(java.io.OutputStream,com.facebook.GraphRequestBatch,java.util.Map,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke r0.<org.fusesource.hawtbuf.DataByteArrayOutputStream: void write(byte[],int,int)>($r1, $i0, $i1) in method <org.fusesource.hawtbuf.DataByteArrayOutputStream: void write(org.fusesource.hawtbuf.Buffer)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r0.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, "") in method <com.ljoy.chatbot.utils.ABSharePreferenceUtil: java.lang.String getSPString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.ABSharePreferenceUtil: java.lang.String getSPString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r0.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, "")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.ABSharePreferenceUtil: java.lang.String getSPString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.data.ElvaData: java.lang.String getAppId()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.model.ManufacturerInfo: java.lang.String getAppId()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.ljoy.chatbot.model.ManufacturerInfo: void setAppId(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.model.ManufacturerInfo: void setAppId(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.ljoy.chatbot.model.ManufacturerInfo: java.lang.String appId> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.model.ManufacturerInfo: void setAppId(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.model.ManufacturerInfo: java.lang.String getAppId()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.ljoy.chatbot.model.ManufacturerInfo: java.lang.String appId>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.model.ManufacturerInfo: java.lang.String getAppId()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.ABFaqNetMQTT: void startConnect(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<com.ljoy.chatbot.core.mqtt.TopicInfo: void <init>(java.lang.String,java.lang.String)>($r7, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.TopicInfo: void <init>(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.ljoy.chatbot.core.mqtt.TopicInfo: java.lang.String appid> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.TopicInfo: void <init>(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.ABFaqNetMQTT: void startConnect(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.ljoy.chatbot.core.mqtt.ABFaqNetMQTT: com.ljoy.chatbot.core.mqtt.TopicInfo topicInfo> = $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.ABFaqNetMQTT: void startConnect(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.ljoy.chatbot.core.mqtt.ABFaqNetMQTT: void mqttSubscribe()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.ABFaqNetMQTT: void mqttSubscribe()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = r0.<com.ljoy.chatbot.core.mqtt.ABFaqNetMQTT: com.ljoy.chatbot.core.mqtt.TopicInfo topicInfo>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.ABFaqNetMQTT: void mqttSubscribe()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r5.<com.ljoy.chatbot.core.mqtt.TopicInfo: java.lang.String getClientSubPushSdkMessageTopic()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.TopicInfo: java.lang.String getClientSubPushSdkMessageTopic()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke r0.<com.ljoy.chatbot.core.mqtt.TopicInfo: java.lang.String getClientNormalTopic()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.TopicInfo: java.lang.String getClientNormalTopic()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.ljoy.chatbot.core.mqtt.TopicInfo: java.lang.String appid>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.TopicInfo: java.lang.String getClientNormalTopic()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.TopicInfo: java.lang.String getClientNormalTopic()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.TopicInfo: java.lang.String getClientNormalTopic()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.TopicInfo: java.lang.String getClientSubPushSdkMessageTopic()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.TopicInfo: java.lang.String getClientSubPushSdkMessageTopic()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.TopicInfo: java.lang.String getClientSubPushSdkMessageTopic()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.ABFaqNetMQTT: void mqttSubscribe()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<org.fusesource.mqtt.client.Topic: void <init>(java.lang.String,org.fusesource.mqtt.client.QoS)>($r2, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.mqtt.client.Topic: void <init>(java.lang.String,org.fusesource.mqtt.client.QoS)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<org.fusesource.hawtbuf.UTF8Buffer: void <init>(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.hawtbuf.UTF8Buffer: void <init>(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = staticinvoke <org.fusesource.hawtbuf.UTF8Buffer: byte[] encode(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.hawtbuf.UTF8Buffer: byte[] encode(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.hawtbuf.UTF8Buffer: byte[] encode(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.hawtbuf.UTF8Buffer: void <init>(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<org.fusesource.hawtbuf.Buffer: void <init>(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.hawtbuf.Buffer: void <init>(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<org.fusesource.hawtbuf.Buffer: void <init>(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.hawtbuf.Buffer: void <init>(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<org.fusesource.hawtbuf.Buffer: byte[] data> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.hawtbuf.Buffer: void <init>(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.hawtbuf.Buffer: void <init>(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.hawtbuf.UTF8Buffer: void <init>(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.mqtt.client.Topic: void <init>(java.lang.String,org.fusesource.mqtt.client.QoS)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<org.fusesource.mqtt.client.Topic: void <init>(org.fusesource.hawtbuf.UTF8Buffer,org.fusesource.mqtt.client.QoS)>($r3, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.mqtt.client.Topic: void <init>(org.fusesource.hawtbuf.UTF8Buffer,org.fusesource.mqtt.client.QoS)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<org.fusesource.mqtt.client.Topic: org.fusesource.hawtbuf.UTF8Buffer name> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.mqtt.client.Topic: void <init>(org.fusesource.hawtbuf.UTF8Buffer,org.fusesource.mqtt.client.QoS)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.mqtt.client.Topic: void <init>(java.lang.String,org.fusesource.mqtt.client.QoS)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.ABFaqNetMQTT: void mqttSubscribe()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3[0] = $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.mqtt.ABFaqNetMQTT: void mqttSubscribe()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.fusesource.mqtt.client.CallbackConnection: void subscribe(org.fusesource.mqtt.client.Topic[],org.fusesource.mqtt.client.Callback)>($r3, $r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.mqtt.client.CallbackConnection: void subscribe(org.fusesource.mqtt.client.Topic[],org.fusesource.mqtt.client.Callback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r7.<org.fusesource.mqtt.codec.SUBSCRIBE: org.fusesource.mqtt.codec.SUBSCRIBE topics(org.fusesource.mqtt.client.Topic[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.mqtt.codec.SUBSCRIBE: org.fusesource.mqtt.codec.SUBSCRIBE topics(org.fusesource.mqtt.client.Topic[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<org.fusesource.mqtt.codec.SUBSCRIBE: org.fusesource.mqtt.client.Topic[] topics> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.mqtt.codec.SUBSCRIBE: org.fusesource.mqtt.codec.SUBSCRIBE topics(org.fusesource.mqtt.client.Topic[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.mqtt.client.CallbackConnection: void subscribe(org.fusesource.mqtt.client.Topic[],org.fusesource.mqtt.client.Callback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<org.fusesource.mqtt.client.CallbackConnection: void send(org.fusesource.mqtt.codec.MessageSupport$Acked,org.fusesource.mqtt.client.Callback)>($r7, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.mqtt.client.CallbackConnection: void send(org.fusesource.mqtt.codec.MessageSupport$Acked,org.fusesource.mqtt.client.Callback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = interfaceinvoke $r2.<org.fusesource.mqtt.codec.MessageSupport$Acked: org.fusesource.mqtt.codec.MQTTFrame encode()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.mqtt.codec.SUBSCRIBE: org.fusesource.mqtt.codec.MQTTFrame encode()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.fusesource.mqtt.codec.SUBSCRIBE: org.fusesource.mqtt.client.Topic[] topics>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.mqtt.codec.SUBSCRIBE: org.fusesource.mqtt.codec.MQTTFrame encode()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = $r4[$i2]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.mqtt.codec.SUBSCRIBE: org.fusesource.mqtt.codec.MQTTFrame encode()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r5.<org.fusesource.mqtt.client.Topic: org.fusesource.hawtbuf.UTF8Buffer name()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.mqtt.client.Topic: org.fusesource.hawtbuf.UTF8Buffer name()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = r0.<org.fusesource.mqtt.client.Topic: org.fusesource.hawtbuf.UTF8Buffer name>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.mqtt.client.Topic: org.fusesource.hawtbuf.UTF8Buffer name()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.mqtt.codec.SUBSCRIBE: org.fusesource.mqtt.codec.MQTTFrame encode()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <org.fusesource.mqtt.codec.MessageSupport: void writeUTF(org.fusesource.hawtbuf.DataByteArrayOutputStream,org.fusesource.hawtbuf.Buffer)>($r9, $r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.mqtt.codec.MessageSupport: void writeUTF(org.fusesource.hawtbuf.DataByteArrayOutputStream,org.fusesource.hawtbuf.Buffer)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<org.fusesource.hawtbuf.DataByteArrayOutputStream: void write(org.fusesource.hawtbuf.Buffer)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.hawtbuf.DataByteArrayOutputStream: void write(org.fusesource.hawtbuf.Buffer)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = $r2.<org.fusesource.hawtbuf.Buffer: byte[] data>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.fusesource.hawtbuf.DataByteArrayOutputStream: void write(org.fusesource.hawtbuf.Buffer)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<org.fusesource.hawtbuf.DataByteArrayOutputStream: void write(byte[],int,int)>($r1, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r3, 0, $i0) in method <com.ljoy.chatbot.utils.HttpURLData: java.lang.String getResponseDataHttp()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r3) in method <com.ljoy.chatbot.utils.HttpURLData: java.lang.String getResponseDataHttp()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: java.lang.String getResponseDataHttp()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: java.lang.String getResponseDataHttp()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r3, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>($r11) in method <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttp(org.json.JSONObject)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r0.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, "") in method <com.ljoy.chatbot.utils.ABSharePreferenceUtil: java.lang.String getSPString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.ABSharePreferenceUtil: java.lang.String getSPString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r0.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, "")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.ABSharePreferenceUtil: java.lang.String getSPString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.data.ElvaData: java.lang.String getLanguage()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.data.ElvaData: java.lang.String getUserLanguage()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.sfsapi.SendSetCRMPushTokenTask: java.lang.String getInitReqData()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("language", $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.core.sfsapi.SendSetCRMPushTokenTask: java.lang.String getInitReqData()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJson(org.json.JSONObject)>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJson(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttp(org.json.JSONObject)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttp(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttp(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttp(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttp(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11 = virtualinvoke $r5.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.ljoy.chatbot.utils.HttpURLData: void sendPostHttpRequestJsonHttp(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>($r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Data flow solver took 13292 seconds. Maximum memory consumption: 214433 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication - Found 17 leaks
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'SummaryStatistics'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Telemetry'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'Telemetry_sha256Hash_idx' for table 'Telemetry
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Callbacks'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallbackSummaries'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'CallbackSummaries_sha256Hash_idx' for table 'CallbackSummaries
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'AppSizes'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'AppSizes_sha256Hash_idx' for table 'AppSizes
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallgraphSizes'
