    public static java.util.HashMap getStartupUrlBaseData(android.content.Context, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        android.content.Context $r3;
        java.util.HashMap $r2;
        long $l2;
        java.lang.Integer $r8;
        java.lang.Long $r9;
        int $i0, $i1;
        java.lang.String $r0, $r1, $r4, $r5, $r6, $r7;
        boolean $z0, $z1;

        $r3 := @parameter0: android.content.Context;

        $r4 := @parameter1: java.lang.String;

        $r0 := @parameter2: java.lang.String;

        $r1 := @parameter3: java.lang.String;

        $z0 := @parameter4: boolean;

        $r5 = staticinvoke <io.dcloud.common.adapter.util.SP: java.lang.String getBundleData(android.content.Context,java.lang.String,java.lang.String)>($r3, "pdr", "_deviceId");

        $r6 = $r5;

        $z1 = staticinvoke <io.dcloud.common.util.PdrUtil: boolean isEmpty(java.lang.Object)>($r5);

        if $z1 == 0 goto label2;

        goto label1;

     label1:
        $r6 = staticinvoke <io.dcloud.common.util.TelephonyUtil: java.lang.String getSBBS(android.content.Context,boolean,boolean,boolean)>($r3, 1, 1, 0);

     label2:
        $i0 = staticinvoke <io.dcloud.common.util.NetworkTypeUtil: int getNetworkType(android.content.Context)>($r3);

        $r7 = <android.os.Build: java.lang.String MODEL>;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        $r5 = <io.dcloud.common.adapter.util.DeviceInfo: java.lang.String sPackageName>;

        if $r5 != null goto label3;

        $r5 = <io.dcloud.common.adapter.util.AndroidResources: java.lang.String packageName>;

     label3:
        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("appid", $r4);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("imei", $r6);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("net", $r8);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("md", $r7);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("os", $r8);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("vb", "1.9.9.81057");

        $i0 = staticinvoke <io.dcloud.common.constant.StringConst: int getIntSF(java.lang.String)>($r0);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("sf", $r8);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("p", "a");

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("d1", $r9);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("sfd", null);

        $r4 = <android.os.Build: java.lang.String MANUFACTURER>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("vd", $r4);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("pn", $r5);

        return $r2;
    }
