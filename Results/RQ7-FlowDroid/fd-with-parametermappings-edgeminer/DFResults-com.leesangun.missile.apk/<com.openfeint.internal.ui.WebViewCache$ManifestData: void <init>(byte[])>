    void <init>(byte[]) throws java.lang.Exception
    {
        byte[] $r1;
        java.lang.String[] $r4;
        java.util.HashMap $r10;
        java.util.HashSet $r9;
        java.io.ByteArrayInputStream $r11;
        com.openfeint.internal.ui.WebViewCache$ManifestItem r2, $r14;
        java.util.Map $r7;
        int $i0;
        java.lang.String $r3, $r5;
        java.util.Set $r6;
        char $c1;
        java.io.InputStreamReader $r12;
        java.lang.Exception r8, $r15;
        com.openfeint.internal.ui.WebViewCache$ManifestData r0;
        java.io.BufferedReader $r13;

        r0 := @this: com.openfeint.internal.ui.WebViewCache$ManifestData;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r0.<com.openfeint.internal.ui.WebViewCache$ManifestData: java.util.Set globals> = $r9;

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        r0.<com.openfeint.internal.ui.WebViewCache$ManifestData: java.util.Map objects> = $r10;

        $r12 = new java.io.InputStreamReader;

        $r11 = new java.io.ByteArrayInputStream;

     label01:
        specialinvoke $r11.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

        specialinvoke $r12.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r11);

     label02:
        $r13 = new java.io.BufferedReader;

     label03:
        specialinvoke $r13.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r12, 8192);

     label04:
        r2 = null;

     label05:
        $r3 = virtualinvoke $r13.<java.io.BufferedReader: java.lang.String readLine()>();

     label06:
        if $r3 != null goto label07;

        return;

     label07:
        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

     label08:
        if $i0 == 0 goto label05;

     label09:
        $c1 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

     label10:
        $i0 = (int) $c1;

        lookupswitch($i0)
        {
            case 35: goto label05;
            case 45: goto label22;
            default: goto label11;
        };

     label11:
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof $r4;

     label12:
        if $i0 < 2 goto label31;

     label13:
        $r3 = $r4[0];

        $c1 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

     label14:
        $i0 = (int) $c1;

        if $i0 != 64 goto label29;

     label15:
        $r3 = $r4[0];

        $r5 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>(1);

     label16:
        $r3 = $r5;

     label17:
        $r6 = r0.<com.openfeint.internal.ui.WebViewCache$ManifestData: java.util.Set globals>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r5);

     label18:
        $r14 = new com.openfeint.internal.ui.WebViewCache$ManifestItem;

        r2 = $r14;

     label19:
        $r5 = $r4[1];

        specialinvoke $r14.<com.openfeint.internal.ui.WebViewCache$ManifestItem: void <init>(java.lang.String,java.lang.String)>($r3, $r5);

     label20:
        $r7 = r0.<com.openfeint.internal.ui.WebViewCache$ManifestData: java.util.Map objects>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r14);

     label21:
        goto label05;

     label22:
        if r2 == null goto label27;

     label23:
        $r6 = r2.<com.openfeint.internal.ui.WebViewCache$ManifestItem: java.util.Set dependentObjects>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>(1);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r3);

     label24:
        goto label05;

     label25:
        r8 := @caughtexception;

     label26:
        $r15 = new java.lang.Exception;

        specialinvoke $r15.<java.lang.Exception: void <init>(java.lang.Throwable)>(r8);

        throw $r15;

     label27:
        r8 = new java.lang.Exception;

     label28:
        specialinvoke r8.<java.lang.Exception: void <init>(java.lang.String)>("Manifest Syntax Error: Dependency without an item");

        throw r8;

     label29:
        $r3 = $r4[0];

     label30:
        goto label18;

     label31:
        r8 = new java.lang.Exception;

     label32:
        specialinvoke r8.<java.lang.Exception: void <init>(java.lang.String)>("Manifest Syntax Error: Extra items in line");

        throw r8;

     label33:
        r8 := @caughtexception;

        goto label26;

        catch java.lang.Exception from label01 to label02 with label33;
        catch java.lang.Exception from label03 to label04 with label33;
        catch java.lang.Exception from label05 to label06 with label25;
        catch java.lang.Exception from label07 to label08 with label25;
        catch java.lang.Exception from label09 to label10 with label25;
        catch java.lang.Exception from label11 to label12 with label25;
        catch java.lang.Exception from label13 to label14 with label25;
        catch java.lang.Exception from label15 to label16 with label25;
        catch java.lang.Exception from label17 to label18 with label25;
        catch java.lang.Exception from label19 to label20 with label25;
        catch java.lang.Exception from label20 to label21 with label33;
        catch java.lang.Exception from label23 to label24 with label25;
        catch java.lang.Exception from label28 to label30 with label25;
        catch java.lang.Exception from label32 to label33 with label25;
    }
