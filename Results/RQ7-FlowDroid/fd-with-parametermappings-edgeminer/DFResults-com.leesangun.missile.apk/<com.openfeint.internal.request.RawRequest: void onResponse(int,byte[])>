    public void onResponse(int, byte[])
    {
        java.lang.Throwable r2;
        byte[] $r1;
        java.lang.IllegalStateException $r7;
        com.openfeint.internal.request.IRawRequestDelegate $r3;
        com.openfeint.internal.resource.ServerException $r4;
        int $i0;
        com.openfeint.internal.request.RawRequest r0;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: com.openfeint.internal.request.RawRequest;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

     label01:
        specialinvoke r0.<com.openfeint.internal.request.JSONRequest: void onResponse(int,byte[])>($i0, $r1);

     label02:
        $r3 = r0.<com.openfeint.internal.request.RawRequest: com.openfeint.internal.request.IRawRequestDelegate mDelegate>;

        if $r3 == null goto label13;

     label03:
        $z0 = virtualinvoke r0.<com.openfeint.internal.request.RawRequest: boolean isResponseJSON()>();

     label04:
        if $z0 != 0 goto label09;

     label05:
        $r4 = staticinvoke <com.openfeint.internal.request.RawRequest: com.openfeint.internal.resource.ServerException notJSONError(int)>($i0);

        $r5 = virtualinvoke $r4.<com.openfeint.internal.resource.ServerException: java.lang.String generate()>();

     label06:
        $r3 = r0.<com.openfeint.internal.request.RawRequest: com.openfeint.internal.request.IRawRequestDelegate mDelegate>;

     label07:
        interfaceinvoke $r3.<com.openfeint.internal.request.IRawRequestDelegate: void onResponse(int,java.lang.String)>($i0, $r5);

     label08:
        return;

     label09:
        $r6 = new java.lang.String;

        $r5 = $r6;

     label10:
        specialinvoke $r6.<java.lang.String: void <init>(byte[])>($r1);

     label11:
        goto label06;

     label12:
        r2 := @caughtexception;

        $r7 = (java.lang.IllegalStateException) r2;

        virtualinvoke $r7.<java.lang.IllegalStateException: void printStackTrace()>();

     label13:
        return;

        catch java.lang.IllegalStateException from label01 to label02 with label12;
        catch java.lang.IllegalStateException from label03 to label04 with label12;
        catch java.lang.IllegalStateException from label05 to label06 with label12;
        catch java.lang.IllegalStateException from label07 to label08 with label12;
        catch java.lang.IllegalStateException from label10 to label11 with label12;
    }
