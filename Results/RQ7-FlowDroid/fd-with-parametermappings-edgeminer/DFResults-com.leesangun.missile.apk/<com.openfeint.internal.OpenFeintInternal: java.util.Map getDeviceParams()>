    public java.util.Map getDeviceParams()
    {
        java.util.HashMap r1;
        java.lang.String $r2;
        com.openfeint.internal.OpenFeintInternal r0;

        r0 := @this: com.openfeint.internal.OpenFeintInternal;

        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke r0.<com.openfeint.internal.OpenFeintInternal: java.lang.String getUDID()>();

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("identifier", $r2);

        $r2 = staticinvoke <com.openfeint.internal.OpenFeintInternal: java.lang.String getModelString()>();

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("hardware", $r2);

        $r2 = staticinvoke <com.openfeint.internal.OpenFeintInternal: java.lang.String getOSVersionString()>();

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("os", $r2);

        $r2 = staticinvoke <com.openfeint.internal.OpenFeintInternal: java.lang.String getScreenInfo()>();

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("screen_resolution", $r2);

        $r2 = staticinvoke <com.openfeint.internal.OpenFeintInternal: java.lang.String getProcessorInfo()>();

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("processor", $r2);

        return r1;
    }
