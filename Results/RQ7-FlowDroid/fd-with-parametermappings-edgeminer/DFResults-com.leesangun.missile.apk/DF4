Source: specialinvoke $r12.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r11)
specialinvoke $r12.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r11) in <com.openfeint.internal.ui.WebViewCache$ManifestData: void <init>(byte[])>
Sink: virtualinvoke r2.<java.util.zip.DeflaterOutputStream: void write(byte[])>($r0) in <com.openfeint.internal.request.Compression: byte[] _compress(byte[])>

<com.openfeint.internal.ui.WebViewCache$ManifestData: void <init>(byte[])>: specialinvoke $r12.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r11)
<com.openfeint.internal.ui.WebViewCache$ManifestData: void <init>(byte[])>: specialinvoke $r11.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1)
<com.openfeint.internal.ui.WebViewCache$ManifestData: void <init>(byte[])>: throw r8
<com.openfeint.internal.ui.WebViewCache$ManifestRequest$1: void onResponseOffMainThread(int,byte[])>: return
<com.openfeint.internal.request.BaseRequest: void exec(boolean)>: $r6 = r0.<com.openfeint.internal.request.BaseRequest: byte[] mResponseBody>
<com.openfeint.internal.request.BaseRequest: void exec(boolean)>: virtualinvoke r0.<com.openfeint.internal.request.BaseRequest: void onResponseOffMainThread(int,byte[])>($i0, $r6)
<com.openfeint.internal.ui.WebViewCache$ManifestRequest: void onResponseOffMainThread(int,byte[])>: return
<com.openfeint.internal.request.BaseRequest: void exec(boolean)>: return
<com.openfeint.internal.request.Client$5: void run()>: $r4 = r0.<com.openfeint.internal.request.Client$5: com.openfeint.internal.request.BaseRequest val$req>
<com.openfeint.internal.request.Client$5: void run()>: r0 := @this: com.openfeint.internal.request.Client$5
<com.openfeint.internal.request.Client: void makeRequest(com.openfeint.internal.request.BaseRequest,long)>: specialinvoke r2.<com.openfeint.internal.request.Client$5: void <init>(com.openfeint.internal.request.Client,java.lang.Runnable,long,com.openfeint.internal.request.BaseRequest,java.lang.Runnable)>(r0, r3, $l0, $r1, r4)
<com.openfeint.internal.request.Client$5: void <init>(com.openfeint.internal.request.Client,java.lang.Runnable,long,com.openfeint.internal.request.BaseRequest,java.lang.Runnable)>: r0.<com.openfeint.internal.request.Client$5: com.openfeint.internal.request.BaseRequest val$req> = $r3
<com.openfeint.internal.request.Client$5: void <init>(com.openfeint.internal.request.Client,java.lang.Runnable,long,com.openfeint.internal.request.BaseRequest,java.lang.Runnable)>: return
<com.openfeint.internal.request.Client: void makeRequest(com.openfeint.internal.request.BaseRequest,long)>: r0 := @this: com.openfeint.internal.request.Client
<com.openfeint.internal.request.Client: void makeRequest(com.openfeint.internal.request.BaseRequest)>: r0 := @this: com.openfeint.internal.request.Client
<com.openfeint.internal.OpenFeintInternal: void _makeRequest(com.openfeint.internal.request.BaseRequest)>: specialinvoke $r6.<com.openfeint.internal.OpenFeintInternal$8: void <init>(com.openfeint.internal.OpenFeintInternal,com.openfeint.internal.request.BaseRequest)>(r0, $r1)
<com.openfeint.internal.OpenFeintInternal$8: void <init>(com.openfeint.internal.OpenFeintInternal,com.openfeint.internal.request.BaseRequest)>: r0.<com.openfeint.internal.OpenFeintInternal$8: com.openfeint.internal.request.BaseRequest val$req> = $r2
<com.openfeint.internal.OpenFeintInternal$8: void <init>(com.openfeint.internal.OpenFeintInternal,com.openfeint.internal.request.BaseRequest)>: r0 := @this: com.openfeint.internal.OpenFeintInternal$8
<com.openfeint.internal.OpenFeintInternal: void _makeRequest(com.openfeint.internal.request.BaseRequest)>: interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6)
<com.openfeint.internal.OpenFeintInternal: void _makeRequest(com.openfeint.internal.request.BaseRequest)>: $r3 = r0.<com.openfeint.internal.OpenFeintInternal: java.util.List mQueuedPostDeviceSessionRunnables>
<com.openfeint.internal.OpenFeintInternal: void _makeRequest(com.openfeint.internal.request.BaseRequest)>: return
<com.openfeint.internal.OpenFeintInternal: void createDeviceSession()>: return
<com.openfeint.internal.OpenFeintInternal: void launchIntroFlow(boolean)>: return
<com.openfeint.internal.OpenFeintInternal$10$1: void onResponse(int,java.lang.String)>: $r4 = staticinvoke <com.openfeint.internal.OpenFeintInternal$10: com.openfeint.internal.OpenFeintInternal access$0(com.openfeint.internal.OpenFeintInternal$10)>($r3)
<com.openfeint.internal.OpenFeintInternal$10: com.openfeint.internal.OpenFeintInternal access$0(com.openfeint.internal.OpenFeintInternal$10)>: r1 = $r0.<com.openfeint.internal.OpenFeintInternal$10: com.openfeint.internal.OpenFeintInternal this$0>
<com.openfeint.internal.OpenFeintInternal$10: com.openfeint.internal.OpenFeintInternal access$0(com.openfeint.internal.OpenFeintInternal$10)>: $r0 := @parameter0: com.openfeint.internal.OpenFeintInternal$10
<com.openfeint.internal.OpenFeintInternal$10$1: void onResponse(int,java.lang.String)>: $r3 = r0.<com.openfeint.internal.OpenFeintInternal$10$1: com.openfeint.internal.OpenFeintInternal$10 this$1>
<com.openfeint.internal.OpenFeintInternal$10$1: void onResponse(int,java.lang.String)>: r0 := @this: com.openfeint.internal.OpenFeintInternal$10$1
<com.openfeint.internal.request.RawRequest: void onResponse(int,byte[])>: $r3 = r0.<com.openfeint.internal.request.RawRequest: com.openfeint.internal.request.IRawRequestDelegate mDelegate>
<com.openfeint.internal.request.RawRequest: void onResponse(int,byte[])>: return
<com.openfeint.internal.request.BaseRequest: void onResponse()>: return
<com.openfeint.internal.request.Client$3: void run()>: $r1 = r0.<com.openfeint.internal.request.Client$3: com.openfeint.internal.request.BaseRequest val$req>
<com.openfeint.internal.request.Client$3: void run()>: r0 := @this: com.openfeint.internal.request.Client$3
<com.openfeint.internal.request.Client$4: void run()>: $r6 = r0.<com.openfeint.internal.request.Client$4: java.lang.Runnable val$onResponse>
<com.openfeint.internal.request.Client$4: void run()>: return
<android.os.Handler: boolean post(java.lang.Runnable)>: return 1
<com.openfeint.internal.OpenFeintInternal$2: void onResponse(int,java.lang.Object)>: $r5 = staticinvoke <com.openfeint.internal.OpenFeintInternal: java.lang.Runnable access$5(com.openfeint.internal.OpenFeintInternal)>($r2)
<com.openfeint.internal.OpenFeintInternal: java.lang.Runnable access$5(com.openfeint.internal.OpenFeintInternal)>: r1 = $r0.<com.openfeint.internal.OpenFeintInternal: java.lang.Runnable mPostDeviceSessionRunnable>
<com.openfeint.internal.OpenFeintInternal: java.lang.Runnable access$5(com.openfeint.internal.OpenFeintInternal)>: return r1
<com.openfeint.internal.OpenFeintInternal$2: void onResponse(int,java.lang.Object)>: $r2 = r0.<com.openfeint.internal.OpenFeintInternal$2: com.openfeint.internal.OpenFeintInternal this$0>
<com.openfeint.internal.OpenFeintInternal$2: void onResponse(int,java.lang.Object)>: $r2 = r0.<com.openfeint.internal.OpenFeintInternal$2: com.openfeint.internal.OpenFeintInternal this$0>
<com.openfeint.internal.OpenFeintInternal$2: void onResponse(int,java.lang.Object)>: $r8 = staticinvoke <com.openfeint.internal.OpenFeintInternal: java.util.List access$8(com.openfeint.internal.OpenFeintInternal)>($r2)
<com.openfeint.internal.OpenFeintInternal: java.util.List access$8(com.openfeint.internal.OpenFeintInternal)>: r1 = $r0.<com.openfeint.internal.OpenFeintInternal: java.util.List mQueuedPostDeviceSessionRunnables>
<com.openfeint.internal.OpenFeintInternal: java.util.List access$8(com.openfeint.internal.OpenFeintInternal)>: return r1
<com.openfeint.internal.OpenFeintInternal$2: void onResponse(int,java.lang.Object)>: $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
<com.openfeint.internal.OpenFeintInternal$2: void onResponse(int,java.lang.Object)>: $r1 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>()
<com.openfeint.internal.OpenFeintInternal$2: void onResponse(int,java.lang.Object)>: $r5 = (java.lang.Runnable) $r1
<com.openfeint.internal.OpenFeintInternal$2: void onResponse(int,java.lang.Object)>: virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r5)
<android.os.Handler: boolean post(java.lang.Runnable)>: interfaceinvoke param0.<java.lang.Runnable: void run()>()
<com.openfeint.internal.request.Client$3: void run()>: $r1 = r0.<com.openfeint.internal.request.Client$3: com.openfeint.internal.request.BaseRequest val$req>
<com.openfeint.internal.request.Client$3: void run()>: virtualinvoke $r1.<com.openfeint.internal.request.BaseRequest: void onResponse()>()
<com.openfeint.internal.request.BaseRequest: void onResponse()>: virtualinvoke r0.<com.openfeint.internal.request.BaseRequest: void onResponse(int,byte[])>($i0, $r2)
<com.openfeint.internal.request.JSONRequest: void onResponse(int,byte[])>: virtualinvoke r0.<com.openfeint.internal.request.JSONRequest: void onResponse(int,java.lang.Object)>($i0, $r2)
<com.openfeint.api.resource.Score$1: void onResponse(int,java.lang.Object)>: specialinvoke r0.<com.openfeint.api.resource.Score$1: void perhapsUploadBlob(boolean,java.lang.Object)>($z0, $r1)
<com.openfeint.api.resource.Score$1: void perhapsUploadBlob(boolean,java.lang.Object)>: r4 = r0.<com.openfeint.api.resource.Score$1: com.openfeint.api.resource.Score this$0>
<com.openfeint.api.resource.Score$1: void perhapsUploadBlob(boolean,java.lang.Object)>: $r8 = r4.<com.openfeint.api.resource.Score: byte[] blob>
<com.openfeint.api.resource.Score$1: void perhapsUploadBlob(boolean,java.lang.Object)>: specialinvoke r2.<com.openfeint.internal.request.CompressedBlobPostRequest: void <init>(com.openfeint.internal.resource.BlobUploadParameters,java.lang.String,byte[])>($r5, $r7, $r8)
<com.openfeint.internal.request.CompressedBlobPostRequest: void <init>(com.openfeint.internal.resource.BlobUploadParameters,java.lang.String,byte[])>: $r3 = staticinvoke <com.openfeint.internal.request.Compression: byte[] compress(byte[])>($r3)
<com.openfeint.internal.request.Compression: byte[] compress(byte[])>: $r6 = staticinvoke <com.openfeint.internal.request.Compression: byte[] _compress(byte[])>($r0)
<com.openfeint.internal.request.Compression: byte[] _compress(byte[])>: virtualinvoke r2.<java.util.zip.DeflaterOutputStream: void write(byte[])>($r0)
