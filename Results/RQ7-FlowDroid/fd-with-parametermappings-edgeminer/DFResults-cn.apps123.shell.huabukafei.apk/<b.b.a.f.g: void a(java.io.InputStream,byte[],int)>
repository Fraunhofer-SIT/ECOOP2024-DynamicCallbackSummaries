    private static void a(java.io.InputStream, byte[], int)
    {
        byte[] $r1;
        b.b.a.f.c $r2;
        int $i0, $i1, $i2;
        java.io.InputStream $r0;
        b.b.a.f.e $r3;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i2 = 0;

     label1:
        if $i2 < $i0 goto label2;

        return;

     label2:
        $i1 = $i0 - $i2;

        $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r1, $i2, $i1);

        if $i1 > 0 goto label3;

        $r2 = new b.b.a.f.c;

        $r3 = <b.b.a.f.e: b.b.a.f.e d>;

        specialinvoke $r2.<b.b.a.f.c: void <init>(b.b.a.f.e,java.lang.String)>($r3, "stream is closed");

        throw $r2;

     label3:
        $i2 = $i2 + $i1;

        goto label1;
    }
