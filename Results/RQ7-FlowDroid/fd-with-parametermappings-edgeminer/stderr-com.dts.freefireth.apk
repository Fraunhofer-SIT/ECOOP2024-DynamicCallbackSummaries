[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loading sources and sinks from SourcesSinks/UnconstrainedSourcesSinks.xml...
[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loaded 273 sources and 91 sinks from the XML file
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.076668986 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 38 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class androidx.core.content.FileProvider
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 40 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 37 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 40 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 8 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 40 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 1 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] WARN soot.jimple.infoflow.android.SetupApplication - Aborted callback collection because of low memory
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] WARN soot.jimple.infoflow.android.SetupApplication - Callback analysis aborted early due to time or memory exhaustion
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 273 sources, 91 sinks, and 237 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 209 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on storagepath2-data/androidApps/2020-AndroZoo-PlayStore/com.dts.freefireth.apk with 273 sources and 91 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230.400 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 1.907928501 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 47269 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 121 sources and 62 sinks.
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper hits: 7318316
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper misses: 45389225
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - IFDS problem with 57777730 forward and 81579851 backward edges solved in 901 seconds, processing 21 results...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Current memory consumption: 146950 MB
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after cleanup: 63926 MB
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 1 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 2 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 3 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 4 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Low memory monitor] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Triggering memory warning at 243123 MB (268435 MB max, 241821 in watched memory pool)...
[Low memory monitor] WARN soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Path reconstruction terminated due to low memory
[Low memory monitor] WARN soot.jimple.infoflow.memory.FlowDroidMemoryWatcher - Running out of memory, solvers terminated
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 5 with 1 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 1 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after path building: 226021 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Path reconstruction took 14180 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r0) in method <com.facebook.appevents.AppEventStore: void saveEventsToDisk(com.facebook.appevents.PersistedEvents)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r6 = virtualinvoke r0.<com.facebook.appevents.AppEventStore$MovedClassObjectInputStream: java.lang.Object readObject()>() in method <com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke r0.<com.facebook.appevents.AppEventStore$MovedClassObjectInputStream: java.lang.Object readObject()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = (com.facebook.appevents.PersistedEvents) $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r2 = $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventStore: com.facebook.appevents.PersistedEvents readAndClearStore()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventStore: void persistEvents(com.facebook.appevents.AppEventCollection)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.facebook.appevents.AppEventStore: void saveEventsToDisk(com.facebook.appevents.PersistedEvents)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.appevents.AppEventStore: void saveEventsToDisk(com.facebook.appevents.PersistedEvents)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r28.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r12, 0, $i0) in method <com.tencent.android.tpush.b.e: android.graphics.Bitmap a(java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r10.<java.io.InputStream: int read(byte[])>($r12) in method <com.tencent.android.tpush.b.e: android.graphics.Bitmap a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.b.e: android.graphics.Bitmap a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r10.<java.io.InputStream: int read(byte[])>($r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.b.e: android.graphics.Bitmap a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r28.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r12, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i0) in method <com.tencent.android.tpush.stat.a.c: byte[] a(byte[])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r3.<java.util.zip.GZIPInputStream: int read(byte[])>($r1) in method <com.tencent.android.tpush.stat.a.c: byte[] a(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.c: byte[] a(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r3.<java.util.zip.GZIPInputStream: int read(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.c: byte[] a(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r11.<java.io.Writer: void write(java.lang.String)>($r10) in method <com.appsflyer.cache.CacheManager: void cacheRequest(com.appsflyer.cache.RequestCacheData,android.content.Context)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $d0 = virtualinvoke $r31.<android.location.Location: double getLongitude()>() in method <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $d0 = virtualinvoke $r31.<android.location.Location: double getLongitude()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r67.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lon", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("loc", $r67)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("deviceData", $r29)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>($r0, $r2, $r12, $r15, $z2, $i0, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>($r1, $r2, $r3, $r4, $z0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.appsflyer.AppsFlyerLib$e: java.util.Map ॱ> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r14.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.appsflyer.AppsFlyerLib$e: java.util.Map ॱ>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<org.json.JSONObject: void <init>(java.util.Map)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r13.<com.appsflyer.cache.RequestCacheData: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r6, $r1, "4.8.11")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.appsflyer.cache.RequestCacheData: java.lang.String ॱ> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r12.<com.appsflyer.cache.CacheManager: void cacheRequest(com.appsflyer.cache.RequestCacheData,android.content.Context)>($r13, $r14)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: void cacheRequest(com.appsflyer.cache.RequestCacheData,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r1.<com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = r0.<com.appsflyer.cache.RequestCacheData: java.lang.String ॱ>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: void cacheRequest(com.appsflyer.cache.RequestCacheData,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r11.<java.io.Writer: void write(java.lang.String)>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $d0 = virtualinvoke $r31.<android.location.Location: double getLatitude()>() in method <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $d0 = virtualinvoke $r31.<android.location.Location: double getLatitude()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r67.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lat", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("loc", $r67)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("deviceData", $r29)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>($r0, $r2, $r12, $r15, $z2, $i0, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>($r1, $r2, $r3, $r4, $z0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.appsflyer.AppsFlyerLib$e: java.util.Map ॱ> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r14.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.appsflyer.AppsFlyerLib$e: java.util.Map ॱ>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<org.json.JSONObject: void <init>(java.util.Map)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r13.<com.appsflyer.cache.RequestCacheData: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r6, $r1, "4.8.11")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.appsflyer.cache.RequestCacheData: java.lang.String ॱ> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r12.<com.appsflyer.cache.CacheManager: void cacheRequest(com.appsflyer.cache.RequestCacheData,android.content.Context)>($r13, $r14)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: void cacheRequest(com.appsflyer.cache.RequestCacheData,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r1.<com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = r0.<com.appsflyer.cache.RequestCacheData: java.lang.String ॱ>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: void cacheRequest(com.appsflyer.cache.RequestCacheData,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r11.<java.io.Writer: void write(java.lang.String)>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("AF_INSTALLATION", null) in method <com.appsflyer.p: java.lang.String ˋ(java.lang.ref.WeakReference)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.p: java.lang.String ˋ(java.lang.ref.WeakReference)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("AF_INSTALLATION", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.p: java.lang.String ˋ(java.lang.ref.WeakReference)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> <com.appsflyer.p: java.lang.String ॱ> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.p: java.lang.String ˋ(java.lang.ref.WeakReference)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$d: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r23
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable,long,java.util.concurrent.TimeUnit)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˊ(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<com.appsflyer.AppsFlyerLib: void ˊ(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>($r6, $r2, $r3, $r4, $r5, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˊ(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.appsflyer.AppsFlyerLib: void ˎ(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r29, $r38, 1L, $r25)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable,long,java.util.concurrent.TimeUnit)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r0.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r1, $l0, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$b: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>($r1, $r9, $r2, $r3, $r4, $r5, $z0, $z1, $r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = virtualinvoke $r0.<com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>($r1, $r2, $r3, $r4, $r5, $z0, $r7, $z2, $r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <com.appsflyer.p: java.lang.String ˋ(java.lang.ref.WeakReference)>($r63)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.p: java.lang.String ˋ(java.lang.ref.WeakReference)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.appsflyer.p: java.lang.String ॱ>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.p: java.lang.String ˋ(java.lang.ref.WeakReference)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("uid", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>($r0, $r2, $r12, $r15, $z2, $i0, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>($r1, $r2, $r3, $r4, $z0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.appsflyer.AppsFlyerLib$e: java.util.Map ॱ> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r14.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.appsflyer.AppsFlyerLib$e: java.util.Map ॱ>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<org.json.JSONObject: void <init>(java.util.Map)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r13.<com.appsflyer.cache.RequestCacheData: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r6, $r1, "4.8.11")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.appsflyer.cache.RequestCacheData: java.lang.String ॱ> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r12.<com.appsflyer.cache.CacheManager: void cacheRequest(com.appsflyer.cache.RequestCacheData,android.content.Context)>($r13, $r14)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: void cacheRequest(com.appsflyer.cache.RequestCacheData,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r1.<com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = r0.<com.appsflyer.cache.RequestCacheData: java.lang.String ॱ>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: void cacheRequest(com.appsflyer.cache.RequestCacheData,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r11.<java.io.Writer: void write(java.lang.String)>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - virtualinvoke $r1.<java.io.Reader: int read(char[])>($r2) in method <com.appsflyer.cache.CacheManager: com.appsflyer.cache.RequestCacheData ˎ(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: com.appsflyer.cache.RequestCacheData ˎ(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.Reader: int read(char[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: com.appsflyer.cache.RequestCacheData ˎ(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<com.appsflyer.cache.RequestCacheData: void <init>(char[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(char[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<java.lang.String: void <init>(char[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(char[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<java.util.Scanner: void <init>(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(char[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r2.<java.util.Scanner: java.lang.String nextLine()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(char[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>(5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(char[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(char[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.appsflyer.cache.RequestCacheData: java.lang.String ॱ> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(char[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: com.appsflyer.cache.RequestCacheData ˎ(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: java.util.List getCachedRequests(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: java.util.List getCachedRequests(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$c: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$c: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$c: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = (com.appsflyer.cache.RequestCacheData) $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$c: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = virtualinvoke $r10.<com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = r0.<com.appsflyer.cache.RequestCacheData: java.lang.String ॱ>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: void cacheRequest(com.appsflyer.cache.RequestCacheData,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r11.<java.io.Writer: void write(java.lang.String)>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $z0 = interfaceinvoke $r6.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("is_stop_tracking_used", 0) in method <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = interfaceinvoke $r6.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("is_stop_tracking_used", 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("istu", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>($r0, $r2, $r12, $r15, $z2, $i0, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>($r1, $r2, $r3, $r4, $z0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.appsflyer.AppsFlyerLib$e: java.util.Map ॱ> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r14.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.appsflyer.AppsFlyerLib$e: java.util.Map ॱ>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<org.json.JSONObject: void <init>(java.util.Map)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r13.<com.appsflyer.cache.RequestCacheData: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r6, $r1, "4.8.11")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.appsflyer.cache.RequestCacheData: java.lang.String ॱ> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r12.<com.appsflyer.cache.CacheManager: void cacheRequest(com.appsflyer.cache.RequestCacheData,android.content.Context)>($r13, $r14)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: void cacheRequest(com.appsflyer.cache.RequestCacheData,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r1.<com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = r0.<com.appsflyer.cache.RequestCacheData: java.lang.String ॱ>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: void cacheRequest(com.appsflyer.cache.RequestCacheData,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r11.<java.io.Writer: void write(java.lang.String)>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, 0, $i0) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader createInMemoryClassLoader(android.content.Context)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r4.<java.io.InputStream: int read(byte[])>(r1) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader createInMemoryClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader createInMemoryClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r4.<java.io.InputStream: int read(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader createInMemoryClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r15.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r2, 0, $i0) in method <com.vk.sdk.api.httpClient.VKHttpClient$VKHttpResponse: void <init>(java.net.HttpURLConnection,com.vk.sdk.api.httpClient.VKHttpClient$VKHttpProgressCallback)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r12.<java.io.InputStream: int read(byte[])>(r2) in method <com.vk.sdk.api.httpClient.VKHttpClient$VKHttpResponse: void <init>(java.net.HttpURLConnection,com.vk.sdk.api.httpClient.VKHttpClient$VKHttpProgressCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHttpResponse: void <init>(java.net.HttpURLConnection,com.vk.sdk.api.httpClient.VKHttpClient$VKHttpProgressCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r12.<java.io.InputStream: int read(byte[])>(r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHttpResponse: void <init>(java.net.HttpURLConnection,com.vk.sdk.api.httpClient.VKHttpClient$VKHttpProgressCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r15.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r20.<java.io.BufferedWriter: void write(java.lang.String)>($r3) in method <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r8 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(r7, "") in method <com.beetalk.sdk.cache.SharedPrefStorage: java.util.Map load()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.SharedPrefStorage: java.util.Map load()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(r7, "")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.SharedPrefStorage: java.util.Map load()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.SharedPrefStorage: java.util.Map load()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: java.util.Map load()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.StorageCache: java.lang.String getGuestPassword()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.StorageCache: java.lang.String getGuestPassword()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = (java.lang.String) $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.StorageCache: java.lang.String getGuestPassword()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.GuestRegistrationHandler: boolean startAuth(com.beetalk.sdk.AuthClient$AuthClientRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.beetalk.sdk.GuestRegistrationHandler: void grantTokenForGuest(long,java.lang.String)>($l1, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.GuestRegistrationHandler: void grantTokenForGuest(long,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.beetalk.sdk.networking.service.AuthService: void grantGuestToken(long,java.lang.String,com.beetalk.sdk.request.ResponseType,java.lang.String,com.beetalk.sdk.networking.HttpRequestTask$JSONObjectCallback)>($l0, $r1, $r2, $r6, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService: void grantGuestToken(long,java.lang.String,com.beetalk.sdk.request.ResponseType,java.lang.String,com.beetalk.sdk.networking.HttpRequestTask$JSONObjectCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<com.beetalk.sdk.networking.service.AuthService$2: void <init>(long,java.lang.String,com.beetalk.sdk.request.ResponseType,java.lang.String,com.beetalk.sdk.networking.HttpRequestTask$JSONObjectCallback)>($l0, $r0, $r1, $r2, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService$2: void <init>(long,java.lang.String,com.beetalk.sdk.request.ResponseType,java.lang.String,com.beetalk.sdk.networking.HttpRequestTask$JSONObjectCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.beetalk.sdk.networking.service.AuthService$2: java.lang.String val$password> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService$2: void <init>(long,java.lang.String,com.beetalk.sdk.request.ResponseType,java.lang.String,com.beetalk.sdk.networking.HttpRequestTask$JSONObjectCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService: void grantGuestToken(long,java.lang.String,com.beetalk.sdk.request.ResponseType,java.lang.String,com.beetalk.sdk.networking.HttpRequestTask$JSONObjectCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <bolts.Task: bolts.Task callInBackground(java.util.concurrent.Callable)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task: bolts.Task callInBackground(java.util.concurrent.Callable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = staticinvoke <bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>(r0, $r2, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<bolts.Task$4: void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable)>(null, r4, r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task$4: void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<bolts.Task$4: java.util.concurrent.Callable val$callable> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task$4: void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<bolts.Task$4: java.util.concurrent.Callable val$callable>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = interfaceinvoke $r3.<java.util.concurrent.Callable: java.lang.Object call()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService$2: java.lang.Void call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.beetalk.sdk.networking.service.AuthService$2: java.lang.String val$password>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService$2: java.lang.Void call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService$2: java.lang.Void call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("password", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService$2: java.lang.Void call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>($r2, null, r1, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = (java.lang.String) $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r11.<com.beetalk.sdk.networking.HttpParam: void <init>(java.lang.String,java.lang.String)>(r9, $r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.HttpParam: void <init>(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.beetalk.sdk.networking.HttpParam: java.lang.String value> = r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.HttpParam: void <init>(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r9 = staticinvoke <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>(r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r4 = (com.beetalk.sdk.networking.HttpParam) $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = r4.<com.beetalk.sdk.networking.HttpParam: java.lang.String value>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = specialinvoke r0.<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)>($r1, r5, r9, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r20.<java.io.BufferedWriter: void write(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("VK_SDK_ACCESS_TOKEN_PLEASE_DONT_TOUCH", null) in method <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromSharedPreferences(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromSharedPreferences(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("VK_SDK_ACCESS_TOKEN_PLEASE_DONT_TOUCH", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromSharedPreferences(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = staticinvoke <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromUrlString(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromUrlString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = staticinvoke <com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("&")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[$i1]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("=")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = $r3[1]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromUrlString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromParameters(java.util.Map)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromParameters(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("access_token")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromParameters(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r2 = (java.lang.String) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromParameters(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r4.<com.vk.sdk.VKAccessToken: java.lang.String accessToken> = r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromParameters(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromUrlString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromSharedPreferences(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken currentToken()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken sCurrentToken> = $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken currentToken()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken sCurrentToken>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken currentToken()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.VKAuthRequestHandler: void onLoggedIn()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r2.<com.vk.sdk.VKAccessToken: java.lang.String accessToken>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.VKAuthRequestHandler: void onLoggedIn()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = specialinvoke r0.<com.beetalk.sdk.VKAuthRequestHandler: bolts.Task exchangeToken(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.VKAuthRequestHandler: bolts.Task exchangeToken(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<com.beetalk.sdk.VKAuthRequestHandler$3: void <init>(com.beetalk.sdk.VKAuthRequestHandler,java.lang.String,com.beetalk.sdk.AuthClient$AuthClientRequest)>(r0, $r1, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.VKAuthRequestHandler$3: void <init>(com.beetalk.sdk.VKAuthRequestHandler,java.lang.String,com.beetalk.sdk.AuthClient$AuthClientRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.beetalk.sdk.VKAuthRequestHandler$3: java.lang.String val$token> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.VKAuthRequestHandler$3: void <init>(com.beetalk.sdk.VKAuthRequestHandler,java.lang.String,com.beetalk.sdk.AuthClient$AuthClientRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.VKAuthRequestHandler: bolts.Task exchangeToken(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = staticinvoke <bolts.Task: bolts.Task callInBackground(java.util.concurrent.Callable)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task: bolts.Task callInBackground(java.util.concurrent.Callable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = staticinvoke <bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>(r0, $r2, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<bolts.Task$4: void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable)>(null, r4, r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task$4: void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<bolts.Task$4: java.util.concurrent.Callable val$callable> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task$4: void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<bolts.Task$4: java.util.concurrent.Callable val$callable>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = interfaceinvoke $r3.<java.util.concurrent.Callable: java.lang.Object call()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.VKAuthRequestHandler$3: com.beetalk.sdk.AuthClient$Result call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.beetalk.sdk.VKAuthRequestHandler$3: java.lang.String val$token>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.VKAuthRequestHandler$3: com.beetalk.sdk.AuthClient$Result call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = staticinvoke <com.beetalk.sdk.networking.service.AuthService: org.json.JSONObject exchangeVkTokenSync(java.lang.String,java.lang.String)>($r6, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService: org.json.JSONObject exchangeVkTokenSync(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("vk_access_token", $r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService: org.json.JSONObject exchangeVkTokenSync(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r3.<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.Map)>($r0, r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke r0.<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map)>($r1, null, r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>($r1, r2, r3, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = (java.lang.String) $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r11.<com.beetalk.sdk.networking.HttpParam: void <init>(java.lang.String,java.lang.String)>(r9, $r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.HttpParam: void <init>(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.beetalk.sdk.networking.HttpParam: java.lang.String value> = r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.HttpParam: void <init>(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r9 = staticinvoke <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>(r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r4 = (com.beetalk.sdk.networking.HttpParam) $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = r4.<com.beetalk.sdk.networking.HttpParam: java.lang.String value>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = specialinvoke r0.<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)>($r1, r5, r9, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r20.<java.io.BufferedWriter: void write(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink specialinvoke $r20.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r19) in method <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r8 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(r7, "") in method <com.beetalk.sdk.cache.SharedPrefStorage: java.util.Map load()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.SharedPrefStorage: java.util.Map load()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(r7, "")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.SharedPrefStorage: java.util.Map load()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.SharedPrefStorage: java.util.Map load()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: java.util.Map load()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.StorageCache: java.lang.String getGuestPassword()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.StorageCache: java.lang.String getGuestPassword()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = (java.lang.String) $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.StorageCache: java.lang.String getGuestPassword()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.GuestRegistrationHandler: boolean startAuth(com.beetalk.sdk.AuthClient$AuthClientRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.beetalk.sdk.GuestRegistrationHandler: void grantTokenForGuest(long,java.lang.String)>($l1, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.GuestRegistrationHandler: void grantTokenForGuest(long,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.beetalk.sdk.networking.service.AuthService: void grantGuestToken(long,java.lang.String,com.beetalk.sdk.request.ResponseType,java.lang.String,com.beetalk.sdk.networking.HttpRequestTask$JSONObjectCallback)>($l0, $r1, $r2, $r6, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService: void grantGuestToken(long,java.lang.String,com.beetalk.sdk.request.ResponseType,java.lang.String,com.beetalk.sdk.networking.HttpRequestTask$JSONObjectCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<com.beetalk.sdk.networking.service.AuthService$2: void <init>(long,java.lang.String,com.beetalk.sdk.request.ResponseType,java.lang.String,com.beetalk.sdk.networking.HttpRequestTask$JSONObjectCallback)>($l0, $r0, $r1, $r2, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService$2: void <init>(long,java.lang.String,com.beetalk.sdk.request.ResponseType,java.lang.String,com.beetalk.sdk.networking.HttpRequestTask$JSONObjectCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.beetalk.sdk.networking.service.AuthService$2: java.lang.String val$password> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService$2: void <init>(long,java.lang.String,com.beetalk.sdk.request.ResponseType,java.lang.String,com.beetalk.sdk.networking.HttpRequestTask$JSONObjectCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService: void grantGuestToken(long,java.lang.String,com.beetalk.sdk.request.ResponseType,java.lang.String,com.beetalk.sdk.networking.HttpRequestTask$JSONObjectCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <bolts.Task: bolts.Task callInBackground(java.util.concurrent.Callable)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task: bolts.Task callInBackground(java.util.concurrent.Callable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = staticinvoke <bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>(r0, $r2, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<bolts.Task$4: void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable)>(null, r4, r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task$4: void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<bolts.Task$4: java.util.concurrent.Callable val$callable> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task$4: void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<bolts.Task$4: java.util.concurrent.Callable val$callable>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = interfaceinvoke $r3.<java.util.concurrent.Callable: java.lang.Object call()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService$2: java.lang.Void call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.beetalk.sdk.networking.service.AuthService$2: java.lang.String val$password>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService$2: java.lang.Void call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService$2: java.lang.Void call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("password", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService$2: java.lang.Void call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>($r2, null, r1, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = (java.lang.String) $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r11.<com.beetalk.sdk.networking.HttpParam: void <init>(java.lang.String,java.lang.String)>(r9, $r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.HttpParam: void <init>(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.beetalk.sdk.networking.HttpParam: java.lang.String value> = r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.HttpParam: void <init>(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r9 = staticinvoke <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>(r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r4 = (com.beetalk.sdk.networking.HttpParam) $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = r4.<com.beetalk.sdk.networking.HttpParam: java.lang.String value>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12[1] = r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.beetalk.sdk.helper.BBLogger: void i(java.lang.String,java.lang.Object[])>("Making Request for url %s & params %s", $r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.BBLogger: void i(java.lang.String,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <com.beetalk.sdk.helper.BBLogger: java.lang.String getLogString(java.lang.String,java.lang.Object[])>($r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.BBLogger: java.lang.String getLogString(java.lang.String,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.BBLogger: void i(java.lang.String,java.lang.Object[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: java.lang.String
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = specialinvoke r0.<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)>($r1, r5, r9, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <com.beetalk.sdk.networking.HttpFactory: java.net.HttpURLConnection newConnection(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.HttpFactory: java.net.HttpURLConnection newConnection(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<java.net.URL: void <init>(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.HttpFactory: java.net.HttpURLConnection newConnection(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r10.<java.net.URL: java.net.URLConnection openConnection()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.HttpFactory: java.net.HttpURLConnection newConnection(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r2 = (java.net.HttpURLConnection) $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.HttpFactory: java.net.HttpURLConnection newConnection(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = virtualinvoke $r6.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r19.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r12, "UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r20.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r19)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("VK_SDK_ACCESS_TOKEN_PLEASE_DONT_TOUCH", null) in method <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromSharedPreferences(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromSharedPreferences(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("VK_SDK_ACCESS_TOKEN_PLEASE_DONT_TOUCH", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromSharedPreferences(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = staticinvoke <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromUrlString(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromUrlString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = staticinvoke <com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("&")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = $r1[$i1]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("=")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = $r3[1]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.util.VKUtil: java.util.Map explodeQueryString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromUrlString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromParameters(java.util.Map)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromParameters(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("access_token")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromParameters(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r2 = (java.lang.String) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromParameters(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r4.<com.vk.sdk.VKAccessToken: java.lang.String accessToken> = r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromParameters(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromUrlString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken tokenFromSharedPreferences(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken currentToken()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken sCurrentToken> = $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken currentToken()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKSdk: com.vk.sdk.VKSdk$CheckTokenResult checkAndSetToken(android.content.Context,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKSdk: boolean processActivityResult(android.content.Context,int,android.content.Intent,com.vk.sdk.VKCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.vk.sdk.VKSdk: void updateLoginState(android.content.Context)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKSdk: void updateLoginState(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.vk.sdk.VKSdk: void updateLoginState(android.content.Context,com.vk.sdk.VKCallback)>($r0, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKSdk: void updateLoginState(android.content.Context,com.vk.sdk.VKCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.vk.sdk.VKSdk: void forceLoginState(com.vk.sdk.VKSdk$LoginState,com.vk.sdk.VKCallback)>($r3, r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKSdk: void forceLoginState(com.vk.sdk.VKSdk$LoginState,com.vk.sdk.VKCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke r1.<com.vk.sdk.VKCallback: void onResult(java.lang.Object)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.vk.VKAuthHelper$1: void onResult(java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.beetalk.sdk.vk.VKAuthHelper$1: void onResult(com.vk.sdk.VKSdk$LoginState)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.vk.VKAuthHelper$1: void onResult(com.vk.sdk.VKSdk$LoginState)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.beetalk.sdk.vk.VKAuthHelper: void access$100(com.beetalk.sdk.vk.VKAuthHelper,android.app.Activity)>($r4, $r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.vk.VKAuthHelper: void access$100(com.beetalk.sdk.vk.VKAuthHelper,android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<com.beetalk.sdk.vk.VKAuthHelper: void verifyScopes(android.app.Activity)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.vk.VKAuthHelper: void verifyScopes(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r7.<com.beetalk.sdk.vk.VKAuthHelper$OnAuthResultListener: void onLoggedIn()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.VKAuthRequestHandler: void onLoggedIn()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken currentToken()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken currentToken()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken sCurrentToken>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.VKAccessToken: com.vk.sdk.VKAccessToken currentToken()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.VKAuthRequestHandler: void onLoggedIn()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r2.<com.vk.sdk.VKAccessToken: java.lang.String accessToken>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.VKAuthRequestHandler: void onLoggedIn()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = specialinvoke r0.<com.beetalk.sdk.VKAuthRequestHandler: bolts.Task exchangeToken(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.VKAuthRequestHandler: bolts.Task exchangeToken(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<com.beetalk.sdk.VKAuthRequestHandler$3: void <init>(com.beetalk.sdk.VKAuthRequestHandler,java.lang.String,com.beetalk.sdk.AuthClient$AuthClientRequest)>(r0, $r1, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.VKAuthRequestHandler$3: void <init>(com.beetalk.sdk.VKAuthRequestHandler,java.lang.String,com.beetalk.sdk.AuthClient$AuthClientRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.beetalk.sdk.VKAuthRequestHandler$3: java.lang.String val$token> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.VKAuthRequestHandler$3: void <init>(com.beetalk.sdk.VKAuthRequestHandler,java.lang.String,com.beetalk.sdk.AuthClient$AuthClientRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.VKAuthRequestHandler: bolts.Task exchangeToken(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = staticinvoke <bolts.Task: bolts.Task callInBackground(java.util.concurrent.Callable)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task: bolts.Task callInBackground(java.util.concurrent.Callable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = staticinvoke <bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>(r0, $r2, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<bolts.Task$4: void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable)>(null, r4, r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task$4: void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<bolts.Task$4: java.util.concurrent.Callable val$callable> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task$4: void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<bolts.Task$4: java.util.concurrent.Callable val$callable>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <bolts.Task$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = interfaceinvoke $r3.<java.util.concurrent.Callable: java.lang.Object call()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.VKAuthRequestHandler$3: com.beetalk.sdk.AuthClient$Result call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.beetalk.sdk.VKAuthRequestHandler$3: java.lang.String val$token>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.VKAuthRequestHandler$3: com.beetalk.sdk.AuthClient$Result call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = staticinvoke <com.beetalk.sdk.networking.service.AuthService: org.json.JSONObject exchangeVkTokenSync(java.lang.String,java.lang.String)>($r6, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService: org.json.JSONObject exchangeVkTokenSync(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("vk_access_token", $r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.service.AuthService: org.json.JSONObject exchangeVkTokenSync(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r3.<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.Map)>($r0, r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke r0.<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map)>($r1, null, r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>($r1, r2, r3, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = (java.lang.String) $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r11.<com.beetalk.sdk.networking.HttpParam: void <init>(java.lang.String,java.lang.String)>(r9, $r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.HttpParam: void <init>(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.beetalk.sdk.networking.HttpParam: java.lang.String value> = r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.HttpParam: void <init>(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r9 = staticinvoke <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>(r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r4 = (com.beetalk.sdk.networking.HttpParam) $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = r4.<com.beetalk.sdk.networking.HttpParam: java.lang.String value>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.helper.StringUtils: java.lang.String httpParamsToString(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12[1] = r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12[0] = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.util.Map,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = specialinvoke r0.<com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)>($r1, r5, r9, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <com.beetalk.sdk.networking.HttpFactory: java.net.HttpURLConnection newConnection(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.HttpFactory: java.net.HttpURLConnection newConnection(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<java.net.URL: void <init>(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.HttpFactory: java.net.HttpURLConnection newConnection(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r10.<java.net.URL: java.net.URLConnection openConnection()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.HttpFactory: java.net.HttpURLConnection newConnection(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r2 = (java.net.HttpURLConnection) $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.HttpFactory: java.net.HttpURLConnection newConnection(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = virtualinvoke $r6.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r19.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r12, "UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.networking.SimpleNetworkClient: org.json.JSONObject makePostRequest(java.lang.String,java.util.List,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r20.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r19)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, 0, $i0) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: dalvik.system.DexClassLoader makeLegacyAdsSdkClassLoader(android.content.Context)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>(r1) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: dalvik.system.DexClassLoader makeLegacyAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: dalvik.system.DexClassLoader makeLegacyAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: dalvik.system.DexClassLoader makeLegacyAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i0) in method <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r5.<java.io.BufferedInputStream: int read(byte[])>(r2) in method <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r5.<java.io.BufferedInputStream: int read(byte[])>(r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke r5.<java.io.PrintWriter: void write(java.lang.String)>($r1) in method <com.beetalk.sdk.cache.PersistentCache: void saveToFile(java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r8 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(r7, "") in method <com.beetalk.sdk.cache.SharedPrefStorage: java.util.Map load()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.SharedPrefStorage: java.util.Map load()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(r7, "")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.SharedPrefStorage: java.util.Map load()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.SharedPrefStorage: java.util.Map load()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: java.util.Map load()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: void save(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r4 = (java.util.HashMap) $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: void save(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.beetalk.sdk.cache.PersistentCache: void saveExternal(java.util.Map)>(r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: void saveExternal(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = specialinvoke r0.<com.beetalk.sdk.cache.PersistentCache: java.lang.String mapToStr(java.util.Map)>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: java.lang.String mapToStr(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: void saveExternal(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.beetalk.sdk.cache.PersistentCache
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: void save(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r4 = (java.util.HashMap) $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: void save(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke r0.<com.beetalk.sdk.cache.PersistentCache: java.util.Map load()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: java.util.Map load()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.beetalk.sdk.cache.PersistentCache: void sync(java.util.Map,java.util.Map)>($r2, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: void sync(java.util.Map,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.beetalk.sdk.cache.PersistentCache: void saveExternal(java.util.Map)>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: void saveExternal(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = specialinvoke r0.<com.beetalk.sdk.cache.PersistentCache: java.lang.String mapToStr(java.util.Map)>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: java.lang.String mapToStr(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r3.<org.json.JSONObject: void <init>(java.util.Map)>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: java.lang.String mapToStr(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("guest_account_info", r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: java.lang.String mapToStr(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r4.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: java.lang.String mapToStr(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: void saveExternal(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.beetalk.sdk.cache.PersistentCache: void saveToFile(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.beetalk.sdk.cache.PersistentCache: void saveToFile(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r5.<java.io.PrintWriter: void write(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink specialinvoke r2.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r5) in method <com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: void writeParams(java.io.OutputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r12.<java.io.InputStream: int read(byte[])>(r2) in method <com.vk.sdk.api.httpClient.VKHttpClient$VKHttpResponse: void <init>(java.net.HttpURLConnection,com.vk.sdk.api.httpClient.VKHttpClient$VKHttpProgressCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHttpResponse: void <init>(java.net.HttpURLConnection,com.vk.sdk.api.httpClient.VKHttpClient$VKHttpProgressCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r12.<java.io.InputStream: int read(byte[])>(r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHttpResponse: void <init>(java.net.HttpURLConnection,com.vk.sdk.api.httpClient.VKHttpClient$VKHttpProgressCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r15.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHttpResponse: void <init>(java.net.HttpURLConnection,com.vk.sdk.api.httpClient.VKHttpClient$VKHttpProgressCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r2 = virtualinvoke $r15.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHttpResponse: void <init>(java.net.HttpURLConnection,com.vk.sdk.api.httpClient.VKHttpClient$VKHttpProgressCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.vk.sdk.api.httpClient.VKHttpClient$VKHttpResponse: byte[] responseBytes> = r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHttpResponse: void <init>(java.net.HttpURLConnection,com.vk.sdk.api.httpClient.VKHttpClient$VKHttpProgressCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient: com.vk.sdk.api.httpClient.VKHttpClient$VKHttpResponse execute(com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpOperation: void start(java.util.concurrent.ExecutorService)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.vk.sdk.api.httpClient.VKHttpOperation: com.vk.sdk.api.httpClient.VKHttpClient$VKHttpResponse response> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpOperation: void start(java.util.concurrent.ExecutorService)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.vk.sdk.api.httpClient.VKHttpOperation
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.vk.sdk.api.httpClient.VKHttpClient$2: com.vk.sdk.api.httpClient.VKAbstractOperation val$operation>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.vk.sdk.api.httpClient.VKHttpClient$2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient: void enqueueOperation(com.vk.sdk.api.httpClient.VKAbstractOperation)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.vk.sdk.api.httpClient.VKHttpClient$2: void <init>(com.vk.sdk.api.httpClient.VKAbstractOperation)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$2: void <init>(com.vk.sdk.api.httpClient.VKAbstractOperation)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.vk.sdk.api.httpClient.VKHttpClient$2: com.vk.sdk.api.httpClient.VKAbstractOperation val$operation> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$2: void <init>(com.vk.sdk.api.httpClient.VKAbstractOperation)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient: void enqueueOperation(com.vk.sdk.api.httpClient.VKAbstractOperation)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: com.vk.sdk.api.httpClient.VKAbstractOperation
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.VKRequest: void start()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.vk.sdk.api.VKRequest: com.vk.sdk.api.httpClient.VKAbstractOperation mLoadingOperation>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.VKRequest: void start()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.VKRequest$1$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = $r1.<com.vk.sdk.api.VKRequest$1: com.vk.sdk.api.VKRequest this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.VKRequest$1$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.vk.sdk.api.VKRequest$1$1: com.vk.sdk.api.VKRequest$1 this$1>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.VKRequest$1$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.vk.sdk.api.VKRequest$1$1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.XGVipPushService: void c()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.tencent.android.tpush.service.XGVipPushService: java.lang.Runnable i>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.XGVipPushService: void c()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.tencent.android.tpush.service.XGVipPushService
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.XGVipPushService: void onCreate()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.tencent.android.tpush.service.XGVipPushService: void d()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.XGVipPushService: void d()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.tencent.android.tpush.service.t: void <init>(com.tencent.android.tpush.service.XGVipPushService)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.t: void <init>(com.tencent.android.tpush.service.XGVipPushService)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.tencent.android.tpush.service.t: com.tencent.android.tpush.service.XGVipPushService a> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.t: void <init>(com.tencent.android.tpush.service.XGVipPushService)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.XGVipPushService: void d()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.tencent.bigdata.baseapi.base.util.CommonWorkingThread: boolean execute(java.lang.Runnable)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.util.CommonWorkingThread: boolean execute(java.lang.Runnable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.XGVipPushService: void d()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.tencent.android.tpush.service.t: void <init>(com.tencent.android.tpush.service.XGVipPushService)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.t: void <init>(com.tencent.android.tpush.service.XGVipPushService)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.tencent.android.tpush.service.t: com.tencent.android.tpush.service.XGVipPushService a> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.t: void <init>(com.tencent.android.tpush.service.XGVipPushService)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.XGVipPushService: void d()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.XGVipPushService: void onCreate()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.tencent.android.tpush.service.XGVipPushService: void c()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.XGVipPushService: void c()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.tencent.android.tpush.service.XGVipPushService: java.lang.Runnable i>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.XGVipPushService: void c()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r2, 60000L)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.VKRequest$1$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.vk.sdk.api.VKRequest$1$1: com.vk.sdk.api.VKRequest$1 this$1>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.VKRequest$1$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = $r1.<com.vk.sdk.api.VKRequest$1: com.vk.sdk.api.VKRequest this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.VKRequest$1$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.vk.sdk.api.VKRequest: void start()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.VKRequest: void start()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke r0.<com.vk.sdk.api.VKRequest: com.vk.sdk.api.httpClient.VKAbstractOperation getOperation()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.VKRequest: com.vk.sdk.api.httpClient.VKAbstractOperation getOperation()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.vk.sdk.api.VKRequest: com.vk.sdk.api.httpClient.VKAbstractOperation mLoadingOperation>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.VKRequest: com.vk.sdk.api.httpClient.VKAbstractOperation getOperation()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.VKRequest: void start()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.vk.sdk.api.VKRequest: com.vk.sdk.api.httpClient.VKAbstractOperation mLoadingOperation> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.VKRequest: void start()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.vk.sdk.api.VKRequest: com.vk.sdk.api.httpClient.VKAbstractOperation mLoadingOperation>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.VKRequest: void start()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.vk.sdk.api.httpClient.VKHttpClient: void enqueueOperation(com.vk.sdk.api.httpClient.VKAbstractOperation)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient: void enqueueOperation(com.vk.sdk.api.httpClient.VKAbstractOperation)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.vk.sdk.api.httpClient.VKHttpClient$2: void <init>(com.vk.sdk.api.httpClient.VKAbstractOperation)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$2: void <init>(com.vk.sdk.api.httpClient.VKAbstractOperation)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.vk.sdk.api.httpClient.VKHttpClient$2: com.vk.sdk.api.httpClient.VKAbstractOperation val$operation> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$2: void <init>(com.vk.sdk.api.httpClient.VKAbstractOperation)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient: void enqueueOperation(com.vk.sdk.api.httpClient.VKAbstractOperation)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.vk.sdk.api.httpClient.VKHttpClient$2: com.vk.sdk.api.httpClient.VKAbstractOperation val$operation>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.vk.sdk.api.httpClient.VKAbstractOperation: void start(java.util.concurrent.ExecutorService)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpOperation: void start(java.util.concurrent.ExecutorService)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = r0.<com.vk.sdk.api.httpClient.VKHttpOperation: com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest mUriRequest>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpOperation: void start(java.util.concurrent.ExecutorService)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = staticinvoke <com.vk.sdk.api.httpClient.VKHttpClient: com.vk.sdk.api.httpClient.VKHttpClient$VKHttpResponse execute(com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest)>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient: com.vk.sdk.api.httpClient.VKHttpClient$VKHttpResponse execute(com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r0.<com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: java.net.HttpURLConnection createConnection()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: java.net.HttpURLConnection createConnection()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = r0.<com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: java.net.URL methodUrl>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: java.net.HttpURLConnection createConnection()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke r1.<java.net.URL: java.net.URLConnection openConnection()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: java.net.HttpURLConnection createConnection()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.net.HttpURLConnection) $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: java.net.HttpURLConnection createConnection()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: java.net.HttpURLConnection connection> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: java.net.HttpURLConnection createConnection()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: void writeParams(java.io.OutputStream)>($r23)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: void writeParams(java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke r0.<com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: java.lang.String getQuery()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: java.lang.String getQuery()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return null
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: void writeParams(java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: java.net.HttpURLConnection createConnection()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: java.net.HttpURLConnection connection>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: java.net.HttpURLConnection createConnection()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r23 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: java.net.HttpURLConnection createConnection()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: void writeParams(java.io.OutputStream)>($r23)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: void writeParams(java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r5.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r1, "UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.vk.sdk.api.httpClient.VKHttpClient$VKHTTPRequest: void writeParams(java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r2.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r0) in method <com.tencent.android.tpush.common.f: java.lang.String a(java.io.Serializable)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r3.<java.io.ObjectInputStream: java.lang.Object readObject()>() in method <com.tencent.android.tpush.common.f: java.lang.Object b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.common.f: java.lang.Object b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r3.<java.io.ObjectInputStream: java.lang.Object readObject()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.common.f: java.lang.Object b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.data.RegisterEntity: com.tencent.android.tpush.data.RegisterEntity decode(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = (com.tencent.android.tpush.data.RegisterEntity) $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.data.RegisterEntity: com.tencent.android.tpush.data.RegisterEntity decode(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.cache.CacheManager: com.tencent.android.tpush.data.RegisterEntity getCurrentAppRegisterEntity(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.XGPushProvider: java.lang.String getType(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = staticinvoke <com.tencent.android.tpush.data.RegisterEntity: java.lang.String encode(com.tencent.android.tpush.data.RegisterEntity)>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.data.RegisterEntity: java.lang.String encode(com.tencent.android.tpush.data.RegisterEntity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = staticinvoke <com.tencent.android.tpush.common.f: java.lang.String a(java.io.Serializable)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.common.f: java.lang.String a(java.io.Serializable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r23.<java.io.BufferedWriter: void write(java.lang.String)>($r2) in method <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = interfaceinvoke $r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r1, 0) in method <com.tencent.android.tpush.stat.a.e: int a(android.content.Context,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.e: int a(android.content.Context,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = interfaceinvoke $r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r1, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.e: int a(android.content.Context,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.c: int f(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.c: int a(android.content.Context,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> <com.tencent.android.tpush.stat.a.c: int g> = $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.c: int a(android.content.Context,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = <com.tencent.android.tpush.stat.a.c: int g>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.c: int a(android.content.Context,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.event.b: boolean a(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("dts", $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.event.b: boolean a(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.event.b: java.lang.String d()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.event.b: java.lang.String d()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(com.tencent.android.tpush.stat.event.b,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3[0] = $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(com.tencent.android.tpush.stat.event.b,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(com.tencent.android.tpush.stat.event.b,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.tencent.android.tpush.stat.m: void b(java.util.List,com.tencent.android.tpush.stat.k)>($r5, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void b(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>($r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.tencent.android.tpush.stat.m: java.lang.StringBuilder e>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.tencent.android.tpush.stat.m: java.lang.StringBuilder e>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<com.tencent.android.tpush.stat.a.d: void d(java.lang.Object)>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.d: void d(java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.tencent.android.tpush.stat.a.d: void e(java.lang.Object)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.d: void e(java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.d: void e(java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.android.tpush.logging.TLogger: void i(java.lang.String,java.lang.String)>($r3, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.logging.TLogger: void i(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void i(java.lang.String,java.lang.String)>($r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void i(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>("INFO", $r0, $r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r7.<java.io.StringReader: void <init>(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r7, 256)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: java.util.List f>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: java.util.List f>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>($r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>($r1, $r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: java.util.List b> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: java.util.List b>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = (java.lang.String) $r15
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r23.<java.io.BufferedWriter: void write(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, "") in method <com.tencent.android.tpush.stat.a.e: java.lang.String a(android.content.Context,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.e: java.lang.String a(android.content.Context,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, "")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.e: java.lang.String a(android.content.Context,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.f: java.lang.String a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.f: java.lang.String a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.event.b: boolean a(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("ui", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.event.b: boolean a(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return 0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.event.b: java.lang.String d()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.event.b: java.lang.String d()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(com.tencent.android.tpush.stat.event.b,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3[0] = $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(com.tencent.android.tpush.stat.event.b,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(com.tencent.android.tpush.stat.event.b,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.tencent.android.tpush.stat.m: void b(java.util.List,com.tencent.android.tpush.stat.k)>($r5, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void b(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>($r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.tencent.android.tpush.stat.m: java.lang.StringBuilder e>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.tencent.android.tpush.stat.m: java.lang.StringBuilder e>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.m: void a(java.util.List,com.tencent.android.tpush.stat.k)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<com.tencent.android.tpush.stat.a.d: void d(java.lang.Object)>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.d: void d(java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.tencent.android.tpush.stat.a.d: void e(java.lang.Object)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.d: void e(java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.d: void e(java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.android.tpush.logging.TLogger: void i(java.lang.String,java.lang.String)>($r3, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.logging.TLogger: void i(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void i(java.lang.String,java.lang.String)>($r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void i(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>("INFO", $r0, $r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r7.<java.io.StringReader: void <init>(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r7, 256)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: java.util.List f>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: java.util.List f>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>($r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>($r1, $r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: java.util.List b> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: java.util.List b>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = (java.lang.String) $r15
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r23.<java.io.BufferedWriter: void write(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r3.<java.io.ObjectInputStream: java.lang.Object readObject()>() in method <com.tencent.android.tpush.common.f: java.lang.Object b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.common.f: java.lang.Object b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r3.<java.io.ObjectInputStream: java.lang.Object readObject()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.common.f: java.lang.Object b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.data.RegisterEntity: com.tencent.android.tpush.data.RegisterEntity decode(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = (com.tencent.android.tpush.data.RegisterEntity) $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.data.RegisterEntity: com.tencent.android.tpush.data.RegisterEntity decode(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.cache.CacheManager: com.tencent.android.tpush.data.RegisterEntity getCurrentAppRegisterEntity(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.XGPushProvider: java.lang.String getType(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.XGPushProvider: java.lang.String getType(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.XGPushProvider: java.lang.String getType(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.android.tpush.logging.TLogger: void i(java.lang.String,java.lang.String)>($r3, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.logging.TLogger: void i(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void i(java.lang.String,java.lang.String)>($r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void i(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>("INFO", $r0, $r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r7.<java.io.StringReader: void <init>(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r7, 256)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: java.util.List f>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: java.util.List f>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>($r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>($r1, $r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: java.util.List b> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: java.util.List b>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = (java.lang.String) $r15
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r23.<java.io.BufferedWriter: void write(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = interfaceinvoke $r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r1, 0) in method <com.tencent.android.tpush.service.util.SharePrefsUtil: int getInt(android.content.Context,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.util.SharePrefsUtil: int getInt(android.content.Context,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = interfaceinvoke $r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r1, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.util.SharePrefsUtil: int getInt(android.content.Context,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.p: boolean e(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.p: boolean e(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.p: boolean e(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.android.tpush.logging.TLogger: void d(java.lang.String,java.lang.String)>("PushServiceNetworkHandler", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.logging.TLogger: void d(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void d(java.lang.String,java.lang.String)>($r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void d(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>("DEBUG", $r0, $r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r7.<java.io.StringReader: void <init>(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r7, 256)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: java.util.List f>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: java.util.List f>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>($r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>($r1, $r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: java.util.List b> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: java.util.List b>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = (java.lang.String) $r15
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r23.<java.io.BufferedWriter: void write(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, "") in method <com.tencent.android.tpush.service.util.SharePrefsUtil: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.util.SharePrefsUtil: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, "")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.util.SharePrefsUtil: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.p: boolean e(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.p: boolean e(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tody:")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.p: boolean e(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.p: boolean e(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.p: boolean e(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.android.tpush.logging.TLogger: void d(java.lang.String,java.lang.String)>("PushServiceNetworkHandler", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.logging.TLogger: void d(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void d(java.lang.String,java.lang.String)>($r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void d(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>("DEBUG", $r0, $r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r7.<java.io.StringReader: void <init>(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r7, 256)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: java.util.List f>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: java.util.List f>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>($r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>($r1, $r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: java.util.List b> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: java.util.List b>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = (java.lang.String) $r15
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r23.<java.io.BufferedWriter: void write(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $l0 = interfaceinvoke $r3.<android.content.SharedPreferences: long getLong(java.lang.String,long)>($r1, 0L) in method <com.tencent.android.tpush.stat.a.e: long a(android.content.Context,java.lang.String,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.e: long a(android.content.Context,java.lang.String,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l0 = interfaceinvoke $r3.<android.content.SharedPreferences: long getLong(java.lang.String,long)>($r1, 0L)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.e: long a(android.content.Context,java.lang.String,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $l0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.v: boolean d(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.v: boolean d(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.v: boolean d(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<com.tencent.android.tpush.stat.a.d: void c(java.lang.Object)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.d: void c(java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.stat.a.d: void c(java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.android.tpush.logging.TLogger: void e(java.lang.String,java.lang.String)>($r3, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.logging.TLogger: void e(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void e(java.lang.String,java.lang.String)>($r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void e(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>("ERROR", $r0, $r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r7.<java.io.StringReader: void <init>(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r7, 256)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: java.util.List f>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: java.util.List f>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>($r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>($r1, $r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: java.util.List b> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: java.util.List b>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = (java.lang.String) $r15
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r23.<java.io.BufferedWriter: void write(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, null) in method <com.tencent.android.tpush.c.c: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.c: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.c: java.lang.String b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.c: java.lang.String c()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.d: java.lang.String e()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.d: com.tencent.android.tpush.c.a d()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <com.tencent.android.tpush.c.a: com.tencent.android.tpush.c.a a(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.a: com.tencent.android.tpush.c.a a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<org.json.JSONObject: void <init>(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.a: com.tencent.android.tpush.c.a a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("mid")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.a: com.tencent.android.tpush.c.a a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.tencent.android.tpush.c.a: void e(java.lang.String)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.a: void e(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.tencent.android.tpush.c.a: java.lang.String d> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.a: void e(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.a: com.tencent.android.tpush.c.a a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.d: com.tencent.android.tpush.c.a d()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.b: com.tencent.android.tpush.c.a b(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> <com.tencent.android.tpush.c.b: com.tencent.android.tpush.c.a a> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.b: com.tencent.android.tpush.c.a b(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.tencent.android.tpush.c.b: com.tencent.android.tpush.c.a a>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.b: com.tencent.android.tpush.c.a b(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.b: java.lang.String a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r2.<com.tencent.android.tpush.c.a: java.lang.String b()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.a: java.lang.String b()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = r0.<com.tencent.android.tpush.c.a: java.lang.String d>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.a: java.lang.String b()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.b: java.lang.String a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> <com.tencent.android.tpush.c.b: java.lang.String b> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.b: java.lang.String a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.tencent.android.tpush.c.b: java.lang.String b>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.c.b: java.lang.String a(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.p: com.tencent.android.tpush.service.protocol.f c(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1.<com.tencent.android.tpush.service.protocol.f: java.lang.String b> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.p: com.tencent.android.tpush.service.protocol.f c(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = $r1.<com.tencent.android.tpush.service.protocol.f: java.lang.String b>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.p: com.tencent.android.tpush.service.protocol.f c(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.p: com.tencent.android.tpush.service.protocol.f c(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", channel:")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.p: com.tencent.android.tpush.service.protocol.f c(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.p: com.tencent.android.tpush.service.protocol.f c(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.p: com.tencent.android.tpush.service.protocol.f c(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.android.tpush.logging.TLogger: void dd(java.lang.String,java.lang.String)>("PushServiceNetworkHandler", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.logging.TLogger: void dd(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void dd(java.lang.String,java.lang.String)>($r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void dd(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>("DEBUG", $r0, $r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r7.<java.io.StringReader: void <init>(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r7, 256)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: java.util.List f>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void dd(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.logging.TLogger: void dd(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.p: com.tencent.android.tpush.service.protocol.f c(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.p: void a(long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,com.tencent.android.tpush.service.d.a)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.android.tpush.logging.TLogger: void d(java.lang.String,java.lang.String)>("PushServiceNetworkHandler", "Register get tAd error, tAd not found")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.logging.TLogger: void d(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void d(java.lang.String,java.lang.String)>($r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void d(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>("DEBUG", $r0, $r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: java.util.List f>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void b(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>($r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>($r1, $r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: java.util.List b> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void <init>(com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger: void a(java.util.List,com.tencent.bigdata.baseapi.base.logger.TBaseLogger$WriteFileCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: java.util.List b>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = (java.lang.String) $r15
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.bigdata.baseapi.base.logger.TBaseLogger$2: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r23.<java.io.BufferedWriter: void write(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke r3.<java.io.OutputStream: void write(byte[],int,int)>(r1, 0, $i0) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader makeAdsSdkClassLoader(android.content.Context)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r11.<java.io.InputStream: int read(byte[])>(r1) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader makeAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader makeAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r11.<java.io.InputStream: int read(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader makeAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r3.<java.io.OutputStream: void write(byte[],int,int)>(r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i0) in method <com.tencent.android.tpush.service.channel.security.b: byte[] a(java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r6.<java.io.FilterInputStream: int read(byte[])>($r1) in method <com.tencent.android.tpush.service.channel.security.b: byte[] a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.channel.security.b: byte[] a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r6.<java.io.FilterInputStream: int read(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.tencent.android.tpush.service.channel.security.b: byte[] a(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r33.<java.io.Writer: void write(java.lang.String)>($r2) in method <com.appsflyer.AppsFlyerLib: void ˊ(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $d0 = virtualinvoke $r31.<android.location.Location: double getLongitude()>() in method <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $d0 = virtualinvoke $r31.<android.location.Location: double getLongitude()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r67.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lon", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("loc", $r67)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("deviceData", $r29)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>($r0, $r2, $r12, $r15, $z2, $i0, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>($r1, $r2, $r3, $r4, $z0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.appsflyer.AppsFlyerLib$e: java.util.Map ॱ> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r14.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.appsflyer.AppsFlyerLib$e: java.util.Map ॱ>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<org.json.JSONObject: void <init>(java.util.Map)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>($r2, $r9, $r8, $r6, $r10, null, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<com.appsflyer.AppsFlyerLib: void ˊ(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>($r6, $r2, $r3, $r4, $r5, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˊ(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r33.<java.io.Writer: void write(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $d0 = virtualinvoke $r31.<android.location.Location: double getLatitude()>() in method <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $d0 = virtualinvoke $r31.<android.location.Location: double getLatitude()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r67.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lat", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("loc", $r67)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("deviceData", $r29)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>($r0, $r2, $r12, $r15, $z2, $i0, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>($r1, $r2, $r3, $r4, $z0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.appsflyer.AppsFlyerLib$e: java.util.Map ॱ> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r14.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.appsflyer.AppsFlyerLib$e: java.util.Map ॱ>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<org.json.JSONObject: void <init>(java.util.Map)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>($r2, $r9, $r8, $r6, $r10, null, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<com.appsflyer.AppsFlyerLib: void ˊ(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>($r6, $r2, $r3, $r4, $r5, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˊ(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r33.<java.io.Writer: void write(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("AF_INSTALLATION", null) in method <com.appsflyer.p: java.lang.String ˋ(java.lang.ref.WeakReference)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.p: java.lang.String ˋ(java.lang.ref.WeakReference)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("AF_INSTALLATION", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.p: java.lang.String ˋ(java.lang.ref.WeakReference)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> <com.appsflyer.p: java.lang.String ॱ> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.p: java.lang.String ˋ(java.lang.ref.WeakReference)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <com.appsflyer.p: java.lang.String ˋ(java.lang.ref.WeakReference)>($r63)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.p: java.lang.String ˋ(java.lang.ref.WeakReference)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.appsflyer.p: java.lang.String ॱ>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.p: java.lang.String ˋ(java.lang.ref.WeakReference)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("uid", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>($r0, $r2, $r12, $r15, $z2, $i0, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>($r1, $r2, $r3, $r4, $z0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.appsflyer.AppsFlyerLib$e: java.util.Map ॱ> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r14.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.appsflyer.AppsFlyerLib$e: java.util.Map ॱ>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<org.json.JSONObject: void <init>(java.util.Map)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>($r2, $r9, $r8, $r6, $r10, null, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<com.appsflyer.AppsFlyerLib: void ˊ(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>($r6, $r2, $r3, $r4, $r5, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˊ(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r33.<java.io.Writer: void write(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - virtualinvoke $r1.<java.io.Reader: int read(char[])>($r2) in method <com.appsflyer.cache.CacheManager: com.appsflyer.cache.RequestCacheData ˎ(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: com.appsflyer.cache.RequestCacheData ˎ(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.Reader: int read(char[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: com.appsflyer.cache.RequestCacheData ˎ(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<com.appsflyer.cache.RequestCacheData: void <init>(char[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(char[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<java.lang.String: void <init>(char[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(char[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<java.util.Scanner: void <init>(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(char[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r2.<java.util.Scanner: java.lang.String nextLine()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(char[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>(5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(char[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(char[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.appsflyer.cache.RequestCacheData: java.lang.String ॱ> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: void <init>(char[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: com.appsflyer.cache.RequestCacheData ˎ(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: java.util.List getCachedRequests(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.CacheManager: java.util.List getCachedRequests(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$c: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$c: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$c: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = (com.appsflyer.cache.RequestCacheData) $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$c: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = virtualinvoke $r10.<com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = r0.<com.appsflyer.cache.RequestCacheData: java.lang.String ॱ>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.cache.RequestCacheData: java.lang.String getPostData()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$c: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>($r3, $r12, $r13, $r4, $r1, $r14, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<com.appsflyer.AppsFlyerLib: void ˊ(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>($r6, $r2, $r3, $r4, $r5, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˊ(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r33.<java.io.Writer: void write(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $z0 = interfaceinvoke $r6.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("is_stop_tracking_used", 0) in method <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = interfaceinvoke $r6.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("is_stop_tracking_used", 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("istu", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: java.util.Map ˎ(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,android.content.SharedPreferences,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>($r0, $r2, $r12, $r15, $z2, $i0, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>($r1, $r2, $r3, $r4, $z0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.appsflyer.AppsFlyerLib$e: java.util.Map ॱ> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void <init>(com.appsflyer.AppsFlyerLib,java.lang.String,java.util.Map,android.content.Context,boolean,int,byte)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r14.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.appsflyer.AppsFlyerLib$e: java.util.Map ॱ>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<org.json.JSONObject: void <init>(java.util.Map)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AFHelper: org.json.JSONObject convertToJsonObject(java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib$e: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>($r2, $r9, $r8, $r6, $r10, null, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˎ(com.appsflyer.AppsFlyerLib,java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<com.appsflyer.AppsFlyerLib: void ˊ(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>($r6, $r2, $r3, $r4, $r5, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsflyer.AppsFlyerLib: void ˊ(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r33.<java.io.Writer: void write(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Data flow solver took 15148 seconds. Maximum memory consumption: 226021 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication - Found 17 leaks
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/fd-with-parametermappings-edgeminer/DFResults-com.dts.freefireth.apk/<com.tencent.android.tpush.service.p: void a(long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,com.tencent.android.tpush.service.d.a)> (Der Dateiname ist zu lang)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:197)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:156)
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'SummaryStatistics'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Telemetry'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'Telemetry_sha256Hash_idx' for table 'Telemetry
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Callbacks'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallbackSummaries'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'CallbackSummaries_sha256Hash_idx' for table 'CallbackSummaries
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'AppSizes'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'AppSizes_sha256Hash_idx' for table 'AppSizes
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallgraphSizes'
