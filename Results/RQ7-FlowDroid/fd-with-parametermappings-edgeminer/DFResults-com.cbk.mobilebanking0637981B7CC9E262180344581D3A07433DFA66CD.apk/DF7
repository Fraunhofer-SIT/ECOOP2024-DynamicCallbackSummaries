Source: $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1)
$i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1) in <util.h.xy.ct.my: int read(byte[],int,int)>
Sink: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r0, 0, $i0) in <util.h.xy.eh.a: void ˋ(java.io.InputStream,java.io.OutputStream)>

<util.h.xy.ct.my: int read(byte[],int,int)>: $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1)
<util.h.xy.ct.my: int read(byte[],int,int)>: throw $r8
<util.h.xy.ct.rz: int read(byte[],int,int)>: throw $r5
<util.h.xy.eh.a: int ˊ(java.io.InputStream,byte[],int,int)>: return $i3
<util.h.xy.eh.a: int ˎ(java.io.InputStream,byte[])>: $r1 := @parameter0: java.io.InputStream
<util.h.xy.ct.md: byte[] ˎ(util.h.xy.ct.my,byte[][])>: $r2 = $r1[$i1]
<util.h.xy.ct.md: byte[] ˎ(util.h.xy.ct.my,byte[][])>: $r0 := @parameter0: util.h.xy.ct.my
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,util.h.xy.ct.my,byte[][])>: $i1 := @parameter0: int
<util.h.xy.ct.rg: util.h.xy.ct.rb ˊ()>: $r11 = r0.<util.h.xy.ct.rg: byte[][] ˏ>
<util.h.xy.ct.rg: util.h.xy.ct.rb ˊ()>: throw $r25
<util.h.xy.ct.mn: int read(byte[],int,int)>: $r4 = r0.<util.h.xy.ct.mn: util.h.xy.ct.rg ˏ>
<util.h.xy.ct.mn: int read(byte[],int,int)>: return -1
<util.h.xy.ct.mn: int read(byte[],int,int)>: $r2 = r0.<util.h.xy.ct.mn: java.io.InputStream ˎ>
<util.h.xy.ct.mn: int read(byte[],int,int)>: r0 := @this: util.h.xy.ct.mn
<util.h.xy.eh.a: void ˋ(java.io.InputStream,java.io.OutputStream)>: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r0, 0, $i1)
<util.h.xy.eh.a: void ˋ(java.io.InputStream,java.io.OutputStream)>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r0, 0, $i0)
