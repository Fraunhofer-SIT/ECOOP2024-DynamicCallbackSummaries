Source: specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>($r1)
specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>($r1) in <util.h.xy.ct.md: void <init>(java.io.InputStream,int,boolean)>
Sink: virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r1) in <util.h.xy.ct.mg: void ˎ(byte[])>

<util.h.xy.ct.md: void <init>(java.io.InputStream,int,boolean)>: specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>($r1)
<util.h.xy.ct.md: void <init>(java.io.InputStream,int,boolean)>: r0 := @this: util.h.xy.ct.md
<util.h.xy.ct.md: void <init>(byte[],boolean)>: specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2)
<util.h.xy.ct.md: void <init>(byte[],boolean)>: r0 := @this: util.h.xy.ct.md
<util.h.xy.ct.mz: void <init>(byte[])>: r0 := @this: util.h.xy.ct.mz
<util.h.xy.ct.z: void ͺ()>: $r2 = r0.<util.h.xy.ct.z: byte[] ᐝ>
<util.h.xy.ct.z: void ͺ()>: throw $r5
<util.h.xy.ct.z: util.h.xy.ct.mf ι()>: throw $r4
<util.h.xy.ct.mt: void ˎ(util.h.xy.ct.rb)>: virtualinvoke $r3.<util.h.xy.ct.mf: void ˊ(util.h.xy.ct.mg)>(r0)
<util.h.xy.ct.z: void ˊ(util.h.xy.ct.mg)>: $r3 = r0.<util.h.xy.ct.z: byte[] ᐝ>
<util.h.xy.ct.z: void ˊ(util.h.xy.ct.mg)>: virtualinvoke $r2.<util.h.xy.ct.mg: void ˎ(int,byte[])>(58, $r3)
<util.h.xy.ct.mg: void ˎ(int,byte[])>: virtualinvoke r0.<util.h.xy.ct.mg: void ˎ(byte[])>($r1)
<util.h.xy.ct.mg: void ˎ(byte[])>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r1)
