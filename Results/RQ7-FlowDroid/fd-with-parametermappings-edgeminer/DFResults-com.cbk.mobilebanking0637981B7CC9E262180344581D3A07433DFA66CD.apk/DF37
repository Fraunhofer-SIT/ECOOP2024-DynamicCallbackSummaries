Source: specialinvoke $r12.<util.h.xy.ct.my: void <init>(java.io.InputStream,int)>(r0, $i2)
specialinvoke $r12.<util.h.xy.ct.my: void <init>(java.io.InputStream,int)>(r0, $i2) in <util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,int,int)>
Sink: virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r1) in <util.h.xy.ct.mg: void ˎ(byte[])>

<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,int,int)>: specialinvoke $r12.<util.h.xy.ct.my: void <init>(java.io.InputStream,int)>(r0, $i2)
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,int,int)>: $r11 = r0.<util.h.xy.ct.md: byte[][] ˊ>
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,int,int)>: $r2 = staticinvoke <util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,util.h.xy.ct.my,byte[][])>($i1, $r12, $r11)
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,util.h.xy.ct.my,byte[][])>: return $r12
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,int,int)>: $r11 = r0.<util.h.xy.ct.md: byte[][] ˊ>
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,int,int)>: return $r2
<util.h.xy.ct.md: util.h.xy.ct.mf ˊ()>: return $r1
<util.h.xy.ct.md: util.h.xy.ct.d ˋ()>: $r2 = virtualinvoke r0.<util.h.xy.ct.md: util.h.xy.ct.mf ˊ()>()
<util.h.xy.ct.md: util.h.xy.ct.mf ˊ()>: $r1 = virtualinvoke r0.<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,int,int)>($i1, $i2, $i0)
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,int,int)>: $r11 = r0.<util.h.xy.ct.md: byte[][] ˊ>
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,int,int)>: $r2 = staticinvoke <util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,util.h.xy.ct.my,byte[][])>($i1, $r12, $r11)
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,util.h.xy.ct.my,byte[][])>: $r3 = staticinvoke <util.h.xy.ct.md: byte[] ˎ(util.h.xy.ct.my,byte[][])>($r0, $r1)
<util.h.xy.ct.md: byte[] ˎ(util.h.xy.ct.my,byte[][])>: $r2 = $r1[$i1]
<util.h.xy.ct.md: byte[] ˎ(util.h.xy.ct.my,byte[][])>: return $r2
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,util.h.xy.ct.my,byte[][])>: $r3 = staticinvoke <util.h.xy.ct.md: byte[] ˎ(util.h.xy.ct.my,byte[][])>($r0, $r1)
<util.h.xy.ct.md: byte[] ˎ(util.h.xy.ct.my,byte[][])>: $r2 = virtualinvoke $r0.<util.h.xy.ct.my: byte[] ˎ()>()
<util.h.xy.ct.my: byte[] ˎ()>: $r1 = <util.h.xy.ct.my: byte[] ˏ>
<util.h.xy.ct.my: byte[] ˎ()>: return $r1
<util.h.xy.ct.md: byte[] ˎ(util.h.xy.ct.my,byte[][])>: return $r2
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,util.h.xy.ct.my,byte[][])>: return $r4
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,int,int)>: return $r2
<util.h.xy.ct.md: util.h.xy.ct.mf ˊ()>: throw $r19
<util.h.xy.ct.md: util.h.xy.ct.d ˋ()>: return $r1
<util.h.xy.ct.md: util.h.xy.ct.d ˋ(util.h.xy.ct.my)>: return $r1
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,int,int)>: return $r18
<util.h.xy.ct.md: util.h.xy.ct.mf ˊ()>: throw $r19
<util.h.xy.ct.md: util.h.xy.ct.d ˋ()>: $r2 = virtualinvoke r0.<util.h.xy.ct.md: util.h.xy.ct.mf ˊ()>()
<util.h.xy.ct.md: util.h.xy.ct.mf ˊ()>: $r1 = virtualinvoke $r10.<util.h.xy.ct.ml: util.h.xy.ct.mf ͺ()>()
<util.h.xy.ct.ml: util.h.xy.ct.mf ͺ()>: $r2 = virtualinvoke $r3.<util.h.xy.ct.rg: util.h.xy.ct.d ˋ()>()
<util.h.xy.ct.rg: util.h.xy.ct.d ˋ()>: $r4 = interfaceinvoke $r3.<util.h.xy.ct.mx: util.h.xy.ct.mf ͺ()>()
<util.h.xy.ct.rq: util.h.xy.ct.mf ͺ()>: $r2 = virtualinvoke $r3.<util.h.xy.ct.my: byte[] ˎ()>()
<util.h.xy.ct.my: byte[] ˎ()>: $r1 = <util.h.xy.ct.my: byte[] ˏ>
<util.h.xy.ct.my: byte[] ˎ()>: return $r1
<util.h.xy.ct.rq: util.h.xy.ct.mf ͺ()>: specialinvoke $r1.<util.h.xy.ct.r: void <init>(byte[])>($r2)
<util.h.xy.ct.r: void <init>(byte[])>: return
<util.h.xy.ct.rq: util.h.xy.ct.mf ͺ()>: $r2 = virtualinvoke $r3.<util.h.xy.ct.my: byte[] ˎ()>()
<util.h.xy.ct.my: byte[] ˎ()>: $r1 = <util.h.xy.ct.my: byte[] ˏ>
<util.h.xy.ct.rg: util.h.xy.ct.d ˋ()>: $r4 = interfaceinvoke $r3.<util.h.xy.ct.mx: util.h.xy.ct.mf ͺ()>()
<util.h.xy.ct.ml: util.h.xy.ct.mf ͺ()>: $r2 = virtualinvoke $r3.<util.h.xy.ct.rg: util.h.xy.ct.d ˋ()>()
<util.h.xy.ct.rg: util.h.xy.ct.d ˋ()>: $r2 = virtualinvoke r0.<util.h.xy.ct.rg: util.h.xy.ct.rb ˊ()>()
<util.h.xy.ct.rg: util.h.xy.ct.rb ˊ()>: $r12 = staticinvoke <util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,util.h.xy.ct.my,byte[][])>($i1, $r23, $r11)
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,util.h.xy.ct.my,byte[][])>: $r3 = virtualinvoke $r0.<util.h.xy.ct.my: byte[] ˎ()>()
<util.h.xy.ct.my: byte[] ˎ()>: $r1 = <util.h.xy.ct.my: byte[] ˏ>
<util.h.xy.ct.my: byte[] ˎ()>: return $r1
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,util.h.xy.ct.my,byte[][])>: specialinvoke $r30.<util.h.xy.ct.rs: void <init>(byte[])>($r3)
<util.h.xy.ct.rs: void <init>(byte[])>: r0.<util.h.xy.ct.rs: byte[] ᐝ> = $r1
<util.h.xy.ct.rs: void <init>(byte[])>: return
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,util.h.xy.ct.my,byte[][])>: return $r30
<util.h.xy.ct.rg: util.h.xy.ct.rb ˊ()>: return $r12
<util.h.xy.ct.rg: util.h.xy.ct.d ˋ()>: $r4 = interfaceinvoke $r2.<util.h.xy.ct.rb: util.h.xy.ct.mf ʻ()>()
<util.h.xy.ct.mf: util.h.xy.ct.mf ʻ()>: return r0
<util.h.xy.ct.rg: util.h.xy.ct.d ˋ()>: virtualinvoke $r1.<util.h.xy.ct.d: void ᐝ(util.h.xy.ct.rb)>($r4)
<util.h.xy.ct.d: void ᐝ(util.h.xy.ct.rb)>: virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r1)
<util.h.xy.ct.d: void ᐝ(util.h.xy.ct.rb)>: $r2 = r0.<util.h.xy.ct.d: java.util.Vector ˊ>
<util.h.xy.ct.d: void ᐝ(util.h.xy.ct.rb)>: return
<util.h.xy.ct.rg: util.h.xy.ct.d ˋ()>: return $r1
<util.h.xy.ct.ml: util.h.xy.ct.mf ͺ()>: specialinvoke $r1.<util.h.xy.ct.rj: void <init>(int,util.h.xy.ct.d)>($i0, $r2)
<util.h.xy.ct.rj: void <init>(int,util.h.xy.ct.d)>: $r1 = staticinvoke <util.h.xy.ct.rj: byte[] ˋ(util.h.xy.ct.d)>($r2)
<util.h.xy.ct.rj: byte[] ˋ(util.h.xy.ct.d)>: $r3 = virtualinvoke $r0.<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>($i0)
<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>: return $r3
<util.h.xy.ct.rj: byte[] ˋ(util.h.xy.ct.d)>: $r3 = virtualinvoke $r0.<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>($i0)
<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>: $r1 = r0.<util.h.xy.ct.d: java.util.Vector ˊ>
<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>: $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i0)
<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>: $r3 = (util.h.xy.ct.rb) $r2
<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>: return $r3
<util.h.xy.ct.rj: byte[] ˋ(util.h.xy.ct.d)>: $r4 = (util.h.xy.ct.re) $r3
<util.h.xy.ct.rj: byte[] ˋ(util.h.xy.ct.d)>: $r1 = virtualinvoke $r4.<util.h.xy.ct.re: byte[] ᐝ(java.lang.String)>($r5)
<util.h.xy.ct.re: byte[] ᐝ(java.lang.String)>: virtualinvoke $r6.<util.h.xy.ct.mg: void ˎ(util.h.xy.ct.rb)>(r0)
<util.h.xy.ct.mt: void ˎ(util.h.xy.ct.rb)>: $r3 = interfaceinvoke $r1.<util.h.xy.ct.rb: util.h.xy.ct.mf ʻ()>()
<util.h.xy.ct.mf: util.h.xy.ct.mf ʻ()>: return r0
<util.h.xy.ct.mt: void ˎ(util.h.xy.ct.rb)>: virtualinvoke $r3.<util.h.xy.ct.mf: void ˊ(util.h.xy.ct.mg)>(r0)
<util.h.xy.ct.rs: void ˊ(util.h.xy.ct.mg)>: $r2 = r0.<util.h.xy.ct.rs: byte[] ᐝ>
<util.h.xy.ct.rs: void ˊ(util.h.xy.ct.mg)>: virtualinvoke $r1.<util.h.xy.ct.mg: void ˎ(int,byte[])>(19, $r2)
<util.h.xy.ct.mg: void ˎ(int,byte[])>: virtualinvoke r0.<util.h.xy.ct.mg: void ˎ(byte[])>($r1)
<util.h.xy.ct.mg: void ˎ(byte[])>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r1)
