    public static boolean llIIlIlIIl(android.content.res.AssetManager, java.lang.String, java.lang.String)
    {
        byte[] $r21;
        byte $b2;
        java.lang.reflect.Method $r19;
        boolean $z0;
        java.lang.Exception $r1, $r2, $r3, $r4, $r5, $r6;
        float $f0;
        java.lang.StringBuilder $r24;
        java.lang.Throwable $r22, $r23;
        java.lang.Object[] $r15;
        java.lang.String[] $r11;
        android.content.res.AssetManager $r7;
        int $i0, $i1;
        java.lang.String $r0, $r8, $r9, $r12, $r13;
        java.lang.Class[] $r18;
        java.io.FileOutputStream $r25;
        char $c3;
        java.io.File $r10, $r14;
        java.lang.Object $r16;
        java.lang.Class $r17;
        java.io.InputStream $r20;

        $r7 := @parameter0: android.content.res.AssetManager;

        $r8 := @parameter1: java.lang.String;

        $r9 := @parameter2: java.lang.String;

        $r14 = new java.io.File;

        $r10 = $r14;

     label01:
        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<android.content.res.AssetManager: java.lang.String[] list(java.lang.String)>($r8);

        $i0 = lengthof $r11;

     label02:
        if $i0 <= 0 goto label03;

        $z0 = 0;

        goto label04;

     label03:
        $z0 = 1;

     label04:
        if $z0 == 1 goto label18;

        $i0 = <com.microblink.secured.IIIIIlIIII: int Purposes>;

        $i0 = $i0 + 105;

        $i0 = $i0 % 128;

        <com.microblink.secured.IIIIIlIIII: int OASummary> = $i0;

     label05:
        virtualinvoke $r10.<java.io.File: boolean mkdirs()>();

        $i0 = lengthof $r11;

     label06:
        $i1 = <com.microblink.secured.IIIIIlIIII: int Purposes>;

        $i1 = $i1 + 13;

        $i1 = $i1 % 128;

        <com.microblink.secured.IIIIIlIIII: int OASummary> = $i1;

        $i1 = 0;

     label07:
        if $i1 >= $i0 goto label60;

     label08:
        $r12 = $r11[$i1];

     label09:
        $r24 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

     label11:
        $r13 = <java.io.File: java.lang.String separator>;

     label12:
        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r24.<java.lang.Object: java.lang.String toString()>();

     label13:
        $r24 = new java.lang.StringBuilder;

     label14:
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label15:
        $r0 = <java.io.File: java.lang.String separator>;

     label16:
        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r24.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <com.microblink.secured.IIIIIlIIII: boolean llIIlIlIIl(android.content.res.AssetManager,java.lang.String,java.lang.String)>($r7, $r13, $r12);

     label17:
        $i1 = $i1 + 1;

        goto label07;

     label18:
        $r14 = virtualinvoke $r10.<java.io.File: java.io.File getParentFile()>();

     label19:
        if $r14 == null goto label25;

     label20:
        $z0 = virtualinvoke $r14.<java.io.File: boolean exists()>();

     label21:
        if $z0 != 0 goto label22;

        $b2 = 53;

        goto label23;

     label22:
        $b2 = 30;

     label23:
        if $b2 == 30 goto label25;

     label24:
        virtualinvoke $r14.<java.io.File: boolean mkdirs()>();

     label25:
        $z0 = virtualinvoke $r10.<java.io.File: boolean exists()>();

     label26:
        if $z0 != 0 goto label60;

     label27:
        $r9 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

     label28:
        $r15 = newarray (java.lang.Object)[0];

     label29:
        staticinvoke <com.microblink.util.Log: void d(java.lang.Object,java.lang.String,java.lang.Object[])>("Copy", $r9, $r15);

     label30:
        $r15 = newarray (java.lang.Object)[2];

        $r15[1] = $r8;

        $r15[0] = $r7;

        $i0 = staticinvoke <android.graphics.ImageFormat: int getBitsPerPixel(int)>(0);

     label31:
        $i0 = -1 - $i0;

     label32:
        $i1 = staticinvoke <android.view.ViewConfiguration: int getKeyRepeatTimeout()>();

     label33:
        $i1 = $i1 >> 16;

        $i1 = $i1 + 39944;

        $c3 = (char) $i1;

     label34:
        $f0 = staticinvoke <android.view.ViewConfiguration: float getScrollFriction()>();

     label35:
        $b2 = $f0 cmpl 0.0F;

        $i1 = (int) $b2;

        $i1 = $i1 + 12;

     label36:
        $r16 = staticinvoke <o.AlertDialog$Builder: java.lang.Object Purposes(int,char,int)>($i0, $c3, $i1);

        $r17 = (java.lang.Class) $r16;

        $r18 = newarray (java.lang.Class)[2];

        $r18[0] = class "Landroid/content/res/AssetManager;";

        $r18[1] = class "Ljava/lang/String;";

        $r19 = virtualinvoke $r17.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("OASummary", $r18);

        $r16 = virtualinvoke $r19.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r15);

        $r20 = (java.io.InputStream) $r16;

     label37:
        $r25 = new java.io.FileOutputStream;

     label38:
        $r8 = virtualinvoke $r10.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r25.<java.io.FileOutputStream: void <init>(java.lang.String)>($r8);

     label39:
        $r21 = newarray (byte)[4096];

     label40:
        $i0 = virtualinvoke $r20.<java.io.InputStream: int read(byte[])>($r21);

     label41:
        if $i0 == -1 goto label42;

        $z0 = 0;

        goto label43;

     label42:
        $z0 = 1;

     label43:
        if $z0 == 1 goto label46;

     label44:
        virtualinvoke $r25.<java.io.OutputStream: void write(byte[],int,int)>($r21, 0, $i0);

     label45:
        goto label40;

     label46:
        virtualinvoke $r25.<java.io.OutputStream: void flush()>();

        virtualinvoke $r25.<java.io.OutputStream: void close()>();

        virtualinvoke $r20.<java.io.InputStream: void close()>();

     label47:
        $i0 = <com.microblink.secured.IIIIIlIIII: int OASummary>;

        $i0 = $i0 + 3;

        $i0 = $i0 % 128;

        <com.microblink.secured.IIIIIlIIII: int Purposes> = $i0;

        return 1;

     label48:
        $r22 := @caughtexception;

     label49:
        $r23 = virtualinvoke $r22.<java.lang.Throwable: java.lang.Throwable getCause()>();

     label50:
        if $r23 == null goto label52;

     label51:
        throw $r23;

     label52:
        throw $r22;

     label53:
        $r15 = newarray (java.lang.Object)[0];

        staticinvoke <com.microblink.util.Log: void d(java.lang.Object,java.lang.String,java.lang.Object[])>(class "Lcom/microblink/secured/IIIIIlIIII;", "File copy failed!", $r15);

        return 0;

     label54:
        $r1 := @caughtexception;

        goto label53;

     label55:
        $r2 := @caughtexception;

        goto label53;

     label56:
        $r3 := @caughtexception;

        goto label53;

     label57:
        $r4 := @caughtexception;

        goto label53;

     label58:
        $r5 := @caughtexception;

        goto label53;

     label59:
        $r6 := @caughtexception;

        goto label53;

     label60:
        return 1;

        catch java.lang.Exception from label01 to label02 with label54;
        catch java.lang.Exception from label05 to label06 with label55;
        catch java.lang.Exception from label08 to label09 with label56;
        catch java.lang.Exception from label10 to label11 with label56;
        catch java.lang.Exception from label12 to label13 with label56;
        catch java.lang.Exception from label14 to label15 with label56;
        catch java.lang.Exception from label16 to label17 with label56;
        catch java.lang.Exception from label18 to label19 with label57;
        catch java.lang.Exception from label20 to label21 with label57;
        catch java.lang.Exception from label24 to label26 with label57;
        catch java.lang.Exception from label27 to label28 with label57;
        catch java.lang.Exception from label29 to label30 with label57;
        catch java.lang.Throwable from label30 to label31 with label48;
        catch java.lang.Throwable from label32 to label33 with label48;
        catch java.lang.Throwable from label34 to label35 with label48;
        catch java.lang.Throwable from label36 to label37 with label48;
        catch java.lang.Exception from label38 to label39 with label58;
        catch java.lang.Exception from label40 to label41 with label58;
        catch java.lang.Exception from label44 to label45 with label58;
        catch java.lang.Exception from label46 to label47 with label58;
        catch java.lang.Exception from label49 to label50 with label59;
        catch java.lang.Exception from label51 to label53 with label59;
    }
