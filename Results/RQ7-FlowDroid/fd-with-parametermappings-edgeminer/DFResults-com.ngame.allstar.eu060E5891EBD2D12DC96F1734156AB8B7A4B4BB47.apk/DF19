Source: $i0 = virtualinvoke $r15.<java.io.ByteArrayInputStream: int read(byte[])>($r4)
$i0 = virtualinvoke $r15.<java.io.ByteArrayInputStream: int read(byte[])>($r4) in <com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>
Sink: virtualinvoke $r2.<com.centauri.comm.log.util.compressor.GzipCompressorOutputStream: void write(byte[],int,int)>($r1, 0, $i0) in <com.centauri.comm.log.processor.CTILogCompressor: byte[] compress(byte[])>

<com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>: $i0 = virtualinvoke $r15.<java.io.ByteArrayInputStream: int read(byte[])>($r4)
<com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>: virtualinvoke $r14.<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>($r4, 0, $i0)
<com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>: specialinvoke $r14.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r13)
<com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>: $r4 = virtualinvoke $r13.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
<com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>: $r4 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>($r4, 2)
<com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>: specialinvoke $r16.<java.lang.String: void <init>(byte[])>($r4)
<com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>: $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r16, "UTF-8")
<com.centauri.oversea.newnetwork.model.CTIDataReportReq: java.lang.String encodeGzip(java.lang.String)>: return $r1
<com.centauri.oversea.newnetwork.model.CTIDataReportReq: void constructParam()>: virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
<com.centauri.oversea.newnetwork.model.CTIDataReportReq: void constructParam()>: $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
<com.centauri.oversea.newnetwork.model.CTIDataReportReq: void constructParam()>: staticinvoke <com.centauri.comm.CTILog: void d(java.lang.String,java.lang.String)>("DataReport", $r1)
<com.centauri.comm.CTILog: void d(java.lang.String,java.lang.String)>: $r0 = staticinvoke <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>($r0, $r1)
<com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>: virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0)
<com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>: $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
<com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>: return $r2
<com.centauri.comm.CTILog: void d(java.lang.String,java.lang.String)>: staticinvoke <com.centauri.comm.CTILog: void writeLog(java.lang.String)>($r0)
<com.centauri.comm.CTILog: void writeLog(java.lang.String)>: staticinvoke <com.centauri.comm.CTILog: void write(java.lang.String)>($r0)
<com.centauri.comm.CTILog: void write(java.lang.String)>: virtualinvoke $r1.<com.centauri.comm.log.internal.CTILogger: void write(java.lang.String)>($r0)
<com.centauri.comm.log.internal.CTILogger: void write(java.lang.String)>: virtualinvoke $r2.<com.centauri.comm.log.internal.CTILogAppender: void append(java.lang.String)>($r1)
<com.centauri.comm.log.internal.CTILogAppender: void append(java.lang.String)>: $r2 = specialinvoke r0.<com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>($r1)
<com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
<com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>: $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
<com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>: $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>()
<com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>: $r4 = virtualinvoke $r5.<com.centauri.comm.log.processor.CTILogCompressor: byte[] compress(byte[])>($r3)
<com.centauri.comm.log.processor.CTILogCompressor: byte[] compress(byte[])>: virtualinvoke $r2.<com.centauri.comm.log.util.compressor.GzipCompressorOutputStream: void write(byte[],int,int)>($r1, 0, $i0)
