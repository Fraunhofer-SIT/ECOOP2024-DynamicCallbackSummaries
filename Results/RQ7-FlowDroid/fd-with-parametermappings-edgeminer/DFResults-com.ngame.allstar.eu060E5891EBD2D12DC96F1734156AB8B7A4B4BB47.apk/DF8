Source: $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r3, "")
$r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r3, "") in <com.centauri.oversea.newnetwork.http.CTIIPManager: java.lang.String readSPFile(android.content.Context)>
Sink: virtualinvoke $r2.<com.centauri.comm.log.util.compressor.GzipCompressorOutputStream: void write(byte[],int,int)>($r1, 0, $i0) in <com.centauri.comm.log.processor.CTILogCompressor: byte[] compress(byte[])>

<com.centauri.oversea.newnetwork.http.CTIIPManager: java.lang.String readSPFile(android.content.Context)>: $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r3, "")
<com.centauri.oversea.newnetwork.http.CTIIPManager: java.lang.String readSPFile(android.content.Context)>: $r4 = $r3
<com.centauri.oversea.newnetwork.http.CTIIPManager: java.lang.String readSPFile(android.content.Context)>: $r8 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(";")
<com.centauri.oversea.newnetwork.http.CTIIPManager: java.lang.String readSPFile(android.content.Context)>: $r3 = $r8[$i4]
<com.centauri.oversea.newnetwork.http.CTIIPManager: java.lang.String readSPFile(android.content.Context)>: staticinvoke <com.centauri.comm.CTILog: void i(java.lang.String,java.lang.String)>("APIPManager", $r3)
<com.centauri.comm.CTILog: void i(java.lang.String,java.lang.String)>: $r0 = staticinvoke <com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>($r0, $r1)
<com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>: virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0)
<com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>: $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
<com.centauri.comm.CTILog: java.lang.String composeLogMsg(java.lang.String,java.lang.String)>: return $r2
<com.centauri.comm.CTILog: void i(java.lang.String,java.lang.String)>: staticinvoke <com.centauri.comm.CTILog: void writeLog(java.lang.String)>($r0)
<com.centauri.comm.CTILog: void writeLog(java.lang.String)>: staticinvoke <com.centauri.comm.CTILog: void write(java.lang.String)>($r0)
<com.centauri.comm.CTILog: void write(java.lang.String)>: virtualinvoke $r1.<com.centauri.comm.log.internal.CTILogger: void write(java.lang.String)>($r0)
<com.centauri.comm.log.internal.CTILogger: void write(java.lang.String)>: virtualinvoke $r2.<com.centauri.comm.log.internal.CTILogAppender: void append(java.lang.String)>($r1)
<com.centauri.comm.log.internal.CTILogAppender: void append(java.lang.String)>: $r2 = specialinvoke r0.<com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>($r1)
<com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
<com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>: $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
<com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>: $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>()
<com.centauri.comm.log.internal.CTILogAppender: byte[] process(java.lang.String)>: $r4 = virtualinvoke $r5.<com.centauri.comm.log.processor.CTILogCompressor: byte[] compress(byte[])>($r3)
<com.centauri.comm.log.processor.CTILogCompressor: byte[] compress(byte[])>: virtualinvoke $r2.<com.centauri.comm.log.util.compressor.GzipCompressorOutputStream: void write(byte[],int,int)>($r1, 0, $i0)
