    private java.io.File extractFile(java.lang.String, java.lang.String, java.io.File) throws java.io.IOException
    {
        java.lang.Throwable r5, $r11;
        byte[] r4;
        com.badlogic.gdx.utils.GdxRuntimeException $r15;
        int $i0;
        java.lang.String $r1, $r2, r6, $r7;
        boolean $z0;
        java.io.FileOutputStream $r13;
        java.io.FileInputStream $r12;
        java.io.File $r3, $r9;
        com.badlogic.gdx.utils.SharedLibraryLoader r0;
        java.lang.StringBuilder $r10, $r14;
        java.io.InputStream $r8;

        r0 := @this: com.badlogic.gdx.utils.SharedLibraryLoader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.io.File;

        r6 = null;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label03;

        $r12 = new java.io.FileInputStream;

     label01:
        specialinvoke $r12.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

        $r7 = virtualinvoke r0.<com.badlogic.gdx.utils.SharedLibraryLoader: java.lang.String crc(java.io.InputStream)>($r12);

     label02:
        r6 = $r7;

     label03:
        if r6 == null goto label04;

        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label16;

     label04:
        $r8 = specialinvoke r0.<com.badlogic.gdx.utils.SharedLibraryLoader: java.io.InputStream readFile(java.lang.String)>($r1);

        $r9 = virtualinvoke $r3.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r9.<java.io.File: boolean mkdirs()>();

     label05:
        $r13 = new java.io.FileOutputStream;

     label06:
        specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);

     label07:
        r4 = newarray (byte)[4096];

     label08:
        $i0 = virtualinvoke $r8.<java.io.InputStream: int read(byte[])>(r4);

     label09:
        if $i0 != -1 goto label12;

     label10:
        virtualinvoke $r8.<java.io.InputStream: void close()>();

        virtualinvoke $r13.<java.io.FileOutputStream: void close()>();

     label11:
        return $r3;

     label12:
        virtualinvoke $r13.<java.io.FileOutputStream: void write(byte[],int,int)>(r4, 0, $i0);

     label13:
        goto label08;

     label14:
        r5 := @caughtexception;

        $r15 = new com.badlogic.gdx.utils.GdxRuntimeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error extracting file: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nTo: ");

        $r1 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<com.badlogic.gdx.utils.GdxRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r1, r5);

        throw $r15;

     label15:
        $r11 := @caughtexception;

        goto label03;

     label16:
        return $r3;

        catch java.io.FileNotFoundException from label01 to label02 with label15;
        catch java.io.IOException from label04 to label05 with label14;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.io.IOException from label08 to label09 with label14;
        catch java.io.IOException from label10 to label11 with label14;
        catch java.io.IOException from label12 to label13 with label14;
    }
