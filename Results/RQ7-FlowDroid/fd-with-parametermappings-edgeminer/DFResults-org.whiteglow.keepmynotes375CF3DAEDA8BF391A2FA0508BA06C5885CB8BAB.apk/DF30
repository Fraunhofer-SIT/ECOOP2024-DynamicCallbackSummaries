Source: $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2)
$i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2) in <f.i.b.a.e.g: long a(java.io.InputStream,java.io.OutputStream)>
Sink: interfaceinvoke $r1.<f.i.b.a.e.b0: void writeTo(java.io.OutputStream)>($r4) in <f.i.b.a.c.g: void a(f.i.b.a.e.b0,java.io.OutputStream)>

<f.i.b.a.e.g: long a(java.io.InputStream,java.io.OutputStream)>: $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2)
<f.i.b.a.e.g: long a(java.io.InputStream,java.io.OutputStream)>: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
<f.i.b.a.e.g: long a(java.io.InputStream,java.io.OutputStream)>: return $l1
<f.i.b.a.e.o: void c(java.io.InputStream,java.io.OutputStream,boolean)>: return
<f.i.b.a.c.b: void writeTo(java.io.OutputStream)>: r0 := @this: f.i.b.a.c.b
<f.i.b.a.c.g: void a(f.i.b.a.e.b0,java.io.OutputStream)>: specialinvoke $r4.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r2)
<f.i.b.a.c.g: void a(f.i.b.a.e.b0,java.io.OutputStream)>: specialinvoke $r2.<f.i.b.a.c.g$a: void <init>(f.i.b.a.c.g,java.io.OutputStream)>(r0, $r3)
<f.i.b.a.c.g$a: void <init>(f.i.b.a.c.g,java.io.OutputStream)>: specialinvoke r0.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r2)
<f.i.b.a.c.g$a: void <init>(f.i.b.a.c.g,java.io.OutputStream)>: return
<f.i.b.a.c.g: void a(f.i.b.a.e.b0,java.io.OutputStream)>: r0 := @this: f.i.b.a.c.g
<f.i.b.a.c.k: void writeTo(java.io.OutputStream)>: r0 := @this: f.i.b.a.c.k
<f.i.b.a.e.u: void writeTo(java.io.OutputStream)>: specialinvoke $r3.<f.i.b.a.e.t: void <init>(java.io.OutputStream,java.util.logging.Logger,java.util.logging.Level,int)>($r2, $r4, $r1, $i0)
<f.i.b.a.e.t: void <init>(java.io.OutputStream,java.util.logging.Logger,java.util.logging.Level,int)>: specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r3)
<f.i.b.a.e.t: void <init>(java.io.OutputStream,java.util.logging.Logger,java.util.logging.Level,int)>: return
<f.i.b.a.e.u: void writeTo(java.io.OutputStream)>: return
<f.i.b.a.e.u: void writeTo(java.io.OutputStream)>: $r6 = virtualinvoke $r3.<f.i.b.a.e.t: f.i.b.a.e.r b()>()
<f.i.b.a.e.t: f.i.b.a.e.r b()>: return r1
<f.i.b.a.e.u: void writeTo(java.io.OutputStream)>: specialinvoke $r3.<f.i.b.a.e.t: void <init>(java.io.OutputStream,java.util.logging.Logger,java.util.logging.Level,int)>($r2, $r4, $r1, $i0)
<f.i.b.a.e.t: void <init>(java.io.OutputStream,java.util.logging.Logger,java.util.logging.Level,int)>: specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r3)
<f.i.b.a.e.t: void <init>(java.io.OutputStream,java.util.logging.Logger,java.util.logging.Level,int)>: return
<f.i.b.a.e.u: void writeTo(java.io.OutputStream)>: throw $r7
<f.i.b.a.e.u: void writeTo(java.io.OutputStream)>: specialinvoke $r3.<f.i.b.a.e.t: void <init>(java.io.OutputStream,java.util.logging.Logger,java.util.logging.Level,int)>($r2, $r4, $r1, $i0)
<f.i.b.a.e.t: void <init>(java.io.OutputStream,java.util.logging.Logger,java.util.logging.Level,int)>: specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r3)
<f.i.b.a.e.t: void <init>(java.io.OutputStream,java.util.logging.Logger,java.util.logging.Level,int)>: return
<f.i.b.a.e.u: void writeTo(java.io.OutputStream)>: r0 := @this: f.i.b.a.e.u
<f.i.b.a.c.g: void a(f.i.b.a.e.b0,java.io.OutputStream)>: specialinvoke $r4.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r2)
<f.i.b.a.c.g: void a(f.i.b.a.e.b0,java.io.OutputStream)>: specialinvoke $r2.<f.i.b.a.c.g$a: void <init>(f.i.b.a.c.g,java.io.OutputStream)>(r0, $r3)
<f.i.b.a.c.g$a: void <init>(f.i.b.a.c.g,java.io.OutputStream)>: specialinvoke r0.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r2)
<f.i.b.a.c.g$a: void <init>(f.i.b.a.c.g,java.io.OutputStream)>: return
<f.i.b.a.c.g: void a(f.i.b.a.e.b0,java.io.OutputStream)>: return
<f.i.b.a.c.k: void writeTo(java.io.OutputStream)>: return
<f.i.b.a.c.g: void a(f.i.b.a.e.b0,java.io.OutputStream)>: specialinvoke $r4.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r2)
<f.i.b.a.c.g: void a(f.i.b.a.e.b0,java.io.OutputStream)>: specialinvoke $r2.<f.i.b.a.c.g$a: void <init>(f.i.b.a.c.g,java.io.OutputStream)>(r0, $r3)
<f.i.b.a.c.g$a: void <init>(f.i.b.a.c.g,java.io.OutputStream)>: specialinvoke r0.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r2)
<f.i.b.a.c.g$a: void <init>(f.i.b.a.c.g,java.io.OutputStream)>: r0 := @this: f.i.b.a.c.g$a
<f.i.b.a.c.g: void a(f.i.b.a.e.b0,java.io.OutputStream)>: specialinvoke $r4.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r2)
<f.i.b.a.c.g: void a(f.i.b.a.e.b0,java.io.OutputStream)>: interfaceinvoke $r1.<f.i.b.a.e.b0: void writeTo(java.io.OutputStream)>($r4)
