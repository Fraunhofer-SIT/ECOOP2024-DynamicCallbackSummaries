Source: $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2)
$i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2) in <f.i.b.a.e.g: long a(java.io.InputStream,java.io.OutputStream)>
Sink: interfaceinvoke $r5.<f.i.b.a.e.b0: void writeTo(java.io.OutputStream)>($r3) in <f.i.b.a.e.u: void writeTo(java.io.OutputStream)>

<f.i.b.a.e.g: long a(java.io.InputStream,java.io.OutputStream)>: $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2)
<f.i.b.a.e.g: long a(java.io.InputStream,java.io.OutputStream)>: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
<f.i.b.a.e.g: long a(java.io.InputStream,java.io.OutputStream)>: return $l1
<f.i.b.a.e.o: void c(java.io.InputStream,java.io.OutputStream,boolean)>: return
<f.i.b.a.c.b: void writeTo(java.io.OutputStream)>: return
<f.i.b.a.e.u: void writeTo(java.io.OutputStream)>: specialinvoke $r3.<f.i.b.a.e.t: void <init>(java.io.OutputStream,java.util.logging.Logger,java.util.logging.Level,int)>($r2, $r4, $r1, $i0)
<f.i.b.a.e.t: void <init>(java.io.OutputStream,java.util.logging.Logger,java.util.logging.Level,int)>: specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r3)
<f.i.b.a.e.t: void <init>(java.io.OutputStream,java.util.logging.Logger,java.util.logging.Level,int)>: return
<f.i.b.a.e.u: void writeTo(java.io.OutputStream)>: interfaceinvoke $r5.<f.i.b.a.e.b0: void writeTo(java.io.OutputStream)>($r3)
