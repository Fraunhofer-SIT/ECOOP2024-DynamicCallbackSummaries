Source: $i0 = virtualinvoke r0.<f.g.b.g.h: int read(byte[],int,int)>($r1, 0, $i0)
$i0 = virtualinvoke r0.<f.g.b.g.h: int read(byte[],int,int)>($r1, 0, $i0) in <f.g.b.g.h: int read(byte[])>
Sink: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i2) in <f.g.e.p.l0$c: void q(java.io.InputStream,java.io.OutputStream,int)>

<f.g.b.g.h: int read(byte[])>: $i0 = virtualinvoke r0.<f.g.b.g.h: int read(byte[],int,int)>($r1, 0, $i0)
<f.g.b.g.h: int read(byte[])>: r0 := @this: f.g.b.g.h
<f.g.b.g.f: boolean f()>: $r2 = r0.<f.g.b.g.f: byte[] b>
<f.g.b.g.f: boolean f()>: return 1
<f.g.b.g.f: int read(byte[],int,int)>: $r2 = r0.<f.g.b.g.f: byte[] b>
<f.g.b.g.f: int read(byte[],int,int)>: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, $r1, $i0, $i1)
<f.g.b.g.f: int read(byte[],int,int)>: return $i1
<f.g.e.p.l0$c: void q(java.io.InputStream,java.io.OutputStream,int)>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i2)
