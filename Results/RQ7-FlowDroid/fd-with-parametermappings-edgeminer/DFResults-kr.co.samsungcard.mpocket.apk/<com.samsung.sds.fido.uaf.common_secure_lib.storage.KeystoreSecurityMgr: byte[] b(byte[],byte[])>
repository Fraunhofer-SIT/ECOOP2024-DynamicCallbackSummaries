    private byte[] b(byte[], byte[])
    {
        java.lang.Throwable $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        byte[] $r1, $r2;
        java.io.ByteArrayOutputStream $r19;
        com.samsung.sds.fido.uaf.common_secure_lib.storage.KeystoreSecurityMgr r0;
        javax.crypto.Cipher $r8;
        java.io.BufferedOutputStream $r3, $r10, $r23;
        javax.crypto.CipherInputStream $r9, $r22;
        java.io.ByteArrayInputStream $r21;
        int $i0;
        java.lang.String $r4;
        java.security.spec.AlgorithmParameterSpec $r24;
        java.security.KeyStore $r5;
        java.io.IOException $r25;
        java.lang.Exception $r26;
        java.security.Key $r6;
        javax.crypto.SecretKey $r7;
        javax.crypto.spec.GCMParameterSpec $r20;

        r0 := @this: com.samsung.sds.fido.uaf.common_secure_lib.storage.KeystoreSecurityMgr;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $r19 = new java.io.ByteArrayOutputStream;

        specialinvoke $r19.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = null;

     label01:
        $r4 = r0.<com.samsung.sds.fido.uaf.common_secure_lib.storage.KeystoreSecurityMgr: java.lang.String b>;

     label02:
        $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4);

        virtualinvoke $r5.<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>(null);

        $r1 = staticinvoke <com.samsung.sds.fido.uaf.common_secure_lib.util.CommonUtil: byte[] getSha256HashedValue(byte[])>($r1);

        $r4 = staticinvoke <com.samsung.sds.fido.uaf.common_secure_lib.storage.KeystoreSecurityMgr: java.lang.String a(byte[])>($r1);

        $r6 = virtualinvoke $r5.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r4, null);

     label03:
        $r7 = (javax.crypto.SecretKey) $r6;

     label04:
        $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/GCM/NoPadding");

     label05:
        $r20 = new javax.crypto.spec.GCMParameterSpec;

     label06:
        $r1 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r2, 0, 12);

        specialinvoke $r20.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(128, $r1);

     label07:
        $r24 = (java.security.spec.AlgorithmParameterSpec) $r20;

     label08:
        virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r7, $r24);

     label09:
        $r22 = new javax.crypto.CipherInputStream;

     label10:
        $r9 = $r22;

     label11:
        $r21 = new java.io.ByteArrayInputStream;

     label12:
        $i0 = lengthof $r2;

     label13:
        $r1 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r2, 12, $i0);

        specialinvoke $r21.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

        specialinvoke $r22.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r21, $r8);

     label14:
        $r23 = new java.io.BufferedOutputStream;

     label15:
        $r10 = $r23;

     label16:
        specialinvoke $r23.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r19);

     label17:
        $r1 = newarray (byte)[1024];

     label18:
        $i0 = virtualinvoke $r22.<java.io.InputStream: int read(byte[])>($r1);

     label19:
        if $i0 < 0 goto label22;

     label20:
        virtualinvoke $r23.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0);

     label21:
        goto label18;

     label22:
        virtualinvoke $r23.<java.io.OutputStream: void close()>();

     label23:
        goto label25;

     label24:
        $r11 := @caughtexception;

        $r25 = (java.io.IOException) $r11;

        virtualinvoke $r25.<java.io.IOException: java.lang.String getMessage()>();

     label25:
        virtualinvoke $r22.<java.io.InputStream: void close()>();

     label26:
        goto label28;

     label27:
        $r12 := @caughtexception;

        $r25 = (java.io.IOException) $r12;

        virtualinvoke $r25.<java.io.IOException: java.lang.String getMessage()>();

     label28:
        $r1 = virtualinvoke $r19.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r1;

     label29:
        $r13 := @caughtexception;

        goto label56;

     label30:
        $r13 := @caughtexception;

        goto label56;

     label31:
        $r13 := @caughtexception;

        goto label56;

     label32:
        $r13 := @caughtexception;

        goto label56;

     label33:
        $r13 := @caughtexception;

        goto label56;

     label34:
        $r13 := @caughtexception;

        goto label56;

     label35:
        $r13 := @caughtexception;

        goto label56;

     label36:
        $r13 := @caughtexception;

        goto label56;

     label37:
        $r13 := @caughtexception;

        goto label45;

     label38:
        $r13 := @caughtexception;

        goto label45;

     label39:
        $r13 := @caughtexception;

        goto label45;

     label40:
        $r13 := @caughtexception;

        goto label45;

     label41:
        $r13 := @caughtexception;

        goto label45;

     label42:
        $r13 := @caughtexception;

        goto label45;

     label43:
        $r13 := @caughtexception;

        goto label45;

     label44:
        $r13 := @caughtexception;

     label45:
        $r10 = null;

        goto label56;

     label46:
        $r14 := @caughtexception;

        $r9 = null;

        goto label67;

     label47:
        $r13 := @caughtexception;

        goto label55;

     label48:
        $r13 := @caughtexception;

        goto label55;

     label49:
        $r13 := @caughtexception;

        goto label55;

     label50:
        $r13 := @caughtexception;

        goto label55;

     label51:
        $r13 := @caughtexception;

        goto label55;

     label52:
        $r13 := @caughtexception;

        goto label55;

     label53:
        $r13 := @caughtexception;

        goto label55;

     label54:
        $r13 := @caughtexception;

     label55:
        $r9 = null;

        $r10 = null;

     label56:
        $r26 = (java.lang.Exception) $r13;

        virtualinvoke $r26.<java.lang.Exception: java.lang.String getMessage()>();

     label57:
        if $r10 == null goto label61;

     label58:
        virtualinvoke $r10.<java.io.OutputStream: void close()>();

     label59:
        goto label61;

     label60:
        $r15 := @caughtexception;

        $r25 = (java.io.IOException) $r15;

        virtualinvoke $r25.<java.io.IOException: java.lang.String getMessage()>();

     label61:
        if $r9 == null goto label76;

     label62:
        virtualinvoke $r9.<java.io.InputStream: void close()>();

     label63:
        return null;

     label64:
        $r16 := @caughtexception;

        $r25 = (java.io.IOException) $r16;

        virtualinvoke $r25.<java.io.IOException: java.lang.String getMessage()>();

        return null;

     label65:
        $r14 := @caughtexception;

        $r3 = $r10;

        goto label67;

     label66:
        $r14 := @caughtexception;

     label67:
        if $r3 == null goto label71;

     label68:
        virtualinvoke $r3.<java.io.OutputStream: void close()>();

     label69:
        goto label71;

     label70:
        $r17 := @caughtexception;

        $r25 = (java.io.IOException) $r17;

        virtualinvoke $r25.<java.io.IOException: java.lang.String getMessage()>();

     label71:
        if $r9 == null goto label75;

     label72:
        virtualinvoke $r9.<java.io.InputStream: void close()>();

     label73:
        goto label75;

     label74:
        $r18 := @caughtexception;

        $r25 = (java.io.IOException) $r18;

        virtualinvoke $r25.<java.io.IOException: java.lang.String getMessage()>();

     label75:
        throw $r14;

     label76:
        return null;

        catch java.security.NoSuchAlgorithmException from label02 to label03 with label53;
        catch java.security.NoSuchAlgorithmException from label04 to label05 with label53;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label53;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label53;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label53;
        catch javax.crypto.NoSuchPaddingException from label02 to label03 with label52;
        catch javax.crypto.NoSuchPaddingException from label04 to label05 with label52;
        catch javax.crypto.NoSuchPaddingException from label06 to label07 with label52;
        catch javax.crypto.NoSuchPaddingException from label08 to label09 with label52;
        catch javax.crypto.NoSuchPaddingException from label13 to label14 with label52;
        catch java.security.InvalidKeyException from label02 to label03 with label51;
        catch java.security.InvalidKeyException from label04 to label05 with label51;
        catch java.security.InvalidKeyException from label06 to label07 with label51;
        catch java.security.InvalidKeyException from label08 to label09 with label51;
        catch java.security.InvalidKeyException from label13 to label14 with label51;
        catch java.security.cert.CertificateException from label02 to label03 with label50;
        catch java.security.cert.CertificateException from label04 to label05 with label50;
        catch java.security.cert.CertificateException from label06 to label07 with label50;
        catch java.security.cert.CertificateException from label08 to label09 with label50;
        catch java.security.cert.CertificateException from label13 to label14 with label50;
        catch java.io.IOException from label02 to label03 with label49;
        catch java.io.IOException from label04 to label05 with label49;
        catch java.io.IOException from label06 to label07 with label49;
        catch java.io.IOException from label08 to label09 with label49;
        catch java.io.IOException from label13 to label14 with label49;
        catch java.security.UnrecoverableKeyException from label02 to label03 with label48;
        catch java.security.UnrecoverableKeyException from label04 to label05 with label48;
        catch java.security.UnrecoverableKeyException from label06 to label07 with label48;
        catch java.security.UnrecoverableKeyException from label08 to label09 with label48;
        catch java.security.UnrecoverableKeyException from label13 to label14 with label48;
        catch java.security.InvalidAlgorithmParameterException from label02 to label03 with label47;
        catch java.security.InvalidAlgorithmParameterException from label04 to label05 with label47;
        catch java.security.InvalidAlgorithmParameterException from label06 to label07 with label47;
        catch java.security.InvalidAlgorithmParameterException from label08 to label09 with label47;
        catch java.security.InvalidAlgorithmParameterException from label13 to label14 with label47;
        catch java.security.KeyStoreException from label02 to label03 with label54;
        catch java.security.KeyStoreException from label04 to label05 with label54;
        catch java.security.KeyStoreException from label06 to label07 with label54;
        catch java.security.KeyStoreException from label08 to label09 with label54;
        catch java.security.KeyStoreException from label13 to label14 with label54;
        catch java.lang.Throwable from label01 to label06 with label46;
        catch java.lang.Throwable from label06 to label10 with label46;
        catch java.lang.Throwable from label11 to label12 with label46;
        catch java.lang.Throwable from label12 to label14 with label46;
        catch java.security.NoSuchAlgorithmException from label16 to label17 with label43;
        catch javax.crypto.NoSuchPaddingException from label16 to label17 with label42;
        catch java.security.InvalidKeyException from label16 to label17 with label41;
        catch java.security.cert.CertificateException from label16 to label17 with label40;
        catch java.io.IOException from label16 to label17 with label39;
        catch java.security.UnrecoverableKeyException from label16 to label17 with label38;
        catch java.security.InvalidAlgorithmParameterException from label16 to label17 with label37;
        catch java.security.KeyStoreException from label16 to label17 with label44;
        catch java.lang.Throwable from label14 to label15 with label66;
        catch java.lang.Throwable from label16 to label17 with label66;
        catch java.security.NoSuchAlgorithmException from label18 to label19 with label36;
        catch java.security.NoSuchAlgorithmException from label20 to label21 with label36;
        catch javax.crypto.NoSuchPaddingException from label18 to label19 with label35;
        catch javax.crypto.NoSuchPaddingException from label20 to label21 with label35;
        catch java.security.InvalidKeyException from label18 to label19 with label34;
        catch java.security.InvalidKeyException from label20 to label21 with label34;
        catch java.security.cert.CertificateException from label18 to label19 with label33;
        catch java.security.cert.CertificateException from label20 to label21 with label33;
        catch java.io.IOException from label18 to label19 with label32;
        catch java.io.IOException from label20 to label21 with label32;
        catch java.security.UnrecoverableKeyException from label18 to label19 with label31;
        catch java.security.UnrecoverableKeyException from label20 to label21 with label31;
        catch java.security.InvalidAlgorithmParameterException from label18 to label19 with label30;
        catch java.security.InvalidAlgorithmParameterException from label20 to label21 with label30;
        catch java.security.KeyStoreException from label18 to label19 with label29;
        catch java.security.KeyStoreException from label20 to label21 with label29;
        catch java.lang.Throwable from label18 to label19 with label65;
        catch java.lang.Throwable from label20 to label21 with label65;
        catch java.io.IOException from label22 to label23 with label24;
        catch java.io.IOException from label25 to label26 with label27;
        catch java.lang.Throwable from label56 to label57 with label65;
        catch java.io.IOException from label58 to label59 with label60;
        catch java.io.IOException from label62 to label63 with label64;
        catch java.io.IOException from label68 to label69 with label70;
        catch java.io.IOException from label72 to label73 with label74;
    }
