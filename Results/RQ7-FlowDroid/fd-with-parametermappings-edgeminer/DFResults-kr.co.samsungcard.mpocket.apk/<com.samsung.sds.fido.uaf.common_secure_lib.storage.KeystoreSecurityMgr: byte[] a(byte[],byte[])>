    private byte[] a(byte[], byte[])
    {
        java.lang.Throwable $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        byte[] $r1, $r2;
        java.io.BufferedInputStream $r4, $r21;
        java.io.ByteArrayOutputStream $r19;
        com.samsung.sds.fido.uaf.common_secure_lib.storage.KeystoreSecurityMgr r0;
        javax.crypto.Cipher $r9;
        java.io.ByteArrayInputStream $r20;
        int $i0;
        java.lang.String $r5;
        javax.crypto.CipherOutputStream $r3, $r10, $r22;
        boolean $z0;
        java.security.KeyStore $r6;
        java.io.IOException $r23;
        java.lang.Exception $r24;
        java.security.Key $r7;
        javax.crypto.SecretKey $r8;

        r0 := @this: com.samsung.sds.fido.uaf.common_secure_lib.storage.KeystoreSecurityMgr;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $z0 = specialinvoke r0.<com.samsung.sds.fido.uaf.common_secure_lib.storage.KeystoreSecurityMgr: boolean c(byte[])>($r1);

        $r3 = null;

        if $z0 != 0 goto label01;

        $z0 = specialinvoke r0.<com.samsung.sds.fido.uaf.common_secure_lib.storage.KeystoreSecurityMgr: boolean b(byte[])>($r1);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r19 = new java.io.ByteArrayOutputStream;

        specialinvoke $r19.<java.io.ByteArrayOutputStream: void <init>()>();

     label02:
        $r21 = new java.io.BufferedInputStream;

     label03:
        $r4 = $r21;

     label04:
        $r20 = new java.io.ByteArrayInputStream;

     label05:
        specialinvoke $r20.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        specialinvoke $r21.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r20);

     label06:
        $r5 = r0.<com.samsung.sds.fido.uaf.common_secure_lib.storage.KeystoreSecurityMgr: java.lang.String b>;

     label07:
        $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5);

        virtualinvoke $r6.<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>(null);

        $r1 = staticinvoke <com.samsung.sds.fido.uaf.common_secure_lib.util.CommonUtil: byte[] getSha256HashedValue(byte[])>($r1);

        $r5 = staticinvoke <com.samsung.sds.fido.uaf.common_secure_lib.storage.KeystoreSecurityMgr: java.lang.String a(byte[])>($r1);

        $r7 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r5, null);

     label08:
        $r8 = (javax.crypto.SecretKey) $r7;

     label09:
        $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/GCM/NoPadding");

        virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r8);

     label10:
        $r22 = new javax.crypto.CipherOutputStream;

     label11:
        $r10 = $r22;

     label12:
        specialinvoke $r22.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r19, $r9);

     label13:
        $r1 = newarray (byte)[1024];

     label14:
        $i0 = virtualinvoke $r21.<java.io.InputStream: int read(byte[])>($r1);

     label15:
        if $i0 < 0 goto label18;

     label16:
        virtualinvoke $r22.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0);

     label17:
        goto label14;

     label18:
        virtualinvoke $r22.<java.io.OutputStream: void close()>();

     label19:
        goto label21;

     label20:
        $r11 := @caughtexception;

        $r23 = (java.io.IOException) $r11;

        virtualinvoke $r23.<java.io.IOException: java.lang.String getMessage()>();

     label21:
        virtualinvoke $r21.<java.io.InputStream: void close()>();

     label22:
        goto label24;

     label23:
        $r12 := @caughtexception;

        $r23 = (java.io.IOException) $r12;

        virtualinvoke $r23.<java.io.IOException: java.lang.String getMessage()>();

     label24:
        $r1 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] getIV()>();

        $r2 = virtualinvoke $r19.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r1 = staticinvoke <org.apache.commons.lang3.ArrayUtils: byte[] addAll(byte[],byte[])>($r1, $r2);

        return $r1;

     label25:
        $r13 := @caughtexception;

        goto label52;

     label26:
        $r13 := @caughtexception;

        goto label52;

     label27:
        $r13 := @caughtexception;

        goto label52;

     label28:
        $r13 := @caughtexception;

        goto label52;

     label29:
        $r13 := @caughtexception;

        goto label52;

     label30:
        $r13 := @caughtexception;

        goto label52;

     label31:
        $r13 := @caughtexception;

        goto label52;

     label32:
        $r13 := @caughtexception;

        goto label52;

     label33:
        $r13 := @caughtexception;

        goto label41;

     label34:
        $r13 := @caughtexception;

        goto label41;

     label35:
        $r13 := @caughtexception;

        goto label41;

     label36:
        $r13 := @caughtexception;

        goto label41;

     label37:
        $r13 := @caughtexception;

        goto label41;

     label38:
        $r13 := @caughtexception;

        goto label41;

     label39:
        $r13 := @caughtexception;

        goto label41;

     label40:
        $r13 := @caughtexception;

     label41:
        $r10 = null;

        goto label52;

     label42:
        $r14 := @caughtexception;

        $r4 = null;

        goto label63;

     label43:
        $r13 := @caughtexception;

        goto label51;

     label44:
        $r13 := @caughtexception;

        goto label51;

     label45:
        $r13 := @caughtexception;

        goto label51;

     label46:
        $r13 := @caughtexception;

        goto label51;

     label47:
        $r13 := @caughtexception;

        goto label51;

     label48:
        $r13 := @caughtexception;

        goto label51;

     label49:
        $r13 := @caughtexception;

        goto label51;

     label50:
        $r13 := @caughtexception;

     label51:
        $r10 = null;

        $r4 = null;

     label52:
        $r24 = (java.lang.Exception) $r13;

        virtualinvoke $r24.<java.lang.Exception: java.lang.String getMessage()>();

     label53:
        if $r10 == null goto label57;

     label54:
        virtualinvoke $r10.<java.io.OutputStream: void close()>();

     label55:
        goto label57;

     label56:
        $r15 := @caughtexception;

        $r23 = (java.io.IOException) $r15;

        virtualinvoke $r23.<java.io.IOException: java.lang.String getMessage()>();

     label57:
        if $r4 == null goto label72;

     label58:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label59:
        return null;

     label60:
        $r16 := @caughtexception;

        $r23 = (java.io.IOException) $r16;

        virtualinvoke $r23.<java.io.IOException: java.lang.String getMessage()>();

        return null;

     label61:
        $r14 := @caughtexception;

        $r3 = $r10;

        goto label63;

     label62:
        $r14 := @caughtexception;

     label63:
        if $r3 == null goto label67;

     label64:
        virtualinvoke $r3.<java.io.OutputStream: void close()>();

     label65:
        goto label67;

     label66:
        $r17 := @caughtexception;

        $r23 = (java.io.IOException) $r17;

        virtualinvoke $r23.<java.io.IOException: java.lang.String getMessage()>();

     label67:
        if $r4 == null goto label71;

     label68:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label69:
        goto label71;

     label70:
        $r18 := @caughtexception;

        $r23 = (java.io.IOException) $r18;

        virtualinvoke $r23.<java.io.IOException: java.lang.String getMessage()>();

     label71:
        throw $r14;

     label72:
        return null;

        catch java.security.NoSuchAlgorithmException from label05 to label06 with label49;
        catch javax.crypto.NoSuchPaddingException from label05 to label06 with label48;
        catch java.security.InvalidKeyException from label05 to label06 with label47;
        catch java.security.cert.CertificateException from label05 to label06 with label46;
        catch java.io.IOException from label05 to label06 with label45;
        catch java.security.UnrecoverableKeyException from label05 to label06 with label44;
        catch java.security.KeyStoreException from label05 to label06 with label43;
        catch java.lang.IllegalArgumentException from label05 to label06 with label50;
        catch java.lang.Throwable from label02 to label03 with label42;
        catch java.lang.Throwable from label04 to label05 with label42;
        catch java.lang.Throwable from label05 to label06 with label42;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label39;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label39;
        catch java.security.NoSuchAlgorithmException from label12 to label13 with label39;
        catch javax.crypto.NoSuchPaddingException from label07 to label08 with label38;
        catch javax.crypto.NoSuchPaddingException from label09 to label10 with label38;
        catch javax.crypto.NoSuchPaddingException from label12 to label13 with label38;
        catch java.security.InvalidKeyException from label07 to label08 with label37;
        catch java.security.InvalidKeyException from label09 to label10 with label37;
        catch java.security.InvalidKeyException from label12 to label13 with label37;
        catch java.security.cert.CertificateException from label07 to label08 with label36;
        catch java.security.cert.CertificateException from label09 to label10 with label36;
        catch java.security.cert.CertificateException from label12 to label13 with label36;
        catch java.io.IOException from label07 to label08 with label35;
        catch java.io.IOException from label09 to label10 with label35;
        catch java.io.IOException from label12 to label13 with label35;
        catch java.security.UnrecoverableKeyException from label07 to label08 with label34;
        catch java.security.UnrecoverableKeyException from label09 to label10 with label34;
        catch java.security.UnrecoverableKeyException from label12 to label13 with label34;
        catch java.security.KeyStoreException from label07 to label08 with label33;
        catch java.security.KeyStoreException from label09 to label10 with label33;
        catch java.security.KeyStoreException from label12 to label13 with label33;
        catch java.lang.IllegalArgumentException from label07 to label08 with label40;
        catch java.lang.IllegalArgumentException from label09 to label10 with label40;
        catch java.lang.IllegalArgumentException from label12 to label13 with label40;
        catch java.lang.Throwable from label06 to label11 with label62;
        catch java.lang.Throwable from label12 to label13 with label62;
        catch java.security.NoSuchAlgorithmException from label14 to label15 with label32;
        catch java.security.NoSuchAlgorithmException from label16 to label17 with label32;
        catch javax.crypto.NoSuchPaddingException from label14 to label15 with label31;
        catch javax.crypto.NoSuchPaddingException from label16 to label17 with label31;
        catch java.security.InvalidKeyException from label14 to label15 with label30;
        catch java.security.InvalidKeyException from label16 to label17 with label30;
        catch java.security.cert.CertificateException from label14 to label15 with label29;
        catch java.security.cert.CertificateException from label16 to label17 with label29;
        catch java.io.IOException from label14 to label15 with label28;
        catch java.io.IOException from label16 to label17 with label28;
        catch java.security.UnrecoverableKeyException from label14 to label15 with label27;
        catch java.security.UnrecoverableKeyException from label16 to label17 with label27;
        catch java.security.KeyStoreException from label14 to label15 with label26;
        catch java.security.KeyStoreException from label16 to label17 with label26;
        catch java.lang.IllegalArgumentException from label14 to label15 with label25;
        catch java.lang.IllegalArgumentException from label16 to label17 with label25;
        catch java.lang.Throwable from label14 to label15 with label61;
        catch java.lang.Throwable from label16 to label17 with label61;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.lang.Throwable from label52 to label53 with label61;
        catch java.io.IOException from label54 to label55 with label56;
        catch java.io.IOException from label58 to label59 with label60;
        catch java.io.IOException from label64 to label65 with label66;
        catch java.io.IOException from label68 to label69 with label70;
    }
