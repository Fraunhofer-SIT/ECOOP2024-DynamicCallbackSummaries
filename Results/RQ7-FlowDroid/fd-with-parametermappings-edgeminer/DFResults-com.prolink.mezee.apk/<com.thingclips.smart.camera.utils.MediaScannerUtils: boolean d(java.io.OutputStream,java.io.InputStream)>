    private boolean d(java.io.OutputStream, java.io.InputStream)
    {
        java.io.OutputStream $r2;
        java.lang.Throwable $r4, $r5, $r6, $r7, $r8;
        byte[] $r3;
        java.io.IOException $r9;
        com.thingclips.smart.camera.utils.MediaScannerUtils r0;
        int $i0;
        java.io.InputStream $r1;

        r0 := @this: com.thingclips.smart.camera.utils.MediaScannerUtils;

        $r2 := @parameter0: java.io.OutputStream;

        $r1 := @parameter1: java.io.InputStream;

        staticinvoke <com.ai.ct.Tz: void a()>();

        staticinvoke <com.ai.ct.Tz: void a()>();

        staticinvoke <com.ai.ct.Tz: void b(int)>(0);

        staticinvoke <com.ai.ct.Tz: void b(int)>(0);

        staticinvoke <com.ai.ct.Tz: void b(int)>(0);

        staticinvoke <com.ai.ct.Tz: void b(int)>(0);

        staticinvoke <com.ai.ct.Tz: void a()>();

        staticinvoke <com.ai.ct.Tz: void b(int)>(0);

        staticinvoke <com.ai.ct.Tz: void b(int)>(0);

        staticinvoke <com.ai.ct.Tz: void b(int)>(0);

        staticinvoke <com.ai.ct.Tz: void a()>();

        if $r2 == null goto label19;

        if $r1 != null goto label01;

        return 0;

     label01:
        $r3 = newarray (byte)[1444];

     label02:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r3);

     label03:
        if $i0 == -1 goto label06;

     label04:
        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0);

        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

     label05:
        goto label02;

     label06:
        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label07:
        return 1;

     label08:
        $r4 := @caughtexception;

        $r9 = (java.io.IOException) $r4;

        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

        return 1;

     label09:
        $r5 := @caughtexception;

        goto label15;

     label10:
        $r6 := @caughtexception;

     label11:
        $r9 = (java.io.IOException) $r6;

        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

     label12:
        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label13:
        return 0;

     label14:
        $r7 := @caughtexception;

        $r9 = (java.io.IOException) $r7;

        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

        return 0;

     label15:
        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label16:
        goto label18;

     label17:
        $r8 := @caughtexception;

        $r9 = (java.io.IOException) $r8;

        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

     label18:
        throw $r5;

     label19:
        return 0;

        catch java.io.IOException from label02 to label03 with label10;
        catch java.io.IOException from label04 to label05 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.IOException from label15 to label16 with label17;
    }
