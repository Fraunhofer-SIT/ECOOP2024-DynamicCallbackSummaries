    public static java.lang.String b042F042F042F\u042f\u042f042F042F(java.io.InputStream, java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r9, $r17, $r18;
        byte[] $r4, $r7;
        java.io.BufferedInputStream $r3;
        java.lang.Object[] $r14;
        java.nio.ByteBuffer $r5, $r6;
        byte $b4;
        java.nio.charset.Charset $r8;
        java.lang.Character $r15;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r2;
        java.lang.reflect.Method $r13;
        boolean $z0;
        java.lang.Class[] $r11;
        java.lang.reflect.InvocationTargetException $r19;
        java.lang.Class $r10, $r12;
        java.lang.Object $r16;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        if $r0 == null goto label30;

        $z0 = staticinvoke <com.threatmetrix.TrustDefender.mkmmkm: boolean b\u042f042F\u042f042F042F\u042f\u042f(java.lang.String)>($r1);

        if $z0 != 0 goto label30;

        $z0 = staticinvoke <com.threatmetrix.TrustDefender.mkmmkm: boolean b\u042f042F\u042f042F042F\u042f\u042f(java.lang.String)>($r2);

        if $z0 == 0 goto label01;

        return null;

     label01:
        $r3 = staticinvoke <au.b: java.io.BufferedInputStream a(java.io.InputStream)>($r0);

        $r4 = staticinvoke <au.b: byte[] f(java.io.InputStream)>($r3);

        $r4 = staticinvoke <pt.a: byte[] j(byte[])>($r4);

     label02:
        if $r4 == null goto label30;

        $i0 = lengthof $r4;

        if $i0 >= 32 goto label03;

        return null;

     label03:
        $i0 = lengthof $r4;

        $i0 = $i0 - 16;

     label04:
        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i0);

        $r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(16);

     label05:
        $i0 = lengthof $r4;

     label06:
        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 32);

     label07:
        $i0 = 0;

     label08:
        if $i0 >= $i1 goto label14;

        $i2 = <com.threatmetrix.TrustDefender.mmkmmm: int b\u0417\u0417\u041704170417\u0417>;

        $i3 = <com.threatmetrix.TrustDefender.mmkmmm: int b\u04170417\u041704170417\u0417>;

        $i3 = $i3 + $i2;

        $i2 = $i3 * $i2;

        $i3 = <com.threatmetrix.TrustDefender.mmkmmm: int b04170417\u041704170417\u0417>;

        $i2 = $i2 % $i3;

        $i3 = <com.threatmetrix.TrustDefender.mmkmmm: int b0417\u0417\u041704170417\u0417>;

        if $i2 == $i3 goto label09;

        <com.threatmetrix.TrustDefender.mmkmmm: int b\u0417\u0417\u041704170417\u0417> = 9;

        <com.threatmetrix.TrustDefender.mmkmmm: int b0417\u0417\u041704170417\u0417> = 20;

     label09:
        $b4 = $r4[$i0];

     label10:
        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b4);

     label11:
        $i2 = $i0 + 1;

        $b4 = $r4[$i2];

     label12:
        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b4);

     label13:
        $i0 = $i0 + 2;

        goto label08;

     label14:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label17;

        $b4 = $r4[$i0];

     label15:
        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b4);

     label16:
        $i0 = $i0 + 1;

        goto label14;

     label17:
        $r4 = virtualinvoke $r6.<java.nio.ByteBuffer: byte[] array()>();

        $r4 = staticinvoke <com.threatmetrix.TrustDefender.mmkmmm: byte[] b\u042f\u042f\u042f042F\u042f042F042F(byte[],java.lang.String,java.lang.String)>($r4, $r1, $r2);

     label18:
        $i0 = <com.threatmetrix.TrustDefender.mmkmmm: int b\u0417\u0417\u041704170417\u0417>;

        $i1 = <com.threatmetrix.TrustDefender.mmkmmm: int b\u04170417\u041704170417\u0417>;

        $i1 = $i1 + $i0;

        $i0 = $i0 * $i1;

        $i1 = <com.threatmetrix.TrustDefender.mmkmmm: int b04170417\u041704170417\u0417>;

        $i0 = $i0 % $i1;

        if $i0 == 0 goto label19;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw_java_lang_IllegalArgumentException_15()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw_java_io_IOException_10()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw_java_lang_reflect_InvocationTargetException_3()>();

        <com.threatmetrix.TrustDefender.mmkmmm: int b\u0417\u0417\u041704170417\u0417> = 62;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw_java_lang_IllegalArgumentException_15()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw_java_io_IOException_10()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw_java_lang_reflect_InvocationTargetException_3()>();

        <com.threatmetrix.TrustDefender.mmkmmm: int b0417\u0417\u041704170417\u0417> = 62;

     label19:
        $r7 = virtualinvoke $r5.<java.nio.ByteBuffer: byte[] array()>();

        $r4 = staticinvoke <com.threatmetrix.TrustDefender.mmkmmm: byte[] b\u042f042F042F\u042f\u042f042F042F(byte[],byte[])>($r7, $r4);

     label20:
        if $r4 != null goto label21;

        return null;

     label21:
        $r2 = new java.lang.String;

        $r8 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

     label22:
        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r4, $r8);

     label23:
        return $r2;

     label24:
        $r9 := @caughtexception;

        goto label26;

     label25:
        $r9 := @caughtexception;

     label26:
        $r1 = <com.threatmetrix.TrustDefender.mmkmmm: java.lang.String b0417\u0417\u0417\u0417\u0417\u0417>;

        $r10 = class "Lcom/threatmetrix/TrustDefender/internal/gdddgd;";

        $r2 = staticinvoke <com.threatmetrix.TrustDefender.internal.wjjjjj: java.lang.String b\u04370437\u043704370437\u0437\u0437\u0437(java.lang.String,char,char)>("u\u0461EJK\\\u0466\u0467\u0468LQRc\u046d", 19, 0);

        $r11 = newarray (java.lang.Class)[3];

        $r11[0] = class "Ljava/lang/String;";

        $r12 = <java.lang.Character: java.lang.Class TYPE>;

        $r11[1] = $r12;

        $r11[2] = $r12;

        $r13 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r2, $r11);

        $r14 = newarray (java.lang.Object)[3];

        $r14[0] = ":\\g[`po`_se!Guvtx";

        $r15 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(39);

        $r14[1] = $r15;

        $r15 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(4);

        $r14[2] = $r15;

     label27:
        $r16 = virtualinvoke $r13.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r14);

     label28:
        $r2 = (java.lang.String) $r16;

        staticinvoke <com.threatmetrix.TrustDefender.kkmkkk$mkmkkk: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r2, $r9);

        return null;

     label29:
        $r17 := @caughtexception;

        $r19 = (java.lang.reflect.InvocationTargetException) $r17;

        $r18 = virtualinvoke $r19.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        throw $r18;

     label30:
        return null;

        catch java.lang.IllegalArgumentException from label01 to label02 with label25;
        catch java.lang.IllegalArgumentException from label04 to label05 with label25;
        catch java.lang.IllegalArgumentException from label06 to label07 with label25;
        catch java.io.IOException from label01 to label02 with label24;
        catch java.io.IOException from label04 to label05 with label24;
        catch java.io.IOException from label06 to label07 with label24;
        catch java.lang.IllegalArgumentException from label10 to label11 with label25;
        catch java.lang.IllegalArgumentException from label12 to label13 with label25;
        catch java.lang.IllegalArgumentException from label15 to label16 with label25;
        catch java.lang.IllegalArgumentException from label17 to label18 with label25;
        catch java.io.IOException from label10 to label11 with label24;
        catch java.io.IOException from label12 to label13 with label24;
        catch java.io.IOException from label15 to label16 with label24;
        catch java.io.IOException from label17 to label18 with label24;
        catch java.lang.IllegalArgumentException from label19 to label20 with label25;
        catch java.lang.IllegalArgumentException from label22 to label23 with label25;
        catch java.io.IOException from label19 to label20 with label24;
        catch java.io.IOException from label22 to label23 with label24;
        catch java.lang.reflect.InvocationTargetException from label27 to label28 with label29;
    }
