    java.lang.Object execute(int, java.lang.Object[], int, int[], kawa.lang.Translator, kawa.lang.TemplateScope)
    {
        java.lang.Object[] $r1;
        java.lang.Error $r12;
        kawa.lang.Translator $r3;
        int[] $r2;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r5;
        boolean $z0;
        gnu.lists.FVector $r10;
        char $c3;
        gnu.lists.LList $r6, $r9;
        kawa.lang.TemplateScope $r4;
        gnu.lists.Pair $r8;
        java.lang.Object $r7;
        java.lang.StringBuilder $r11;
        kawa.lang.SyntaxTemplate r0;

        r0 := @this: kawa.lang.SyntaxTemplate;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object[];

        $i1 := @parameter2: int;

        $r2 := @parameter3: int[];

        $r3 := @parameter4: kawa.lang.Translator;

        $r4 := @parameter5: kawa.lang.TemplateScope;

        $r5 = r0.<kawa.lang.SyntaxTemplate: java.lang.String template_program>;

        $i2 = $i0;

        $c3 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c3;

     label01:
        $i4 = $i0 & 7;

        if $i4 != 7 goto label02;

        $i0 = $i0 + -7;

        $i0 = $i0 << 13;

        $r5 = r0.<kawa.lang.SyntaxTemplate: java.lang.String template_program>;

        $i2 = $i2 + 1;

        $c3 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($i2);

        $i4 = (int) $c3;

        $i0 = $i0 | $i4;

        goto label01;

     label02:
        if $i0 != 8 goto label03;

        $i0 = $i2 + 1;

        $r6 = virtualinvoke r0.<kawa.lang.SyntaxTemplate: gnu.lists.LList executeToList(int,java.lang.Object[],int,int[],kawa.lang.Translator,kawa.lang.TemplateScope)>($i0, $r1, $i1, $r2, $r3, $r4);

        return $r6;

     label03:
        if $i0 != 16 goto label04;

        $r6 = <gnu.lists.LList: gnu.lists.LList Empty>;

        return $r6;

     label04:
        if $i0 != 24 goto label06;

        $i0 = $i2 + 1;

        $r7 = virtualinvoke r0.<kawa.lang.SyntaxTemplate: java.lang.Object execute(int,java.lang.Object[],int,int[],kawa.lang.Translator,kawa.lang.TemplateScope)>($i0, $r1, $i1, $r2, $r3, $r4);

        $r6 = <gnu.lists.LList: gnu.lists.LList Empty>;

        if $r7 != $r6 goto label05;

        return $r7;

     label05:
        $r7 = staticinvoke <kawa.lang.SyntaxForms: java.lang.Object makeForm(java.lang.Object,kawa.lang.TemplateScope)>($r7, $r4);

        return $r7;

     label06:
        if $i4 != 1 goto label12;

        $i4 = $i0;

        $r8 = null;

        $r6 = null;

     label07:
        $i0 = $i2 + 1;

        $r9 = virtualinvoke r0.<kawa.lang.SyntaxTemplate: gnu.lists.LList executeToList(int,java.lang.Object[],int,int[],kawa.lang.Translator,kawa.lang.TemplateScope)>($i0, $r1, $i1, $r2, $r3, $r4);

        $r7 = $r9;

        if $r8 != null goto label08;

        $r6 = $r9;

        goto label09;

     label08:
        virtualinvoke $r8.<gnu.lists.Pair: void setCdrBackdoor(java.lang.Object)>($r9);

     label09:
        $z0 = $r7 instanceof gnu.lists.Pair;

        if $z0 == 0 goto label10;

        $r8 = (gnu.lists.Pair) $r7;

        $r7 = virtualinvoke $r8.<gnu.lists.Pair: java.lang.Object getCdr()>();

        goto label09;

     label10:
        $i2 = $i4 >> 3;

        $i2 = $i0 + $i2;

        $r5 = r0.<kawa.lang.SyntaxTemplate: java.lang.String template_program>;

        $c3 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($i2);

        $i4 = (int) $c3;

        $c3 = $c3 & 7;

        if $c3 == 1 goto label07;

        $r7 = virtualinvoke r0.<kawa.lang.SyntaxTemplate: java.lang.Object execute(int,java.lang.Object[],int,int[],kawa.lang.Translator,kawa.lang.TemplateScope)>($i2, $r1, $i1, $r2, $r3, $r4);

        if $r8 != null goto label11;

        return $r7;

     label11:
        virtualinvoke $r8.<gnu.lists.Pair: void setCdrBackdoor(java.lang.Object)>($r7);

        return $r6;

     label12:
        if $i0 != 40 goto label13;

        $i0 = $i2 + 1;

        $r7 = virtualinvoke r0.<kawa.lang.SyntaxTemplate: java.lang.Object execute(int,java.lang.Object[],int,int[],kawa.lang.Translator,kawa.lang.TemplateScope)>($i0, $r1, $i1, $r2, $r3, $r4);

        $r10 = new gnu.lists.FVector;

        $r6 = (gnu.lists.LList) $r7;

        specialinvoke $r10.<gnu.lists.FVector: void <init>(java.util.List)>($r6);

        return $r10;

     label13:
        if $i4 != 4 goto label14;

        $i0 = $i0 >> 3;

        $r1 = r0.<kawa.lang.SyntaxTemplate: java.lang.Object[] literal_values>;

        $r7 = $r1[$i0];

        return $r7;

     label14:
        $i1 = $i0 & 6;

        if $i1 != 2 goto label15;

        $i0 = $i0 >> 3;

        $r7 = virtualinvoke r0.<kawa.lang.SyntaxTemplate: java.lang.Object get_var(int,java.lang.Object[],int[])>($i0, $r1, $r2);

        if $i4 != 3 goto label16;

        $r8 = (gnu.lists.Pair) $r7;

        $r7 = virtualinvoke $r8.<gnu.lists.Pair: java.lang.Object getCar()>();

        return $r7;

     label15:
        $r12 = new java.lang.Error;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown template code: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.Error: void <init>(java.lang.String)>($r5);

        throw $r12;

     label16:
        return $r7;
    }
