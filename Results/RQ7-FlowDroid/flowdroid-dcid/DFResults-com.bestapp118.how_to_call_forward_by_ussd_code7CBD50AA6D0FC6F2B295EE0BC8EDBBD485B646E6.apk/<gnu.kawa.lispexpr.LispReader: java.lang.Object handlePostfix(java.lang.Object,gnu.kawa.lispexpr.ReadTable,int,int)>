    java.lang.Object handlePostfix(java.lang.Object, gnu.kawa.lispexpr.ReadTable, int, int) throws java.io.IOException, gnu.text.SyntaxException
    {
        gnu.kawa.lispexpr.ReadTable $r1;
        gnu.mapping.Symbol $r9;
        int $i0, $i1, $i2, $i3;
        gnu.text.LineBufferedReader $r4;
        gnu.kawa.lispexpr.ReadTableEntry $r5;
        gnu.expr.QuoteExp $r3;
        java.lang.String $r10;
        boolean $z0;
        gnu.kawa.lispexpr.LispReader r0;
        char $c4;
        gnu.lists.Pair $r8;
        java.lang.Object $r2, $r6, $r7;

        r0 := @this: gnu.kawa.lispexpr.LispReader;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: gnu.kawa.lispexpr.ReadTable;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = <gnu.expr.QuoteExp: gnu.expr.QuoteExp voidExp>;

        if $r2 != $r3 goto label1;

        $r2 = <gnu.mapping.Values: gnu.mapping.Values empty>;

     label1:
        $r4 = r0.<gnu.kawa.lispexpr.LispReader: gnu.text.LineBufferedReader port>;

        $i2 = virtualinvoke $r4.<gnu.text.LineBufferedReader: int peek()>();

        if $i2 < 0 goto label4;

        $c4 = $r1.<gnu.kawa.lispexpr.ReadTable: char postfixLookupOperator>;

        $i3 = (int) $c4;

        if $i2 == $i3 goto label2;

        return $r2;

     label2:
        $r4 = r0.<gnu.kawa.lispexpr.LispReader: gnu.text.LineBufferedReader port>;

        virtualinvoke $r4.<gnu.text.LineBufferedReader: int read()>();

        $r4 = r0.<gnu.kawa.lispexpr.LispReader: gnu.text.LineBufferedReader port>;

        $i2 = virtualinvoke $r4.<gnu.text.LineBufferedReader: int peek()>();

        $z0 = virtualinvoke r0.<gnu.kawa.lispexpr.LispReader: boolean validPostfixLookupStart(int,gnu.kawa.lispexpr.ReadTable)>($i2, $r1);

        if $z0 != 0 goto label3;

        virtualinvoke r0.<gnu.kawa.lispexpr.LispReader: void unread()>();

        return $r2;

     label3:
        $r4 = r0.<gnu.kawa.lispexpr.LispReader: gnu.text.LineBufferedReader port>;

        $i2 = virtualinvoke $r4.<gnu.text.LineBufferedReader: int read()>();

        $r5 = virtualinvoke $r1.<gnu.kawa.lispexpr.ReadTable: gnu.kawa.lispexpr.ReadTableEntry lookup(int)>($i2);

        $r6 = virtualinvoke r0.<gnu.kawa.lispexpr.LispReader: java.lang.Object readValues(int,gnu.kawa.lispexpr.ReadTableEntry,gnu.kawa.lispexpr.ReadTable)>($i2, $r5, $r1);

        $r7 = virtualinvoke $r1.<gnu.kawa.lispexpr.ReadTable: java.lang.Object makeSymbol(java.lang.String)>("quasiquote");

        $r8 = staticinvoke <gnu.lists.LList: gnu.lists.Pair list2(java.lang.Object,java.lang.Object)>($r7, $r6);

        $r8 = staticinvoke <gnu.lists.LList: gnu.lists.Pair list2(java.lang.Object,java.lang.Object)>($r2, $r8);

        $r9 = <gnu.kawa.lispexpr.LispLanguage: gnu.mapping.Symbol lookup_sym>;

        $r4 = r0.<gnu.kawa.lispexpr.LispReader: gnu.text.LineBufferedReader port>;

        $r10 = virtualinvoke $r4.<gnu.text.LineBufferedReader: java.lang.String getName()>();

        $i2 = $i0 + 1;

        $i3 = $i1 + 1;

        $r2 = staticinvoke <gnu.lists.PairWithPosition: gnu.lists.PairWithPosition make(java.lang.Object,java.lang.Object,java.lang.String,int,int)>($r9, $r8, $r10, $i2, $i3);

        goto label1;

     label4:
        return $r2;
    }
