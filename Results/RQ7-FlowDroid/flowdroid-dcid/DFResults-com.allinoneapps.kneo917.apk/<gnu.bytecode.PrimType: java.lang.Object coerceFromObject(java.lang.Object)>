    public java.lang.Object coerceFromObject(java.lang.Object)
    {
        java.lang.Float $r12;
        java.lang.Double $r13;
        long $l3;
        java.lang.ClassCastException $r5;
        java.lang.Integer $r10;
        short $s2;
        byte $b1;
        java.lang.Long $r11;
        java.lang.Short $r9;
        int $i0;
        java.lang.Boolean $r14;
        java.lang.String $r4;
        java.lang.Number $r7;
        java.lang.Byte $r8;
        double $d0;
        boolean $z0;
        gnu.bytecode.PrimType r0;
        float $f0;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        java.lang.StringBuilder $r6;

        r0 := @this: gnu.bytecode.PrimType;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = r0.<gnu.bytecode.PrimType: java.lang.Class reflectClass>;

        if $r2 != $r3 goto label01;

        return $r1;

     label01:
        $r4 = r0.<gnu.bytecode.PrimType: java.lang.String signature>;

        if $r4 == null goto label02;

        $r4 = r0.<gnu.bytecode.PrimType: java.lang.String signature>;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 == 1 goto label05;

     label02:
        $i0 = 32;

     label03:
        lookupswitch($i0)
        {
            case 66: goto label06;
            case 68: goto label11;
            case 70: goto label10;
            case 73: goto label08;
            case 74: goto label09;
            case 83: goto label07;
            case 90: goto label12;
            default: goto label04;
        };

     label04:
        $r5 = new java.lang.ClassCastException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("don\'t know how to coerce ");

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r4 = virtualinvoke r0.<gnu.bytecode.PrimType: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.ClassCastException: void <init>(java.lang.String)>($r4);

        throw $r5;

     label05:
        $r4 = r0.<gnu.bytecode.PrimType: java.lang.String signature>;

        $i0 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(0);

        goto label03;

     label06:
        $r7 = (java.lang.Number) $r1;

        $b1 = virtualinvoke $r7.<java.lang.Number: byte byteValue()>();

        $r8 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r8;

     label07:
        $r7 = (java.lang.Number) $r1;

        $s2 = virtualinvoke $r7.<java.lang.Number: short shortValue()>();

        $r9 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        return $r9;

     label08:
        $r7 = (java.lang.Number) $r1;

        $i0 = virtualinvoke $r7.<java.lang.Number: int intValue()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r10;

     label09:
        $r7 = (java.lang.Number) $r1;

        $l3 = virtualinvoke $r7.<java.lang.Number: long longValue()>();

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        return $r11;

     label10:
        $r7 = (java.lang.Number) $r1;

        $f0 = virtualinvoke $r7.<java.lang.Number: float floatValue()>();

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r12;

     label11:
        $r7 = (java.lang.Number) $r1;

        $d0 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r13;

     label12:
        $r14 = (java.lang.Boolean) $r1;

        $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r14;
    }
