Source: $r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, "android_id")
$r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, "android_id") in <com.qbiki.seattleclouds.AppLicensing: java.lang.String getDeviceId(android.content.Context)>
Sink: virtualinvoke r3.<java.io.OutputStreamWriter: void write(java.lang.String)>($r1) in <com.qbiki.util.HTTPUtil: java.lang.String performPostRequest(java.lang.String,java.lang.String,int)>

<com.qbiki.seattleclouds.AppLicensing: java.lang.String getDeviceId(android.content.Context)>: $r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, "android_id")
<com.qbiki.seattleclouds.AppLicensing: java.lang.String getDeviceId(android.content.Context)>: <com.qbiki.seattleclouds.AppLicensing: java.lang.String mDeviceId> = $r1
<com.qbiki.seattleclouds.AppLicensing: java.lang.String getDeviceId(android.content.Context)>: $r1 = <com.qbiki.seattleclouds.AppLicensing: java.lang.String mDeviceId>
<com.qbiki.seattleclouds.AppLicensing: java.lang.String getDeviceId(android.content.Context)>: return $r1
<com.qbiki.analytics.SCAnalyticsTracker: boolean trackEventInternal(int)>: interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("deviceId", $r6)
<com.qbiki.analytics.SCAnalyticsTracker: boolean trackEventInternal(int)>: $r8 = staticinvoke <com.qbiki.util.HTTPUtil: java.lang.String performPostRequest(java.lang.String,java.util.Map)>($r8, r2)
<com.qbiki.util.HTTPUtil: java.lang.String performPostRequest(java.lang.String,java.util.Map)>: $r0 = staticinvoke <com.qbiki.util.HTTPUtil: java.lang.String performPostRequest(java.lang.String,java.util.Map,int)>($r0, r1, 30000)
<com.qbiki.util.HTTPUtil: java.lang.String performPostRequest(java.lang.String,java.util.Map,int)>: $r2 = staticinvoke <com.qbiki.util.HTTPUtil: java.lang.String getUrlEncodedParameterString(java.util.Map)>(r1)
<com.qbiki.util.HTTPUtil: java.lang.String getUrlEncodedParameterString(java.util.Map)>: $r3 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4)
<com.qbiki.util.HTTPUtil: java.lang.String getUrlEncodedParameterString(java.util.Map)>: r5 = (java.lang.String) $r3
<com.qbiki.util.HTTPUtil: java.lang.String getUrlEncodedParameterString(java.util.Map)>: r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r5, "UTF-8")
<com.qbiki.util.HTTPUtil: java.lang.String getUrlEncodedParameterString(java.util.Map)>: virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
<com.qbiki.util.HTTPUtil: java.lang.String getUrlEncodedParameterString(java.util.Map)>: r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
<com.qbiki.util.HTTPUtil: java.lang.String getUrlEncodedParameterString(java.util.Map)>: return r5
<com.qbiki.util.HTTPUtil: java.lang.String performPostRequest(java.lang.String,java.util.Map,int)>: $r0 = staticinvoke <com.qbiki.util.HTTPUtil: java.lang.String performPostRequest(java.lang.String,java.lang.String,int)>($r0, $r2, 30000)
<com.qbiki.util.HTTPUtil: java.lang.String performPostRequest(java.lang.String,java.lang.String,int)>: virtualinvoke r3.<java.io.OutputStreamWriter: void write(java.lang.String)>($r1)
