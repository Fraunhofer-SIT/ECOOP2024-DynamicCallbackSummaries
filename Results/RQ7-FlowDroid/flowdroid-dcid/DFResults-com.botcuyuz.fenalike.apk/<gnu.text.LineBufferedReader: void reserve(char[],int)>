    private void reserve(char[], int) throws java.io.IOException
    {
        gnu.text.LineBufferedReader r0;
        int $i0, $i1, $i2, $i3;
        char[] $r1, $r2;

        r0 := @this: gnu.text.LineBufferedReader;

        $r1 := @parameter0: char[];

        $i1 := @parameter1: int;

        $i0 = r0.<gnu.text.LineBufferedReader: int limit>;

        $i0 = $i1 + $i0;

        $i1 = lengthof $r1;

        if $i0 > $i1 goto label03;

        $i1 = 0;

     label01:
        $i0 = r0.<gnu.text.LineBufferedReader: int limit>;

        if $i0 <= 0 goto label02;

        $r2 = r0.<gnu.text.LineBufferedReader: char[] buffer>;

        $i0 = r0.<gnu.text.LineBufferedReader: int limit>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r1, 0, $i0);

     label02:
        r0.<gnu.text.LineBufferedReader: char[] buffer> = $r1;

        return;

     label03:
        $i1 = r0.<gnu.text.LineBufferedReader: int pos>;

        $i2 = r0.<gnu.text.LineBufferedReader: int readAheadLimit>;

        if $i2 <= 0 goto label05;

        $i2 = r0.<gnu.text.LineBufferedReader: int markPos>;

        $i3 = r0.<gnu.text.LineBufferedReader: int pos>;

        if $i2 >= $i3 goto label05;

        $i2 = r0.<gnu.text.LineBufferedReader: int pos>;

        $i3 = r0.<gnu.text.LineBufferedReader: int markPos>;

        $i2 = $i2 - $i3;

        $i3 = r0.<gnu.text.LineBufferedReader: int readAheadLimit>;

        if $i2 > $i3 goto label04;

        $i2 = r0.<gnu.text.LineBufferedReader: int flags>;

        $i2 = $i2 & 2;

        if $i2 == 0 goto label07;

        $i2 = r0.<gnu.text.LineBufferedReader: int markPos>;

        $i2 = $i0 - $i2;

        $i3 = lengthof $r1;

        if $i2 <= $i3 goto label07;

     label04:
        specialinvoke r0.<gnu.text.LineBufferedReader: void clearMark()>();

     label05:
        $i2 = lengthof $r1;

        $i0 = $i0 - $i2;

        if $i0 > $i1 goto label08;

        $i2 = r0.<gnu.text.LineBufferedReader: int lineStartPos>;

        if $i1 <= $i2 goto label06;

        $i2 = r0.<gnu.text.LineBufferedReader: int flags>;

        $i2 = $i2 & 8;

        if $i2 == 0 goto label08;

     label06:
        $i0 = r0.<gnu.text.LineBufferedReader: int lineStartPos>;

        $i0 = $i0 - $i1;

        r0.<gnu.text.LineBufferedReader: int lineStartPos> = $i0;

        $i0 = r0.<gnu.text.LineBufferedReader: int limit>;

        $i0 = $i0 - $i1;

        r0.<gnu.text.LineBufferedReader: int limit> = $i0;

        $i0 = r0.<gnu.text.LineBufferedReader: int markPos>;

        $i0 = $i0 - $i1;

        r0.<gnu.text.LineBufferedReader: int markPos> = $i0;

        $i0 = r0.<gnu.text.LineBufferedReader: int pos>;

        $i0 = $i0 - $i1;

        r0.<gnu.text.LineBufferedReader: int pos> = $i0;

        $i0 = r0.<gnu.text.LineBufferedReader: int highestPos>;

        $i0 = $i0 - $i1;

        r0.<gnu.text.LineBufferedReader: int highestPos> = $i0;

        goto label01;

     label07:
        $i1 = r0.<gnu.text.LineBufferedReader: int markPos>;

        goto label05;

     label08:
        $i2 = r0.<gnu.text.LineBufferedReader: int lineStartPos>;

        if $i0 > $i2 goto label09;

        $i2 = r0.<gnu.text.LineBufferedReader: int lineStartPos>;

        if $i1 <= $i2 goto label09;

        $i1 = r0.<gnu.text.LineBufferedReader: int lineStartPos>;

        goto label06;

     label09:
        $i2 = r0.<gnu.text.LineBufferedReader: int flags>;

        $i2 = $i2 & 2;

        if $i2 == 0 goto label10;

        $i0 = $i1 - $i0;

        $i0 = $i0 >> 2;

        $i1 = $i1 - $i0;

        goto label06;

     label10:
        $i0 = r0.<gnu.text.LineBufferedReader: int lineStartPos>;

        if $i0 < 0 goto label11;

        $i1 = r0.<gnu.text.LineBufferedReader: int lineStartPos>;

     label11:
        $i0 = lengthof $r1;

        $i0 = $i0 * 2;

        $r1 = newarray (char)[$i0];

        goto label06;
    }
