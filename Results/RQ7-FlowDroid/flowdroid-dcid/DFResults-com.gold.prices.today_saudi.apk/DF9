Source: $i0 = virtualinvoke r0.<t4.h: int read(byte[],int,int)>($r1, 0, $i0)
$i0 = virtualinvoke r0.<t4.h: int read(byte[],int,int)>($r1, 0, $i0) in <t4.h: int read(byte[])>
Sink: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i2) in <com.facebook.imagepipeline.producers.n0$c: void q(java.io.InputStream,java.io.OutputStream,int)>

<t4.h: int read(byte[])>: $i0 = virtualinvoke r0.<t4.h: int read(byte[],int,int)>($r1, 0, $i0)
<t4.h: int read(byte[])>: return $i0
<t4.f: boolean a()>: $r2 = r0.<t4.f: byte[] f>
<t4.f: boolean a()>: return 0
<t4.f: int read(byte[],int,int)>: $r2 = r0.<t4.f: byte[] f>
<t4.f: int read(byte[],int,int)>: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, $r1, $i0, $i1)
<t4.f: int read(byte[],int,int)>: return $i1
<com.facebook.imagepipeline.producers.n0$c: void q(java.io.InputStream,java.io.OutputStream,int)>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i2)
