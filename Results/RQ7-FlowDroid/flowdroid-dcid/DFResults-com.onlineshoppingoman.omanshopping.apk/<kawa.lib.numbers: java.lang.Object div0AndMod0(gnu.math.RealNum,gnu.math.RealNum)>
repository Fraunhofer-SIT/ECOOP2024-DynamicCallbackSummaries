    public static java.lang.Object div0AndMod0(gnu.math.RealNum, gnu.math.RealNum)
    {
        java.lang.Object[] $r7;
        gnu.kawa.functions.AddOp $r6;
        gnu.kawa.functions.DivideOp $r3;
        java.lang.ClassCastException $r8, $r9;
        gnu.mapping.WrongType $r10;
        gnu.kawa.functions.MultiplyOp $r0;
        gnu.math.RealNum $r1, $r2, $r5;
        java.lang.Object $r4;

        $r1 := @parameter0: gnu.math.RealNum;

        $r2 := @parameter1: gnu.math.RealNum;

        $r3 = <gnu.kawa.functions.DivideOp: gnu.kawa.functions.DivideOp div0>;

        $r4 = virtualinvoke $r3.<gnu.mapping.Procedure: java.lang.Object apply2(java.lang.Object,java.lang.Object)>($r1, $r2);

     label1:
        $r5 = staticinvoke <gnu.kawa.lispexpr.LangObjType: gnu.math.RealNum coerceRealNum(java.lang.Object)>($r4);

     label2:
        $r6 = <gnu.kawa.functions.AddOp: gnu.kawa.functions.AddOp $Mn>;

        $r0 = <gnu.kawa.functions.MultiplyOp: gnu.kawa.functions.MultiplyOp $St>;

        $r4 = virtualinvoke $r0.<gnu.mapping.Procedure: java.lang.Object apply2(java.lang.Object,java.lang.Object)>($r5, $r2);

        $r4 = virtualinvoke $r6.<gnu.mapping.Procedure: java.lang.Object apply2(java.lang.Object,java.lang.Object)>($r1, $r4);

     label3:
        $r1 = staticinvoke <gnu.kawa.lispexpr.LangObjType: gnu.math.RealNum coerceRealNum(java.lang.Object)>($r4);

     label4:
        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = $r5;

        $r7[1] = $r1;

        $r4 = staticinvoke <kawa.lib.misc: java.lang.Object values(java.lang.Object[])>($r7);

        return $r4;

     label5:
        $r8 := @caughtexception;

        $r10 = new gnu.mapping.WrongType;

        specialinvoke $r10.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r8, "r", -2, $r4);

        throw $r10;

     label6:
        $r9 := @caughtexception;

        $r10 = new gnu.mapping.WrongType;

        specialinvoke $r10.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r9, "q", -2, $r4);

        throw $r10;

        catch java.lang.ClassCastException from label1 to label2 with label6;
        catch java.lang.ClassCastException from label3 to label4 with label5;
    }
