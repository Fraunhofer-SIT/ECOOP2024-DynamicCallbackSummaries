    public char next() throws org.json.JSONException
    {
        java.lang.Throwable $r2;
        org.json.JSONTokener r0;
        char $c3;
        java.io.Reader $r1;
        org.json.JSONException $r3;
        byte $b1;
        int $i0, $i2;
        boolean $z0;

        r0 := @this: org.json.JSONTokener;

        $z0 = r0.<org.json.JSONTokener: boolean usePrevious>;

        $b1 = 0;

        if $z0 == 0 goto label1;

        r0.<org.json.JSONTokener: boolean usePrevious> = 0;

        $c3 = r0.<org.json.JSONTokener: char previous>;

        $i2 = (int) $c3;

        goto label4;

     label1:
        $r1 = r0.<org.json.JSONTokener: java.io.Reader reader>;

     label2:
        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

     label3:
        $i2 = $i0;

        if $i0 > 0 goto label4;

        r0.<org.json.JSONTokener: boolean eof> = 1;

        $i2 = 0;

     label4:
        $i0 = r0.<org.json.JSONTokener: int index>;

        $i0 = $i0 + 1;

        r0.<org.json.JSONTokener: int index> = $i0;

        $c3 = r0.<org.json.JSONTokener: char previous>;

        $i0 = (int) $c3;

        if $i0 != 13 goto label6;

        $i0 = r0.<org.json.JSONTokener: int line>;

        $i0 = $i0 + 1;

        r0.<org.json.JSONTokener: int line> = $i0;

        if $i2 == 10 goto label5;

        $b1 = 1;

     label5:
        r0.<org.json.JSONTokener: int character> = $b1;

        goto label8;

     label6:
        if $i2 != 10 goto label7;

        $i0 = r0.<org.json.JSONTokener: int line>;

        $i0 = $i0 + 1;

        r0.<org.json.JSONTokener: int line> = $i0;

        r0.<org.json.JSONTokener: int character> = 0;

        goto label8;

     label7:
        $i0 = r0.<org.json.JSONTokener: int character>;

        $i0 = $i0 + 1;

        r0.<org.json.JSONTokener: int character> = $i0;

     label8:
        $c3 = (char) $i2;

        r0.<org.json.JSONTokener: char previous> = $c3;

        $c3 = r0.<org.json.JSONTokener: char previous>;

        return $c3;

     label9:
        $r2 := @caughtexception;

        $r3 = new org.json.JSONException;

        specialinvoke $r3.<org.json.JSONException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch java.io.IOException from label2 to label3 with label9;
    }
