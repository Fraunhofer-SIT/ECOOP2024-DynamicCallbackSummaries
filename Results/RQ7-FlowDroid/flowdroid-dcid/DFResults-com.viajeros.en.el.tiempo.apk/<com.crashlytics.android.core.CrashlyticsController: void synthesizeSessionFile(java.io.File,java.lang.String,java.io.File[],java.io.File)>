    private void synthesizeSessionFile(java.io.File, java.lang.String, java.io.File[], java.io.File)
    {
        java.lang.Throwable $r14;
        com.crashlytics.android.core.CrashlyticsController r0;
        java.util.Date $r12;
        long $l0;
        com.crashlytics.android.core.ClsFileOutputStream $r7;
        h.a.a.a.k $r9;
        java.lang.String $r2, $r11;
        boolean $z0, $z1;
        java.io.File $r1, $r4, $r5;
        java.lang.Exception $r13;
        com.crashlytics.android.core.CodedOutputStream $r6, $r8;
        java.lang.StringBuilder $r10;
        java.io.File[] $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.io.File[];

        $r4 := @parameter3: java.io.File;

        if $r4 == null goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label03;

        $r5 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFatalSessionFilesDir()>();

        goto label04;

     label03:
        $r5 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getNonFatalSessionFilesDir()>();

     label04:
        $z1 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label05;

        virtualinvoke $r5.<java.io.File: boolean mkdirs()>();

     label05:
        $r6 = null;

     label06:
        $r7 = new com.crashlytics.android.core.ClsFileOutputStream;

     label07:
        specialinvoke $r7.<com.crashlytics.android.core.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r5, $r2);

     label08:
        $r8 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream)>($r7);

     label09:
        $r6 = $r8;

     label10:
        $r9 = staticinvoke <h.a.a.a.c: h.a.a.a.k p()>();

     label11:
        $r10 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collecting SessionStart data for session ID ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<h.a.a.a.k: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r11);

        staticinvoke <com.crashlytics.android.core.CrashlyticsController: void writeToCosFromFile(com.crashlytics.android.core.CodedOutputStream,java.io.File)>($r8, $r1);

     label13:
        $r12 = new java.util.Date;

     label14:
        specialinvoke $r12.<java.util.Date: void <init>()>();

        $l0 = virtualinvoke $r12.<java.util.Date: long getTime()>();

     label15:
        $l0 = $l0 / 1000L;

     label16:
        virtualinvoke $r8.<com.crashlytics.android.core.CodedOutputStream: void writeUInt64(int,long)>(4, $l0);

        virtualinvoke $r8.<com.crashlytics.android.core.CodedOutputStream: void writeBool(int,boolean)>(5, $z0);

        virtualinvoke $r8.<com.crashlytics.android.core.CodedOutputStream: void writeUInt32(int,int)>(11, 1);

        virtualinvoke $r8.<com.crashlytics.android.core.CodedOutputStream: void writeEnum(int,int)>(12, 3);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeInitialPartsTo(com.crashlytics.android.core.CodedOutputStream,java.lang.String)>($r8, $r2);

        staticinvoke <com.crashlytics.android.core.CrashlyticsController: void writeNonFatalEventsTo(com.crashlytics.android.core.CodedOutputStream,java.io.File[],java.lang.String)>($r8, $r3, $r2);

     label17:
        if $z0 == 0 goto label19;

     label18:
        staticinvoke <com.crashlytics.android.core.CrashlyticsController: void writeToCosFromFile(com.crashlytics.android.core.CodedOutputStream,java.io.File)>($r8, $r4);

     label19:
        staticinvoke <h.a.a.a.m.b.i: void k(java.io.Flushable,java.lang.String)>($r8, "Error flushing session file stream");

        staticinvoke <h.a.a.a.m.b.i: void e(java.io.Closeable,java.lang.String)>($r7, "Failed to close CLS file");

        return;

     label20:
        $r13 := @caughtexception;

        goto label23;

     label21:
        $r14 := @caughtexception;

        $r7 = null;

        goto label26;

     label22:
        $r13 := @caughtexception;

        $r7 = null;

     label23:
        $r9 = staticinvoke <h.a.a.a.c: h.a.a.a.k p()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write session file for session ID: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<h.a.a.a.k: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", $r2, $r13);

     label24:
        staticinvoke <h.a.a.a.m.b.i: void k(java.io.Flushable,java.lang.String)>($r6, "Error flushing session file stream");

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void closeWithoutRenamingOrLog(com.crashlytics.android.core.ClsFileOutputStream)>($r7);

        return;

     label25:
        $r14 := @caughtexception;

     label26:
        staticinvoke <h.a.a.a.m.b.i: void k(java.io.Flushable,java.lang.String)>($r6, "Error flushing session file stream");

        staticinvoke <h.a.a.a.m.b.i: void e(java.io.Closeable,java.lang.String)>($r7, "Failed to close CLS file");

        throw $r14;

        catch java.lang.Exception from label07 to label08 with label22;
        catch java.lang.Throwable from label06 to label08 with label21;
        catch java.lang.Exception from label08 to label09 with label20;
        catch java.lang.Exception from label10 to label11 with label20;
        catch java.lang.Exception from label12 to label13 with label20;
        catch java.lang.Exception from label14 to label15 with label20;
        catch java.lang.Exception from label16 to label17 with label20;
        catch java.lang.Exception from label18 to label19 with label20;
        catch java.lang.Throwable from label08 to label09 with label25;
        catch java.lang.Throwable from label10 to label15 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
    }
