    public java.lang.Object applyN(java.lang.Object[]) throws java.lang.Throwable
    {
        gnu.mapping.MethodProc r0;
        java.lang.Object[] $r1;
        gnu.mapping.CallContext $r2;
        int $i0;
        java.lang.Object $r3;

        r0 := @this: gnu.mapping.MethodProc;

        $r1 := @parameter0: java.lang.Object[];

        $i0 = lengthof $r1;

        staticinvoke <gnu.mapping.MethodProc: void checkArgCount(gnu.mapping.Procedure,int)>(r0, $i0);

        $r2 = staticinvoke <gnu.mapping.CallContext: gnu.mapping.CallContext getInstance()>();

        virtualinvoke r0.<gnu.mapping.MethodProc: void checkN(java.lang.Object[],gnu.mapping.CallContext)>($r1, $r2);

        $r3 = virtualinvoke $r2.<gnu.mapping.CallContext: java.lang.Object runUntilValue()>();

        return $r3;
    }
