    public static java.net.URL toURL(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.net.URL $r3;
        java.lang.String $r0, r1;
        java.lang.RuntimeException $r5;
        boolean $z0;
        gnu.text.Path $r2;

        $r0 := @parameter0: java.lang.String;

        r1 = $r0;

     label01:
        $z0 = staticinvoke <gnu.text.Path: boolean uriSchemeSpecified(java.lang.String)>($r0);

     label02:
        if $z0 != 0 goto label09;

     label03:
        $r2 = staticinvoke <gnu.text.Path: gnu.text.Path currentPath()>();

        $r2 = virtualinvoke $r2.<gnu.text.Path: gnu.text.Path resolve(java.lang.String)>($r0);

        $z0 = virtualinvoke $r2.<gnu.text.Path: boolean isAbsolute()>();

     label04:
        if $z0 == 0 goto label07;

     label05:
        $r3 = virtualinvoke $r2.<gnu.text.Path: java.net.URL toURL()>();

     label06:
        return $r3;

     label07:
        $r0 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

     label08:
        r1 = $r0;

     label09:
        $r3 = new java.net.URL;

        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>(r1);

     label10:
        return $r3;

     label11:
        $r4 := @caughtexception;

        $r5 = staticinvoke <gnu.mapping.WrappedException: java.lang.RuntimeException wrapIfNeeded(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }
