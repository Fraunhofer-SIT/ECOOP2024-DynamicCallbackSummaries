    private org.json.JSONObject j()
    {
        java.lang.Throwable $r11, $r12;
        io.dcloud.common.util.ThreadPool $r9;
        java.util.HashMap $r8;
        java.util.ArrayList $r7;
        io.dcloud.common.DHInterface.IConfusionMgr $r13;
        org.json.JSONObject $r1, $r4, $r6;
        java.util.Map $r14;
        int $i0;
        java.lang.String $r2, $r5;
        boolean $z0, $z1, $z2;
        io.dcloud.g.a.e$b $r10, $r18;
        java.io.IOException $r19;
        java.lang.Exception $r15;
        java.io.File $r17;
        io.dcloud.g.a.e r0;
        java.lang.StringBuilder $r16;
        java.io.InputStream $r3;

        r0 := @this: io.dcloud.g.a.e;

        $r1 = null;

        $z0 = <io.dcloud.common.util.BaseInfo: boolean sCoverApkRuning>;

        $z1 = 1;

        $z2 = 0;

        if $z0 == 0 goto label18;

        $r17 = new java.io.File;

        $r16 = new java.lang.StringBuilder;

     label01:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

     label02:
        $r2 = <io.dcloud.common.util.BaseInfo: java.lang.String sBaseWap2AppTemplatePath>;

     label03:
        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wap2app__template/");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("__template.json");

        $r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r17.<java.io.File: boolean exists()>();

     label04:
        if $z0 == 0 goto label18;

        $r2 = <io.dcloud.common.util.BaseInfo: java.lang.String sBaseConfigTemplatePath>;

     label05:
        $r3 = staticinvoke <io.dcloud.common.adapter.util.PlatformUtil: java.io.InputStream getInputStream(java.lang.String)>($r2);

        $r4 = specialinvoke r0.<io.dcloud.g.a.e: org.json.JSONObject a(java.io.InputStream)>($r3);

        $r2 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("version");

        staticinvoke <io.dcloud.common.util.IOUtil: void close(java.io.InputStream)>($r3);

     label06:
        $r16 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

     label08:
        $r5 = <io.dcloud.common.util.BaseInfo: java.lang.String sBaseWap2AppTemplatePath>;

     label09:
        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wap2app__template/");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("__template.json");

        $r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = staticinvoke <io.dcloud.common.adapter.io.DHFile: java.io.InputStream getInputStream(java.lang.Object)>($r5);

        $r6 = specialinvoke r0.<io.dcloud.g.a.e: org.json.JSONObject a(java.io.InputStream)>($r3);

        $r5 = virtualinvoke $r6.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("version");

        staticinvoke <io.dcloud.common.util.IOUtil: void close(java.io.InputStream)>($r3);

     label10:
        $r7 = <io.dcloud.common.util.BaseInfo: java.util.ArrayList mWap2appTemplateFiles>;

     label11:
        virtualinvoke $r7.<java.util.ArrayList: void clear()>();

     label12:
        $r8 = <io.dcloud.common.util.BaseInfo: java.util.HashMap mW2AE>;

     label13:
        virtualinvoke $r8.<java.util.HashMap: void clear()>();

        $z0 = staticinvoke <io.dcloud.common.util.BaseInfo$BaseAppInfo: boolean compareVersion(java.lang.String,java.lang.String)>($r2, $r5);

     label14:
        if $z0 == 0 goto label17;

     label15:
        specialinvoke r0.<io.dcloud.g.a.e: void f()>();

     label16:
        $r1 = $r4;

        $z2 = 1;

        goto label18;

     label17:
        $r1 = $r6;

     label18:
        $r16 = new java.lang.StringBuilder;

     label19:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

     label20:
        $r2 = <io.dcloud.common.util.BaseInfo: java.lang.String sBaseWap2AppTemplatePath>;

     label21:
        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wap2app__template.zip");

        $r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = staticinvoke <io.dcloud.common.adapter.io.DHFile: boolean isExist(java.lang.String)>($r2);

     label22:
        if $z0 == 0 goto label55;

        $r16 = new java.lang.StringBuilder;

     label23:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

     label24:
        $r2 = <io.dcloud.common.util.BaseInfo: java.lang.String sBaseWap2AppTemplatePath>;

     label25:
        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wap2app__template/");

        $r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label26:
        $r16 = new java.lang.StringBuilder;

     label27:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

     label28:
        $r5 = <io.dcloud.common.util.BaseInfo: java.lang.String sBaseWap2AppTemplatePath>;

     label29:
        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wap2app_temp/");

        $r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <io.dcloud.common.adapter.io.DHFile: int rename(java.lang.String,java.lang.String)>($r2, $r5);

     label30:
        $r17 = new java.io.File;

     label31:
        $r16 = new java.lang.StringBuilder;

     label32:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

     label33:
        $r2 = <io.dcloud.common.util.BaseInfo: java.lang.String sBaseWap2AppTemplatePath>;

     label34:
        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wap2app__template.zip");

        $r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r2);

     label35:
        $r16 = new java.lang.StringBuilder;

     label36:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

     label37:
        $r2 = <io.dcloud.common.util.BaseInfo: java.lang.String sBaseWap2AppTemplatePath>;

     label38:
        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wap2app__template/");

        $r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <io.dcloud.common.util.ZipUtils: void upZipFile(java.io.File,java.lang.String)>($r17, $r2);

     label39:
        $r9 = staticinvoke <io.dcloud.common.util.ThreadPool: io.dcloud.common.util.ThreadPool self()>();

     label40:
        $r18 = new io.dcloud.g.a.e$b;

        $r10 = $r18;

     label41:
        specialinvoke $r18.<io.dcloud.g.a.e$b: void <init>(io.dcloud.g.a.e)>(r0);

     label42:
        goto label50;

     label43:
        $r11 := @caughtexception;

        goto label52;

     label44:
        $r12 := @caughtexception;

     label45:
        $r19 = (java.io.IOException) $r12;

        virtualinvoke $r19.<java.io.IOException: void printStackTrace()>();

     label46:
        $r9 = staticinvoke <io.dcloud.common.util.ThreadPool: io.dcloud.common.util.ThreadPool self()>();

     label47:
        $r18 = new io.dcloud.g.a.e$b;

        $r10 = $r18;

     label48:
        specialinvoke $r18.<io.dcloud.g.a.e$b: void <init>(io.dcloud.g.a.e)>(r0);

     label49:
        $z1 = $z2;

     label50:
        virtualinvoke $r9.<io.dcloud.common.util.ThreadPool: void addThreadTask(java.lang.Runnable)>($r10);

     label51:
        goto label63;

     label52:
        $r9 = staticinvoke <io.dcloud.common.util.ThreadPool: io.dcloud.common.util.ThreadPool self()>();

     label53:
        $r18 = new io.dcloud.g.a.e$b;

     label54:
        specialinvoke $r18.<io.dcloud.g.a.e$b: void <init>(io.dcloud.g.a.e)>(r0);

        virtualinvoke $r9.<io.dcloud.common.util.ThreadPool: void addThreadTask(java.lang.Runnable)>($r18);

        throw $r11;

     label55:
        $r17 = new java.io.File;

        $r16 = new java.lang.StringBuilder;

     label56:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

     label57:
        $r2 = <io.dcloud.common.util.BaseInfo: java.lang.String sBaseWap2AppTemplatePath>;

     label58:
        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wap2app__template/");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("__template.json");

        $r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r17.<java.io.File: boolean exists()>();

     label59:
        if $z0 != 0 goto label62;

     label60:
        specialinvoke r0.<io.dcloud.g.a.e: void f()>();

     label61:
        goto label63;

     label62:
        $z1 = $z2;

     label63:
        if $z1 != 0 goto label70;

        $r2 = <io.dcloud.common.util.BaseInfo: java.lang.String sWap2AppTemplateVersion>;

     label64:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

     label65:
        if $z1 != 0 goto label70;

        $r7 = <io.dcloud.common.util.BaseInfo: java.util.ArrayList mWap2appTemplateFiles>;

     label66:
        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

     label67:
        if $i0 == 0 goto label70;

     label68:
        $r13 = r0.<io.dcloud.g.a.e: io.dcloud.common.DHInterface.IConfusionMgr p1>;

        $r14 = interfaceinvoke $r13.<io.dcloud.common.DHInterface.IConfusionMgr: java.util.Map getData(java.lang.String)>("__w2a__template__");

     label69:
        if $r14 != null goto label86;

     label70:
        $r16 = new java.lang.StringBuilder;

     label71:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

     label72:
        $r2 = <io.dcloud.common.util.BaseInfo: java.lang.String sBaseWap2AppTemplatePath>;

     label73:
        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wap2app__template/");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("__template.json");

        $r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = staticinvoke <io.dcloud.common.adapter.io.DHFile: boolean isExist(java.lang.String)>($r2);

     label74:
        if $z1 == 0 goto label86;

        $r16 = new java.lang.StringBuilder;

     label75:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

     label76:
        $r2 = <io.dcloud.common.util.BaseInfo: java.lang.String sBaseWap2AppTemplatePath>;

     label77:
        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wap2app__template/");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("__template.json");

        $r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = staticinvoke <io.dcloud.common.adapter.io.DHFile: java.io.InputStream getInputStream(java.lang.Object)>($r2);

        $r4 = specialinvoke r0.<io.dcloud.g.a.e: org.json.JSONObject a(java.io.InputStream)>($r3);

     label78:
        $r1 = $r4;

     label79:
        staticinvoke <io.dcloud.common.util.IOUtil: void close(java.io.InputStream)>($r3);

     label80:
        $r7 = <io.dcloud.common.util.BaseInfo: java.util.ArrayList mWap2appTemplateFiles>;

     label81:
        virtualinvoke $r7.<java.util.ArrayList: void clear()>();

     label82:
        $r8 = <io.dcloud.common.util.BaseInfo: java.util.HashMap mW2AE>;

     label83:
        virtualinvoke $r8.<java.util.HashMap: void clear()>();

        $r13 = r0.<io.dcloud.g.a.e: io.dcloud.common.DHInterface.IConfusionMgr p1>;

        interfaceinvoke $r13.<io.dcloud.common.DHInterface.IConfusionMgr: void removeData(java.lang.String)>("__w2a__template__");

     label84:
        return $r4;

     label85:
        $r15 := @caughtexception;

        virtualinvoke $r15.<java.lang.Exception: void printStackTrace()>();

     label86:
        return $r1;

        catch java.lang.Exception from label01 to label02 with label85;
        catch java.lang.Exception from label03 to label04 with label85;
        catch java.lang.Exception from label05 to label06 with label85;
        catch java.lang.Exception from label07 to label08 with label85;
        catch java.lang.Exception from label09 to label10 with label85;
        catch java.lang.Exception from label11 to label12 with label85;
        catch java.lang.Exception from label13 to label14 with label85;
        catch java.lang.Exception from label15 to label16 with label85;
        catch java.lang.Exception from label19 to label20 with label85;
        catch java.lang.Exception from label21 to label22 with label85;
        catch java.lang.Exception from label23 to label24 with label85;
        catch java.lang.Exception from label25 to label26 with label85;
        catch java.lang.Exception from label27 to label28 with label85;
        catch java.lang.Exception from label29 to label30 with label85;
        catch java.io.IOException from label32 to label33 with label44;
        catch java.io.IOException from label34 to label35 with label44;
        catch java.io.IOException from label36 to label37 with label44;
        catch java.io.IOException from label38 to label39 with label44;
        catch java.lang.Throwable from label30 to label31 with label43;
        catch java.lang.Throwable from label31 to label32 with label43;
        catch java.lang.Throwable from label32 to label36 with label43;
        catch java.lang.Throwable from label36 to label39 with label43;
        catch java.lang.Exception from label39 to label40 with label85;
        catch java.lang.Exception from label41 to label42 with label85;
        catch java.lang.Throwable from label45 to label46 with label43;
        catch java.lang.Exception from label46 to label47 with label85;
        catch java.lang.Exception from label48 to label49 with label85;
        catch java.lang.Exception from label50 to label51 with label85;
        catch java.lang.Exception from label52 to label53 with label85;
        catch java.lang.Exception from label54 to label55 with label85;
        catch java.lang.Exception from label56 to label57 with label85;
        catch java.lang.Exception from label58 to label59 with label85;
        catch java.lang.Exception from label60 to label61 with label85;
        catch java.lang.Exception from label64 to label65 with label85;
        catch java.lang.Exception from label66 to label67 with label85;
        catch java.lang.Exception from label68 to label69 with label85;
        catch java.lang.Exception from label71 to label72 with label85;
        catch java.lang.Exception from label73 to label74 with label85;
        catch java.lang.Exception from label75 to label76 with label85;
        catch java.lang.Exception from label77 to label78 with label85;
        catch java.lang.Exception from label79 to label80 with label85;
        catch java.lang.Exception from label81 to label82 with label85;
        catch java.lang.Exception from label83 to label84 with label85;
    }
