    public static byte[] zipString(java.lang.String)
    {
        java.lang.Throwable $r2;
        byte[] $r1;
        java.io.ByteArrayOutputStream $r3;
        java.util.zip.GZIPOutputStream $r4;
        java.io.IOException $r5;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        $r4 = new java.util.zip.GZIPOutputStream;

     label1:
        specialinvoke $r4.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r3);

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r4.<java.util.zip.GZIPOutputStream: void write(byte[])>($r1);

        virtualinvoke $r4.<java.util.zip.GZIPOutputStream: void flush()>();

        virtualinvoke $r4.<java.util.zip.GZIPOutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r5 = (java.io.IOException) $r2;

        virtualinvoke $r5.<java.io.IOException: void printStackTrace()>();

     label4:
        $r1 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r1;

        catch java.io.IOException from label1 to label2 with label3;
    }
