    public static byte[] getFileContent(java.lang.String, int)
    {
        java.lang.Throwable $r0, $r5;
        byte[] $r3, $r4;
        java.io.IOException $r6;
        int $i0;
        java.lang.String $r1;
        java.io.InputStream $r2;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = staticinvoke <io.dcloud.common.adapter.util.PlatformUtil: java.io.InputStream getInputStream(java.lang.String,int)>($r1, $i0);

        $r3 = null;

        if $r2 == null goto label8;

     label1:
        $r4 = staticinvoke <io.dcloud.common.util.IOUtil: byte[] getBytes(java.io.InputStream)>($r2);

     label2:
        $r3 = $r4;

        goto label8;

     label3:
        $r5 := @caughtexception;

        goto label7;

     label4:
        $r0 := @caughtexception;

     label5:
        $r6 = (java.io.IOException) $r0;

        virtualinvoke $r6.<java.io.IOException: void printStackTrace()>();

     label6:
        goto label8;

     label7:
        staticinvoke <io.dcloud.common.util.IOUtil: void close(java.io.InputStream)>($r2);

        throw $r5;

     label8:
        staticinvoke <io.dcloud.common.util.IOUtil: void close(java.io.InputStream)>($r2);

        return $r3;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }
