    public static boolean writeFile(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r7;
        byte[] $r6;
        java.io.FileOutputStream $r4, $r5;
        java.io.File $r2, $r3;
        java.lang.Exception $r8;
        int $i0;
        java.lang.String $r1;
        java.io.InputStream $r0;
        boolean $z0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.io.File: java.io.File getParentFile()>();

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        virtualinvoke $r3.<java.io.File: boolean mkdirs()>();

     label01:
        $r4 = null;

        $z0 = 0;

     label02:
        $r5 = new java.io.FileOutputStream;

     label03:
        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>($r2);

     label04:
        if $r0 == null goto label15;

        $r6 = newarray (byte)[204800];

     label05:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r6);

     label06:
        if $i0 <= 0 goto label09;

     label07:
        virtualinvoke $r5.<java.io.FileOutputStream: void write(byte[],int,int)>($r6, 0, $i0);

     label08:
        goto label05;

     label09:
        $z0 = 1;

        goto label15;

     label10:
        $r7 := @caughtexception;

        $r4 = $r5;

        goto label17;

     label11:
        $r8 := @caughtexception;

        $r4 = $r5;

        goto label13;

     label12:
        $r8 := @caughtexception;

     label13:
        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

     label14:
        $r5 = $r4;

     label15:
        staticinvoke <io.dcloud.common.util.IOUtil: void close(java.io.OutputStream)>($r5);

        return $z0;

     label16:
        $r7 := @caughtexception;

     label17:
        staticinvoke <io.dcloud.common.util.IOUtil: void close(java.io.OutputStream)>($r4);

        throw $r7;

        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Throwable from label02 to label04 with label16;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label13 to label14 with label16;
    }
