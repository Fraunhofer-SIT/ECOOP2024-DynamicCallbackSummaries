    public void writePosition(gnu.lists.AbstractSequence, int)
    {
        gnu.lists.AbstractSequence $r1;
        gnu.xml.XMLFilter r0;
        int $i0, $i1;

        r0 := @this: gnu.xml.XMLFilter;

        $r1 := @parameter0: gnu.lists.AbstractSequence;

        $i0 := @parameter1: int;

        $i1 = r0.<gnu.xml.XMLFilter: int ignoringLevel>;

        if $i1 <= 0 goto label1;

        return;

     label1:
        $i1 = r0.<gnu.xml.XMLFilter: int stringizingLevel>;

        if $i1 <= 0 goto label3;

        $i1 = r0.<gnu.xml.XMLFilter: int previous>;

        if $i1 != 2 goto label3;

        $i1 = r0.<gnu.xml.XMLFilter: int stringizingElementNesting>;

        if $i1 >= 0 goto label2;

        virtualinvoke r0.<gnu.xml.XMLFilter: void write(int)>(32);

     label2:
        r0.<gnu.xml.XMLFilter: int previous> = 0;

     label3:
        virtualinvoke $r1.<gnu.lists.AbstractSequence: boolean consumeNext(int,gnu.lists.Consumer)>($i0, r0);

        $i0 = r0.<gnu.xml.XMLFilter: int stringizingLevel>;

        if $i0 <= 0 goto label4;

        $i0 = r0.<gnu.xml.XMLFilter: int stringizingElementNesting>;

        if $i0 >= 0 goto label4;

        r0.<gnu.xml.XMLFilter: int previous> = 2;

     label4:
        return;
    }
