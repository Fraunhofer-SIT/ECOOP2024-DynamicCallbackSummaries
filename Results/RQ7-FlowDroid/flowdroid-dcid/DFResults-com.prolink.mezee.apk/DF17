Source: $i0 = virtualinvoke r0.<com.facebook.common.streams.TailAppendingInputStream: int read(byte[],int,int)>($r1, 0, $i0)
$i0 = virtualinvoke r0.<com.facebook.common.streams.TailAppendingInputStream: int read(byte[],int,int)>($r1, 0, $i0) in <com.facebook.common.streams.TailAppendingInputStream: int read(byte[])>
Sink: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i0) in <com.facebook.common.memory.PooledByteStreams: long copy(java.io.InputStream,java.io.OutputStream)>

<com.facebook.common.streams.TailAppendingInputStream: int read(byte[])>: $i0 = virtualinvoke r0.<com.facebook.common.streams.TailAppendingInputStream: int read(byte[],int,int)>($r1, 0, $i0)
<com.facebook.common.streams.TailAppendingInputStream: int read(byte[])>: r0 := @this: com.facebook.common.streams.TailAppendingInputStream
<com.facebook.common.memory.PooledByteArrayBufferedInputStream: boolean ensureDataInBuffer()>: $r2 = r0.<com.facebook.common.memory.PooledByteArrayBufferedInputStream: byte[] mByteArray>
<com.facebook.common.memory.PooledByteArrayBufferedInputStream: boolean ensureDataInBuffer()>: return 0
<com.facebook.common.memory.PooledByteArrayBufferedInputStream: int read(byte[],int,int)>: $r2 = r0.<com.facebook.common.memory.PooledByteArrayBufferedInputStream: byte[] mByteArray>
<com.facebook.common.memory.PooledByteArrayBufferedInputStream: int read(byte[],int,int)>: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, $r1, $i0, $i1)
<com.facebook.common.memory.PooledByteArrayBufferedInputStream: int read(byte[],int,int)>: return $i1
<com.facebook.common.memory.PooledByteStreams: long copy(java.io.InputStream,java.io.OutputStream)>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i0)
