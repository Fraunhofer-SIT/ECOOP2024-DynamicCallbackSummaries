    public java.lang.Object apply1(java.lang.Object)
    {
        gnu.kawa.xml.MakeText r0;
        gnu.xml.XMLFilter $r4;
        gnu.mapping.Values $r3;
        java.lang.Object r2;
        gnu.xml.NodeTree r1;
        boolean $z0;
        gnu.kawa.xml.KNode $r5;

        r0 := @this: gnu.kawa.xml.MakeText;

        r2 := @parameter0: java.lang.Object;

        if r2 == null goto label2;

        $z0 = r2 instanceof gnu.mapping.Values;

        if $z0 == 0 goto label1;

        $r3 = (gnu.mapping.Values) r2;

        $z0 = virtualinvoke $r3.<gnu.mapping.Values: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return r2;

     label1:
        r1 = new gnu.xml.NodeTree;

        specialinvoke r1.<gnu.xml.NodeTree: void <init>()>();

        $r4 = new gnu.xml.XMLFilter;

        specialinvoke $r4.<gnu.xml.XMLFilter: void <init>(gnu.lists.Consumer)>(r1);

        staticinvoke <gnu.xml.TextUtils: void textValue(java.lang.Object,gnu.lists.Consumer)>(r2, $r4);

        $r5 = staticinvoke <gnu.kawa.xml.KText: gnu.kawa.xml.KNode make(gnu.xml.NodeTree)>(r1);

        return $r5;

     label2:
        return r2;
    }
