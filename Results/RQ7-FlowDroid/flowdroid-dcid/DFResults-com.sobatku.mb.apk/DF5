Source: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r2)
$i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r2) in <com.itextpdf.text.io.StreamUtil: byte[] inputStreamToArray(java.io.InputStream)>
Sink: virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(byte[])>($r2) in <com.itextpdf.text.pdf.CJKFont: byte[] convertToBytes(java.lang.String)>

<com.itextpdf.text.io.StreamUtil: byte[] inputStreamToArray(java.io.InputStream)>: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r2)
<com.itextpdf.text.io.StreamUtil: byte[] inputStreamToArray(java.io.InputStream)>: virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, 0, $i0)
<com.itextpdf.text.io.StreamUtil: byte[] inputStreamToArray(java.io.InputStream)>: $r2 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
<com.itextpdf.text.io.StreamUtil: byte[] inputStreamToArray(java.io.InputStream)>: return $r2
<com.itextpdf.text.io.RandomAccessSourceFactory: com.itextpdf.text.io.RandomAccessSource createByReadingToMemory(java.io.InputStream)>: specialinvoke $r5.<com.itextpdf.text.io.ArrayRandomAccessSource: void <init>(byte[])>($r2)
<com.itextpdf.text.io.ArrayRandomAccessSource: void <init>(byte[])>: r0.<com.itextpdf.text.io.ArrayRandomAccessSource: byte[] array> = $r1
<com.itextpdf.text.io.ArrayRandomAccessSource: void <init>(byte[])>: return
<com.itextpdf.text.io.RandomAccessSourceFactory: com.itextpdf.text.io.RandomAccessSource createByReadingToMemory(java.io.InputStream)>: return $r5
<com.itextpdf.text.io.RandomAccessSourceFactory: com.itextpdf.text.io.RandomAccessSource createBestSource(java.lang.String)>: return $r5
<com.itextpdf.text.pdf.RandomAccessFileOrArray: void <init>(java.lang.String,boolean,boolean)>: specialinvoke r0.<com.itextpdf.text.pdf.RandomAccessFileOrArray: void <init>(com.itextpdf.text.io.RandomAccessSource)>($r3)
<com.itextpdf.text.pdf.RandomAccessFileOrArray: void <init>(com.itextpdf.text.io.RandomAccessSource)>: r0.<com.itextpdf.text.pdf.RandomAccessFileOrArray: com.itextpdf.text.io.RandomAccessSource byteSource> = $r1
<com.itextpdf.text.pdf.RandomAccessFileOrArray: void <init>(com.itextpdf.text.io.RandomAccessSource)>: return
<com.itextpdf.text.pdf.RandomAccessFileOrArray: void <init>(java.lang.String,boolean,boolean)>: return
<com.itextpdf.text.pdf.TrueTypeFont: void process(byte[],boolean)>: r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf> = $r3
<com.itextpdf.text.pdf.TrueTypeFont: void process(byte[],boolean)>: $r4 = virtualinvoke r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String getBaseFont()>()
<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String getBaseFont()>: $r4 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>
<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String getBaseFont()>: $i6 = virtualinvoke $r4.<com.itextpdf.text.pdf.RandomAccessFileOrArray: int readUnsignedShort()>()
<com.itextpdf.text.pdf.RandomAccessFileOrArray: int readUnsignedShort()>: return $i2
<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String getBaseFont()>: $r4 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>
<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String getBaseFont()>: $r4 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>
<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String getBaseFont()>: $i7 = virtualinvoke $r4.<com.itextpdf.text.pdf.RandomAccessFileOrArray: int readUnsignedShort()>()
<com.itextpdf.text.pdf.RandomAccessFileOrArray: int readUnsignedShort()>: throw $r1
<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String getBaseFont()>: $r4 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>
<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String getBaseFont()>: return $r5
<com.itextpdf.text.pdf.TrueTypeFont: void process(byte[],boolean)>: $r4 = virtualinvoke r0.<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String readStandardString(int)>(4)
<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String readStandardString(int)>: $r1 = r0.<com.itextpdf.text.pdf.TrueTypeFont: com.itextpdf.text.pdf.RandomAccessFileOrArray rf>
<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String readStandardString(int)>: $r2 = virtualinvoke $r1.<com.itextpdf.text.pdf.RandomAccessFileOrArray: java.lang.String readString(int,java.lang.String)>($i0, "Cp1252")
<com.itextpdf.text.pdf.RandomAccessFileOrArray: java.lang.String readString(int,java.lang.String)>: virtualinvoke r0.<com.itextpdf.text.pdf.RandomAccessFileOrArray: void readFully(byte[])>($r3)
<com.itextpdf.text.pdf.RandomAccessFileOrArray: void readFully(byte[])>: virtualinvoke r0.<com.itextpdf.text.pdf.RandomAccessFileOrArray: void readFully(byte[],int,int)>($r1, 0, $i0)
<com.itextpdf.text.pdf.RandomAccessFileOrArray: void readFully(byte[],int,int)>: $i2 = virtualinvoke r0.<com.itextpdf.text.pdf.RandomAccessFileOrArray: int read(byte[],int,int)>($r1, $i4, $i2)
<com.itextpdf.text.pdf.RandomAccessFileOrArray: int read(byte[],int,int)>: $r2 = r0.<com.itextpdf.text.pdf.RandomAccessFileOrArray: com.itextpdf.text.io.RandomAccessSource byteSource>
<com.itextpdf.text.pdf.RandomAccessFileOrArray: int read(byte[],int,int)>: $i0 = interfaceinvoke $r2.<com.itextpdf.text.io.RandomAccessSource: int get(long,byte[],int,int)>($l4, $r1, $i2, $i0)
<com.itextpdf.text.io.ArrayRandomAccessSource: int get(long,byte[],int,int)>: $r2 = r0.<com.itextpdf.text.io.ArrayRandomAccessSource: byte[] array>
<com.itextpdf.text.io.ArrayRandomAccessSource: int get(long,byte[],int,int)>: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i4, $r1, $i0, $i3)
<com.itextpdf.text.io.ArrayRandomAccessSource: int get(long,byte[],int,int)>: return $i3
<com.itextpdf.text.pdf.RandomAccessFileOrArray: int read(byte[],int,int)>: return -1
<com.itextpdf.text.pdf.RandomAccessFileOrArray: void readFully(byte[],int,int)>: throw $r2
<com.itextpdf.text.pdf.RandomAccessFileOrArray: void readFully(byte[])>: return
<com.itextpdf.text.pdf.RandomAccessFileOrArray: java.lang.String readString(int,java.lang.String)>: specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, "Cp1252")
<com.itextpdf.text.pdf.RandomAccessFileOrArray: java.lang.String readString(int,java.lang.String)>: return $r1
<com.itextpdf.text.pdf.TrueTypeFont: java.lang.String readStandardString(int)>: return $r2
<com.itextpdf.text.pdf.TrueTypeFont: void process(byte[],boolean)>: virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r7)
<com.itextpdf.text.pdf.TrueTypeFont: void process(byte[],boolean)>: $r2 = r0.<com.itextpdf.text.pdf.TrueTypeFont: java.util.HashMap tables>
<com.itextpdf.text.pdf.TrueTypeFont: void process(byte[],boolean)>: throw $r10
<com.itextpdf.text.pdf.TrueTypeFont: void <init>(java.lang.String,java.lang.String,boolean,byte[],boolean,boolean)>: return
<com.itextpdf.text.pdf.BaseFont: com.itextpdf.text.pdf.BaseFont createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)>: $r9 = $r16
<com.itextpdf.text.pdf.BaseFont: com.itextpdf.text.pdf.BaseFont createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)>: virtualinvoke $r7.<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r6, $r9)
<com.itextpdf.text.pdf.BaseFont: com.itextpdf.text.pdf.BaseFont createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)>: $r7 = <com.itextpdf.text.pdf.BaseFont: java.util.concurrent.ConcurrentHashMap fontCache>
<com.itextpdf.text.pdf.BaseFont: com.itextpdf.text.pdf.BaseFont createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)>: $r7 = <com.itextpdf.text.pdf.BaseFont: java.util.concurrent.ConcurrentHashMap fontCache>
<com.itextpdf.text.pdf.BaseFont: com.itextpdf.text.pdf.BaseFont createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)>: $r8 = virtualinvoke $r7.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r6)
<com.itextpdf.text.pdf.BaseFont: com.itextpdf.text.pdf.BaseFont createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)>: $r12 = (com.itextpdf.text.pdf.BaseFont) $r8
<com.itextpdf.text.pdf.BaseFont: com.itextpdf.text.pdf.BaseFont createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)>: return $r12
<com.itextpdf.text.pdf.BaseFont: com.itextpdf.text.pdf.BaseFont createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean)>: return $r3
<com.itextpdf.text.pdf.BaseFont: com.itextpdf.text.pdf.BaseFont createFont(java.lang.String,java.lang.String,boolean)>: return $r1
<com.itextpdf.text.pdf.PdfFont: com.itextpdf.text.pdf.PdfFont getDefaultFont()>: specialinvoke $r1.<com.itextpdf.text.pdf.PdfFont: void <init>(com.itextpdf.text.pdf.BaseFont,float)>($r0, 12.0F)
<com.itextpdf.text.pdf.PdfFont: void <init>(com.itextpdf.text.pdf.BaseFont,float)>: r0.<com.itextpdf.text.pdf.PdfFont: com.itextpdf.text.pdf.BaseFont font> = $r1
<com.itextpdf.text.pdf.PdfFont: void <init>(com.itextpdf.text.pdf.BaseFont,float)>: return
<com.itextpdf.text.pdf.PdfFont: com.itextpdf.text.pdf.PdfFont getDefaultFont()>: return $r1
<com.itextpdf.text.pdf.PdfChunk: com.itextpdf.text.pdf.PdfChunk truncate(float)>: r0.<com.itextpdf.text.pdf.PdfChunk: com.itextpdf.text.pdf.PdfFont font> = $r3
<com.itextpdf.text.pdf.PdfChunk: com.itextpdf.text.pdf.PdfChunk truncate(float)>: return $r6
<com.itextpdf.text.pdf.PdfLine: com.itextpdf.text.pdf.PdfChunk add(com.itextpdf.text.pdf.PdfChunk)>: $f1 = virtualinvoke $r3.<com.itextpdf.text.pdf.PdfChunk: float width()>()
<com.itextpdf.text.pdf.PdfChunk: float width()>: $f0 = virtualinvoke r0.<com.itextpdf.text.pdf.PdfChunk: float width(java.lang.String)>($r1)
<com.itextpdf.text.pdf.PdfChunk: float width(java.lang.String)>: $r2 = r0.<com.itextpdf.text.pdf.PdfChunk: com.itextpdf.text.pdf.PdfFont font>
<com.itextpdf.text.pdf.PdfChunk: float width(java.lang.String)>: $f0 = virtualinvoke $r2.<com.itextpdf.text.pdf.PdfFont: float width(java.lang.String)>($r1)
<com.itextpdf.text.pdf.PdfFont: float width(java.lang.String)>: $r2 = r0.<com.itextpdf.text.pdf.PdfFont: com.itextpdf.text.pdf.BaseFont font>
<com.itextpdf.text.pdf.PdfFont: float width(java.lang.String)>: $f0 = virtualinvoke $r2.<com.itextpdf.text.pdf.BaseFont: float getWidthPoint(java.lang.String,float)>($r1, $f0)
<com.itextpdf.text.pdf.BaseFont: float getWidthPoint(java.lang.String,float)>: $i0 = virtualinvoke r0.<com.itextpdf.text.pdf.BaseFont: int getWidth(java.lang.String)>($r1)
<com.itextpdf.text.pdf.BaseFont: int getWidth(java.lang.String)>: $r4 = virtualinvoke r0.<com.itextpdf.text.pdf.BaseFont: byte[] convertToBytes(java.lang.String)>($r2)
<com.itextpdf.text.pdf.CJKFont: byte[] convertToBytes(java.lang.String)>: $r2 = virtualinvoke r0.<com.itextpdf.text.pdf.CJKFont: byte[] convertToBytes(int)>($i0)
<com.itextpdf.text.pdf.CJKFont: byte[] convertToBytes(int)>: $r3 = r0.<com.itextpdf.text.pdf.CJKFont: com.itextpdf.text.pdf.fonts.cmaps.CMapCidByte cidByte>
<com.itextpdf.text.pdf.CJKFont: byte[] convertToBytes(int)>: $r2 = virtualinvoke $r3.<com.itextpdf.text.pdf.fonts.cmaps.CMapCidByte: byte[] lookup(int)>($i0)
<com.itextpdf.text.pdf.fonts.cmaps.CMapCidByte: byte[] lookup(int)>: $r4 = r0.<com.itextpdf.text.pdf.fonts.cmaps.CMapCidByte: byte[] EMPTY>
<com.itextpdf.text.pdf.fonts.cmaps.CMapCidByte: byte[] lookup(int)>: return $r4
<com.itextpdf.text.pdf.CJKFont: byte[] convertToBytes(int)>: return $r2
<com.itextpdf.text.pdf.CJKFont: byte[] convertToBytes(java.lang.String)>: virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(byte[])>($r2)
