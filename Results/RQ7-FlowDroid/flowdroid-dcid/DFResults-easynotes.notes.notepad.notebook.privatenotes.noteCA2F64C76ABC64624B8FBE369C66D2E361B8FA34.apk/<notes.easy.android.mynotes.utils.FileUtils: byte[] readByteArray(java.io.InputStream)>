    public static byte[] readByteArray(java.io.InputStream)
    {
        java.lang.Throwable $r3, $r4;
        byte[] $r2;
        java.io.ByteArrayOutputStream $r1, $r5;
        java.io.IOException $r6;
        int $i0;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

     label01:
        $r5 = new java.io.ByteArrayOutputStream;

     label02:
        $r1 = $r5;

     label03:
        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

     label04:
        $r2 = newarray (byte)[1024];

     label05:
        $i0 = lengthof $r2;

     label06:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0);

     label07:
        if $i0 == -1 goto label10;

     label08:
        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, 0, $i0);

     label09:
        goto label05;

     label10:
        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void flush()>();

        $r2 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void close()>();

     label11:
        staticinvoke <notes.easy.android.mynotes.utils.FileUtils: void closeStream(java.io.Closeable)>($r5);

        return $r2;

     label12:
        $r3 := @caughtexception;

        goto label15;

     label13:
        $r4 := @caughtexception;

        $r1 = null;

        goto label18;

     label14:
        $r3 := @caughtexception;

        $r1 = null;

     label15:
        $r6 = (java.io.IOException) $r3;

        virtualinvoke $r6.<java.io.IOException: void printStackTrace()>();

     label16:
        staticinvoke <notes.easy.android.mynotes.utils.FileUtils: void closeStream(java.io.Closeable)>($r1);

        return null;

     label17:
        $r4 := @caughtexception;

     label18:
        staticinvoke <notes.easy.android.mynotes.utils.FileUtils: void closeStream(java.io.Closeable)>($r1);

        throw $r4;

        catch java.io.IOException from label03 to label04 with label14;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.io.IOException from label06 to label07 with label12;
        catch java.io.IOException from label08 to label09 with label12;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label05 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }
