    private boolean executeBackup(notes.easy.android.mynotes.backup.drivesync.BackupRestoreListener)
    {
        notes.easy.android.mynotes.backup.drivesync.SyncConfig $r8, $r9;
        notes.easy.android.mynotes.backup.drivesync.SyncInfo $r18, $r27;
        android.os.Bundle $r29;
        java.util.Random $r4;
        byte $b2;
        java.lang.Long $r19;
        com.google.api.services.drive.model.File $r24;
        boolean $z0, $z1;
        java.lang.Exception $r2, $r3;
        notes.easy.android.mynotes.firebase.FirebaseReportUtils $r7;
        java.util.List $r11, $r13;
        float $f0, $f1;
        java.lang.StringBuilder $r26;
        long $l1;
        notes.easy.android.mynotes.backup.drivesync.SyncTaskInfo $r20, $r28;
        java.util.ArrayList $r10, $r21, $r23, $r30;
        notes.easy.android.mynotes.backup.drivesync.BackupHelper r0;
        notes.easy.android.mynotes.backup.drivesync.BackupHelper$2 $r31;
        int $i0;
        java.lang.String $r5, $r6;
        java.util.concurrent.ExecutorService $r25;
        java.util.Iterator $r14, $r17;
        notes.easy.android.mynotes.models.Note $r16;
        java.io.File $r22;
        notes.easy.android.mynotes.backup.drivesync.BackupRestoreListener $r1;
        java.lang.Object $r12, $r15;

        r0 := @this: notes.easy.android.mynotes.backup.drivesync.BackupHelper;

        $r1 := @parameter0: notes.easy.android.mynotes.backup.drivesync.BackupRestoreListener;

        r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: float backupProgress> = 0.0F;

        $r4 = r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: java.util.Random mRandom>;

        $i0 = virtualinvoke $r4.<java.util.Random: int nextInt(int)>(4);

        $i0 = $i0 + 2;

        specialinvoke r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: void progressBackupFakeStart(int,notes.easy.android.mynotes.backup.drivesync.BackupRestoreListener)>($i0, $r1);

        $r5 = staticinvoke <notes.easy.android.mynotes.backup.drivesync.BackupHelper: java.lang.String queryConfigFileDriveId()>();

        r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: boolean backFake> = 0;

        $f0 = r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: float backupProgress>;

        $f1 = (float) $i0;

        $f0 = $f0 + $f1;

        specialinvoke r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: void notifyBackupProgress(notes.easy.android.mynotes.backup.drivesync.BackupRestoreListener,float)>($r1, $f0);

        $r6 = "-1";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label01;

        $r7 = staticinvoke <notes.easy.android.mynotes.firebase.FirebaseReportUtils: notes.easy.android.mynotes.firebase.FirebaseReportUtils getInstance()>();

        virtualinvoke $r7.<notes.easy.android.mynotes.firebase.FirebaseReportUtils: void reportNew(java.lang.String,java.lang.String,java.lang.String)>("backup_tap_backup_fail", "backup_fail_reason", "get config error");

        <notes.easy.android.mynotes.backup.drivesync.BackupHelper: boolean isBackuping> = 0;

        return 0;

     label01:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("configFileDriveId = ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <notes.easy.android.mynotes.backup.drivesync.BackupHelper: void Log(java.lang.String,java.lang.String,java.lang.String)>("BackupHelper", "executeBackup", $r6);

        $f0 = r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: float backupProgress>;

        $f0 = $f0 + $f1;

        specialinvoke r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: void notifyBackupProgress(notes.easy.android.mynotes.backup.drivesync.BackupRestoreListener,float)>($r1, $f0);

        $r8 = virtualinvoke r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: notes.easy.android.mynotes.backup.drivesync.SyncConfig readDriveConfigJson(java.lang.String)>($r5);

        $r9 = $r8;

        $f0 = r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: float backupProgress>;

        $f1 = $f0 + $f1;

        specialinvoke r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: void notifyBackupProgress(notes.easy.android.mynotes.backup.drivesync.BackupRestoreListener,float)>($r1, $f1);

        $r21 = new java.util.ArrayList;

        $r10 = $r21;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        if $r8 != null goto label02;

        $r8 = new notes.easy.android.mynotes.backup.drivesync.SyncConfig;

        $r9 = $r8;

        specialinvoke $r8.<notes.easy.android.mynotes.backup.drivesync.SyncConfig: void <init>(java.lang.String)>($r5);

     label02:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("syncConfig = ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r5 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <notes.easy.android.mynotes.backup.drivesync.BackupHelper: void Log(java.lang.String,java.lang.String,java.lang.String)>("BackupHelper", "executeBackup", $r5);

        $r11 = virtualinvoke $r9.<notes.easy.android.mynotes.backup.drivesync.SyncConfig: java.util.List getBackupInfoList()>();

        $r12 = $r11;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allSyncInfoList = ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r5 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <notes.easy.android.mynotes.backup.drivesync.BackupHelper: void Log(java.lang.String,java.lang.String,java.lang.String)>("BackupHelper", "executeBackup", $r5);

        if $r11 != null goto label03;

        $r21 = new java.util.ArrayList;

        $r12 = $r21;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

     label03:
        $r13 = virtualinvoke r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: java.util.List getAllNote()>();

        $r11 = $r13;

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (notes.easy.android.mynotes.models.Note) $r15;

        $r13 = (java.util.List) $r12;

        $r17 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r15 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (notes.easy.android.mynotes.backup.drivesync.SyncInfo) $r15;

        $r19 = virtualinvoke $r16.<notes.easy.android.mynotes.models.Note: java.lang.Long getCreation()>();

        if $r19 == null goto label05;

        $r19 = virtualinvoke $r16.<notes.easy.android.mynotes.models.Note: java.lang.Long getCreation()>();

        $r5 = virtualinvoke $r19.<java.lang.Long: java.lang.String toString()>();

        $r6 = virtualinvoke $r18.<notes.easy.android.mynotes.backup.drivesync.SyncInfo: java.lang.String getId()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label07;

        goto label05;

     label06:
        $r18 = null;

     label07:
        if $r18 != null goto label08;

        $z0 = 1;

        goto label09;

     label08:
        $z0 = 0;

     label09:
        if $z0 == 0 goto label10;

        $r27 = new notes.easy.android.mynotes.backup.drivesync.SyncInfo;

        $r18 = $r27;

        $r19 = virtualinvoke $r16.<notes.easy.android.mynotes.models.Note: java.lang.Long getCreation()>();

        $r5 = virtualinvoke $r19.<java.lang.Long: java.lang.String toString()>();

        $r19 = virtualinvoke $r16.<notes.easy.android.mynotes.models.Note: java.lang.Long getLastModification()>();

        $l1 = virtualinvoke $r19.<java.lang.Long: long longValue()>();

        specialinvoke $r27.<notes.easy.android.mynotes.backup.drivesync.SyncInfo: void <init>(java.lang.String,long,java.lang.String)>($r5, $l1, null);

     label10:
        $r28 = new notes.easy.android.mynotes.backup.drivesync.SyncTaskInfo;

        specialinvoke $r28.<notes.easy.android.mynotes.backup.drivesync.SyncTaskInfo: void <init>(notes.easy.android.mynotes.backup.drivesync.SyncInfo,notes.easy.android.mynotes.models.Note,boolean)>($r18, $r16, $z0);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r28);

        goto label04;

     label11:
        $z0 = specialinvoke r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: boolean zipList(java.util.List)>($r10);

        $f1 = r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: float backupProgress>;

        $f1 = $f1 + 1.0F;

        specialinvoke r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: void notifyBackupProgress(notes.easy.android.mynotes.backup.drivesync.BackupRestoreListener,float)>($r1, $f1);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("zipList = ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <notes.easy.android.mynotes.backup.drivesync.BackupHelper: void Log(java.lang.String,java.lang.String,java.lang.String)>("BackupHelper", "executeBackup", $r5);

        if $z0 != 0 goto label12;

        virtualinvoke r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: void cleanBackupTempFile()>();

        $r7 = staticinvoke <notes.easy.android.mynotes.firebase.FirebaseReportUtils: notes.easy.android.mynotes.firebase.FirebaseReportUtils getInstance()>();

        virtualinvoke $r7.<notes.easy.android.mynotes.firebase.FirebaseReportUtils: void reportNew(java.lang.String,java.lang.String,java.lang.String)>("backup_tap_backup_fail", "backup_fail_reason", "zip error");

        <notes.easy.android.mynotes.backup.drivesync.BackupHelper: boolean isBackuping> = 0;

        return 0;

     label12:
        $r29 = new android.os.Bundle;

     label13:
        specialinvoke $r29.<android.os.Bundle: void <init>()>();

     label14:
        $l1 = <notes.easy.android.mynotes.backup.drivesync.BackupHelper: long fileSize>;

     label15:
        $r5 = staticinvoke <notes.easy.android.mynotes.view.bubble.Util: java.lang.String FormetFileSize(long)>($l1);

        virtualinvoke $r29.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("backup_status", $r5);

        $r7 = staticinvoke <notes.easy.android.mynotes.firebase.FirebaseReportUtils: notes.easy.android.mynotes.firebase.FirebaseReportUtils getInstance()>();

        virtualinvoke $r7.<notes.easy.android.mynotes.firebase.FirebaseReportUtils: void reportNew(java.lang.String,android.os.Bundle)>("backup_file_size", $r29);

     label16:
        <notes.easy.android.mynotes.backup.drivesync.BackupHelper: long fileSize> = 0L;

     label17:
        $r23 = new java.util.ArrayList;

        $r21 = $r23;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        $r14 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (notes.easy.android.mynotes.backup.drivesync.SyncTaskInfo) $r15;

        $r22 = virtualinvoke $r20.<notes.easy.android.mynotes.backup.drivesync.SyncTaskInfo: java.io.File getBackupZipFile()>();

        if $r22 == null goto label18;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("syncInfo = ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r5 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <notes.easy.android.mynotes.backup.drivesync.BackupHelper: void Log(java.lang.String,java.lang.String,java.lang.String)>("BackupHelper", "uploadSyncInfoList", $r5);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r20);

        goto label18;

     label19:
        $i0 = interfaceinvoke $r21.<java.util.List: int size()>();

        if $i0 <= 0 goto label20;

        $z0 = specialinvoke r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: boolean uploadSyncInfoList(java.util.List,notes.easy.android.mynotes.backup.drivesync.BackupRestoreListener)>($r21, $r1);

        if $z0 != 0 goto label20;

        $z0 = 0;

        goto label21;

     label20:
        $z0 = 1;

     label21:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uploadAllSuccess = ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <notes.easy.android.mynotes.backup.drivesync.BackupHelper: void Log(java.lang.String,java.lang.String,java.lang.String)>("BackupHelper", "uploadSyncInfoList", $r5);

        if $i0 > 0 goto label22;

        $f1 = r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: float backupProgress>;

        $f1 = $f1 + 5.0F;

        specialinvoke r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: void notifyBackupProgress(notes.easy.android.mynotes.backup.drivesync.BackupRestoreListener,float)>($r1, $f1);

     label22:
        $r23 = new java.util.ArrayList;

        $r21 = $r23;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        $r13 = (java.util.List) $r12;

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label23:
        $z1 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label27;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (notes.easy.android.mynotes.backup.drivesync.SyncInfo) $r15;

        $r17 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label24:
        $z1 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label25;

        $r15 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (notes.easy.android.mynotes.models.Note) $r15;

        $r19 = virtualinvoke $r16.<notes.easy.android.mynotes.models.Note: java.lang.Long getCreation()>();

        if $r19 == null goto label24;

        $r19 = virtualinvoke $r16.<notes.easy.android.mynotes.models.Note: java.lang.Long getCreation()>();

        $r5 = virtualinvoke $r19.<java.lang.Long: java.lang.String toString()>();

        $r6 = virtualinvoke $r18.<notes.easy.android.mynotes.backup.drivesync.SyncInfo: java.lang.String getId()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label24;

        $z1 = 0;

        goto label26;

     label25:
        $z1 = 1;

     label26:
        if $z1 == 0 goto label23;

        interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>($r18);

        $r5 = virtualinvoke $r18.<notes.easy.android.mynotes.backup.drivesync.SyncInfo: java.lang.String getZipDriveId()>();

        virtualinvoke $r21.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label23;

     label27:
        $r11 = (java.util.List) $r12;

        interfaceinvoke $r11.<java.util.List: boolean removeAll(java.util.Collection)>($r30);

        $r14 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label28:
        $z1 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label31;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (notes.easy.android.mynotes.backup.drivesync.SyncTaskInfo) $r15;

        $r22 = virtualinvoke $r20.<notes.easy.android.mynotes.backup.drivesync.SyncTaskInfo: java.io.File getBackupZipFile()>();

        if $r22 == null goto label28;

        $r24 = virtualinvoke $r20.<notes.easy.android.mynotes.backup.drivesync.SyncTaskInfo: com.google.api.services.drive.model.File getUploadFile()>();

        if $r24 == null goto label30;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uploadSingleSyncInfo = ");

        $r5 = virtualinvoke $r24.<com.google.api.services.drive.model.File: java.lang.String getId()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <notes.easy.android.mynotes.backup.drivesync.BackupHelper: void Log(java.lang.String,java.lang.String,java.lang.String)>("BackupHelper", "executeBackup", $r5);

        $r18 = virtualinvoke $r20.<notes.easy.android.mynotes.backup.drivesync.SyncTaskInfo: notes.easy.android.mynotes.backup.drivesync.SyncInfo getSyncInfo()>();

        $r5 = virtualinvoke $r18.<notes.easy.android.mynotes.backup.drivesync.SyncInfo: java.lang.String getZipDriveId()>();

        $z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z1 != 0 goto label29;

        $r6 = virtualinvoke $r24.<com.google.api.services.drive.model.File: java.lang.String getId()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label29;

        virtualinvoke $r21.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label29:
        $r5 = virtualinvoke $r24.<com.google.api.services.drive.model.File: java.lang.String getId()>();

        virtualinvoke $r18.<notes.easy.android.mynotes.backup.drivesync.SyncInfo: void setZipDriveId(java.lang.String)>($r5);

        $r16 = virtualinvoke $r20.<notes.easy.android.mynotes.backup.drivesync.SyncTaskInfo: notes.easy.android.mynotes.models.Note getNoteEntry()>();

        $r19 = virtualinvoke $r16.<notes.easy.android.mynotes.models.Note: java.lang.Long getLastModification()>();

        $l1 = virtualinvoke $r19.<java.lang.Long: long longValue()>();

        virtualinvoke $r18.<notes.easy.android.mynotes.backup.drivesync.SyncInfo: void setVersion(long)>($l1);

        $r11 = (java.util.List) $r12;

        $i0 = interfaceinvoke $r11.<java.util.List: int indexOf(java.lang.Object)>($r18);

        if $i0 != -1 goto label28;

        $r11 = (java.util.List) $r12;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label28;

     label30:
        $z0 = 0;

        goto label28;

     label31:
        $r11 = (java.util.List) $r12;

        virtualinvoke $r9.<notes.easy.android.mynotes.backup.drivesync.SyncConfig: void setBackupInfoList(java.util.List)>($r11);

        $f1 = r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: float backupProgress>;

        $f1 = $f1 + 5.0F;

        specialinvoke r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: void notifyBackupProgress(notes.easy.android.mynotes.backup.drivesync.BackupRestoreListener,float)>($r1, $f1);

        $f1 = r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: float backupProgress>;

        $f1 = $f1 + 3.0F;

        specialinvoke r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: void notifyBackupProgress(notes.easy.android.mynotes.backup.drivesync.BackupRestoreListener,float)>($r1, $f1);

        $r24 = virtualinvoke r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: com.google.api.services.drive.model.File uploadDriveConfigJson(notes.easy.android.mynotes.backup.drivesync.SyncConfig)>($r9);

        virtualinvoke r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: void cleanBackupTempFile()>();

        if $r24 == null goto label33;

        $r14 = virtualinvoke $r21.<java.util.ArrayList: java.util.Iterator iterator()>();

     label32:
        $z1 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label33;

        $r12 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r12;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deletedFileIdList ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <notes.easy.android.mynotes.backup.drivesync.BackupHelper: void Log(java.lang.String,java.lang.String,java.lang.String)>("BackupHelper", "executeBackup", $r6);

        staticinvoke <notes.easy.android.mynotes.backup.drivesync.BackupHelper: void deleteDriveFile(java.lang.String)>($r5);

        goto label32;

     label33:
        $f1 = r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: float backupProgress>;

        $b2 = $f1 cmpg 89.0F;

        $i0 = (int) $b2;

        if $i0 >= 0 goto label34;

        $r25 = staticinvoke <notes.easy.android.mynotes.utils.ExecutorUtils: java.util.concurrent.ExecutorService getSyncDriveTaskThreadPool()>();

        $r31 = new notes.easy.android.mynotes.backup.drivesync.BackupHelper$2;

        specialinvoke $r31.<notes.easy.android.mynotes.backup.drivesync.BackupHelper$2: void <init>(notes.easy.android.mynotes.backup.drivesync.BackupHelper,notes.easy.android.mynotes.backup.drivesync.BackupRestoreListener)>(r0, $r1);

        interfaceinvoke $r25.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r31);

        goto label35;

     label34:
        specialinvoke r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: void notifyBackupProgress(notes.easy.android.mynotes.backup.drivesync.BackupRestoreListener,float)>($r1, 100.0F);

     label35:
        $f1 = r0.<notes.easy.android.mynotes.backup.drivesync.BackupHelper: float backupProgress>;

        $b2 = $f1 cmpg 99.0F;

        $i0 = (int) $b2;

        if $i0 >= 0 goto label38;

     label36:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

     label37:
        goto label35;

     label38:
        <notes.easy.android.mynotes.backup.drivesync.BackupHelper: boolean isBackuping> = 0;

        if $r24 == null goto label39;

        if $z0 == 0 goto label39;

        return 1;

     label39:
        return 0;

     label40:
        $r2 := @caughtexception;

        goto label17;

     label41:
        $r3 := @caughtexception;

        goto label35;

        catch java.lang.Exception from label13 to label14 with label40;
        catch java.lang.Exception from label15 to label16 with label40;
        catch java.lang.Exception from label36 to label37 with label41;
    }
