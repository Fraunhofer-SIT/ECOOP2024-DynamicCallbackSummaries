    public static void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level, java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable $r2;
        java.lang.Exception r3;
        int[] $r6;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r0;
        int $i0, $i1;
        java.lang.String $r1, $r4, $r5;
        boolean $z0;

        $r0 := @parameter0: com.adobe.creativesdk.foundation.internal.utils.logging.Level;

        $r4 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.Throwable;

        $z0 = <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: boolean consoleLoggingEnabled>;

        if $z0 != 0 goto label01;

        return;

     label01:
        $i0 = staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: int convertToAndroidLogLevel(com.adobe.creativesdk.foundation.internal.utils.logging.Level)>($r0);

     label02:
        $i1 = virtualinvoke $r4.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

     label03:
        $i1 = $i1 + 1;

     label04:
        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i1);

     label05:
        $r5 = $r4;

     label06:
        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

     label07:
        if $i1 > 23 goto label16;

     label08:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>($r5, $i0);

     label09:
        if $z0 == 0 goto label23;

        $r6 = <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger$1: int[] $SwitchMap$com$adobe$creativesdk$foundation$internal$utils$logging$Level>;

     label10:
        $i0 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.utils.logging.Level: int ordinal()>();

        $i0 = $r6[$i0];

     label11:
        lookupswitch($i0)
        {
            case 1: goto label13;
            case 2: goto label18;
            case 3: goto label20;
            case 4: goto label22;
            default: goto label12;
        };

     label12:
        return;

     label13:
        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void debug(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r1, $r2);

     label14:
        return;

     label15:
        r3 := @caughtexception;

        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();

        return;

     label16:
        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, 23);

     label17:
        $r5 = $r4;

        goto label08;

     label18:
        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void info(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r1, $r2);

     label19:
        return;

     label20:
        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void error(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r1, $r2);

     label21:
        return;

     label22:
        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void warn(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r1, $r2);

     label23:
        return;

        catch java.lang.Exception from label02 to label03 with label15;
        catch java.lang.Exception from label04 to label05 with label15;
        catch java.lang.Exception from label06 to label07 with label15;
        catch java.lang.Exception from label08 to label09 with label15;
        catch java.lang.Exception from label10 to label11 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Exception from label16 to label17 with label15;
        catch java.lang.Exception from label18 to label19 with label15;
        catch java.lang.Exception from label20 to label21 with label15;
        catch java.lang.Exception from label22 to label23 with label15;
    }
