    public long read(com.squareup.okhttp.internal.okio.OkBuffer, long) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        java.lang.IllegalStateException $r9;
        long $l0, $l2;
        java.lang.IllegalArgumentException $r8;
        com.squareup.okhttp.internal.http.SpdyTransport$SpdySource r0;
        com.squareup.okhttp.internal.okio.OkBuffer $r1;
        com.squareup.okhttp.internal.okio.Source $r5;
        byte $b1;
        java.net.CacheRequest $r6;
        int $i3;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.squareup.okhttp.internal.http.SpdyTransport$SpdySource;

        $r1 := @parameter0: com.squareup.okhttp.internal.okio.OkBuffer;

        $l0 := @parameter1: long;

        $i3 = (int) 1;

        if $i3 >= 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("byteCount < 0: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(2048L);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r8;

     label1:
        $z0 = r0.<com.squareup.okhttp.internal.http.SpdyTransport$SpdySource: boolean closed>;

        if $z0 == 0 goto label2;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r9;

     label2:
        $z0 = r0.<com.squareup.okhttp.internal.http.SpdyTransport$SpdySource: boolean inputExhausted>;

        if $z0 == 0 goto label3;

        return -1L;

     label3:
        $r5 = r0.<com.squareup.okhttp.internal.http.SpdyTransport$SpdySource: com.squareup.okhttp.internal.okio.Source source>;

        $l0 = interfaceinvoke $r5.<com.squareup.okhttp.internal.okio.Source: long read(com.squareup.okhttp.internal.okio.OkBuffer,long)>($r1, 2048L);

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label5;

        r0.<com.squareup.okhttp.internal.http.SpdyTransport$SpdySource: boolean inputExhausted> = 1;

        $r6 = r0.<com.squareup.okhttp.internal.http.SpdyTransport$SpdySource: java.net.CacheRequest cacheRequest>;

        if $r6 == null goto label4;

        $r2 = r0.<com.squareup.okhttp.internal.http.SpdyTransport$SpdySource: java.io.OutputStream cacheBody>;

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

     label4:
        return -1L;

     label5:
        $r2 = r0.<com.squareup.okhttp.internal.http.SpdyTransport$SpdySource: java.io.OutputStream cacheBody>;

        if $r2 == null goto label6;

        $l2 = virtualinvoke $r1.<com.squareup.okhttp.internal.okio.OkBuffer: long size()>();

        $l2 = $l2 - $l0;

        $r2 = r0.<com.squareup.okhttp.internal.http.SpdyTransport$SpdySource: java.io.OutputStream cacheBody>;

        staticinvoke <com.squareup.okhttp.internal.okio.Okio: void copy(com.squareup.okhttp.internal.okio.OkBuffer,long,long,java.io.OutputStream)>($r1, $l2, $l0, $r2);

     label6:
        return $l0;
    }
