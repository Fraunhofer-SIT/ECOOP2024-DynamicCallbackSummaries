    private void writeToFromStream(java.io.OutputStream, com.loopj.android.http.RequestParams$StreamWrapper) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        byte[] $r6;
        com.loopj.android.http.RequestParams$StreamWrapper $r2;
        com.loopj.android.http.JsonStreamerEntity r0;
        int $i0;
        com.loopj.android.http.Base64OutputStream $r7;
        java.lang.String $r3, $r4;
        java.io.InputStream $r5;
        boolean $z0;

        r0 := @this: com.loopj.android.http.JsonStreamerEntity;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: com.loopj.android.http.RequestParams$StreamWrapper;

        $r3 = $r2.<com.loopj.android.http.RequestParams$StreamWrapper: java.lang.String name>;

        $r4 = $r2.<com.loopj.android.http.RequestParams$StreamWrapper: java.lang.String contentType>;

        specialinvoke r0.<com.loopj.android.http.JsonStreamerEntity: void writeMetaData(java.io.OutputStream,java.lang.String,java.lang.String)>($r1, $r3, $r4);

        $r7 = new com.loopj.android.http.Base64OutputStream;

        specialinvoke $r7.<com.loopj.android.http.Base64OutputStream: void <init>(java.io.OutputStream,int)>($r1, 18);

     label1:
        $r5 = $r2.<com.loopj.android.http.RequestParams$StreamWrapper: java.io.InputStream inputStream>;

        $r6 = r0.<com.loopj.android.http.JsonStreamerEntity: byte[] buffer>;

        $i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r6);

        if $i0 == -1 goto label2;

        $r6 = r0.<com.loopj.android.http.JsonStreamerEntity: byte[] buffer>;

        virtualinvoke $r7.<com.loopj.android.http.Base64OutputStream: void write(byte[],int,int)>($r6, 0, $i0);

        goto label1;

     label2:
        staticinvoke <com.loopj.android.http.AsyncHttpClient: void silentCloseOutputStream(java.io.OutputStream)>($r7);

        specialinvoke r0.<com.loopj.android.http.JsonStreamerEntity: void endMetaData(java.io.OutputStream)>($r1);

        $z0 = $r2.<com.loopj.android.http.RequestParams$StreamWrapper: boolean autoClose>;

        if $z0 == 0 goto label3;

        $r5 = $r2.<com.loopj.android.http.RequestParams$StreamWrapper: java.io.InputStream inputStream>;

        staticinvoke <com.loopj.android.http.AsyncHttpClient: void silentCloseInputStream(java.io.InputStream)>($r5);

     label3:
        return;
    }
