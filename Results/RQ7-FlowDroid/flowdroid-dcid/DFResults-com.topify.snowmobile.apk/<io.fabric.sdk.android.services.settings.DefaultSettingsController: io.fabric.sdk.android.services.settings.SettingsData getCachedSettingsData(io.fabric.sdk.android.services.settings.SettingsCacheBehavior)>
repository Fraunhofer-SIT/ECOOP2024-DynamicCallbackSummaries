    private io.fabric.sdk.android.services.settings.SettingsData getCachedSettingsData(io.fabric.sdk.android.services.settings.SettingsCacheBehavior)
    {
        io.fabric.sdk.android.services.settings.CachedSettingsIo $r5;
        long $l0;
        io.fabric.sdk.android.services.settings.SettingsData r3, $r9;
        java.lang.Exception r2;
        io.fabric.sdk.android.Logger $r10;
        io.fabric.sdk.android.services.settings.DefaultSettingsController r0;
        org.json.JSONObject $r6;
        io.fabric.sdk.android.services.settings.SettingsJsonTransform $r7;
        io.fabric.sdk.android.services.settings.SettingsCacheBehavior $r1, $r4;
        io.fabric.sdk.android.services.common.CurrentTimeProvider $r8;
        boolean $z0;

        r0 := @this: io.fabric.sdk.android.services.settings.DefaultSettingsController;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.SettingsCacheBehavior;

        r3 = null;

        $r4 = <io.fabric.sdk.android.services.settings.SettingsCacheBehavior: io.fabric.sdk.android.services.settings.SettingsCacheBehavior SKIP_CACHE_LOOKUP>;

     label01:
        $z0 = virtualinvoke $r4.<io.fabric.sdk.android.services.settings.SettingsCacheBehavior: boolean equals(java.lang.Object)>($r1);

     label02:
        if $z0 != 0 goto label22;

     label03:
        $r5 = r0.<io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.settings.CachedSettingsIo cachedSettingsIo>;

        $r6 = interfaceinvoke $r5.<io.fabric.sdk.android.services.settings.CachedSettingsIo: org.json.JSONObject readCachedSettings()>();

     label04:
        if $r6 == null goto label21;

     label05:
        $r7 = r0.<io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.settings.SettingsJsonTransform settingsJsonTransform>;

        $r8 = r0.<io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.common.CurrentTimeProvider currentTimeProvider>;

        $r9 = interfaceinvoke $r7.<io.fabric.sdk.android.services.settings.SettingsJsonTransform: io.fabric.sdk.android.services.settings.SettingsData buildFromJson(io.fabric.sdk.android.services.common.CurrentTimeProvider,org.json.JSONObject)>($r8, $r6);

     label06:
        if $r9 == null goto label19;

     label07:
        specialinvoke r0.<io.fabric.sdk.android.services.settings.DefaultSettingsController: void logSettings(org.json.JSONObject,java.lang.String)>($r6, "Loaded cached settings: ");

        $r8 = r0.<io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.common.CurrentTimeProvider currentTimeProvider>;

        $l0 = interfaceinvoke $r8.<io.fabric.sdk.android.services.common.CurrentTimeProvider: long getCurrentTimeMillis()>();

     label08:
        $r4 = <io.fabric.sdk.android.services.settings.SettingsCacheBehavior: io.fabric.sdk.android.services.settings.SettingsCacheBehavior IGNORE_CACHE_EXPIRATION>;

     label09:
        $z0 = virtualinvoke $r4.<io.fabric.sdk.android.services.settings.SettingsCacheBehavior: boolean equals(java.lang.Object)>($r1);

     label10:
        if $z0 != 0 goto label13;

     label11:
        $z0 = virtualinvoke $r9.<io.fabric.sdk.android.services.settings.SettingsData: boolean isExpired(long)>($l0);

     label12:
        if $z0 != 0 goto label16;

     label13:
        r3 = $r9;

     label14:
        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", "Returning cached settings.");

     label15:
        return $r9;

     label16:
        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", "Cached settings have expired.");

     label17:
        return null;

     label18:
        r2 := @caughtexception;

        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Failed to get cached settings", r2);

        return r3;

     label19:
        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Failed to transform cached settings data.", null);

     label20:
        return null;

     label21:
        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", "No cached settings data found.");

     label22:
        return null;

        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Exception from label05 to label06 with label18;
        catch java.lang.Exception from label07 to label08 with label18;
        catch java.lang.Exception from label09 to label10 with label18;
        catch java.lang.Exception from label11 to label12 with label18;
        catch java.lang.Exception from label14 to label15 with label18;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Exception from label19 to label20 with label18;
        catch java.lang.Exception from label21 to label22 with label18;
    }
