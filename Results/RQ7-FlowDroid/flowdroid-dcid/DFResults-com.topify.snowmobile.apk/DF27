Source: $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
$r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null) in <io.fabric.sdk.android.services.common.IdManager: java.lang.String getDeviceUUID()>
Sink: specialinvoke r2.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r1) in <com.crashlytics.android.ExceptionUtils: void writeStackTrace(java.lang.Throwable,java.io.OutputStream)>

<io.fabric.sdk.android.services.common.IdManager: java.lang.String getDeviceUUID()>: $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
<io.fabric.sdk.android.services.common.IdManager: java.lang.String getDeviceUUID()>: return $r1
<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void writeSessionDevice(java.lang.String)>: virtualinvoke $r15.<com.crashlytics.android.SessionDataWriter: void writeSessionDevice(com.crashlytics.android.CodedOutputStream,java.lang.String,int,java.lang.String,int,long,long,boolean,java.util.Map,int,java.lang.String,java.lang.String)>($r8, $r12, $i1, $r16, $i2, $l3, l0, $z0, $r14, $i4, $r17, $r1)
<com.crashlytics.android.SessionDataWriter: void writeSessionDevice(com.crashlytics.android.CodedOutputStream,java.lang.String,int,java.lang.String,int,long,long,boolean,java.util.Map,int,java.lang.String,java.lang.String)>: $r7 = staticinvoke <com.crashlytics.android.ByteString: com.crashlytics.android.ByteString copyFromUtf8(java.lang.String)>($r2)
<com.crashlytics.android.ByteString: com.crashlytics.android.ByteString copyFromUtf8(java.lang.String)>: $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
<com.crashlytics.android.ByteString: com.crashlytics.android.ByteString copyFromUtf8(java.lang.String)>: specialinvoke $r3.<com.crashlytics.android.ByteString: void <init>(byte[])>($r2)
<com.crashlytics.android.ByteString: void <init>(byte[])>: r0.<com.crashlytics.android.ByteString: byte[] bytes> = $r1
<com.crashlytics.android.ByteString: void <init>(byte[])>: return
<com.crashlytics.android.ByteString: com.crashlytics.android.ByteString copyFromUtf8(java.lang.String)>: return $r3
<com.crashlytics.android.SessionDataWriter: void writeSessionDevice(com.crashlytics.android.CodedOutputStream,java.lang.String,int,java.lang.String,int,long,long,boolean,java.util.Map,int,java.lang.String,java.lang.String)>: virtualinvoke $r1.<com.crashlytics.android.CodedOutputStream: void writeBytes(int,com.crashlytics.android.ByteString)>(1, $r7)
<com.crashlytics.android.CodedOutputStream: void writeBytes(int,com.crashlytics.android.ByteString)>: virtualinvoke r0.<com.crashlytics.android.CodedOutputStream: void writeBytesNoTag(com.crashlytics.android.ByteString)>($r1)
<com.crashlytics.android.CodedOutputStream: void writeBytesNoTag(com.crashlytics.android.ByteString)>: virtualinvoke r0.<com.crashlytics.android.CodedOutputStream: void writeRawBytes(com.crashlytics.android.ByteString)>($r1)
<com.crashlytics.android.CodedOutputStream: void writeRawBytes(com.crashlytics.android.ByteString)>: virtualinvoke r0.<com.crashlytics.android.CodedOutputStream: void writeRawBytes(com.crashlytics.android.ByteString,int,int)>($r1, 0, $i0)
<com.crashlytics.android.CodedOutputStream: void writeRawBytes(com.crashlytics.android.ByteString,int,int)>: virtualinvoke $r1.<com.crashlytics.android.ByteString: void copyTo(byte[],int,int,int)>($r2, 0, $i3, i0)
<com.crashlytics.android.ByteString: void copyTo(byte[],int,int,int)>: $r2 = r0.<com.crashlytics.android.ByteString: byte[] bytes>
<com.crashlytics.android.ByteString: void copyTo(byte[],int,int,int)>: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, $r1, $i1, $i2)
<com.crashlytics.android.ByteString: void copyTo(byte[],int,int,int)>: return
<com.crashlytics.android.CodedOutputStream: void writeRawBytes(com.crashlytics.android.ByteString,int,int)>: $r2 = r0.<com.crashlytics.android.CodedOutputStream: byte[] buffer>
<com.crashlytics.android.CodedOutputStream: void writeRawBytes(com.crashlytics.android.ByteString,int,int)>: throw $r4
<com.crashlytics.android.CodedOutputStream: void writeRawBytes(com.crashlytics.android.ByteString)>: return
<com.crashlytics.android.CodedOutputStream: void writeBytesNoTag(com.crashlytics.android.ByteString)>: return
<com.crashlytics.android.CodedOutputStream: void writeBytes(int,com.crashlytics.android.ByteString)>: return
<com.crashlytics.android.SessionDataWriter: void writeSessionDevice(com.crashlytics.android.CodedOutputStream,java.lang.String,int,java.lang.String,int,long,long,boolean,java.util.Map,int,java.lang.String,java.lang.String)>: virtualinvoke $r1.<com.crashlytics.android.CodedOutputStream: void writeEnum(int,int)>(3, $i0)
<com.crashlytics.android.CodedOutputStream: void writeEnum(int,int)>: virtualinvoke r0.<com.crashlytics.android.CodedOutputStream: void writeEnumNoTag(int)>($i1)
<com.crashlytics.android.CodedOutputStream: void writeEnumNoTag(int)>: return
<com.crashlytics.android.CodedOutputStream: void writeEnum(int,int)>: virtualinvoke r0.<com.crashlytics.android.CodedOutputStream: void writeTag(int,int)>($i0, 0)
<com.crashlytics.android.CodedOutputStream: void writeTag(int,int)>: virtualinvoke r0.<com.crashlytics.android.CodedOutputStream: void writeRawVarint32(int)>($i0)
<com.crashlytics.android.CodedOutputStream: void writeRawVarint32(int)>: virtualinvoke r0.<com.crashlytics.android.CodedOutputStream: void writeRawByte(int)>($i1)
<com.crashlytics.android.CodedOutputStream: void writeRawByte(int)>: virtualinvoke r0.<com.crashlytics.android.CodedOutputStream: void writeRawByte(byte)>($b1)
<com.crashlytics.android.CodedOutputStream: void writeRawByte(byte)>: specialinvoke r0.<com.crashlytics.android.CodedOutputStream: void refreshBuffer()>()
<com.crashlytics.android.CodedOutputStream: void refreshBuffer()>: $r1 = r0.<com.crashlytics.android.CodedOutputStream: byte[] buffer>
<com.crashlytics.android.CodedOutputStream: void refreshBuffer()>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0)
<com.crashlytics.android.CodedOutputStream: void refreshBuffer()>: $r2 = r0.<com.crashlytics.android.CodedOutputStream: java.io.OutputStream output>
<com.crashlytics.android.CodedOutputStream: void refreshBuffer()>: return
<com.crashlytics.android.CodedOutputStream: void writeRawByte(byte)>: return
<com.crashlytics.android.CodedOutputStream: void writeRawByte(int)>: return
<com.crashlytics.android.CodedOutputStream: void writeRawVarint32(int)>: return
<com.crashlytics.android.CodedOutputStream: void writeTag(int,int)>: r0 := @this: com.crashlytics.android.CodedOutputStream
<com.crashlytics.android.CodedOutputStream: void writeEnum(int,int)>: virtualinvoke r0.<com.crashlytics.android.CodedOutputStream: void writeEnumNoTag(int)>($i1)
<com.crashlytics.android.CodedOutputStream: void writeEnumNoTag(int)>: return
<com.crashlytics.android.CodedOutputStream: void writeEnum(int,int)>: return
<com.crashlytics.android.SessionDataWriter: void writeSessionDevice(com.crashlytics.android.CodedOutputStream,java.lang.String,int,java.lang.String,int,long,long,boolean,java.util.Map,int,java.lang.String,java.lang.String)>: return
<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void writeSessionDevice(java.lang.String)>: $r8 = staticinvoke <com.crashlytics.android.CodedOutputStream: com.crashlytics.android.CodedOutputStream newInstance(java.io.OutputStream)>(r2)
<com.crashlytics.android.CodedOutputStream: com.crashlytics.android.CodedOutputStream newInstance(java.io.OutputStream)>: $r1 = staticinvoke <com.crashlytics.android.CodedOutputStream: com.crashlytics.android.CodedOutputStream newInstance(java.io.OutputStream,int)>($r0, 4096)
<com.crashlytics.android.CodedOutputStream: com.crashlytics.android.CodedOutputStream newInstance(java.io.OutputStream,int)>: specialinvoke $r1.<com.crashlytics.android.CodedOutputStream: void <init>(java.io.OutputStream,byte[])>($r0, $r2)
<com.crashlytics.android.CodedOutputStream: void <init>(java.io.OutputStream,byte[])>: r0.<com.crashlytics.android.CodedOutputStream: java.io.OutputStream output> = $r1
<com.crashlytics.android.CodedOutputStream: void <init>(java.io.OutputStream,byte[])>: return
<com.crashlytics.android.CodedOutputStream: com.crashlytics.android.CodedOutputStream newInstance(java.io.OutputStream,int)>: return $r1
<com.crashlytics.android.CodedOutputStream: com.crashlytics.android.CodedOutputStream newInstance(java.io.OutputStream)>: return $r1
<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void writeSessionDevice(java.lang.String)>: r4 = r2
<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void writeSessionDevice(java.lang.String)>: staticinvoke <com.crashlytics.android.ExceptionUtils: void writeStackTraceIfNotNull(java.lang.Throwable,java.io.OutputStream)>(r18, r4)
<com.crashlytics.android.ExceptionUtils: void writeStackTraceIfNotNull(java.lang.Throwable,java.io.OutputStream)>: staticinvoke <com.crashlytics.android.ExceptionUtils: void writeStackTrace(java.lang.Throwable,java.io.OutputStream)>($r0, $r1)
<com.crashlytics.android.ExceptionUtils: void writeStackTrace(java.lang.Throwable,java.io.OutputStream)>: specialinvoke r2.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r1)
