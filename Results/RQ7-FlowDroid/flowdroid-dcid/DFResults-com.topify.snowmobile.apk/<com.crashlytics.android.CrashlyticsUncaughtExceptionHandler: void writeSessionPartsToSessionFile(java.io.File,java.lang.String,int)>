    private void writeSessionPartsToSessionFile(java.io.File, java.lang.String, int)
    {
        java.lang.Throwable $r21;
        java.lang.Object[] $r10;
        com.crashlytics.android.CodedOutputStream r15, $r17;
        java.util.Date $r18;
        long $l2;
        java.lang.Integer $r19;
        java.util.Locale $r9;
        int $i0, $i1;
        java.lang.Boolean $r11;
        java.lang.String $r2, $r6;
        boolean z0, z1;
        com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter $r7;
        com.crashlytics.android.CrashlyticsUncaughtExceptionHandler r0;
        java.io.File $r1, $r16;
        java.lang.Exception r20;
        io.fabric.sdk.android.Logger $r4;
        java.lang.StringBuilder $r5;
        com.crashlytics.android.ClsFileOutputStream r3, r14;
        java.io.File[] $r8, $r12, r13;

        r0 := @this: com.crashlytics.android.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collecting session parts for ID ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r6);

        $r7 = new com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionCrash");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter: void <init>(java.lang.String)>($r6);

        $r8 = specialinvoke r0.<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r7);

        if $r8 == null goto label33;

        $i1 = lengthof $r8;

        if $i1 <= 0 goto label33;

        z0 = 1;

     label01:
        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r9 = <java.util.Locale: java.util.Locale US>;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = $r2;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r10[1] = $r11;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r9, "Session %s has fatal exception: %s", $r10);

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r6);

        $r7 = new com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter: void <init>(java.lang.String)>($r6);

        $r12 = specialinvoke r0.<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r7);

        r13 = $r12;

        if $r12 == null goto label34;

        $i1 = lengthof $r12;

        if $i1 <= 0 goto label34;

        z1 = 1;

     label02:
        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r9 = <java.util.Locale: java.util.Locale US>;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = $r2;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r10[1] = $r11;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r9, "Session %s has non-fatal exceptions: %s", $r10);

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r6);

        if z0 != 0 goto label03;

        if z1 == 0 goto label43;

     label03:
        r14 = null;

        r15 = null;

     label04:
        r3 = new com.crashlytics.android.ClsFileOutputStream;

     label05:
        $r16 = r0.<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: java.io.File filesDir>;

        specialinvoke r3.<com.crashlytics.android.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r16, $r2);

     label06:
        $r17 = staticinvoke <com.crashlytics.android.CodedOutputStream: com.crashlytics.android.CodedOutputStream newInstance(java.io.OutputStream)>(r3);

     label07:
        r15 = $r17;

     label08:
        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

     label09:
        $r5 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collecting SessionStart data for session ID ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r6);

        specialinvoke r0.<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void writeToCosFromFile(com.crashlytics.android.CodedOutputStream,java.io.File)>($r17, $r1);

     label11:
        $r18 = new java.util.Date;

     label12:
        specialinvoke $r18.<java.util.Date: void <init>()>();

        $l2 = virtualinvoke $r18.<java.util.Date: long getTime()>();

     label13:
        $l2 = $l2 / 1000L;

     label14:
        virtualinvoke $r17.<com.crashlytics.android.CodedOutputStream: void writeUInt64(int,long)>(4, $l2);

        virtualinvoke $r17.<com.crashlytics.android.CodedOutputStream: void writeBool(int,boolean)>(5, z0);

        specialinvoke r0.<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void writeInitialPartsTo(com.crashlytics.android.CodedOutputStream,java.lang.String)>($r17, $r2);

     label15:
        if z1 == 0 goto label27;

     label16:
        $i1 = lengthof $r12;

     label17:
        if $i1 <= $i0 goto label26;

     label18:
        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

     label19:
        $r9 = <java.util.Locale: java.util.Locale US>;

        $r10 = newarray (java.lang.Object)[1];

     label20:
        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label21:
        $r10[0] = $r19;

     label22:
        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r9, "Trimming down to %d logged exceptions.", $r10);

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r6);

        specialinvoke r0.<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void trimSessionEventFiles(java.lang.String,int)>($r2, $i0);

     label23:
        $r7 = new com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter;

        $r5 = new java.lang.StringBuilder;

     label24:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter: void <init>(java.lang.String)>($r6);

        $r12 = specialinvoke r0.<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r7);

     label25:
        r13 = $r12;

     label26:
        specialinvoke r0.<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void writeNonFatalEventsTo(com.crashlytics.android.CodedOutputStream,java.io.File[],java.lang.String)>($r17, r13, $r2);

     label27:
        if z0 == 0 goto label30;

     label28:
        $r1 = $r8[0];

     label29:
        specialinvoke r0.<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void writeToCosFromFile(com.crashlytics.android.CodedOutputStream,java.io.File)>($r17, $r1);

     label30:
        virtualinvoke $r17.<com.crashlytics.android.CodedOutputStream: void writeUInt32(int,int)>(11, 1);

        virtualinvoke $r17.<com.crashlytics.android.CodedOutputStream: void writeEnum(int,int)>(12, 3);

     label31:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r17, "Error flushing session file stream");

        goto label35;

     label32:
        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing session part files for ID ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r6);

        specialinvoke r0.<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void deleteSessionPartFilesFor(java.lang.String)>($r2);

        return;

     label33:
        z0 = 0;

        goto label01;

     label34:
        z1 = 0;

        goto label02;

     label35:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r3, "Failed to close CLS file");

        goto label32;

     label36:
        r20 := @caughtexception;

     label37:
        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write session file for session ID: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", $r6, r20);

        staticinvoke <com.crashlytics.android.ExceptionUtils: void writeStackTraceIfNotNull(java.lang.Throwable,java.io.OutputStream)>(r20, r14);

     label38:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>(r15, "Error flushing session file stream");

        specialinvoke r0.<com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void closeWithoutRenamingOrLog(com.crashlytics.android.ClsFileOutputStream)>(r14);

        goto label32;

     label39:
        $r21 := @caughtexception;

     label40:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>(r15, "Error flushing session file stream");

        goto label42;

     label41:
        throw $r21;

     label42:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r14, "Failed to close CLS file");

        goto label41;

     label43:
        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No events present for session ID ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r6);

        goto label32;

     label44:
        $r21 := @caughtexception;

        r14 = r3;

        goto label40;

     label45:
        r20 := @caughtexception;

        r14 = r3;

        goto label37;

        catch java.lang.Exception from label05 to label06 with label36;
        catch java.lang.Throwable from label04 to label06 with label39;
        catch java.lang.Exception from label06 to label07 with label45;
        catch java.lang.Exception from label08 to label09 with label45;
        catch java.lang.Exception from label10 to label11 with label45;
        catch java.lang.Exception from label12 to label13 with label45;
        catch java.lang.Exception from label14 to label15 with label45;
        catch java.lang.Exception from label16 to label17 with label45;
        catch java.lang.Exception from label18 to label19 with label45;
        catch java.lang.Exception from label20 to label23 with label45;
        catch java.lang.Exception from label24 to label25 with label45;
        catch java.lang.Exception from label26 to label27 with label45;
        catch java.lang.Exception from label28 to label31 with label45;
        catch java.lang.Throwable from label06 to label07 with label44;
        catch java.lang.Throwable from label08 to label13 with label44;
        catch java.lang.Throwable from label14 to label15 with label44;
        catch java.lang.Throwable from label18 to label21 with label44;
        catch java.lang.Throwable from label22 to label25 with label44;
        catch java.lang.Throwable from label26 to label27 with label44;
        catch java.lang.Throwable from label29 to label31 with label44;
        catch java.lang.Throwable from label37 to label38 with label39;
    }
