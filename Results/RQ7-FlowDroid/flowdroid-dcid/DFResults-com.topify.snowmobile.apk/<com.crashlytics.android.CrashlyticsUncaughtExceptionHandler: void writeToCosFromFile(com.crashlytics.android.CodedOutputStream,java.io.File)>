    private void writeToCosFromFile(com.crashlytics.android.CodedOutputStream, java.io.File) throws java.io.IOException
    {
        java.lang.Throwable $r6;
        byte[] r3;
        com.crashlytics.android.CodedOutputStream $r1;
        long $l0;
        com.crashlytics.android.CrashlyticsUncaughtExceptionHandler r0;
        java.io.FileInputStream r4, r5;
        java.io.File $r2;
        io.fabric.sdk.android.Logger $r7;
        int $i1, $i2;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: com.crashlytics.android.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: com.crashlytics.android.CodedOutputStream;

        $r2 := @parameter1: java.io.File;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label12;

        $l0 = virtualinvoke $r2.<java.io.File: long length()>();

        $i1 = (int) $l0;

        r3 = newarray (byte)[$i1];

        r5 = null;

     label01:
        r4 = new java.io.FileInputStream;

        specialinvoke r4.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

     label02:
        $i1 = 0;

     label03:
        $i2 = lengthof r3;

     label04:
        if $i1 >= $i2 goto label09;

     label05:
        $i2 = lengthof r3;

     label06:
        $i2 = $i2 - $i1;

     label07:
        $i2 = virtualinvoke r4.<java.io.FileInputStream: int read(byte[],int,int)>(r3, $i1, $i2);

     label08:
        if $i2 < 0 goto label09;

        $i1 = $i1 + $i2;

        goto label03;

     label09:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r4, "Failed to close file input stream.");

        virtualinvoke $r1.<com.crashlytics.android.CodedOutputStream: void writeRawBytes(byte[])>(r3);

        return;

     label10:
        $r6 := @caughtexception;

     label11:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r5, "Failed to close file input stream.");

        throw $r6;

     label12:
        $r7 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tried to include a file that doesn\'t exist: ");

        $r9 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", $r9, null);

        return;

     label13:
        $r6 := @caughtexception;

        r5 = r4;

        goto label11;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
    }
