Source: $r5 = virtualinvoke $r4.<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>()
$r5 = virtualinvoke $r4.<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>() in <com.adjust.sdk.Util: java.lang.String getMcc(android.content.Context)>
Sink: virtualinvoke $r12.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r3) in <com.adjust.sdk.Util: void writeObject(java.lang.Object,android.content.Context,java.lang.String,java.lang.String)>

<com.adjust.sdk.Util: java.lang.String getMcc(android.content.Context)>: $r5 = virtualinvoke $r4.<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>()
<com.adjust.sdk.Util: java.lang.String getMcc(android.content.Context)>: return $r5
<com.adjust.sdk.PackageBuilder: java.util.Map getSessionParameters(boolean)>: staticinvoke <com.adjust.sdk.PackageBuilder: void addString(java.util.Map,java.lang.String,java.lang.String)>($r1, "mcc", $r10)
<com.adjust.sdk.PackageBuilder: void addString(java.util.Map,java.lang.String,java.lang.String)>: interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2)
<com.adjust.sdk.PackageBuilder: void addString(java.util.Map,java.lang.String,java.lang.String)>: return
<com.adjust.sdk.PackageBuilder: java.util.Map getSessionParameters(boolean)>: return $r1
<com.adjust.sdk.PackageBuilder: com.adjust.sdk.ActivityPackage buildSessionPackage(boolean)>: virtualinvoke $r4.<com.adjust.sdk.ActivityPackage: void setParameters(java.util.Map)>($r2)
<com.adjust.sdk.ActivityPackage: void setParameters(java.util.Map)>: r0.<com.adjust.sdk.ActivityPackage: java.util.Map parameters> = $r1
<com.adjust.sdk.ActivityPackage: void setParameters(java.util.Map)>: return
<com.adjust.sdk.PackageBuilder: com.adjust.sdk.ActivityPackage buildSessionPackage(boolean)>: return $r4
<com.adjust.sdk.ActivityHandler: void transferSessionPackageI(long)>: interfaceinvoke $r1.<com.adjust.sdk.IPackageHandler: void addPackage(com.adjust.sdk.ActivityPackage)>($r8)
<com.adjust.sdk.PackageHandler: void addPackage(com.adjust.sdk.ActivityPackage)>: specialinvoke $r3.<com.adjust.sdk.PackageHandler$2: void <init>(com.adjust.sdk.PackageHandler,com.adjust.sdk.ActivityPackage)>(r0, $r1)
<com.adjust.sdk.PackageHandler$2: void <init>(com.adjust.sdk.PackageHandler,com.adjust.sdk.ActivityPackage)>: r0.<com.adjust.sdk.PackageHandler$2: com.adjust.sdk.ActivityPackage val$activityPackage> = $r2
<com.adjust.sdk.PackageHandler$2: void <init>(com.adjust.sdk.PackageHandler,com.adjust.sdk.ActivityPackage)>: return
<com.adjust.sdk.PackageHandler: void addPackage(com.adjust.sdk.ActivityPackage)>: interfaceinvoke $r2.<com.adjust.sdk.scheduler.ThreadExecutor: void submit(java.lang.Runnable)>($r3)
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler: void submit(java.lang.Runnable)>: specialinvoke r0.<com.adjust.sdk.scheduler.SingleThreadCachedScheduler: void processQueue(java.lang.Runnable)>($r2)
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler: void processQueue(java.lang.Runnable)>: specialinvoke $r3.<com.adjust.sdk.scheduler.SingleThreadCachedScheduler$3: void <init>(com.adjust.sdk.scheduler.SingleThreadCachedScheduler,java.lang.Runnable)>(r0, $r1)
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler$3: void <init>(com.adjust.sdk.scheduler.SingleThreadCachedScheduler,java.lang.Runnable)>: r0.<com.adjust.sdk.scheduler.SingleThreadCachedScheduler$3: java.lang.Runnable val$firstRunnable> = $r2
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler$3: void <init>(com.adjust.sdk.scheduler.SingleThreadCachedScheduler,java.lang.Runnable)>: return
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler: void processQueue(java.lang.Runnable)>: virtualinvoke $r2.<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>($r3)
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler$3: void run()>: $r2 = r0.<com.adjust.sdk.scheduler.SingleThreadCachedScheduler$3: java.lang.Runnable val$firstRunnable>
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler$3: void run()>: staticinvoke <com.adjust.sdk.scheduler.SingleThreadCachedScheduler: void access$000(com.adjust.sdk.scheduler.SingleThreadCachedScheduler,java.lang.Runnable)>($r1, $r2)
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler: void access$000(com.adjust.sdk.scheduler.SingleThreadCachedScheduler,java.lang.Runnable)>: specialinvoke $r0.<com.adjust.sdk.scheduler.SingleThreadCachedScheduler: void tryExecuteRunnable(java.lang.Runnable)>($r1)
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler: void tryExecuteRunnable(java.lang.Runnable)>: interfaceinvoke $r1.<java.lang.Runnable: void run()>()
<com.adjust.sdk.PackageHandler$2: void run()>: $r2 = r0.<com.adjust.sdk.PackageHandler$2: com.adjust.sdk.ActivityPackage val$activityPackage>
<com.adjust.sdk.PackageHandler$2: void run()>: staticinvoke <com.adjust.sdk.PackageHandler: void access$100(com.adjust.sdk.PackageHandler,com.adjust.sdk.ActivityPackage)>($r1, $r2)
<com.adjust.sdk.PackageHandler: void access$100(com.adjust.sdk.PackageHandler,com.adjust.sdk.ActivityPackage)>: specialinvoke $r0.<com.adjust.sdk.PackageHandler: void addI(com.adjust.sdk.ActivityPackage)>($r1)
<com.adjust.sdk.PackageHandler: void addI(com.adjust.sdk.ActivityPackage)>: $r4[1] = $r1
<com.adjust.sdk.PackageHandler: void addI(com.adjust.sdk.ActivityPackage)>: interfaceinvoke $r3.<com.adjust.sdk.ILogger: void debug(java.lang.String,java.lang.Object[])>("Added package %d (%s)", $r4)
<com.adjust.sdk.Logger: void debug(java.lang.String,java.lang.Object[])>: return
<com.adjust.sdk.PackageHandler: void addI(com.adjust.sdk.ActivityPackage)>: $r4[1] = $r1
<com.adjust.sdk.PackageHandler: void addI(com.adjust.sdk.ActivityPackage)>: interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1)
<com.adjust.sdk.PackageHandler: void addI(com.adjust.sdk.ActivityPackage)>: $r2 = r0.<com.adjust.sdk.PackageHandler: java.util.List packageQueue>
<com.adjust.sdk.PackageHandler: void addI(com.adjust.sdk.ActivityPackage)>: specialinvoke r0.<com.adjust.sdk.PackageHandler: void writePackageQueueI()>()
<com.adjust.sdk.PackageHandler: void writePackageQueueI()>: $r1 = r0.<com.adjust.sdk.PackageHandler: java.util.List packageQueue>
<com.adjust.sdk.PackageHandler: void writePackageQueueI()>: staticinvoke <com.adjust.sdk.Util: void writeObject(java.lang.Object,android.content.Context,java.lang.String,java.lang.String)>($r1, $r2, "AdjustIoPackageQueue", "Package queue")
<com.adjust.sdk.Util: void writeObject(java.lang.Object,android.content.Context,java.lang.String,java.lang.String)>: virtualinvoke $r12.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r3)
