    private void tryExecuteRunnable(java.lang.Runnable)
    {
        com.adjust.sdk.scheduler.SingleThreadCachedScheduler r0;
        java.lang.Throwable $r2;
        java.lang.Object[] $r4;
        com.adjust.sdk.ILogger $r3;
        java.lang.String $r5;
        java.lang.Runnable $r1;
        boolean $z0;

        r0 := @this: com.adjust.sdk.scheduler.SingleThreadCachedScheduler;

        $r1 := @parameter0: java.lang.Runnable;

     label1:
        $z0 = r0.<com.adjust.sdk.scheduler.SingleThreadCachedScheduler: boolean isTeardown>;

     label2:
        if $z0 == 0 goto label3;

        return;

     label3:
        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

     label4:
        return;

     label5:
        $r2 := @caughtexception;

        $r3 = staticinvoke <com.adjust.sdk.AdjustFactory: com.adjust.sdk.ILogger getLogger()>();

        $r4 = newarray (java.lang.Object)[1];

        $r5 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        $r4[0] = $r5;

        interfaceinvoke $r3.<com.adjust.sdk.ILogger: void warn(java.lang.String,java.lang.Object[])>("Execution failed: %s", $r4);

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
