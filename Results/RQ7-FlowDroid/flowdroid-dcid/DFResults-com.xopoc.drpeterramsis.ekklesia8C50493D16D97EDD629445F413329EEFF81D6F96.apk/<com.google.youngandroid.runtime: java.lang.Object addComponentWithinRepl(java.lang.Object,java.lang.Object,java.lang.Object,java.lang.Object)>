    public static java.lang.Object addComponentWithinRepl(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        gnu.kawa.reflect.Invoke $r6;
        com.google.youngandroid.runtime$frame $r12;
        gnu.mapping.Symbol $r4;
        gnu.expr.ModuleMethod $r7;
        java.lang.ClassCastException $r8, $r9, $r10, $r11;
        gnu.mapping.WrongType $r13;
        java.lang.Object $r0, $r1, $r2, $r3;
        com.google.appinventor.components.runtime.ComponentContainer $r5;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 := @parameter3: java.lang.Object;

        $r12 = new com.google.youngandroid.runtime$frame;

        specialinvoke $r12.<com.google.youngandroid.runtime$frame: void <init>()>();

        $r12.<com.google.youngandroid.runtime$frame: java.lang.Object component$Mnname> = $r2;

        $r12.<com.google.youngandroid.runtime$frame: java.lang.Object init$Mnprops$Mnthunk> = $r3;

     label01:
        $r4 = (gnu.mapping.Symbol) $r0;

     label02:
        $r0 = staticinvoke <com.google.youngandroid.runtime: java.lang.Object lookupInCurrentFormEnvironment(gnu.mapping.Symbol)>($r4);

     label03:
        $r5 = (com.google.appinventor.components.runtime.ComponentContainer) $r0;

     label04:
        $r0 = $r12.<com.google.youngandroid.runtime$frame: java.lang.Object component$Mnname>;

     label05:
        $r4 = (gnu.mapping.Symbol) $r0;

     label06:
        $r0 = staticinvoke <com.google.youngandroid.runtime: java.lang.Object lookupInCurrentFormEnvironment(gnu.mapping.Symbol)>($r4);

        $r12.<com.google.youngandroid.runtime$frame: java.lang.Object existing$Mncomponent> = $r0;

        $r6 = <gnu.kawa.reflect.Invoke: gnu.kawa.reflect.Invoke make>;

        $r0 = virtualinvoke $r6.<gnu.mapping.Procedure: java.lang.Object apply2(java.lang.Object,java.lang.Object)>($r1, $r5);

        $r12.<com.google.youngandroid.runtime$frame: java.lang.Object component$Mnto$Mnadd> = $r0;

        $r0 = $r12.<com.google.youngandroid.runtime$frame: java.lang.Object component$Mnname>;

     label07:
        $r4 = (gnu.mapping.Symbol) $r0;

     label08:
        $r0 = $r12.<com.google.youngandroid.runtime$frame: java.lang.Object component$Mnto$Mnadd>;

        staticinvoke <com.google.youngandroid.runtime: java.lang.Object addToCurrentFormEnvironment(gnu.mapping.Symbol,java.lang.Object)>($r4, $r0);

        $r0 = $r12.<com.google.youngandroid.runtime$frame: java.lang.Object component$Mnname>;

        $r7 = $r12.<com.google.youngandroid.runtime$frame: gnu.expr.ModuleMethod lambda$Fn1>;

        $r0 = staticinvoke <com.google.youngandroid.runtime: java.lang.Object addInitThunk(java.lang.Object,java.lang.Object)>($r0, $r7);

        return $r0;

     label09:
        $r8 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r8, "lookup-in-current-form-environment", 0, $r0);

        throw $r13;

     label10:
        $r9 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r9, "container", -2, $r0);

        throw $r13;

     label11:
        $r10 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r10, "lookup-in-current-form-environment", 0, $r0);

        throw $r13;

     label12:
        $r11 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r11, "add-to-current-form-environment", 0, $r0);

        throw $r13;

        catch java.lang.ClassCastException from label01 to label02 with label09;
        catch java.lang.ClassCastException from label03 to label04 with label10;
        catch java.lang.ClassCastException from label05 to label06 with label11;
        catch java.lang.ClassCastException from label07 to label08 with label12;
    }
