Source: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
$i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0) in <com.buzzvil.universalimageloader.universalimageloader.cache.disc.impl.ext.a: void a()>
Sink: virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3) in <com.buzzvil.universalimageloader.universalimageloader.cache.disc.impl.ext.a: java.lang.String b()>

<com.buzzvil.universalimageloader.universalimageloader.cache.disc.impl.ext.a: void a()>: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
<com.buzzvil.universalimageloader.universalimageloader.cache.disc.impl.ext.a: void a()>: $r2 = r0.<com.buzzvil.universalimageloader.universalimageloader.cache.disc.impl.ext.a: byte[] c>
<com.buzzvil.universalimageloader.universalimageloader.cache.disc.impl.ext.a: void a()>: return
<com.buzzvil.universalimageloader.universalimageloader.cache.disc.impl.ext.a: java.lang.String b()>: $r2 = r0.<com.buzzvil.universalimageloader.universalimageloader.cache.disc.impl.ext.a: byte[] c>
<com.buzzvil.universalimageloader.universalimageloader.cache.disc.impl.ext.a: java.lang.String b()>: virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3)
