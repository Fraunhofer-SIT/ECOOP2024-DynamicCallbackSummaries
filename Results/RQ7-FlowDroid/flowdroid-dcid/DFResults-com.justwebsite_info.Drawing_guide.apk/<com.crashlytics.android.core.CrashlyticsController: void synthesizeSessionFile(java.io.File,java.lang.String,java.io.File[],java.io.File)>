    private void synthesizeSessionFile(java.io.File, java.lang.String, java.io.File[], java.io.File)
    {
        java.lang.Throwable $r15;
        com.crashlytics.android.core.CrashlyticsController r0;
        java.util.Date $r13;
        long $l0;
        com.crashlytics.android.core.ClsFileOutputStream r5, r7;
        java.lang.String $r2, $r12;
        boolean z0, $z1;
        java.io.File $r1, $r4, $r6;
        java.lang.Exception r14;
        io.fabric.sdk.android.Logger $r10;
        com.crashlytics.android.core.CodedOutputStream r8, $r9;
        java.lang.StringBuilder $r11;
        java.io.File[] $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.io.File[];

        $r4 := @parameter3: java.io.File;

        if $r4 == null goto label18;

        z0 = 1;

     label01:
        if z0 == 0 goto label19;

        $r6 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFatalSessionFilesDir()>();

     label02:
        $z1 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label03;

        virtualinvoke $r6.<java.io.File: boolean mkdirs()>();

     label03:
        r7 = null;

        r8 = null;

     label04:
        r5 = new com.crashlytics.android.core.ClsFileOutputStream;

     label05:
        specialinvoke r5.<com.crashlytics.android.core.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r6, $r2);

     label06:
        $r9 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream)>(r5);

     label07:
        r8 = $r9;

     label08:
        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

     label09:
        $r11 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collecting SessionStart data for session ID ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r12);

        staticinvoke <com.crashlytics.android.core.CrashlyticsController: void writeToCosFromFile(com.crashlytics.android.core.CodedOutputStream,java.io.File)>($r9, $r1);

     label11:
        $r13 = new java.util.Date;

     label12:
        specialinvoke $r13.<java.util.Date: void <init>()>();

        $l0 = virtualinvoke $r13.<java.util.Date: long getTime()>();

     label13:
        $l0 = $l0 / 1000L;

     label14:
        virtualinvoke $r9.<com.crashlytics.android.core.CodedOutputStream: void writeUInt64(int,long)>(4, $l0);

        virtualinvoke $r9.<com.crashlytics.android.core.CodedOutputStream: void writeBool(int,boolean)>(5, z0);

        virtualinvoke $r9.<com.crashlytics.android.core.CodedOutputStream: void writeUInt32(int,int)>(11, 1);

        virtualinvoke $r9.<com.crashlytics.android.core.CodedOutputStream: void writeEnum(int,int)>(12, 3);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeInitialPartsTo(com.crashlytics.android.core.CodedOutputStream,java.lang.String)>($r9, $r2);

        staticinvoke <com.crashlytics.android.core.CrashlyticsController: void writeNonFatalEventsTo(com.crashlytics.android.core.CodedOutputStream,java.io.File[],java.lang.String)>($r9, $r3, $r2);

     label15:
        if z0 == 0 goto label17;

     label16:
        staticinvoke <com.crashlytics.android.core.CrashlyticsController: void writeToCosFromFile(com.crashlytics.android.core.CodedOutputStream,java.io.File)>($r9, $r4);

     label17:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r9, "Error flushing session file stream");

        goto label20;

     label18:
        z0 = 0;

        goto label01;

     label19:
        $r6 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getNonFatalSessionFilesDir()>();

        goto label02;

     label20:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r5, "Failed to close CLS file");

        return;

     label21:
        r14 := @caughtexception;

     label22:
        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write session file for session ID: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", $r2, r14);

     label23:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>(r8, "Error flushing session file stream");

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void closeWithoutRenamingOrLog(com.crashlytics.android.core.ClsFileOutputStream)>(r7);

        return;

     label24:
        $r15 := @caughtexception;

     label25:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>(r8, "Error flushing session file stream");

        goto label27;

     label26:
        throw $r15;

     label27:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r7, "Failed to close CLS file");

        goto label26;

     label28:
        $r15 := @caughtexception;

        r7 = r5;

        goto label25;

     label29:
        r14 := @caughtexception;

        r7 = r5;

        goto label22;

        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Throwable from label04 to label06 with label24;
        catch java.lang.Exception from label06 to label07 with label29;
        catch java.lang.Exception from label08 to label09 with label29;
        catch java.lang.Exception from label10 to label11 with label29;
        catch java.lang.Exception from label12 to label13 with label29;
        catch java.lang.Exception from label14 to label15 with label29;
        catch java.lang.Exception from label16 to label17 with label29;
        catch java.lang.Throwable from label06 to label07 with label28;
        catch java.lang.Throwable from label08 to label13 with label28;
        catch java.lang.Throwable from label14 to label15 with label28;
        catch java.lang.Throwable from label16 to label17 with label28;
        catch java.lang.Throwable from label22 to label23 with label24;
    }
