    public static java.lang.Object $Mn(java.lang.Object)
    {
        java.lang.Float $r8;
        java.lang.Double $r9;
        long $l1;
        gnu.math.RatNum $r7;
        java.lang.Integer $r2;
        gnu.math.DFloNum $r10;
        java.math.BigDecimal $r6;
        gnu.math.Numeric $r1;
        java.lang.Long $r3;
        int $i0;
        float $f0;
        java.lang.Object $r0;
        java.math.BigInteger $r4;
        gnu.math.IntNum $r5;
        double $d0;

        $r0 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <gnu.kawa.functions.Arithmetic: int classifyValue(java.lang.Object)>($r0);

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label10;
            default: goto label01;
        };

     label01:
        $r1 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.Numeric asNumeric(java.lang.Object)>($r0);

        $r1 = virtualinvoke $r1.<gnu.math.Numeric: gnu.math.Numeric 'neg'()>();

        return $r1;

     label02:
        $r2 = new java.lang.Integer;

        $i0 = staticinvoke <gnu.kawa.functions.Arithmetic: int asInt(java.lang.Object)>($r0);

        $i0 = neg $i0;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>($i0);

        return $r2;

     label03:
        $r3 = new java.lang.Long;

        $l1 = staticinvoke <gnu.kawa.functions.Arithmetic: long asLong(java.lang.Object)>($r0);

        $l1 = neg $l1;

        specialinvoke $r3.<java.lang.Long: void <init>(long)>($l1);

        return $r3;

     label04:
        $r4 = staticinvoke <gnu.kawa.functions.Arithmetic: java.math.BigInteger asBigInteger(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger negate()>();

        return $r4;

     label05:
        $r5 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.IntNum asIntNum(java.lang.Object)>($r0);

        $r5 = staticinvoke <gnu.math.IntNum: gnu.math.IntNum 'neg'(gnu.math.IntNum)>($r5);

        return $r5;

     label06:
        $r6 = staticinvoke <gnu.kawa.functions.Arithmetic: java.math.BigDecimal asBigDecimal(java.lang.Object)>($r0);

        $r6 = virtualinvoke $r6.<java.math.BigDecimal: java.math.BigDecimal negate()>();

        return $r6;

     label07:
        $r7 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.RatNum asRatNum(java.lang.Object)>($r0);

        $r7 = staticinvoke <gnu.math.RatNum: gnu.math.RatNum 'neg'(gnu.math.RatNum)>($r7);

        return $r7;

     label08:
        $r8 = new java.lang.Float;

        $f0 = staticinvoke <gnu.kawa.functions.Arithmetic: float asFloat(java.lang.Object)>($r0);

        $f0 = neg $f0;

        specialinvoke $r8.<java.lang.Float: void <init>(float)>($f0);

        return $r8;

     label09:
        $r9 = new java.lang.Double;

        $d0 = staticinvoke <gnu.kawa.functions.Arithmetic: double asDouble(java.lang.Object)>($r0);

        $d0 = neg $d0;

        specialinvoke $r9.<java.lang.Double: void <init>(double)>($d0);

        return $r9;

     label10:
        $r10 = new gnu.math.DFloNum;

        $d0 = staticinvoke <gnu.kawa.functions.Arithmetic: double asDouble(java.lang.Object)>($r0);

        $d0 = neg $d0;

        specialinvoke $r10.<gnu.math.DFloNum: void <init>(double)>($d0);

        return $r10;
    }
