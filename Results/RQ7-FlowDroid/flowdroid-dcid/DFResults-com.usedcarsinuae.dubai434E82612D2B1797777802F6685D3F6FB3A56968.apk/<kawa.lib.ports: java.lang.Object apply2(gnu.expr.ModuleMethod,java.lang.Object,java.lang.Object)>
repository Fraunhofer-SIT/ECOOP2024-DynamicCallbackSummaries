    public java.lang.Object apply2(gnu.expr.ModuleMethod, java.lang.Object, java.lang.Object)
    {
        gnu.mapping.OutPort $r16;
        gnu.mapping.Symbol $r5;
        gnu.mapping.Values r27;
        gnu.expr.ModuleMethod $r1;
        java.lang.ClassCastException $r6, $r8, $r11, $r12, $r14, $r15, $r17, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        gnu.text.Path $r18;
        int $i0;
        gnu.text.LineBufferedReader $r4;
        kawa.lib.ports r0;
        java.lang.CharSequence $r13;
        gnu.mapping.Procedure $r10;
        gnu.mapping.WrongType $r7;
        gnu.mapping.TtyInPort $r9;
        java.lang.Object $r2, $r3;

        r0 := @this: kawa.lib.ports;

        $r1 := @parameter0: gnu.expr.ModuleMethod;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        $i0 = $r1.<gnu.expr.ModuleMethod: int selector>;

        if $i0 == 3 goto label38;

        if $i0 == 4 goto label33;

        if $i0 == 5 goto label28;

        if $i0 == 6 goto label23;

        if $i0 == 12 goto label20;

        if $i0 == 17 goto label15;

        if $i0 == 26 goto label14;

        if $i0 == 28 goto label13;

        if $i0 == 31 goto label12;

        if $i0 == 33 goto label11;

        if $i0 == 38 goto label06;

        if $i0 == 44 goto label01;

        $r2 = specialinvoke r0.<gnu.expr.ModuleBody: java.lang.Object apply2(gnu.expr.ModuleMethod,java.lang.Object,java.lang.Object)>($r1, $r2, $r3);

        return $r2;

     label01:
        $r4 = (gnu.text.LineBufferedReader) $r2;

     label02:
        $r5 = (gnu.mapping.Symbol) $r3;

     label03:
        $r2 = staticinvoke <kawa.lib.ports: java.lang.Object readLine(gnu.text.LineBufferedReader,gnu.mapping.Symbol)>($r4, $r5);

        return $r2;

     label04:
        $r6 := @caughtexception;

        $r7 = new gnu.mapping.WrongType;

        specialinvoke $r7.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r6, "read-line", 2, $r3);

        throw $r7;

     label05:
        $r8 := @caughtexception;

        $r7 = new gnu.mapping.WrongType;

        specialinvoke $r7.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r8, "read-line", 1, $r2);

        throw $r7;

     label06:
        $r9 = (gnu.mapping.TtyInPort) $r2;

     label07:
        $r10 = (gnu.mapping.Procedure) $r3;

     label08:
        staticinvoke <kawa.lib.ports: void setInputPortPrompter$Ex(gnu.mapping.TtyInPort,gnu.mapping.Procedure)>($r9, $r10);

        r27 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r27;

     label09:
        $r11 := @caughtexception;

        $r7 = new gnu.mapping.WrongType;

        specialinvoke $r7.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r11, "set-input-port-prompter!", 2, $r3);

        throw $r7;

     label10:
        $r12 := @caughtexception;

        $r7 = new gnu.mapping.WrongType;

        specialinvoke $r7.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r12, "set-input-port-prompter!", 1, $r2);

        throw $r7;

     label11:
        staticinvoke <kawa.lib.ports: void setInputPortLineNumber$Ex(java.lang.Object,java.lang.Object)>($r2, $r3);

        r27 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r27;

     label12:
        staticinvoke <kawa.lib.ports: void setPortLine$Ex(java.lang.Object,java.lang.Object)>($r2, $r3);

        r27 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r27;

     label13:
        staticinvoke <kawa.lib.ports: void display(java.lang.Object,java.lang.Object)>($r2, $r3);

        r27 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r27;

     label14:
        staticinvoke <kawa.lib.ports: void write(java.lang.Object,java.lang.Object)>($r2, $r3);

        r27 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r27;

     label15:
        $r13 = (java.lang.CharSequence) $r2;

     label16:
        $r10 = (gnu.mapping.Procedure) $r3;

     label17:
        $r2 = staticinvoke <kawa.lib.ports: java.lang.Object callWithInputString(java.lang.CharSequence,gnu.mapping.Procedure)>($r13, $r10);

        return $r2;

     label18:
        $r14 := @caughtexception;

        $r7 = new gnu.mapping.WrongType;

        specialinvoke $r7.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r14, "call-with-input-string", 2, $r3);

        throw $r7;

     label19:
        $r15 := @caughtexception;

        $r7 = new gnu.mapping.WrongType;

        specialinvoke $r7.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r15, "call-with-input-string", 1, $r2);

        throw $r7;

     label20:
        $r16 = (gnu.mapping.OutPort) $r3;

     label21:
        staticinvoke <kawa.lib.ports: void writeChar(java.lang.Object,gnu.mapping.OutPort)>($r2, $r16);

        r27 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r27;

     label22:
        $r17 := @caughtexception;

        $r7 = new gnu.mapping.WrongType;

        specialinvoke $r7.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r17, "write-char", 2, $r3);

        throw $r7;

     label23:
        $r18 = staticinvoke <gnu.text.Path: gnu.text.Path valueOf(java.lang.Object)>($r2);

     label24:
        $r10 = (gnu.mapping.Procedure) $r3;

     label25:
        $r2 = staticinvoke <kawa.lib.ports: java.lang.Object withOutputToFile(gnu.text.Path,gnu.mapping.Procedure)>($r18, $r10);

        return $r2;

     label26:
        $r19 := @caughtexception;

        $r7 = new gnu.mapping.WrongType;

        specialinvoke $r7.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r19, "with-output-to-file", 2, $r3);

        throw $r7;

     label27:
        $r20 := @caughtexception;

        $r7 = new gnu.mapping.WrongType;

        specialinvoke $r7.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r20, "with-output-to-file", 1, $r2);

        throw $r7;

     label28:
        $r18 = staticinvoke <gnu.text.Path: gnu.text.Path valueOf(java.lang.Object)>($r2);

     label29:
        $r10 = (gnu.mapping.Procedure) $r3;

     label30:
        $r2 = staticinvoke <kawa.lib.ports: java.lang.Object withInputFromFile(gnu.text.Path,gnu.mapping.Procedure)>($r18, $r10);

        return $r2;

     label31:
        $r21 := @caughtexception;

        $r7 = new gnu.mapping.WrongType;

        specialinvoke $r7.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r21, "with-input-from-file", 2, $r3);

        throw $r7;

     label32:
        $r22 := @caughtexception;

        $r7 = new gnu.mapping.WrongType;

        specialinvoke $r7.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r22, "with-input-from-file", 1, $r2);

        throw $r7;

     label33:
        $r18 = staticinvoke <gnu.text.Path: gnu.text.Path valueOf(java.lang.Object)>($r2);

     label34:
        $r10 = (gnu.mapping.Procedure) $r3;

     label35:
        $r2 = staticinvoke <kawa.lib.ports: java.lang.Object callWithOutputFile(gnu.text.Path,gnu.mapping.Procedure)>($r18, $r10);

        return $r2;

     label36:
        $r23 := @caughtexception;

        $r7 = new gnu.mapping.WrongType;

        specialinvoke $r7.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r23, "call-with-output-file", 2, $r3);

        throw $r7;

     label37:
        $r24 := @caughtexception;

        $r7 = new gnu.mapping.WrongType;

        specialinvoke $r7.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r24, "call-with-output-file", 1, $r2);

        throw $r7;

     label38:
        $r18 = staticinvoke <gnu.text.Path: gnu.text.Path valueOf(java.lang.Object)>($r2);

     label39:
        $r10 = (gnu.mapping.Procedure) $r3;

     label40:
        $r2 = staticinvoke <kawa.lib.ports: java.lang.Object callWithInputFile(gnu.text.Path,gnu.mapping.Procedure)>($r18, $r10);

        return $r2;

     label41:
        $r25 := @caughtexception;

        $r7 = new gnu.mapping.WrongType;

        specialinvoke $r7.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r25, "call-with-input-file", 2, $r3);

        throw $r7;

     label42:
        $r26 := @caughtexception;

        $r7 = new gnu.mapping.WrongType;

        specialinvoke $r7.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r26, "call-with-input-file", 1, $r2);

        throw $r7;

        catch java.lang.ClassCastException from label01 to label02 with label05;
        catch java.lang.ClassCastException from label02 to label03 with label04;
        catch java.lang.ClassCastException from label06 to label07 with label10;
        catch java.lang.ClassCastException from label07 to label08 with label09;
        catch java.lang.ClassCastException from label15 to label16 with label19;
        catch java.lang.ClassCastException from label16 to label17 with label18;
        catch java.lang.ClassCastException from label20 to label21 with label22;
        catch java.lang.ClassCastException from label23 to label24 with label27;
        catch java.lang.ClassCastException from label24 to label25 with label26;
        catch java.lang.ClassCastException from label28 to label29 with label32;
        catch java.lang.ClassCastException from label29 to label30 with label31;
        catch java.lang.ClassCastException from label33 to label34 with label37;
        catch java.lang.ClassCastException from label34 to label35 with label36;
        catch java.lang.ClassCastException from label38 to label39 with label42;
        catch java.lang.ClassCastException from label39 to label40 with label41;
    }
