    public gnu.math.Numeric mulReversed(gnu.math.Numeric)
    {
        gnu.math.DQuantity r0, $r2;
        java.lang.IllegalArgumentException $r5;
        gnu.math.Numeric $r1;
        gnu.math.RealNum $r3;
        double $d0, $d1;
        boolean $z0;
        gnu.math.Unit $r4;

        r0 := @this: gnu.math.DQuantity;

        $r1 := @parameter0: gnu.math.Numeric;

        $z0 = $r1 instanceof gnu.math.RealNum;

        if $z0 == 0 goto label1;

        $r2 = new gnu.math.DQuantity;

        $r3 = (gnu.math.RealNum) $r1;

        $d1 = virtualinvoke $r3.<gnu.math.RealNum: double doubleValue()>();

        $d0 = r0.<gnu.math.DQuantity: double factor>;

        $d0 = $d1 * $d0;

        $r4 = virtualinvoke r0.<gnu.math.DQuantity: gnu.math.Unit unit()>();

        specialinvoke $r2.<gnu.math.DQuantity: void <init>(double,gnu.math.Unit)>($d0, $r4);

        return $r2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;
    }
