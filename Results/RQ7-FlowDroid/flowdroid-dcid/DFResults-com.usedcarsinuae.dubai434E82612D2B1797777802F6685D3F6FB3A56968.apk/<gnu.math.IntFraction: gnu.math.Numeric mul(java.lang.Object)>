    public gnu.math.Numeric mul(java.lang.Object)
    {
        gnu.math.IntFraction r0;
        gnu.math.Numeric $r3;
        java.lang.Object $r1;
        gnu.math.RatNum $r2;
        java.lang.IllegalArgumentException $r4;
        boolean $z0;

        r0 := @this: gnu.math.IntFraction;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof gnu.math.RatNum;

        if $z0 == 0 goto label1;

        $r2 = (gnu.math.RatNum) $r1;

        $r2 = staticinvoke <gnu.math.RatNum: gnu.math.RatNum times(gnu.math.RatNum,gnu.math.RatNum)>(r0, $r2);

        return $r2;

     label1:
        $z0 = $r1 instanceof gnu.math.Numeric;

        if $z0 == 0 goto label2;

        $r3 = (gnu.math.Numeric) $r1;

        $r3 = virtualinvoke $r3.<gnu.math.Numeric: gnu.math.Numeric mulReversed(gnu.math.Numeric)>(r0);

        return $r3;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;
    }
