[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loading sources and sinks from SourcesSinks/UnconstrainedSourcesSinks.xml...
[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loaded 273 sources and 91 sinks from the XML file
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.228004826 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230,400 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 11 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 11 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ContentProviderEntryPointCreator - Cannot create valid constructor for io.fabric.sdk.android.ActivityLifecycleManager$Callbacks, because it is abstract and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 10 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 11 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ContentProviderEntryPointCreator - Cannot create valid constructor for io.fabric.sdk.android.ActivityLifecycleManager$Callbacks, because it is abstract and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 2 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 11 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ContentProviderEntryPointCreator - Cannot create valid constructor for io.fabric.sdk.android.ActivityLifecycleManager$Callbacks, because it is abstract and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 0 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Callback analysis terminated normally
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 273 sources, 91 sinks, and 53 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 54 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on storagepath2-data/androidApps/2020-AndroZoo-PlayStore/com.atb.businessmobile.apk with 273 sources and 91 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230,400 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 0.602898265 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 7712 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 60 sources and 13 sinks.
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper hits: 1096939
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper misses: 56161294
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - IFDS problem with 55272932 forward and 37567955 backward edges solved in 901 seconds, processing 10 results...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Current memory consumption: 75309 MB
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after cleanup: 39215 MB
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 1 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 2 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after path building: 39424 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Path reconstruction took 31 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i1, $i2) in method <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[],int,int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>(r2, $i0, $i1) in method <com.crashlytics.android.core.CrashlyticsController: void copyToCodedOutputStream(java.io.InputStream,com.crashlytics.android.core.CodedOutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void copyToCodedOutputStream(java.io.InputStream,com.crashlytics.android.core.CodedOutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>(r2, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void copyToCodedOutputStream(java.io.InputStream,com.crashlytics.android.core.CodedOutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[])>(r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i1, $i2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.FileOutputStream: void write(byte[])>($r5) in method <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null) in method <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r11.<com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>(r0, $r5, r2, r3, $r7, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.core.CrashlyticsController$20: java.lang.String val$installUuid> = $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction)>($r1, "SessionApp.json", $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction: void writeTo(java.io.FileOutputStream)>(r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.core.CrashlyticsController$20$1: com.crashlytics.android.core.CrashlyticsController$20 this$1> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.crashlytics.android.core.CrashlyticsController$20$1: com.crashlytics.android.core.CrashlyticsController$20 this$1>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = $r1.<com.crashlytics.android.core.CrashlyticsController$20: java.lang.String val$installUuid>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController$20$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("install_uuid", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<org.json.JSONObject: void <init>(java.util.Map)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.FileOutputStream: void write(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null) in method <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r4 = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r11.<com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>(r0, $r5, r2, r3, $r7, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.core.CrashlyticsController$20: java.lang.String val$installUuid> = $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction)>($r1, "SessionApp.json", $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction: void writeTo(java.io.FileOutputStream)>(r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.core.CrashlyticsController$20$1: com.crashlytics.android.core.CrashlyticsController$20 this$1> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.crashlytics.android.core.CrashlyticsController$20$1: com.crashlytics.android.core.CrashlyticsController$20 this$1>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = $r1.<com.crashlytics.android.core.CrashlyticsController$20: java.lang.String val$installUuid>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController$20$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("install_uuid", $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20$1: void <init>(com.crashlytics.android.core.CrashlyticsController$20)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<org.json.JSONObject: void <init>(java.util.Map)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$20: void writeTo(java.io.FileOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.FileOutputStream: void write(byte[])>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke r2.<java.io.FileWriter: void write(java.lang.String)>($r9) in method <io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: void writeCachedSettings(long,org.json.JSONObject)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>(r1) in method <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>(r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<io.fabric.sdk.android.services.network.HttpRequest$6: java.io.OutputStream val$output>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.services.network.HttpRequest$6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$Operation: java.lang.Object call()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: io.fabric.sdk.android.services.network.HttpRequest$Operation
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest copy(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequest$6: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Closeable,boolean,java.io.InputStream,java.io.OutputStream)>(r0, $r1, $z0, $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$6: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Closeable,boolean,java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<io.fabric.sdk.android.services.network.HttpRequest$6: java.io.OutputStream val$output> = $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$6: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Closeable,boolean,java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest copy(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String body(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String body(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String body()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsSpiCall: org.json.JSONObject handleResponse(io.fabric.sdk.android.services.network.HttpRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = specialinvoke r0.<io.fabric.sdk.android.services.settings.DefaultSettingsSpiCall: org.json.JSONObject getJsonObjectFrom(java.lang.String)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsSpiCall: org.json.JSONObject getJsonObjectFrom(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<org.json.JSONObject: void <init>(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsSpiCall: org.json.JSONObject getJsonObjectFrom(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsSpiCall: org.json.JSONObject handleResponse(io.fabric.sdk.android.services.network.HttpRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsSpiCall: org.json.JSONObject invoke(io.fabric.sdk.android.services.settings.SettingsRequest)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultSettingsController: io.fabric.sdk.android.services.settings.SettingsData loadSettingsData(io.fabric.sdk.android.services.settings.SettingsCacheBehavior)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r12.<io.fabric.sdk.android.services.settings.CachedSettingsIo: void writeCachedSettings(long,org.json.JSONObject)>($l0, $r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: void writeCachedSettings(long,org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: void writeCachedSettings(long,org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r2.<java.io.FileWriter: void write(java.lang.String)>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, 0, $i0) in method <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>(r1) in method <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke r3.<java.util.zip.GZIPOutputStream: void write(byte[])>($r1) in method <com.crashlytics.android.core.CrashlyticsController: void gzip(byte[],java.io.File)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>(r1) in method <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readBytes(java.io.InputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.NativeFileUtils: byte[] readFile(java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void finalizeMostRecentNativeCrash(android.content.Context,java.io.File,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void gzipIfNotEmpty(byte[],java.io.File)>($r19, $r21)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void gzipIfNotEmpty(byte[],java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void gzip(byte[],java.io.File)>($r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void gzip(byte[],java.io.File)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r3.<java.util.zip.GZIPOutputStream: void write(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>(r1, 0, $i0) in method <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>(r1) in method <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.network.HttpRequest$6: io.fabric.sdk.android.services.network.HttpRequest run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>(r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0) in method <io.fabric.sdk.android.services.common.CommonUtils: void copyStream(java.io.InputStream,java.io.OutputStream,byte[])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2) in method <io.fabric.sdk.android.services.common.CommonUtils: void copyStream(java.io.InputStream,java.io.OutputStream,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.CommonUtils: void copyStream(java.io.InputStream,java.io.OutputStream,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.CommonUtils: void copyStream(java.io.InputStream,java.io.OutputStream,byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i3) in method <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null) in method <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<com.crashlytics.android.core.CrashlyticsController$19: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>(r0, $r5, r2, r3, $r7, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$19: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.core.CrashlyticsController$19: java.lang.String val$installUuid> = $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$19: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction)>($r1, "SessionApp", $r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction: void writeTo(com.crashlytics.android.core.CodedOutputStream)>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$19: void writeTo(com.crashlytics.android.core.CodedOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.crashlytics.android.core.CrashlyticsController$19: java.lang.String val$installUuid>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$19: void writeTo(com.crashlytics.android.core.CodedOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionApp(com.crashlytics.android.core.CodedOutputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>($r1, $r2, $r3, $r4, $r5, $r6, $i0, $r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionApp(com.crashlytics.android.core.CodedOutputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11 = staticinvoke <com.crashlytics.android.core.ByteString: com.crashlytics.android.core.ByteString copyFromUtf8(java.lang.String)>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: com.crashlytics.android.core.ByteString copyFromUtf8(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: com.crashlytics.android.core.ByteString copyFromUtf8(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<com.crashlytics.android.core.ByteString: void <init>(byte[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void <init>(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.core.ByteString: byte[] bytes> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void <init>(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: com.crashlytics.android.core.ByteString copyFromUtf8(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionApp(com.crashlytics.android.core.CodedOutputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<com.crashlytics.android.core.CodedOutputStream: void writeBytes(int,com.crashlytics.android.core.ByteString)>(6, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeBytes(int,com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeBytesNoTag(com.crashlytics.android.core.ByteString)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeBytesNoTag(com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>($r2, 0, $i3, i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.core.ByteString: byte[] bytes>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, $r1, $i1, $i2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.core.CodedOutputStream
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.core.CodedOutputStream
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeBytesNoTag(com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null) in method <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r4 = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<com.crashlytics.android.core.CrashlyticsController$19: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>(r0, $r5, r2, r3, $r7, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$19: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.core.CrashlyticsController$19: java.lang.String val$installUuid> = $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$19: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction)>($r1, "SessionApp", $r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction: void writeTo(com.crashlytics.android.core.CodedOutputStream)>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$19: void writeTo(com.crashlytics.android.core.CodedOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.crashlytics.android.core.CrashlyticsController$19: java.lang.String val$installUuid>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController$19: void writeTo(com.crashlytics.android.core.CodedOutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionApp(com.crashlytics.android.core.CodedOutputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>($r1, $r2, $r3, $r4, $r5, $r6, $i0, $r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionApp(com.crashlytics.android.core.CodedOutputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11 = staticinvoke <com.crashlytics.android.core.ByteString: com.crashlytics.android.core.ByteString copyFromUtf8(java.lang.String)>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: com.crashlytics.android.core.ByteString copyFromUtf8(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: com.crashlytics.android.core.ByteString copyFromUtf8(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r3.<com.crashlytics.android.core.ByteString: void <init>(byte[])>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void <init>(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.crashlytics.android.core.ByteString: byte[] bytes> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void <init>(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: com.crashlytics.android.core.ByteString copyFromUtf8(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionApp(com.crashlytics.android.core.CodedOutputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<com.crashlytics.android.core.CodedOutputStream: void writeBytes(int,com.crashlytics.android.core.ByteString)>(6, $r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeBytes(int,com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeBytesNoTag(com.crashlytics.android.core.ByteString)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeBytesNoTag(com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>($r2, 0, $i3, i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.core.ByteString: byte[] bytes>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, $r1, $i1, $i2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.core.CodedOutputStream
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.crashlytics.android.core.CodedOutputStream
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeBytesNoTag(com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0) in method <com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>(r2, $i0, $i1) in method <com.crashlytics.android.core.CrashlyticsController: void copyToCodedOutputStream(java.io.InputStream,com.crashlytics.android.core.CodedOutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void copyToCodedOutputStream(java.io.InputStream,com.crashlytics.android.core.CodedOutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>(r2, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CrashlyticsController: void copyToCodedOutputStream(java.io.InputStream,com.crashlytics.android.core.CodedOutputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[])>(r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, $i3, i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i3 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i2) in method <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i3 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeBytesNoTag(com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeBytes(int,com.crashlytics.android.core.ByteString)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionOS(com.crashlytics.android.core.CodedOutputStream,java.lang.String,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<com.crashlytics.android.core.CodedOutputStream: void writeBool(int,boolean)>(4, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeBool(int,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeBoolNoTag(boolean)>($z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeBoolNoTag(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($b0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(byte)>($b1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void writeRawByte(byte)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Data flow solver took 1012 seconds. Maximum memory consumption: 75309 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication - Found 9 leaks
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'SummaryStatistics'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Telemetry'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'Telemetry_sha256Hash_idx' for table 'Telemetry
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Callbacks'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallbackSummaries'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'CallbackSummaries_sha256Hash_idx' for table 'CallbackSummaries
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'AppSizes'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'AppSizes_sha256Hash_idx' for table 'AppSizes
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallgraphSizes'
