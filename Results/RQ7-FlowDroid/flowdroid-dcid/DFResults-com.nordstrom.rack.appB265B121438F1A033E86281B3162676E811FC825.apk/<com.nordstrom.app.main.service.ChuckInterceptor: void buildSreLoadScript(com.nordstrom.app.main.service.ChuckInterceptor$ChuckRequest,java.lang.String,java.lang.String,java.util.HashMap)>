    private final void buildSreLoadScript(com.nordstrom.app.main.service.ChuckInterceptor$ChuckRequest, java.lang.String, java.lang.String, java.util.HashMap)
    {
        java.lang.Throwable $r24;
        java.util.HashMap $r4;
        long $l0;
        java.util.LinkedHashMap $r12;
        byte $b1;
        java.lang.StringBuffer $r5;
        java.util.Locale $r6;
        com.nordstrom.app.main.service.ChuckInterceptor$ChuckRequest $r1;
        java.util.Map $r10, $r11;
        java.lang.Boolean $r17;
        com.nordstrom.app.main.service.ChuckInterceptor$buildSreLoadScript$headerKeyFilter$1 $r8;
        java.lang.String $r2, $r3, $r19;
        boolean $z0;
        java.util.Map$Entry $r16;
        java.util.Iterator $r14;
        java.util.Set $r13;
        com.nordstrom.app.main.service.ChuckInterceptor r0;
        kotlin.jvm.functions.Function1 $r9;
        java.io.File $r20, $r21;
        com.nordstrom.authentication.api.protocol.AuthPersistence $r22;
        kotlin.Unit $r23;
        java.lang.StringBuilder $r7;
        java.lang.Object $r15, $r18;

        r0 := @this: com.nordstrom.app.main.service.ChuckInterceptor;

        $r1 := @parameter0: com.nordstrom.app.main.service.ChuckInterceptor$ChuckRequest;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.util.HashMap;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = <java.util.Locale: java.util.Locale ROOT>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "this as java.lang.String).toLowerCase(Locale.ROOT)");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      - ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\n");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = specialinvoke r0.<com.nordstrom.app.main.service.ChuckInterceptor: java.lang.String cleanupSreUrl(java.lang.String)>($r2);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("          url: \'");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'\n");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("          headers:");

        $r8 = <com.nordstrom.app.main.service.ChuckInterceptor$buildSreLoadScript$headerKeyFilter$1: com.nordstrom.app.main.service.ChuckInterceptor$buildSreLoadScript$headerKeyFilter$1 INSTANCE>;

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        $r10 = specialinvoke r0.<com.nordstrom.app.main.service.ChuckInterceptor: java.util.Map sreLoadScriptKeys(java.lang.String)>($r2);

        $r11 = (java.util.Map) $r4;

        $r12 = new java.util.LinkedHashMap;

        specialinvoke $r12.<java.util.LinkedHashMap: void <init>()>();

        $r13 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>();

        $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (java.util.Map$Entry) $r15;

        $r15 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = interfaceinvoke $r9.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r15);

        $r17 = (java.lang.Boolean) $r15;

        $z0 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label01;

        $r15 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r12.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r18);

        goto label01;

     label02:
        $r11 = (java.util.Map) $r12;

        $r13 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>();

        $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (java.util.Map$Entry) $r15;

        $r15 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r2 = (java.lang.String) $r15;

        $r15 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r3 = (java.lang.String) $r15;

        $r15 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r19 = (java.lang.String) $r15;

        if $r19 != null goto label04;

        $r6 = <java.util.Locale: java.util.Locale ROOT>;

        $r19 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r19, "this as java.lang.String).toLowerCase(Locale.ROOT)");

        $r15 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19);

        $r19 = (java.lang.String) $r15;

        if $r19 == null goto label05;

     label04:
        $r3 = $r19;

     label05:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n            ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": \"");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        goto label03;

     label06:
        $r15 = <com.nordstrom.app.main.service.ChuckInterceptor: java.lang.Object SRE_LOAD_SCRIPT_LOCK>;

        entermonitor $r15;

     label07:
        $r20 = new java.io.File;

        $r21 = virtualinvoke $r1.<com.nordstrom.app.main.service.ChuckInterceptor$ChuckRequest: java.io.File getDirectory()>();

        specialinvoke $r20.<java.io.File: void <init>(java.io.File,java.lang.String)>($r21, "index_sre.yaml.txt");

        $l0 = virtualinvoke $r20.<java.io.File: long length()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label08;

        $r20 = new java.io.File;

        $r21 = virtualinvoke $r1.<com.nordstrom.app.main.service.ChuckInterceptor$ChuckRequest: java.io.File getDirectory()>();

        specialinvoke $r20.<java.io.File: void <init>(java.io.File,java.lang.String)>($r21, "index_sre.yaml.txt");

        $r22 = r0.<com.nordstrom.app.main.service.ChuckInterceptor: com.nordstrom.authentication.api.protocol.AuthPersistence authPersistence>;

        $z0 = interfaceinvoke $r22.<com.nordstrom.authentication.api.protocol.AuthPersistence: boolean isLoggedIn()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scenarios:\n  - name: \"Android SRE script\"\n    flow:\n      - invoke:\n          script:\n            meta:\n              tags:\n                - \'checkout:false\'\n      - nosa:\n          signin: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.io.FilesKt: void appendText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)>($r20, $r2, null, 2, null);

     label08:
        $r20 = new java.io.File;

        $r21 = virtualinvoke $r1.<com.nordstrom.app.main.service.ChuckInterceptor$ChuckRequest: java.io.File getDirectory()>();

        specialinvoke $r20.<java.io.File: void <init>(java.io.File,java.lang.String)>($r21, "index_sre.yaml.txt");

        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.io.FilesKt: void appendText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)>($r20, $r2, null, 2, null);

        $r23 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label09:
        exitmonitor $r15;

        return;

     label10:
        $r24 := @caughtexception;

        exitmonitor $r15;

        throw $r24;

        catch java.lang.Throwable from label07 to label09 with label10;
    }
