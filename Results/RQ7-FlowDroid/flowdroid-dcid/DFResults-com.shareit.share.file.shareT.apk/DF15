Source: $i1 = virtualinvoke $r12.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, 16384)
$i1 = virtualinvoke $r12.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, 16384) in <com.shareit.share.file.shareT.service.WebShareServer$ZipBundleResponse: void sendBody(java.io.OutputStream)>
Sink: specialinvoke $r8.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r9) in <fi.iki.elonen.NanoHTTPD$Response: void send(java.io.OutputStream)>

<com.shareit.share.file.shareT.service.WebShareServer$ZipBundleResponse: void sendBody(java.io.OutputStream)>: $i1 = virtualinvoke $r12.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, 16384)
<com.shareit.share.file.shareT.service.WebShareServer$ZipBundleResponse: void sendBody(java.io.OutputStream)>: virtualinvoke $r17.<java.util.zip.ZipOutputStream: void write(byte[],int,int)>($r1, 0, $i1)
<com.shareit.share.file.shareT.service.WebShareServer$ZipBundleResponse: void sendBody(java.io.OutputStream)>: specialinvoke $r17.<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>($r16)
<com.shareit.share.file.shareT.service.WebShareServer$ZipBundleResponse: void sendBody(java.io.OutputStream)>: specialinvoke $r16.<com.shareit.share.file.shareT.service.WebShareServer$ZipBundleResponse$ChunkedOutputStream: void <init>(com.shareit.share.file.shareT.service.WebShareServer$ZipBundleResponse,java.io.OutputStream)>(r0, $r2)
<com.shareit.share.file.shareT.service.WebShareServer$ZipBundleResponse$ChunkedOutputStream: void <init>(com.shareit.share.file.shareT.service.WebShareServer$ZipBundleResponse,java.io.OutputStream)>: specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r2)
<com.shareit.share.file.shareT.service.WebShareServer$ZipBundleResponse$ChunkedOutputStream: void <init>(com.shareit.share.file.shareT.service.WebShareServer$ZipBundleResponse,java.io.OutputStream)>: r0 := @this: com.shareit.share.file.shareT.service.WebShareServer$ZipBundleResponse$ChunkedOutputStream
<com.shareit.share.file.shareT.service.WebShareServer$ZipBundleResponse: void sendBody(java.io.OutputStream)>: return
<com.shareit.share.file.shareT.service.WebShareServer$ZipBundleResponse: void send(java.io.OutputStream)>: return
<fi.iki.elonen.NanoHTTPD$HTTPSession: void execute()>: $r16 = r0.<fi.iki.elonen.NanoHTTPD$HTTPSession: java.io.OutputStream outputStream>
<fi.iki.elonen.NanoHTTPD$HTTPSession: void execute()>: $r16 = r0.<fi.iki.elonen.NanoHTTPD$HTTPSession: java.io.OutputStream outputStream>
<fi.iki.elonen.NanoHTTPD$HTTPSession: void execute()>: virtualinvoke $r15.<fi.iki.elonen.NanoHTTPD$Response: void send(java.io.OutputStream)>($r16)
<fi.iki.elonen.NanoHTTPD$Response: void send(java.io.OutputStream)>: specialinvoke $r9.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r2, $r1)
<fi.iki.elonen.NanoHTTPD$Response: void send(java.io.OutputStream)>: specialinvoke $r8.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r9)
