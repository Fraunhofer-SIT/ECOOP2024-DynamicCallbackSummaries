    public java.lang.Object apply2(gnu.expr.ModuleMethod, java.lang.Object, java.lang.Object)
    {
        gnu.mapping.OutPort $r6;
        gnu.mapping.Symbol $r11;
        gnu.mapping.Values $r7;
        gnu.expr.ModuleMethod $r1;
        java.lang.ClassCastException $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        gnu.text.Path $r4;
        int $i0;
        gnu.text.LineBufferedReader $r10;
        kawa.lib.ports r0;
        java.lang.CharSequence $r8;
        gnu.mapping.Procedure $r5;
        gnu.mapping.WrongType $r13;
        gnu.mapping.TtyInPort $r9;
        java.lang.Object $r2, $r3;

        r0 := @this: kawa.lib.ports;

        $r1 := @parameter0: gnu.expr.ModuleMethod;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        $i0 = $r1.<gnu.expr.ModuleMethod: int selector>;

        lookupswitch($i0)
        {
            case 3: goto label02;
            case 4: goto label05;
            case 5: goto label08;
            case 6: goto label11;
            case 12: goto label14;
            case 17: goto label16;
            case 26: goto label19;
            case 28: goto label20;
            case 31: goto label21;
            case 33: goto label22;
            case 38: goto label23;
            case 44: goto label26;
            default: goto label01;
        };

     label01:
        $r2 = specialinvoke r0.<gnu.expr.ModuleBody: java.lang.Object apply2(gnu.expr.ModuleMethod,java.lang.Object,java.lang.Object)>($r1, $r2, $r3);

        return $r2;

     label02:
        $r4 = staticinvoke <gnu.text.Path: gnu.text.Path valueOf(java.lang.Object)>($r2);

     label03:
        $r5 = (gnu.mapping.Procedure) $r3;

     label04:
        $r2 = staticinvoke <kawa.lib.ports: java.lang.Object callWithInputFile(gnu.text.Path,gnu.mapping.Procedure)>($r4, $r5);

        return $r2;

     label05:
        $r4 = staticinvoke <gnu.text.Path: gnu.text.Path valueOf(java.lang.Object)>($r2);

     label06:
        $r5 = (gnu.mapping.Procedure) $r3;

     label07:
        $r2 = staticinvoke <kawa.lib.ports: java.lang.Object callWithOutputFile(gnu.text.Path,gnu.mapping.Procedure)>($r4, $r5);

        return $r2;

     label08:
        $r4 = staticinvoke <gnu.text.Path: gnu.text.Path valueOf(java.lang.Object)>($r2);

     label09:
        $r5 = (gnu.mapping.Procedure) $r3;

     label10:
        $r2 = staticinvoke <kawa.lib.ports: java.lang.Object withInputFromFile(gnu.text.Path,gnu.mapping.Procedure)>($r4, $r5);

        return $r2;

     label11:
        $r4 = staticinvoke <gnu.text.Path: gnu.text.Path valueOf(java.lang.Object)>($r2);

     label12:
        $r5 = (gnu.mapping.Procedure) $r3;

     label13:
        $r2 = staticinvoke <kawa.lib.ports: java.lang.Object withOutputToFile(gnu.text.Path,gnu.mapping.Procedure)>($r4, $r5);

        return $r2;

     label14:
        $r6 = (gnu.mapping.OutPort) $r3;

     label15:
        staticinvoke <kawa.lib.ports: void writeChar(java.lang.Object,gnu.mapping.OutPort)>($r2, $r6);

        $r7 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return $r7;

     label16:
        $r8 = (java.lang.CharSequence) $r2;

     label17:
        $r5 = (gnu.mapping.Procedure) $r3;

     label18:
        $r2 = staticinvoke <kawa.lib.ports: java.lang.Object callWithInputString(java.lang.CharSequence,gnu.mapping.Procedure)>($r8, $r5);

        return $r2;

     label19:
        staticinvoke <kawa.lib.ports: void write(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r7 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return $r7;

     label20:
        staticinvoke <kawa.lib.ports: void display(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r7 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return $r7;

     label21:
        staticinvoke <kawa.lib.ports: void setPortLine$Ex(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r7 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return $r7;

     label22:
        staticinvoke <kawa.lib.ports: void setInputPortLineNumber$Ex(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r7 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return $r7;

     label23:
        $r9 = (gnu.mapping.TtyInPort) $r2;

     label24:
        $r5 = (gnu.mapping.Procedure) $r3;

     label25:
        staticinvoke <kawa.lib.ports: void setInputPortPrompter$Ex(gnu.mapping.TtyInPort,gnu.mapping.Procedure)>($r9, $r5);

        $r7 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return $r7;

     label26:
        $r10 = (gnu.text.LineBufferedReader) $r2;

     label27:
        $r11 = (gnu.mapping.Symbol) $r3;

     label28:
        $r2 = staticinvoke <kawa.lib.ports: java.lang.Object readLine(gnu.text.LineBufferedReader,gnu.mapping.Symbol)>($r10, $r11);

        return $r2;

     label29:
        $r12 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r12, "call-with-input-file", 1, $r2);

        throw $r13;

     label30:
        $r14 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r14, "call-with-input-file", 2, $r3);

        throw $r13;

     label31:
        $r15 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r15, "call-with-output-file", 1, $r2);

        throw $r13;

     label32:
        $r16 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r16, "call-with-output-file", 2, $r3);

        throw $r13;

     label33:
        $r17 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r17, "with-input-from-file", 1, $r2);

        throw $r13;

     label34:
        $r18 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r18, "with-input-from-file", 2, $r3);

        throw $r13;

     label35:
        $r19 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r19, "with-output-to-file", 1, $r2);

        throw $r13;

     label36:
        $r20 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r20, "with-output-to-file", 2, $r3);

        throw $r13;

     label37:
        $r21 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r21, "write-char", 2, $r3);

        throw $r13;

     label38:
        $r22 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r22, "call-with-input-string", 1, $r2);

        throw $r13;

     label39:
        $r23 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r23, "call-with-input-string", 2, $r3);

        throw $r13;

     label40:
        $r24 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r24, "set-input-port-prompter!", 1, $r2);

        throw $r13;

     label41:
        $r25 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r25, "set-input-port-prompter!", 2, $r3);

        throw $r13;

     label42:
        $r26 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r26, "read-line", 1, $r2);

        throw $r13;

     label43:
        $r27 := @caughtexception;

        $r13 = new gnu.mapping.WrongType;

        specialinvoke $r13.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r27, "read-line", 2, $r3);

        throw $r13;

        catch java.lang.ClassCastException from label02 to label03 with label29;
        catch java.lang.ClassCastException from label03 to label04 with label30;
        catch java.lang.ClassCastException from label05 to label06 with label31;
        catch java.lang.ClassCastException from label06 to label07 with label32;
        catch java.lang.ClassCastException from label08 to label09 with label33;
        catch java.lang.ClassCastException from label09 to label10 with label34;
        catch java.lang.ClassCastException from label11 to label12 with label35;
        catch java.lang.ClassCastException from label12 to label13 with label36;
        catch java.lang.ClassCastException from label14 to label15 with label37;
        catch java.lang.ClassCastException from label16 to label17 with label38;
        catch java.lang.ClassCastException from label17 to label18 with label39;
        catch java.lang.ClassCastException from label23 to label24 with label40;
        catch java.lang.ClassCastException from label24 to label25 with label41;
        catch java.lang.ClassCastException from label26 to label27 with label42;
        catch java.lang.ClassCastException from label27 to label28 with label43;
    }
