    public java.util.List toReportLogs()
    {
        java.util.Map$Entry $r10;
        java.util.Iterator $r8;
        com.tuya.loguploader.upload.bean.LogIndex r0;
        java.util.Set $r7;
        java.util.HashMap $r6;
        java.lang.Integer $r4;
        java.util.ArrayList $r11;
        java.util.List $r5;
        com.tuya.loguploader.upload.bean.ReportLog $r1;
        java.util.Map $r2;
        int $i0;
        java.lang.Object $r9;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.tuya.loguploader.upload.bean.LogIndex;

        $r1 = new com.tuya.loguploader.upload.bean.ReportLog;

        specialinvoke $r1.<com.tuya.loguploader.upload.bean.ReportLog: void <init>()>();

        $r2 = $r1.<com.tuya.loguploader.upload.bean.ReportLog: java.util.Map attributes>;

        $r3 = r0.<com.tuya.loguploader.upload.bean.LogIndex: java.lang.String uid>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("uid", $r3);

        $r2 = $r1.<com.tuya.loguploader.upload.bean.ReportLog: java.util.Map attributes>;

        $r3 = r0.<com.tuya.loguploader.upload.bean.LogIndex: java.lang.String platform>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("platform", $r3);

        $r2 = $r1.<com.tuya.loguploader.upload.bean.ReportLog: java.util.Map attributes>;

        $r3 = r0.<com.tuya.loguploader.upload.bean.LogIndex: java.lang.String appId>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("appId", $r3);

        $r2 = $r1.<com.tuya.loguploader.upload.bean.ReportLog: java.util.Map attributes>;

        $r3 = r0.<com.tuya.loguploader.upload.bean.LogIndex: java.lang.String appVersion>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("appVersion", $r3);

        $r2 = $r1.<com.tuya.loguploader.upload.bean.ReportLog: java.util.Map attributes>;

        $i0 = r0.<com.tuya.loguploader.upload.bean.LogIndex: int appVersionCode>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("appVersionCode", $r4);

        $r2 = $r1.<com.tuya.loguploader.upload.bean.ReportLog: java.util.Map attributes>;

        $r3 = r0.<com.tuya.loguploader.upload.bean.LogIndex: java.lang.String date>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("date", $r3);

        $r2 = $r1.<com.tuya.loguploader.upload.bean.ReportLog: java.util.Map attributes>;

        $r5 = r0.<com.tuya.loguploader.upload.bean.LogIndex: java.util.List storageInfos>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("storageInfo", $r5);

        $r2 = $r1.<com.tuya.loguploader.upload.bean.ReportLog: java.util.Map attributes>;

        $r3 = r0.<com.tuya.loguploader.upload.bean.LogIndex: java.lang.String logVersion>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logVersion", $r3);

        $r6 = r0.<com.tuya.loguploader.upload.bean.LogIndex: java.util.HashMap extra>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.util.Map$Entry) $r9;

        $r2 = $r1.<com.tuya.loguploader.upload.bean.ReportLog: java.util.Map attributes>;

        $r9 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r9;

        $r9 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r9);

        goto label1;

     label2:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r1);

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a()>();

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a(int)>(0);

        staticinvoke <bd: void a()>();

        return $r11;
    }
