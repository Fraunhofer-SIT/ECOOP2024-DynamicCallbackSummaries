Source: $i1 = virtualinvoke $r1.<java.io.Reader: int read(char[],int,int)>($r2, $i0, $i1)
$i1 = virtualinvoke $r1.<java.io.Reader: int read(char[],int,int)>($r2, $i0, $i1) in <gnu.text.LineBufferedReader: int fill(int)>
Sink: virtualinvoke $r1.<gnu.mapping.OutPort: void print(java.lang.String)>($r2) in <gnu.mapping.TtyInPort: void emitPrompt(java.lang.String)>

<gnu.text.LineBufferedReader: int fill(int)>: $i1 = virtualinvoke $r1.<java.io.Reader: int read(char[],int,int)>($r2, $i0, $i1)
<gnu.text.LineBufferedReader: int fill(int)>: $r2 = r0.<gnu.text.LineBufferedReader: char[] buffer>
<gnu.text.LineBufferedReader: int fill(int)>: return $i1
<gnu.text.LineBufferedReader: int read()>: return -1
<kawa.standard.read_line: java.lang.Object apply(gnu.text.LineBufferedReader,java.lang.String)>: $r2 = $r0.<gnu.text.LineBufferedReader: char[] buffer>
<kawa.standard.read_line: java.lang.Object apply(gnu.text.LineBufferedReader,java.lang.String)>: specialinvoke $r3.<gnu.lists.FString: void <init>(char[],int,int)>($r2, $i0, $i2)
<gnu.lists.FString: void <init>(char[],int,int)>: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, 0, $i1)
<gnu.lists.FString: void <init>(char[],int,int)>: r0.<gnu.lists.FString: char[] data> = $r2
<gnu.lists.FString: void <init>(char[],int,int)>: return
<kawa.standard.read_line: java.lang.Object apply(gnu.text.LineBufferedReader,java.lang.String)>: return $r3
<kawa.lib.ports: java.lang.Object readLine(gnu.text.LineBufferedReader,gnu.mapping.Symbol)>: return $r3
<kawa.lib.ports: java.lang.Object readLine(gnu.text.LineBufferedReader)>: return $r1
<kawa.lib.ports: java.lang.Object apply1(gnu.expr.ModuleMethod,java.lang.Object)>: return $r2
<gnu.expr.ModuleMethod: java.lang.Object apply1(java.lang.Object)>: return $r2
<gnu.mapping.TtyInPort: void lineStart(boolean)>: $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>()
<gnu.mapping.TtyInPort: void lineStart(boolean)>: virtualinvoke r0.<gnu.mapping.TtyInPort: void emitPrompt(java.lang.String)>($r5)
<gnu.mapping.TtyInPort: void emitPrompt(java.lang.String)>: virtualinvoke $r1.<gnu.mapping.OutPort: void print(java.lang.String)>($r2)
