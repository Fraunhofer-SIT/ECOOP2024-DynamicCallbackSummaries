    public static java.lang.Object generateTemporaries(java.lang.Object)
    {
        gnu.kawa.functions.NumberCompare $r3;
        gnu.kawa.functions.AddOp $r7;
        gnu.lists.LList r2;
        gnu.lists.Pair r8;
        int $i0;
        java.lang.Boolean $r6;
        java.lang.Object $r0, r1, $r5;
        gnu.math.IntNum $r4;
        gnu.mapping.SimpleSymbol $r9;

        $r0 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <kawa.lang.Translator: int listLength(java.lang.Object)>($r0);

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r2 = <gnu.lists.LList: gnu.lists.LList Empty>;

     label1:
        $r3 = <kawa.standard.Scheme: gnu.kawa.functions.NumberCompare numEqu>;

        $r4 = <kawa.lib.std_syntax: gnu.math.IntNum Lit0>;

        $r5 = virtualinvoke $r3.<gnu.mapping.Procedure: java.lang.Object apply2(java.lang.Object,java.lang.Object)>(r1, $r4);

        $r6 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        if $r5 == $r6 goto label2;

        return r2;

     label2:
        $r7 = <gnu.kawa.functions.AddOp: gnu.kawa.functions.AddOp $Mn>;

        $r4 = <kawa.lib.std_syntax: gnu.math.IntNum Lit1>;

        r1 = virtualinvoke $r7.<gnu.mapping.Procedure: java.lang.Object apply2(java.lang.Object,java.lang.Object)>(r1, $r4);

        r8 = new gnu.lists.Pair;

        $r9 = staticinvoke <gnu.expr.Symbols: gnu.mapping.SimpleSymbol gentemp()>();

        $r5 = staticinvoke <kawa.lib.std_syntax: java.lang.Object datum$To$SyntaxObject(java.lang.Object,java.lang.Object)>($r0, $r9);

        specialinvoke r8.<gnu.lists.Pair: void <init>(java.lang.Object,java.lang.Object)>($r5, r2);

        r2 = r8;

        goto label1;
    }
