    public static gnu.lists.SimpleVector readSimpleVector(gnu.kawa.lispexpr.LispReader, char) throws java.io.IOException, gnu.text.SyntaxException
    {
        gnu.lists.F32Vector $r4;
        gnu.lists.Sequence $r2;
        gnu.lists.S64Vector $r9;
        gnu.lists.S8Vector $r6;
        gnu.lists.U16Vector $r10;
        gnu.lists.U32Vector $r11;
        gnu.lists.F64Vector $r5;
        gnu.lists.S32Vector $r8;
        int i1, $i2, $i4;
        gnu.kawa.lispexpr.LispReader $r0;
        char $c0, $c3;
        gnu.lists.U8Vector $r3;
        java.lang.Object $r1;
        gnu.lists.U64Vector $r12;
        gnu.lists.S16Vector $r7;

        $r0 := @parameter0: gnu.kawa.lispexpr.LispReader;

        $c0 := @parameter1: char;

        i1 = 0;

     label01:
        $i2 = virtualinvoke $r0.<gnu.kawa.lispexpr.LispReader: int read()>();

        if $i2 >= 0 goto label02;

        virtualinvoke $r0.<gnu.kawa.lispexpr.LispReader: void eofError(java.lang.String)>("unexpected EOF reading uniform vector");

     label02:
        $c3 = (char) $i2;

        $i4 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, 10);

        if $i4 >= 0 goto label06;

        if i1 == 8 goto label03;

        if i1 == 16 goto label03;

        if i1 == 32 goto label03;

        if i1 != 64 goto label05;

     label03:
        $i4 = (int) $c0;

        if $i4 != 70 goto label04;

        if i1 < 32 goto label05;

     label04:
        if $i2 == 40 goto label07;

     label05:
        virtualinvoke $r0.<gnu.kawa.lispexpr.LispReader: void error(java.lang.String)>("invalid uniform vector syntax");

        return null;

     label06:
        i1 = i1 * 10;

        i1 = i1 + $i4;

        goto label01;

     label07:
        $r1 = staticinvoke <gnu.kawa.lispexpr.ReaderParens: java.lang.Object readList(gnu.kawa.lispexpr.LispReader,int,int,int)>($r0, 40, -1, 41);

        $i2 = staticinvoke <gnu.lists.LList: int listLength(java.lang.Object,boolean)>($r1, 0);

        if $i2 >= 0 goto label08;

        virtualinvoke $r0.<gnu.kawa.lispexpr.LispReader: void error(java.lang.String)>("invalid elements in uniform vector syntax");

        return null;

     label08:
        $r2 = (gnu.lists.Sequence) $r1;

        $i2 = (int) $c0;

        lookupswitch($i2)
        {
            case 70: goto label10;
            case 83: goto label11;
            case 85: goto label12;
            default: goto label09;
        };

     label09:
        return null;

     label10:
        lookupswitch(i1)
        {
            case 32: goto label14;
            case 64: goto label15;
            default: goto label11;
        };

     label11:
        lookupswitch(i1)
        {
            case 8: goto label16;
            case 16: goto label17;
            case 32: goto label18;
            case 64: goto label19;
            default: goto label12;
        };

     label12:
        lookupswitch(i1)
        {
            case 8: goto label13;
            case 16: goto label20;
            case 32: goto label21;
            case 64: goto label22;
            default: goto label09;
        };

     label13:
        $r3 = new gnu.lists.U8Vector;

        specialinvoke $r3.<gnu.lists.U8Vector: void <init>(gnu.lists.Sequence)>($r2);

        return $r3;

     label14:
        $r4 = new gnu.lists.F32Vector;

        specialinvoke $r4.<gnu.lists.F32Vector: void <init>(gnu.lists.Sequence)>($r2);

        return $r4;

     label15:
        $r5 = new gnu.lists.F64Vector;

        specialinvoke $r5.<gnu.lists.F64Vector: void <init>(gnu.lists.Sequence)>($r2);

        return $r5;

     label16:
        $r6 = new gnu.lists.S8Vector;

        specialinvoke $r6.<gnu.lists.S8Vector: void <init>(gnu.lists.Sequence)>($r2);

        return $r6;

     label17:
        $r7 = new gnu.lists.S16Vector;

        specialinvoke $r7.<gnu.lists.S16Vector: void <init>(gnu.lists.Sequence)>($r2);

        return $r7;

     label18:
        $r8 = new gnu.lists.S32Vector;

        specialinvoke $r8.<gnu.lists.S32Vector: void <init>(gnu.lists.Sequence)>($r2);

        return $r8;

     label19:
        $r9 = new gnu.lists.S64Vector;

        specialinvoke $r9.<gnu.lists.S64Vector: void <init>(gnu.lists.Sequence)>($r2);

        return $r9;

     label20:
        $r10 = new gnu.lists.U16Vector;

        specialinvoke $r10.<gnu.lists.U16Vector: void <init>(gnu.lists.Sequence)>($r2);

        return $r10;

     label21:
        $r11 = new gnu.lists.U32Vector;

        specialinvoke $r11.<gnu.lists.U32Vector: void <init>(gnu.lists.Sequence)>($r2);

        return $r11;

     label22:
        $r12 = new gnu.lists.U64Vector;

        specialinvoke $r12.<gnu.lists.U64Vector: void <init>(gnu.lists.Sequence)>($r2);

        return $r12;
    }
