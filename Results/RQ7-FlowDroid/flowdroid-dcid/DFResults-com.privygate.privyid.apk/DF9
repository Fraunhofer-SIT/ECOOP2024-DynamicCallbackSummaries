Source: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
$i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0) in <performPictureInPictureModeChanged: void FixedPreloadSizeProvider()>
Sink: virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3) in <performPictureInPictureModeChanged: java.lang.String readLine()>

<performPictureInPictureModeChanged: void FixedPreloadSizeProvider()>: $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
<performPictureInPictureModeChanged: void FixedPreloadSizeProvider()>: $r2 = r0.<performPictureInPictureModeChanged: byte[] buf>
<performPictureInPictureModeChanged: void FixedPreloadSizeProvider()>: r0 := @this: performPictureInPictureModeChanged
<performPictureInPictureModeChanged: java.lang.String readLine()>: $r2 = r0.<performPictureInPictureModeChanged: byte[] buf>
<performPictureInPictureModeChanged: java.lang.String readLine()>: virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, $i3)
