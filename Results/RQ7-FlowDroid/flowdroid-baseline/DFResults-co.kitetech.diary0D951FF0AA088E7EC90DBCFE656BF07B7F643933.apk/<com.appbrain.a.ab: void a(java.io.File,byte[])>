    private void a(java.io.File, byte[])
    {
        java.lang.Throwable $r6, $r7;
        byte[] $r2;
        java.io.FileOutputStream $r4, $r5;
        java.io.File $r1, $r3;
        int $i0;
        com.appbrain.a.ab r0;
        boolean $z0;

        r0 := @this: com.appbrain.a.ab;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: byte[];

        entermonitor r0;

        if $r2 == null goto label12;

     label01:
        $i0 = lengthof $r2;

        if $i0 > 10485760 goto label12;

        $r3 = virtualinvoke $r1.<java.io.File: java.io.File getParentFile()>();

        $z0 = virtualinvoke $r3.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label03;

        $z0 = virtualinvoke $r3.<java.io.File: boolean mkdirs()>();

        if $z0 != 0 goto label03;

        staticinvoke <com.appbrain.c.h: void a(java.lang.String)>("Couldn\'t create directory");

     label02:
        exitmonitor r0;

        return;

     label03:
        $r4 = staticinvoke <com.safedk.android.internal.partials.AppBrainAppLiftFilesBridge: java.io.FileOutputStream fileOutputStreamCtor(java.io.File)>($r1);

     label04:
        $r5 = $r4;

     label05:
        virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r2);

     label06:
        goto label10;

     label07:
        $r6 := @caughtexception;

        goto label09;

     label08:
        $r6 := @caughtexception;

        $r5 = null;

     label09:
        staticinvoke <com.appbrain.c.h: void a(java.lang.String,java.lang.Throwable)>("writing localUS", $r6);

     label10:
        staticinvoke <com.appbrain.c.c: void a(java.io.Closeable)>($r5);

     label11:
        exitmonitor r0;

        return;

     label12:
        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label13;

        $z0 = virtualinvoke $r1.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label13;

        staticinvoke <com.appbrain.c.h: void a(java.lang.String)>("Couldn\'t delete file");

     label13:
        exitmonitor r0;

        return;

     label14:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.io.IOException from label03 to label04 with label08;
        catch java.lang.Throwable from label03 to label05 with label14;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label09 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }
