    public void <init>(java.lang.String)
    {
        java.lang.Throwable $r11, $r13, $r14, $r15;
        byte[] $r6;
        java.io.ByteArrayOutputStream $r18;
        short $s3;
        byte $b2;
        int $i0, $i1;
        java.lang.String $r1, $r4, $r7;
        boolean $z0;
        org.apache.a.a.r $r10, $r22;
        java.io.FileOutputStream $r20;
        com.changdu.browser.compressfile.h r0;
        java.io.IOException $r23;
        java.io.FileInputStream $r2, $r5, $r17;
        com.changdu.changdulib.e.b.a $r19;
        java.io.File $r8, $r9, $r21;
        java.lang.Exception $r12;
        java.lang.StringBuilder $r3, $r16;

        r0 := @this: com.changdu.browser.compressfile.h;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.changdu.browser.compressfile.a: void <init>(java.lang.String)>($r1);

        $r2 = null;

        r0.<com.changdu.browser.compressfile.h: org.apache.a.a.r e> = null;

     label01:
        $r16 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ZIPCompressFile Create zip file ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.changdu.changdulib.e.i: void b(java.lang.Object)>($r4);

     label03:
        $r17 = new java.io.FileInputStream;

     label04:
        $r5 = $r17;

     label05:
        specialinvoke $r17.<java.io.FileInputStream: void <init>(java.lang.String)>($r1);

     label06:
        $r6 = newarray (byte)[3];

     label07:
        $r18 = new java.io.ByteArrayOutputStream;

     label08:
        specialinvoke $r18.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke $r17.<java.io.FileInputStream: int read(byte[],int,int)>($r6, 0, 3);

     label09:
        $r16 = new java.lang.StringBuilder;

     label10:
        $r3 = $r16;

     label11:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

     label12:
        $i0 = 0;

     label13:
        $i1 = lengthof $r6;

     label14:
        if $i0 >= $i1 goto label22;

     label15:
        $b2 = $r6[$i0];

     label16:
        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

     label17:
        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase()>();

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

     label18:
        if $i1 >= 2 goto label20;

     label19:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(0);

     label20:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label21:
        $i0 = $i0 + 1;

        goto label13;

     label22:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

     label23:
        if $z0 != 0 goto label50;

     label24:
        $r7 = <com.changdu.util.al: java.lang.String n>;

     label25:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

     label26:
        if $z0 == 0 goto label50;

        $r6 = newarray (byte)[1024];

     label27:
        $i0 = virtualinvoke $r17.<java.io.FileInputStream: int read(byte[])>($r6);

     label28:
        if $i0 == -1 goto label31;

     label29:
        virtualinvoke $r18.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r6, 0, $i0);

     label30:
        goto label27;

     label31:
        $r6 = virtualinvoke $r18.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label32:
        $r19 = new com.changdu.changdulib.e.b.a;

     label33:
        specialinvoke $r19.<com.changdu.changdulib.e.b.a: void <init>(java.lang.String)>("!@#BSD29");

        $r6 = virtualinvoke $r19.<com.changdu.changdulib.e.b.a: byte[] c(byte[])>($r6);

     label34:
        $r16 = new java.lang.StringBuilder;

     label35:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".zip");

        $r4 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label36:
        $r20 = new java.io.FileOutputStream;

     label37:
        specialinvoke $r20.<java.io.FileOutputStream: void <init>(java.lang.String)>($r4);

        virtualinvoke $r20.<java.io.FileOutputStream: void write(byte[])>($r6);

        virtualinvoke $r20.<java.io.FileOutputStream: void close()>();

     label38:
        $r9 = new java.io.File;

     label39:
        $r8 = $r9;

     label40:
        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r9.<java.io.File: boolean exists()>();

     label41:
        if $z0 == 0 goto label43;

     label42:
        virtualinvoke $r9.<java.io.File: boolean delete()>();

     label43:
        $r21 = new java.io.File;

     label44:
        specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>($r4);

        $z0 = virtualinvoke $r21.<java.io.File: boolean exists()>();

     label45:
        if $z0 == 0 goto label47;

     label46:
        virtualinvoke $r21.<java.io.File: boolean renameTo(java.io.File)>($r8);

     label47:
        $r22 = new org.apache.a.a.r;

     label48:
        specialinvoke $r22.<org.apache.a.a.r: void <init>(java.lang.String,java.lang.String)>($r1, "utf8");

        r0.<com.changdu.browser.compressfile.h: org.apache.a.a.r e> = $r22;

     label49:
        goto label52;

     label50:
        $r22 = new org.apache.a.a.r;

     label51:
        specialinvoke $r22.<org.apache.a.a.r: void <init>(java.lang.String,java.lang.String)>($r1, "utf8");

        r0.<com.changdu.browser.compressfile.h: org.apache.a.a.r e> = $r22;

     label52:
        virtualinvoke $r17.<java.io.FileInputStream: void close()>();

     label53:
        return;

     label54:
        $r11 := @caughtexception;

        goto label70;

     label55:
        $r12 := @caughtexception;

        $r2 = $r17;

        goto label58;

     label56:
        $r11 := @caughtexception;

        $r5 = $r2;

        goto label70;

     label57:
        $r12 := @caughtexception;

     label58:
        $r10 = r0.<com.changdu.browser.compressfile.h: org.apache.a.a.r e>;

     label59:
        if $r10 == null goto label64;

     label60:
        $r10 = r0.<com.changdu.browser.compressfile.h: org.apache.a.a.r e>;

        virtualinvoke $r10.<org.apache.a.a.r: void b()>();

     label61:
        goto label64;

     label62:
        $r13 := @caughtexception;

     label63:
        virtualinvoke $r13.<java.lang.Throwable: void printStackTrace()>();

     label64:
        staticinvoke <com.changdu.changdulib.e.i: void e(java.lang.Object)>($r12);

        $r16 = new java.lang.StringBuilder;

     label65:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Zip Compress file is : ");

        $r1 = r0.<com.changdu.browser.compressfile.h: java.lang.String d>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.changdu.changdulib.e.i: void b(java.lang.Object)>($r1);

     label66:
        if $r2 == null goto label75;

     label67:
        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

     label68:
        return;

     label69:
        $r14 := @caughtexception;

        $r23 = (java.io.IOException) $r14;

        virtualinvoke $r23.<java.io.IOException: void printStackTrace()>();

        return;

     label70:
        if $r5 == null goto label74;

     label71:
        virtualinvoke $r5.<java.io.FileInputStream: void close()>();

     label72:
        goto label74;

     label73:
        $r15 := @caughtexception;

        $r23 = (java.io.IOException) $r15;

        virtualinvoke $r23.<java.io.IOException: void printStackTrace()>();

     label74:
        throw $r11;

     label75:
        return;

        catch java.lang.Exception from label02 to label03 with label57;
        catch java.lang.Exception from label05 to label06 with label57;
        catch java.lang.Throwable from label01 to label02 with label56;
        catch java.lang.Throwable from label02 to label04 with label56;
        catch java.lang.Throwable from label05 to label06 with label56;
        catch java.lang.Exception from label08 to label09 with label55;
        catch java.lang.Exception from label11 to label12 with label55;
        catch java.lang.Exception from label13 to label14 with label55;
        catch java.lang.Exception from label15 to label16 with label55;
        catch java.lang.Exception from label17 to label18 with label55;
        catch java.lang.Exception from label19 to label21 with label55;
        catch java.lang.Exception from label22 to label23 with label55;
        catch java.lang.Throwable from label07 to label08 with label54;
        catch java.lang.Throwable from label08 to label10 with label54;
        catch java.lang.Throwable from label11 to label12 with label54;
        catch java.lang.Throwable from label17 to label18 with label54;
        catch java.lang.Throwable from label19 to label21 with label54;
        catch java.lang.Throwable from label22 to label23 with label54;
        catch java.lang.Exception from label25 to label26 with label55;
        catch java.lang.Exception from label27 to label28 with label55;
        catch java.lang.Exception from label29 to label30 with label55;
        catch java.lang.Exception from label31 to label32 with label55;
        catch java.lang.Exception from label33 to label34 with label55;
        catch java.lang.Exception from label35 to label36 with label55;
        catch java.lang.Exception from label37 to label38 with label55;
        catch java.lang.Exception from label40 to label41 with label55;
        catch java.lang.Exception from label42 to label43 with label55;
        catch java.lang.Exception from label44 to label45 with label55;
        catch java.lang.Exception from label46 to label47 with label55;
        catch java.lang.Exception from label48 to label49 with label55;
        catch java.lang.Exception from label51 to label52 with label55;
        catch java.lang.Throwable from label24 to label26 with label54;
        catch java.lang.Throwable from label27 to label28 with label54;
        catch java.lang.Throwable from label29 to label30 with label54;
        catch java.lang.Throwable from label31 to label33 with label54;
        catch java.lang.Throwable from label33 to label35 with label54;
        catch java.lang.Throwable from label35 to label37 with label54;
        catch java.lang.Throwable from label37 to label39 with label54;
        catch java.lang.Throwable from label40 to label41 with label54;
        catch java.lang.Throwable from label42 to label44 with label54;
        catch java.lang.Throwable from label44 to label45 with label54;
        catch java.lang.Throwable from label46 to label48 with label54;
        catch java.lang.Throwable from label48 to label49 with label54;
        catch java.lang.Throwable from label50 to label51 with label54;
        catch java.lang.Throwable from label51 to label52 with label54;
        catch java.io.IOException from label52 to label53 with label69;
        catch java.lang.Throwable from label58 to label59 with label62;
        catch java.lang.Throwable from label60 to label61 with label62;
        catch java.lang.Throwable from label63 to label65 with label56;
        catch java.lang.Throwable from label65 to label66 with label56;
        catch java.io.IOException from label67 to label68 with label69;
        catch java.io.IOException from label71 to label72 with label73;
    }
