    public static java.lang.Object force(java.lang.Object) throws java.lang.Throwable
    {
        kawa.lang.Promise r1;
        java.util.concurrent.Future r3;
        gnu.mapping.Future r2;
        java.lang.Object r0;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof kawa.lang.Promise;

        if $z0 == 0 goto label1;

        r1 = (kawa.lang.Promise) r0;

        r0 = virtualinvoke r1.<kawa.lang.Promise: java.lang.Object force()>();

        return r0;

     label1:
        $z0 = r0 instanceof gnu.mapping.Future;

        if $z0 == 0 goto label2;

        r2 = (gnu.mapping.Future) r0;

        r0 = virtualinvoke r2.<gnu.mapping.Future: java.lang.Object waitForResult()>();

        return r0;

     label2:
        $z0 = r0 instanceof java.util.concurrent.Future;

        if $z0 == 0 goto label3;

        r3 = (java.util.concurrent.Future) r0;

        r0 = interfaceinvoke r3.<java.util.concurrent.Future: java.lang.Object get()>();

     label3:
        return r0;
    }
