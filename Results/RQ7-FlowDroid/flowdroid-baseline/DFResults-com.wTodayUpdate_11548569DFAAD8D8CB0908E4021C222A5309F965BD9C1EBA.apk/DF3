Source: $i0 = virtualinvoke $r0.<java.io.Reader: int read(char[])>($r2)
$i0 = virtualinvoke $r0.<java.io.Reader: int read(char[])>($r2) in <kotlin.io.TextStreamsKt: long copyTo(java.io.Reader,java.io.Writer,int)>
Sink: virtualinvoke $r2.<java.io.FileOutputStream: void write(byte[])>($r1) in <kotlin.io.FilesKt__FileReadWriteKt: void writeBytes(java.io.File,byte[])>

<kotlin.io.TextStreamsKt: long copyTo(java.io.Reader,java.io.Writer,int)>: $i0 = virtualinvoke $r0.<java.io.Reader: int read(char[])>($r2)
<kotlin.io.TextStreamsKt: long copyTo(java.io.Reader,java.io.Writer,int)>: virtualinvoke $r1.<java.io.Writer: void write(char[],int,int)>($r2, 0, $i0)
<kotlin.io.TextStreamsKt: long copyTo(java.io.Reader,java.io.Writer,int)>: return $l1
<kotlin.io.TextStreamsKt: long copyTo$default(java.io.Reader,java.io.Writer,int,int,java.lang.Object)>: return $l0
<kotlin.io.TextStreamsKt: java.lang.String readText(java.io.Reader)>: $r3 = (java.io.Writer) $r2
<kotlin.io.TextStreamsKt: java.lang.String readText(java.io.Reader)>: $r0 = virtualinvoke $r2.<java.io.StringWriter: java.lang.String toString()>()
<kotlin.io.TextStreamsKt: java.lang.String readText(java.io.Reader)>: return $r0
<kotlin.io.FilesKt__FileReadWriteKt: java.lang.String readText(java.io.File,java.nio.charset.Charset)>: return $r0
<kotlin.io.FilesKt__FileReadWriteKt: java.lang.String readText$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object)>: return $r1
<com.yandex.metrica.impl.ob.y8: java.lang.String c()>: return $r4
<com.yandex.metrica.impl.ob.K8: org.json.JSONObject a(com.yandex.metrica.impl.ob.N8)>: specialinvoke $r3.<org.json.JSONObject: void <init>(java.lang.String)>($r1)
<com.yandex.metrica.impl.ob.K8: org.json.JSONObject a(com.yandex.metrica.impl.ob.N8)>: return $r3
<com.yandex.metrica.impl.ob.K8: org.json.JSONObject a()>: r0.<com.yandex.metrica.impl.ob.K8: org.json.JSONObject a> = $r2
<com.yandex.metrica.impl.ob.K8: org.json.JSONObject a()>: virtualinvoke r0.<com.yandex.metrica.impl.ob.K8: void a(org.json.JSONObject)>($r2)
<com.yandex.metrica.impl.ob.K8: void a(org.json.JSONObject)>: specialinvoke r0.<com.yandex.metrica.impl.ob.K8: void a(java.lang.Throwable)>($r4)
<com.yandex.metrica.impl.ob.K8: void a(java.lang.Throwable)>: return
<com.yandex.metrica.impl.ob.K8: void a(org.json.JSONObject)>: r0 := @this: com.yandex.metrica.impl.ob.K8
<com.yandex.metrica.impl.ob.K8: org.json.JSONObject a()>: r0.<com.yandex.metrica.impl.ob.K8: org.json.JSONObject a> = $r2
<com.yandex.metrica.impl.ob.K8: org.json.JSONObject a()>: virtualinvoke r0.<com.yandex.metrica.impl.ob.K8: void a(org.json.JSONObject)>($r2)
<com.yandex.metrica.impl.ob.K8: void a(org.json.JSONObject)>: $r1 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>()
<com.yandex.metrica.impl.ob.K8: void a(org.json.JSONObject)>: interfaceinvoke $r3.<com.yandex.metrica.impl.ob.N8: void a(java.lang.String)>($r1)
<com.yandex.metrica.impl.ob.y8: void a(java.lang.String)>: staticinvoke <kotlin.io.FilesKt: void writeText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)>($r6, $r3, null, 2, null)
<kotlin.io.FilesKt__FileReadWriteKt: void writeText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)>: staticinvoke <kotlin.io.FilesKt: void writeText(java.io.File,java.lang.String,java.nio.charset.Charset)>($r0, $r1, $r3)
<kotlin.io.FilesKt__FileReadWriteKt: void writeText(java.io.File,java.lang.String,java.nio.charset.Charset)>: $r1 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3)
<kotlin.io.FilesKt__FileReadWriteKt: void writeText(java.io.File,java.lang.String,java.nio.charset.Charset)>: staticinvoke <kotlin.io.FilesKt: void writeBytes(java.io.File,byte[])>($r0, $r1)
<kotlin.io.FilesKt__FileReadWriteKt: void writeBytes(java.io.File,byte[])>: virtualinvoke $r2.<java.io.FileOutputStream: void write(byte[])>($r1)
