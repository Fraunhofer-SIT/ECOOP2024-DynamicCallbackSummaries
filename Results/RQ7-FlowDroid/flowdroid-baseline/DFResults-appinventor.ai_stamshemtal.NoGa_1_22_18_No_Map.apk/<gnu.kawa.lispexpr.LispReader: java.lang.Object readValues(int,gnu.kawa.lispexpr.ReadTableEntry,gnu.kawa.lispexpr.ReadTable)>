    public java.lang.Object readValues(int, gnu.kawa.lispexpr.ReadTableEntry, gnu.kawa.lispexpr.ReadTable) throws java.io.IOException, gnu.text.SyntaxException
    {
        gnu.kawa.lispexpr.ReadTable $r2;
        gnu.mapping.Values $r6;
        gnu.kawa.lispexpr.LispReader r0;
        char $c3;
        int $i0, $i1, $i2;
        gnu.kawa.lispexpr.ReadTableEntry $r1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4, $r7;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: gnu.kawa.lispexpr.LispReader;

        $i0 := @parameter0: int;

        $r1 := @parameter1: gnu.kawa.lispexpr.ReadTableEntry;

        $r2 := @parameter2: gnu.kawa.lispexpr.ReadTable;

        $i1 = r0.<gnu.kawa.lispexpr.LispReader: int tokenBufferLength>;

        r0.<gnu.kawa.lispexpr.LispReader: boolean seenEscapes> = 0;

        $i2 = virtualinvoke $r1.<gnu.kawa.lispexpr.ReadTableEntry: int getKind()>();

        lookupswitch($i2)
        {
            case 0: goto label2;
            case 1: goto label5;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label6;
            case 6: goto label6;
            default: goto label1;
        };

     label1:
        $r3 = virtualinvoke r0.<gnu.kawa.lispexpr.LispReader: java.lang.Object readAndHandleToken(int,int,gnu.kawa.lispexpr.ReadTable)>($i0, $i1, $r2);

        return $r3;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid character #\\");

        $c3 = (char) $i0;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = r0.<gnu.kawa.lispexpr.LispReader: boolean interactive>;

        if $z0 == 0 goto label4;

        virtualinvoke r0.<gnu.kawa.lispexpr.LispReader: void fatal(java.lang.String)>($r5);

     label3:
        $r6 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return $r6;

     label4:
        virtualinvoke r0.<gnu.kawa.lispexpr.LispReader: void error(java.lang.String)>($r5);

        goto label3;

     label5:
        $r6 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return $r6;

     label6:
        $r3 = virtualinvoke $r1.<gnu.kawa.lispexpr.ReadTableEntry: java.lang.Object read(gnu.text.Lexer,int,int)>(r0, $i0, -1);

        return $r3;
    }
