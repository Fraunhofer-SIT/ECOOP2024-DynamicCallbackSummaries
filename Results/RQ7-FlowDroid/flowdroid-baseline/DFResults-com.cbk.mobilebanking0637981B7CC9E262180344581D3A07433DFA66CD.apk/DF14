Source: $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1)
$i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1) in <util.h.xy.ct.my: int read(byte[],int,int)>
Sink: virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>($r6) in <util.h.xy.ct.rk: byte[] ˏ(util.h.xy.ct.f[])>

<util.h.xy.ct.my: int read(byte[],int,int)>: $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1)
<util.h.xy.ct.my: int read(byte[],int,int)>: return $i0
<util.h.xy.ct.mn: int read(byte[],int,int)>: throw $r8
<util.h.xy.eh.a: void ˋ(java.io.InputStream,java.io.OutputStream)>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r0, 0, $i0)
<util.h.xy.eh.a: void ˋ(java.io.InputStream,java.io.OutputStream)>: return
<util.h.xy.eh.a: byte[] ˊ(java.io.InputStream)>: $r0 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
<util.h.xy.eh.a: byte[] ˊ(java.io.InputStream)>: return $r0
<util.h.xy.ct.mk: util.h.xy.ct.mf ͺ()>: specialinvoke $r1.<util.h.xy.ct.rk: void <init>(byte[])>($r3)
<util.h.xy.ct.rk: void <init>(byte[])>: specialinvoke r0.<util.h.xy.ct.f: void <init>(byte[])>($r1)
<util.h.xy.ct.f: void <init>(byte[])>: r0.<util.h.xy.ct.f: byte[] ˏ> = $r1
<util.h.xy.ct.f: void <init>(byte[])>: return
<util.h.xy.ct.rk: void <init>(byte[])>: return
<util.h.xy.ct.mk: util.h.xy.ct.mf ͺ()>: return $r1
<util.h.xy.ct.rg: util.h.xy.ct.d ˋ()>: virtualinvoke $r1.<util.h.xy.ct.d: void ᐝ(util.h.xy.ct.rb)>($r4)
<util.h.xy.ct.d: void ᐝ(util.h.xy.ct.rb)>: virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r1)
<util.h.xy.ct.d: void ᐝ(util.h.xy.ct.rb)>: $r2 = r0.<util.h.xy.ct.d: java.util.Vector ˊ>
<util.h.xy.ct.d: void ᐝ(util.h.xy.ct.rb)>: return
<util.h.xy.ct.rg: util.h.xy.ct.d ˋ()>: return $r1
<util.h.xy.ct.rg: util.h.xy.ct.mf ˊ(boolean,int)>: $r7 = virtualinvoke $r6.<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>(0)
<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>: $r1 = r0.<util.h.xy.ct.d: java.util.Vector ˊ>
<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>: $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i0)
<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>: $r3 = (util.h.xy.ct.rb) $r2
<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>: return $r3
<util.h.xy.ct.rg: util.h.xy.ct.mf ˊ(boolean,int)>: specialinvoke $r3.<util.h.xy.ct.u: void <init>(boolean,int,util.h.xy.ct.rb)>(1, $i0, $r7)
<util.h.xy.ct.u: void <init>(boolean,int,util.h.xy.ct.rb)>: specialinvoke r0.<util.h.xy.ct.j: void <init>(boolean,int,util.h.xy.ct.rb)>($z0, $i0, $r1)
<util.h.xy.ct.j: void <init>(boolean,int,util.h.xy.ct.rb)>: r0.<util.h.xy.ct.j: util.h.xy.ct.rb ˋ> = $r1
<util.h.xy.ct.j: void <init>(boolean,int,util.h.xy.ct.rb)>: return
<util.h.xy.ct.u: void <init>(boolean,int,util.h.xy.ct.rb)>: return
<util.h.xy.ct.rg: util.h.xy.ct.mf ˊ(boolean,int)>: return $r3
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,int,int)>: return $r2
<util.h.xy.ct.md: util.h.xy.ct.mf ˊ()>: return $r1
<util.h.xy.ct.md: util.h.xy.ct.d ˋ()>: virtualinvoke $r1.<util.h.xy.ct.d: void ᐝ(util.h.xy.ct.rb)>($r2)
<util.h.xy.ct.d: void ᐝ(util.h.xy.ct.rb)>: virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r1)
<util.h.xy.ct.d: void ᐝ(util.h.xy.ct.rb)>: $r2 = r0.<util.h.xy.ct.d: java.util.Vector ˊ>
<util.h.xy.ct.d: void ᐝ(util.h.xy.ct.rb)>: return
<util.h.xy.ct.md: util.h.xy.ct.d ˋ()>: return $r1
<util.h.xy.ct.md: util.h.xy.ct.d ˋ(util.h.xy.ct.my)>: return $r1
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,int,int)>: $r9 = virtualinvoke $r3.<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>($i3)
<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>: return $r3
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,int,int)>: $r9 = virtualinvoke $r3.<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>($i3)
<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>: $r1 = r0.<util.h.xy.ct.d: java.util.Vector ˊ>
<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>: $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i0)
<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>: $r3 = (util.h.xy.ct.rb) $r2
<util.h.xy.ct.d: util.h.xy.ct.rb ˋ(int)>: return $r3
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,int,int)>: $r10 = (util.h.xy.ct.f) $r9
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,int,int)>: $r8[$i3] = $r10
<util.h.xy.ct.md: util.h.xy.ct.mf ˋ(int,int,int)>: specialinvoke $r19.<util.h.xy.ct.rk: void <init>(util.h.xy.ct.f[])>($r8)
<util.h.xy.ct.rk: void <init>(util.h.xy.ct.f[])>: $r2 = staticinvoke <util.h.xy.ct.rk: byte[] ˏ(util.h.xy.ct.f[])>($r1)
<util.h.xy.ct.rk: byte[] ˏ(util.h.xy.ct.f[])>: $r4 = $r3[$i0]
<util.h.xy.ct.rk: byte[] ˏ(util.h.xy.ct.f[])>: $r5 = (util.h.xy.ct.r) $r4
<util.h.xy.ct.rk: byte[] ˏ(util.h.xy.ct.f[])>: $r6 = virtualinvoke $r5.<util.h.xy.ct.f: byte[] ᐝ()>()
<util.h.xy.ct.f: byte[] ᐝ()>: r3 = r0.<util.h.xy.ct.f: byte[] ˏ>
<util.h.xy.ct.f: byte[] ᐝ()>: return r3
<util.h.xy.ct.rk: byte[] ˏ(util.h.xy.ct.f[])>: virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>($r6)
