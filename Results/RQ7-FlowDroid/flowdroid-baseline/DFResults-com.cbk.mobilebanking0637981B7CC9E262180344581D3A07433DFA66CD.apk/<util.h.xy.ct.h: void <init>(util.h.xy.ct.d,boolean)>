    protected void <init>(util.h.xy.ct.d, boolean)
    {
        util.h.xy.ct.h r0;
        util.h.xy.ct.d $r1;
        util.h.xy.ct.rb $r3;
        java.util.Vector $r2, $r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: util.h.xy.ct.h;

        $r1 := @parameter0: util.h.xy.ct.d;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<util.h.xy.ct.mf: void <init>()>();

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<util.h.xy.ct.h: java.util.Vector \u02ce> = $r4;

        $i0 = 0;

        r0.<util.h.xy.ct.h: boolean \u02cf> = 0;

     label1:
        $i1 = virtualinvoke $r1.<util.h.xy.ct.d: int \u02cf()>();

        if $i0 == $i1 goto label2;

        $r2 = r0.<util.h.xy.ct.h: java.util.Vector \u02ce>;

        $r3 = virtualinvoke $r1.<util.h.xy.ct.d: util.h.xy.ct.rb \u02cb(int)>($i0);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r3);

        $i1 = $i0 ^ 28;

        $i0 = $i0 & 28;

        $i0 = $i0 << 1;

        $i1 = $i1 + $i0;

        $i0 = $i1 | -27;

        $i0 = $i0 << 1;

        $i1 = $i1 ^ -27;

        $i0 = $i0 - $i1;

        goto label1;

     label2:
        return;
    }
