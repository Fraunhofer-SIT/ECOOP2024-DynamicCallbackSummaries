    public char next() throws org.json.JSONException
    {
        java.lang.Throwable $r2;
        org.json.JSONTokener r0;
        long $l2, $l3;
        char $c4;
        java.io.Reader $r1;
        org.json.JSONException $r3;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.json.JSONTokener;

        $z0 = r0.<org.json.JSONTokener: boolean usePrevious>;

        $i1 = 0;

        if $z0 == 0 goto label01;

        r0.<org.json.JSONTokener: boolean usePrevious> = 0;

        $c4 = r0.<org.json.JSONTokener: char previous>;

        $i1 = (int) $c4;

        goto label05;

     label01:
        $r1 = r0.<org.json.JSONTokener: java.io.Reader reader>;

     label02:
        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

     label03:
        if $i0 > 0 goto label04;

        r0.<org.json.JSONTokener: boolean eof> = 1;

        goto label05;

     label04:
        $i1 = $i0;

     label05:
        $l2 = r0.<org.json.JSONTokener: long index>;

        $l3 = 1L;

        $l2 = $l2 + 1L;

        r0.<org.json.JSONTokener: long index> = $l2;

        $c4 = r0.<org.json.JSONTokener: char previous>;

        $i0 = (int) $c4;

        if $i0 != 13 goto label07;

        $l2 = r0.<org.json.JSONTokener: long line>;

        $l2 = $l2 + 1L;

        r0.<org.json.JSONTokener: long line> = $l2;

        if $i1 != 10 goto label06;

        $l3 = 0L;

     label06:
        r0.<org.json.JSONTokener: long character> = $l3;

        goto label09;

     label07:
        if $i1 != 10 goto label08;

        $l3 = r0.<org.json.JSONTokener: long line>;

        $l3 = $l3 + 1L;

        r0.<org.json.JSONTokener: long line> = $l3;

        r0.<org.json.JSONTokener: long character> = 0L;

        goto label09;

     label08:
        $l3 = r0.<org.json.JSONTokener: long character>;

        $l3 = $l3 + 1L;

        r0.<org.json.JSONTokener: long character> = $l3;

     label09:
        $c4 = (char) $i1;

        r0.<org.json.JSONTokener: char previous> = $c4;

        return $c4;

     label10:
        $r2 := @caughtexception;

        $r3 = new org.json.JSONException;

        specialinvoke $r3.<org.json.JSONException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch java.io.IOException from label02 to label03 with label10;
    }
