    private static java.lang.Object wrap(java.lang.Object)
    {
        byte[] $r9;
        java.lang.Package $r7;
        java.util.Collection $r2;
        java.lang.Exception $r0;
        org.json.JSONObject $r6;
        java.util.Map $r5;
        java.lang.Object $r1;
        java.lang.Class $r4;
        java.lang.String $r8, $r10;
        org.json.JSONArray $r3;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label01;

        return null;

     label01:
        $z0 = $r1 instanceof org.json.JSONArray;

        if $z0 != 0 goto label20;

        $z0 = $r1 instanceof org.json.JSONObject;

        if $z0 == 0 goto label02;

        return $r1;

     label02:
        $z0 = $r1 instanceof java.util.Collection;

        if $z0 == 0 goto label05;

     label03:
        $r2 = (java.util.Collection) $r1;

        $r3 = staticinvoke <com.kbins.kbinsure.widget.JsonUtils: org.json.JSONArray collectionToJson(java.util.Collection)>($r2);

     label04:
        return $r3;

     label05:
        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isArray()>();

     label06:
        if $z0 == 0 goto label09;

     label07:
        $r3 = staticinvoke <com.kbins.kbinsure.widget.JsonUtils: org.json.JSONArray arrayToJson(java.lang.Object)>($r1);

     label08:
        return $r3;

     label09:
        $z0 = $r1 instanceof java.util.Map;

        if $z0 == 0 goto label12;

     label10:
        $r5 = (java.util.Map) $r1;

        $r6 = staticinvoke <com.kbins.kbinsure.widget.JsonUtils: org.json.JSONObject mapToJson(java.util.Map)>($r5);

     label11:
        return $r6;

     label12:
        $z0 = $r1 instanceof java.lang.Boolean;

        if $z0 != 0 goto label22;

        $z0 = $r1 instanceof java.lang.Byte;

        if $z0 != 0 goto label22;

        $z0 = $r1 instanceof java.lang.Character;

        if $z0 != 0 goto label22;

        $z0 = $r1 instanceof java.lang.Double;

        if $z0 != 0 goto label22;

        $z0 = $r1 instanceof java.lang.Float;

        if $z0 != 0 goto label22;

        $z0 = $r1 instanceof java.lang.Integer;

        if $z0 != 0 goto label22;

        $z0 = $r1 instanceof java.lang.Long;

        if $z0 != 0 goto label22;

        $z0 = $r1 instanceof java.lang.Short;

        if $z0 != 0 goto label22;

        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label13;

        return $r1;

     label13:
        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r4.<java.lang.Class: java.lang.Package getPackage()>();

        $r8 = virtualinvoke $r7.<java.lang.Package: java.lang.String getName()>();

     label14:
        $r9 = newarray (byte)[5];

     label15:
        $r9[0] = 107;

        $r9[1] = -21;

        $r9[2] = 89;

        $r9[3] = -40;

        $r9[4] = 47;

        $r10 = staticinvoke <py: java.lang.String qm(int,byte[],int)>(1227034535, $r9, -1932036601);

        $z0 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>($r10);

     label16:
        if $z0 == 0 goto label19;

     label17:
        $r8 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

     label18:
        return $r8;

     label19:
        return null;

     label20:
        return $r1;

     label21:
        $r0 := @caughtexception;

        return null;

     label22:
        return $r1;

        catch java.lang.Exception from label03 to label04 with label21;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Exception from label10 to label11 with label21;
        catch java.lang.Exception from label13 to label14 with label21;
        catch java.lang.Exception from label15 to label16 with label21;
        catch java.lang.Exception from label17 to label18 with label21;
    }
