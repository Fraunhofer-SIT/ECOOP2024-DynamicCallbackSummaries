Source: $i0 = interfaceinvoke $r7.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r0, $i0)
$i0 = interfaceinvoke $r7.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r0, $i0) in <com.onesignal.OneSignalPrefs: java.lang.Object get(java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>
Sink: virtualinvoke $r23.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0) in <org.altbeacon.beacon.service.ScanState: void save()>

<com.onesignal.OneSignalPrefs: java.lang.Object get(java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>: $i0 = interfaceinvoke $r7.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r0, $i0)
<com.onesignal.OneSignalPrefs: java.lang.Object get(java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
<com.onesignal.OneSignalPrefs: java.lang.Object get(java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>: return $r8
<com.onesignal.OneSignalPrefs: int getInt(java.lang.String,java.lang.String,int)>: $r2 = (java.lang.Integer) $r3
<com.onesignal.OneSignalPrefs: int getInt(java.lang.String,java.lang.String,int)>: $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>()
<com.onesignal.OneSignalPrefs: int getInt(java.lang.String,java.lang.String,int)>: return $i0
<com.onesignal.UserState: void loadState()>: $i0 = $i1
<com.onesignal.UserState: void loadState()>: virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("subscribableStatus", $i0)
<com.onesignal.UserState: void loadState()>: $r4 = r0.<com.onesignal.UserState: org.json.JSONObject dependValues>
<com.onesignal.UserState: void loadState()>: return
<com.onesignal.UserState: void <init>(java.lang.String,boolean)>: return
<com.onesignal.UserStateEmail: void <init>(java.lang.String,boolean)>: return
<com.onesignal.UserStateEmailSynchronizer: com.onesignal.UserState newUserState(java.lang.String,boolean)>: return $r2
<com.onesignal.UserStateSynchronizer: com.onesignal.UserState getToSyncUserState()>: r0.<com.onesignal.UserStateSynchronizer: com.onesignal.UserState toSyncUserState> = $r1
<com.onesignal.UserStateSynchronizer: com.onesignal.UserState getToSyncUserState()>: return $r1
<com.onesignal.UserStateSynchronizer: void internalSyncUserState(boolean)>: return
<com.onesignal.UserStateSynchronizer: void syncUserState(boolean)>: r0 := @this: com.onesignal.UserStateSynchronizer
<com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1: void run()>: $r2 = $r1.<com.onesignal.UserStateSynchronizer$NetworkHandlerThread: com.onesignal.UserStateSynchronizer this$0>
<com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1: void run()>: $r1 = r0.<com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1: com.onesignal.UserStateSynchronizer$NetworkHandlerThread this$1>
<com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1: void run()>: r0 := @this: com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>: this := @this: android.os.Handler
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: void showFullscreen(java.lang.String,java.lang.String,boolean)>: $r12 = r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: java.lang.Runnable fullscreenPendingRequestCancelRunnable>
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: void showFullscreen(java.lang.String,java.lang.String,boolean)>: r0 := @this: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter
<com.appsgeyser.sdk.ads.fastTrack.FastTrackAdsController: void lambda$showFullscreen$3$FastTrackAdsController(java.lang.String,java.lang.String,boolean)>: $r1 = r0.<com.appsgeyser.sdk.ads.fastTrack.FastTrackAdsController: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackBaseAdapter adsAdapter>
<com.appsgeyser.sdk.ads.fastTrack.FastTrackAdsController: void lambda$showFullscreen$3$FastTrackAdsController(java.lang.String,java.lang.String,boolean)>: r0 := @this: com.appsgeyser.sdk.ads.fastTrack.FastTrackAdsController
<com.appsgeyser.sdk.ads.fastTrack.'-$$Lambda$FastTrackAdsController$7YkvZ95vCiIAN0oRP8eE679Fnxc': void run()>: $r1 = r0.<com.appsgeyser.sdk.ads.fastTrack.'-$$Lambda$FastTrackAdsController$7YkvZ95vCiIAN0oRP8eE679Fnxc': com.appsgeyser.sdk.ads.fastTrack.FastTrackAdsController f$0>
<com.appsgeyser.sdk.ads.fastTrack.'-$$Lambda$FastTrackAdsController$7YkvZ95vCiIAN0oRP8eE679Fnxc': void run()>: r0 := @this: com.appsgeyser.sdk.ads.fastTrack.-$$Lambda$FastTrackAdsController$7YkvZ95vCiIAN0oRP8eE679Fnxc
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>: this := @this: android.os.Handler
<com.mopub.mobileads.MoPubInterstitial: boolean attemptStateTransition(com.mopub.mobileads.MoPubInterstitial$InterstitialState,boolean)>: $r8 = r0.<com.mopub.mobileads.MoPubInterstitial: java.lang.Runnable mAdExpiration>
<com.mopub.mobileads.MoPubInterstitial: boolean attemptStateTransition(com.mopub.mobileads.MoPubInterstitial$InterstitialState,boolean)>: $r9 = r0.<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.MoPubInterstitial$InterstitialAdListener mInterstitialAdListener>
<com.mopub.mobileads.MoPubInterstitial: boolean attemptStateTransition(com.mopub.mobileads.MoPubInterstitial$InterstitialState,boolean)>: interfaceinvoke $r9.<com.mopub.mobileads.MoPubInterstitial$InterstitialAdListener: void onInterstitialLoaded(com.mopub.mobileads.MoPubInterstitial)>(r0)
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$5: void onInterstitialLoaded(com.mopub.mobileads.MoPubInterstitial)>: return
<com.mopub.mobileads.MoPubInterstitial: boolean attemptStateTransition(com.mopub.mobileads.MoPubInterstitial$InterstitialState,boolean)>: $r9 = r0.<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.MoPubInterstitial$InterstitialAdListener mInterstitialAdListener>
<com.mopub.mobileads.MoPubInterstitial: boolean attemptStateTransition(com.mopub.mobileads.MoPubInterstitial$InterstitialState,boolean)>: $r8 = r0.<com.mopub.mobileads.MoPubInterstitial: java.lang.Runnable mAdExpiration>
<com.mopub.mobileads.MoPubInterstitial: boolean attemptStateTransition(com.mopub.mobileads.MoPubInterstitial$InterstitialState,boolean)>: virtualinvoke $r7.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r8, 14400000L)
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>: return 1
<com.mopub.mobileads.MoPubInterstitial: boolean attemptStateTransition(com.mopub.mobileads.MoPubInterstitial$InterstitialState,boolean)>: $r8 = r0.<com.mopub.mobileads.MoPubInterstitial: java.lang.Runnable mAdExpiration>
<com.mopub.mobileads.MoPubInterstitial: boolean attemptStateTransition(com.mopub.mobileads.MoPubInterstitial$InterstitialState,boolean)>: r0 := @this: com.mopub.mobileads.MoPubInterstitial
<com.mopub.mobileads.MoPubInterstitial: boolean attemptStateTransition(com.mopub.mobileads.MoPubInterstitial$InterstitialState)>: r0 := @this: com.mopub.mobileads.MoPubInterstitial
<com.mopub.mobileads.MoPubInterstitial: boolean show()>: r0 := @this: com.mopub.mobileads.MoPubInterstitial
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$5: void lambda$onInterstitialLoaded$0$FastTrackMopubAdapter$5(com.appsgeyser.sdk.ui.AppsgeyserProgressDialog)>: $r1 = staticinvoke <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: com.mopub.mobileads.MoPubInterstitial access$1000(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter)>($r4)
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: com.mopub.mobileads.MoPubInterstitial access$1000(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter)>: r1 = $r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: com.mopub.mobileads.MoPubInterstitial interstitialAd>
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: com.mopub.mobileads.MoPubInterstitial access$1000(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter)>: return r1
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$5: void lambda$onInterstitialLoaded$0$FastTrackMopubAdapter$5(com.appsgeyser.sdk.ui.AppsgeyserProgressDialog)>: $r4 = r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$5: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter this$0>
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$5: void lambda$onInterstitialLoaded$0$FastTrackMopubAdapter$5(com.appsgeyser.sdk.ui.AppsgeyserProgressDialog)>: r0 := @this: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$5
<com.appsgeyser.sdk.ads.fastTrack.adapters.'-$$Lambda$FastTrackMopubAdapter$5$M4E6jp8M6B8clExu65dwsjsbQe0': void run()>: $r1 = r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.'-$$Lambda$FastTrackMopubAdapter$5$M4E6jp8M6B8clExu65dwsjsbQe0': com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$5 f$0>
<com.appsgeyser.sdk.ads.fastTrack.adapters.'-$$Lambda$FastTrackMopubAdapter$5$M4E6jp8M6B8clExu65dwsjsbQe0': void run()>: return
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>: this := @this: android.os.Handler
<com.mopub.common.privacy.ConsentDialogActivity: void onStart()>: $r2 = r0.<com.mopub.common.privacy.ConsentDialogActivity: java.lang.Runnable mEnableCloseButtonRunnable>
<com.mopub.common.privacy.ConsentDialogActivity: void onStart()>: return
<dummyMainClass: com.mopub.common.privacy.ConsentDialogActivity dummyMainMethod_com_mopub_common_privacy_ConsentDialogActivity(android.content.Intent)>: virtualinvoke $r0.<com.mopub.common.privacy.ConsentDialogActivity: void onStart()>()
<com.mopub.common.privacy.ConsentDialogActivity: void onStart()>: $r2 = r0.<com.mopub.common.privacy.ConsentDialogActivity: java.lang.Runnable mEnableCloseButtonRunnable>
<com.mopub.common.privacy.ConsentDialogActivity: void onStart()>: virtualinvoke $r1.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r2, 10000L)
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>: interfaceinvoke param0.<java.lang.Runnable: void run()>()
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: staticinvoke <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>: specialinvoke $r0.<org.altbeacon.beacon.service.ScanJob: void stopScanning()>()
<org.altbeacon.beacon.service.ScanJob: void stopScanning()>: $r1 = r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanHelper mScanHelper>
<org.altbeacon.beacon.service.ScanJob: void stopScanning()>: $r2 = virtualinvoke $r1.<org.altbeacon.beacon.service.ScanHelper: org.altbeacon.beacon.service.scanner.CycledLeScanner getCycledScanner()>()
<org.altbeacon.beacon.service.ScanHelper: org.altbeacon.beacon.service.scanner.CycledLeScanner getCycledScanner()>: return r1
<org.altbeacon.beacon.service.ScanJob: void stopScanning()>: $r1 = r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanHelper mScanHelper>
<org.altbeacon.beacon.service.ScanJob: void stopScanning()>: r0 := @this: org.altbeacon.beacon.service.ScanJob
<org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>: $r0 := @parameter0: org.altbeacon.beacon.service.ScanJob
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: return r1
<org.altbeacon.beacon.service.ScanJob$1: void run()>: virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
<org.altbeacon.beacon.service.ScanState: void save()>: virtualinvoke $r23.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0)
