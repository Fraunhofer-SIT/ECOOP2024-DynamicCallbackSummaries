Source: $i1 = virtualinvoke $r0.<java.io.InputStream: int read()>()
$i1 = virtualinvoke $r0.<java.io.InputStream: int read()>() in <org.bouncycastle.asn1.ASN1InputStream: int readLength(java.io.InputStream,int,boolean)>
Sink: virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i0) in <org.bouncycastle.asn1.ASN1OutputStream: void write(int)>

<org.bouncycastle.asn1.ASN1InputStream: int readLength(java.io.InputStream,int,boolean)>: $i1 = virtualinvoke $r0.<java.io.InputStream: int read()>()
<org.bouncycastle.asn1.ASN1InputStream: int readLength(java.io.InputStream,int,boolean)>: return $i1
<org.bouncycastle.asn1.ASN1InputStream: int readLength()>: return $i0
<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.ASN1Primitive readObject()>: $r5 = virtualinvoke r0.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.ASN1Primitive buildObject(int,int,int)>($i0, $i1, $i2)
<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.ASN1Primitive buildObject(int,int,int)>: specialinvoke $r1.<org.bouncycastle.asn1.DefiniteLengthInputStream: void <init>(java.io.InputStream,int,int)>(r0, $i2, $i3)
<org.bouncycastle.asn1.DefiniteLengthInputStream: void <init>(java.io.InputStream,int,int)>: r0.<org.bouncycastle.asn1.DefiniteLengthInputStream: int _originalLength> = $i0
<org.bouncycastle.asn1.DefiniteLengthInputStream: void <init>(java.io.InputStream,int,int)>: return
<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.ASN1Primitive buildObject(int,int,int)>: $r5 = staticinvoke <org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.ASN1Primitive createPrimitiveDERObject(int,org.bouncycastle.asn1.DefiniteLengthInputStream,byte[][])>($i1, $r1, $r20)
<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.ASN1Primitive createPrimitiveDERObject(int,org.bouncycastle.asn1.DefiniteLengthInputStream,byte[][])>: $r19 = staticinvoke <org.bouncycastle.asn1.ASN1BitString: org.bouncycastle.asn1.ASN1BitString fromInputStream(int,java.io.InputStream)>($i0, $r0)
<org.bouncycastle.asn1.ASN1BitString: org.bouncycastle.asn1.ASN1BitString fromInputStream(int,java.io.InputStream)>: $i3 = staticinvoke <org.bouncycastle.util.io.Streams: int readFully(java.io.InputStream,byte[])>($r0, $r1)
<org.bouncycastle.util.io.Streams: int readFully(java.io.InputStream,byte[])>: return $i0
<org.bouncycastle.asn1.ASN1BitString: org.bouncycastle.asn1.ASN1BitString fromInputStream(int,java.io.InputStream)>: $i2 = virtualinvoke $r0.<java.io.InputStream: int read()>()
<org.bouncycastle.asn1.ASN1BitString: org.bouncycastle.asn1.ASN1BitString fromInputStream(int,java.io.InputStream)>: specialinvoke $r2.<org.bouncycastle.asn1.DLBitString: void <init>(byte[],int)>($r1, $i2)
<org.bouncycastle.asn1.DLBitString: void <init>(byte[],int)>: specialinvoke r0.<org.bouncycastle.asn1.ASN1BitString: void <init>(byte[],int)>($r1, $i0)
<org.bouncycastle.asn1.ASN1BitString: void <init>(byte[],int)>: r0.<org.bouncycastle.asn1.ASN1BitString: int padBits> = $i0
<org.bouncycastle.asn1.ASN1BitString: void <init>(byte[],int)>: return
<org.bouncycastle.asn1.DLBitString: void <init>(byte[],int)>: return
<org.bouncycastle.asn1.ASN1BitString: org.bouncycastle.asn1.ASN1BitString fromInputStream(int,java.io.InputStream)>: return $r2
<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.ASN1Primitive createPrimitiveDERObject(int,org.bouncycastle.asn1.DefiniteLengthInputStream,byte[][])>: return $r19
<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.ASN1Primitive buildObject(int,int,int)>: return $r5
<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.ASN1Primitive readObject()>: return $r5
<org.bouncycastle.asn1.LazyConstructionEnumeration: java.lang.Object readObject()>: return $r5
<org.bouncycastle.asn1.LazyConstructionEnumeration: java.lang.Object nextElement()>: r0.<org.bouncycastle.asn1.LazyConstructionEnumeration: java.lang.Object nextObj> = $r1
<org.bouncycastle.asn1.LazyConstructionEnumeration: java.lang.Object nextElement()>: r2 = r0.<org.bouncycastle.asn1.LazyConstructionEnumeration: java.lang.Object nextObj>
<org.bouncycastle.asn1.LazyConstructionEnumeration: java.lang.Object nextElement()>: return r2
<org.bouncycastle.asn1.ASN1OutputStream: void writeElements(java.util.Enumeration)>: $r3 = (org.bouncycastle.asn1.ASN1Encodable) $r2
<org.bouncycastle.asn1.ASN1OutputStream: void writeElements(java.util.Enumeration)>: $r4 = interfaceinvoke $r3.<org.bouncycastle.asn1.ASN1Encodable: org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()>()
<org.bouncycastle.asn1.ASN1Primitive: org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()>: return r0
<org.bouncycastle.asn1.ASN1OutputStream: void writeElements(java.util.Enumeration)>: virtualinvoke r0.<org.bouncycastle.asn1.ASN1OutputStream: void writePrimitive(org.bouncycastle.asn1.ASN1Primitive,boolean)>($r4, 1)
<org.bouncycastle.asn1.ASN1OutputStream: void writePrimitive(org.bouncycastle.asn1.ASN1Primitive,boolean)>: virtualinvoke $r1.<org.bouncycastle.asn1.ASN1Primitive: void encode(org.bouncycastle.asn1.ASN1OutputStream,boolean)>(r0, $z0)
<org.bouncycastle.asn1.DERBitString: void encode(org.bouncycastle.asn1.ASN1OutputStream,boolean)>: $i1 = r0.<org.bouncycastle.asn1.ASN1BitString: int padBits>
<org.bouncycastle.asn1.DERBitString: void encode(org.bouncycastle.asn1.ASN1OutputStream,boolean)>: $b0 = (byte) $i1
<org.bouncycastle.asn1.DERBitString: void encode(org.bouncycastle.asn1.ASN1OutputStream,boolean)>: virtualinvoke $r1.<org.bouncycastle.asn1.ASN1OutputStream: void writeEncoded(boolean,int,byte,byte[])>($z0, 3, $b0, $r2)
<org.bouncycastle.asn1.ASN1OutputStream: void writeEncoded(boolean,int,byte,byte[])>: $i0 = (int) $b1
<org.bouncycastle.asn1.ASN1OutputStream: void writeEncoded(boolean,int,byte,byte[])>: virtualinvoke r0.<org.bouncycastle.asn1.ASN1OutputStream: void write(int)>($i0)
<org.bouncycastle.asn1.ASN1OutputStream: void write(int)>: virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i0)
