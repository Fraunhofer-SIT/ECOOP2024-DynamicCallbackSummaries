    public static org.bouncycastle.asn1.ASN1BitString fromInputStream(int, java.io.InputStream) throws java.io.IOException
    {
        byte[] $r1;
        org.bouncycastle.asn1.DERBitString $r4;
        java.lang.IllegalArgumentException $r5;
        java.io.EOFException $r3;
        org.bouncycastle.asn1.DLBitString $r2;
        byte $b0, $b4;
        int $i1, $i2, $i3;
        java.io.InputStream $r0;

        $i1 := @parameter0: int;

        $r0 := @parameter1: java.io.InputStream;

        if $i1 < 1 goto label3;

        $i2 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        $i1 = $i1 - 1;

        $r1 = newarray (byte)[$i1];

        if $i1 == 0 goto label2;

        $i3 = staticinvoke <org.bouncycastle.util.io.Streams: int readFully(java.io.InputStream,byte[])>($r0, $r1);

        if $i3 != $i1 goto label1;

        if $i2 <= 0 goto label2;

        if $i2 >= 8 goto label2;

        $i1 = $i1 - 1;

        $b0 = $r1[$i1];

        $b4 = $r1[$i1];

        $i1 = 255 << $i2;

        $i3 = (int) $b4;

        $i1 = $i3 & $i1;

        $b4 = (byte) $i1;

        $i1 = (int) $b0;

        $i3 = (int) $b4;

        if $i1 == $i3 goto label2;

        $r2 = new org.bouncycastle.asn1.DLBitString;

        specialinvoke $r2.<org.bouncycastle.asn1.DLBitString: void <init>(byte[],int)>($r1, $i2);

        return $r2;

     label1:
        $r3 = new java.io.EOFException;

        specialinvoke $r3.<java.io.EOFException: void <init>(java.lang.String)>("EOF encountered in middle of BIT STRING");

        throw $r3;

     label2:
        $r4 = new org.bouncycastle.asn1.DERBitString;

        specialinvoke $r4.<org.bouncycastle.asn1.DERBitString: void <init>(byte[],int)>($r1, $i2);

        return $r4;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("truncated BIT STRING detected");

        throw $r5;
    }
