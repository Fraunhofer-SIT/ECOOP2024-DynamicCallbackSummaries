Source: $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>()
$i0 = virtualinvoke $r1.<java.io.InputStream: int read()>() in <org.bouncycastle.asn1.DefiniteLengthInputStream: int read()>
Sink: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i0, $i1) in <org.bouncycastle.asn1.ASN1OutputStream: void write(byte[],int,int)>

<org.bouncycastle.asn1.DefiniteLengthInputStream: int read()>: $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>()
<org.bouncycastle.asn1.DefiniteLengthInputStream: int read()>: return $i0
<org.bouncycastle.asn1.IndefiniteLengthInputStream: void <init>(java.io.InputStream,int)>: r0.<org.bouncycastle.asn1.IndefiniteLengthInputStream: int _b2> = $i0
<org.bouncycastle.asn1.IndefiniteLengthInputStream: void <init>(java.io.InputStream,int)>: return
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>: specialinvoke $r10.<org.bouncycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream,int)>($r9, $i2)
<org.bouncycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream,int)>: r0.<org.bouncycastle.asn1.ASN1StreamParser: java.io.InputStream _in> = $r1
<org.bouncycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream,int)>: return
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>: $r3 = virtualinvoke $r10.<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readIndef(int)>($i1)
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readIndef(int)>: specialinvoke $r7.<org.bouncycastle.asn1.BEROctetStringParser: void <init>(org.bouncycastle.asn1.ASN1StreamParser)>(r0)
<org.bouncycastle.asn1.BEROctetStringParser: void <init>(org.bouncycastle.asn1.ASN1StreamParser)>: r0.<org.bouncycastle.asn1.BEROctetStringParser: org.bouncycastle.asn1.ASN1StreamParser _parser> = $r1
<org.bouncycastle.asn1.BEROctetStringParser: void <init>(org.bouncycastle.asn1.ASN1StreamParser)>: return
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readIndef(int)>: return $r7
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>: return $r3
<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1OctetStringParser getNextParser()>: $r5 = (org.bouncycastle.asn1.ASN1OctetStringParser) $r4
<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1OctetStringParser getNextParser()>: return $r5
<org.bouncycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: $r4 = $r3
<org.bouncycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: $r2 = interfaceinvoke $r4.<org.bouncycastle.asn1.ASN1OctetStringParser: java.io.InputStream getOctetStream()>()
<org.bouncycastle.asn1.BEROctetStringParser: java.io.InputStream getOctetStream()>: $r1 = r0.<org.bouncycastle.asn1.BEROctetStringParser: org.bouncycastle.asn1.ASN1StreamParser _parser>
<org.bouncycastle.asn1.BEROctetStringParser: java.io.InputStream getOctetStream()>: specialinvoke $r2.<org.bouncycastle.asn1.ConstructedOctetStream: void <init>(org.bouncycastle.asn1.ASN1StreamParser)>($r1)
<org.bouncycastle.asn1.ConstructedOctetStream: void <init>(org.bouncycastle.asn1.ASN1StreamParser)>: r0.<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1StreamParser _parser> = $r1
<org.bouncycastle.asn1.ConstructedOctetStream: void <init>(org.bouncycastle.asn1.ASN1StreamParser)>: return
<org.bouncycastle.asn1.BEROctetStringParser: java.io.InputStream getOctetStream()>: return $r2
<org.bouncycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: $r2 = r0.<org.bouncycastle.asn1.ConstructedOctetStream: java.io.InputStream _currentStream>
<org.bouncycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: r0 := @this: org.bouncycastle.asn1.ConstructedOctetStream
<org.bouncycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: $r2 = r0.<org.bouncycastle.asn1.ConstructedOctetStream: java.io.InputStream _currentStream>
<org.bouncycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: $r3 = specialinvoke r0.<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1OctetStringParser getNextParser()>()
<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1OctetStringParser getNextParser()>: $r3 = r0.<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1StreamParser _parser>
<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1OctetStringParser getNextParser()>: $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>()
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>: specialinvoke r0.<org.bouncycastle.asn1.ASN1StreamParser: void set00Check(boolean)>(0)
<org.bouncycastle.asn1.ASN1StreamParser: void set00Check(boolean)>: return
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>: $r1 = r0.<org.bouncycastle.asn1.ASN1StreamParser: java.io.InputStream _in>
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>: $r1 = r0.<org.bouncycastle.asn1.ASN1StreamParser: java.io.InputStream _in>
<org.bouncycastle.asn1.ASN1StreamParser: org.bouncycastle.asn1.ASN1Encodable readObject()>: r0 := @this: org.bouncycastle.asn1.ASN1StreamParser
<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1OctetStringParser getNextParser()>: $r3 = r0.<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1StreamParser _parser>
<org.bouncycastle.asn1.ConstructedOctetStream: org.bouncycastle.asn1.ASN1OctetStringParser getNextParser()>: r0 := @this: org.bouncycastle.asn1.ConstructedOctetStream
<org.bouncycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: r0 := @this: org.bouncycastle.asn1.ConstructedOctetStream
<org.bouncycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: $r2 = r0.<org.bouncycastle.asn1.ConstructedOctetStream: java.io.InputStream _currentStream>
<org.bouncycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>: return $i3
<org.bouncycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>: $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0)
<org.bouncycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>: virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i1)
<org.bouncycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>: return
<org.bouncycastle.util.io.Streams: byte[] readAll(java.io.InputStream)>: $r1 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
<org.bouncycastle.util.io.Streams: byte[] readAll(java.io.InputStream)>: return $r1
<org.bouncycastle.asn1.BEROctetStringParser: org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>: specialinvoke $r1.<org.bouncycastle.asn1.BEROctetString: void <init>(byte[])>($r3)
<org.bouncycastle.asn1.BEROctetString: void <init>(byte[])>: specialinvoke r0.<org.bouncycastle.asn1.BEROctetString: void <init>(byte[],int)>($r1, 1000)
<org.bouncycastle.asn1.BEROctetString: void <init>(byte[],int)>: specialinvoke r0.<org.bouncycastle.asn1.BEROctetString: void <init>(byte[],org.bouncycastle.asn1.ASN1OctetString[],int)>($r1, null, 1000)
<org.bouncycastle.asn1.BEROctetString: void <init>(byte[],org.bouncycastle.asn1.ASN1OctetString[],int)>: specialinvoke r0.<org.bouncycastle.asn1.ASN1OctetString: void <init>(byte[])>($r1)
<org.bouncycastle.asn1.ASN1OctetString: void <init>(byte[])>: r0.<org.bouncycastle.asn1.ASN1OctetString: byte[] string> = $r1
<org.bouncycastle.asn1.ASN1OctetString: void <init>(byte[])>: return
<org.bouncycastle.asn1.BEROctetString: void <init>(byte[],org.bouncycastle.asn1.ASN1OctetString[],int)>: return
<org.bouncycastle.asn1.BEROctetString: void <init>(byte[],int)>: return
<org.bouncycastle.asn1.BEROctetString: void <init>(byte[])>: return
<org.bouncycastle.asn1.BEROctetStringParser: org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>: return $r1
<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.ASN1Primitive readObject()>: return $r5
<org.bouncycastle.asn1.LazyConstructionEnumeration: java.lang.Object readObject()>: return $r5
<org.bouncycastle.asn1.LazyConstructionEnumeration: java.lang.Object nextElement()>: r0.<org.bouncycastle.asn1.LazyConstructionEnumeration: java.lang.Object nextObj> = $r1
<org.bouncycastle.asn1.LazyConstructionEnumeration: java.lang.Object nextElement()>: r2 = r0.<org.bouncycastle.asn1.LazyConstructionEnumeration: java.lang.Object nextObj>
<org.bouncycastle.asn1.LazyConstructionEnumeration: java.lang.Object nextElement()>: return r2
<org.bouncycastle.asn1.ASN1OutputStream: void writeElements(java.util.Enumeration)>: $r3 = (org.bouncycastle.asn1.ASN1Encodable) $r2
<org.bouncycastle.asn1.ASN1OutputStream: void writeElements(java.util.Enumeration)>: $r4 = interfaceinvoke $r3.<org.bouncycastle.asn1.ASN1Encodable: org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()>()
<org.bouncycastle.asn1.ASN1Primitive: org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()>: return r0
<org.bouncycastle.asn1.ASN1OutputStream: void writeElements(java.util.Enumeration)>: virtualinvoke r0.<org.bouncycastle.asn1.ASN1OutputStream: void writePrimitive(org.bouncycastle.asn1.ASN1Primitive,boolean)>($r4, 1)
<org.bouncycastle.asn1.DEROutputStream: void writePrimitive(org.bouncycastle.asn1.ASN1Primitive,boolean)>: virtualinvoke $r1.<org.bouncycastle.asn1.ASN1Primitive: void encode(org.bouncycastle.asn1.ASN1OutputStream,boolean)>(r0, $z0)
<org.bouncycastle.asn1.DEROctetString: void encode(org.bouncycastle.asn1.ASN1OutputStream,boolean)>: $r2 = r0.<org.bouncycastle.asn1.ASN1OctetString: byte[] string>
<org.bouncycastle.asn1.DEROctetString: void encode(org.bouncycastle.asn1.ASN1OutputStream,boolean)>: virtualinvoke $r1.<org.bouncycastle.asn1.ASN1OutputStream: void writeEncoded(boolean,int,byte[])>($z0, 4, $r2)
<org.bouncycastle.asn1.ASN1OutputStream: void writeEncoded(boolean,int,byte[])>: virtualinvoke r0.<org.bouncycastle.asn1.ASN1OutputStream: void write(byte[],int,int)>($r1, 0, $i0)
<org.bouncycastle.asn1.ASN1OutputStream: void write(byte[],int,int)>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i0, $i1)
