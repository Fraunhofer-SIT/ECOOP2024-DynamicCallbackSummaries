    public static boolean verifyApkHash(java.lang.String)
    {
        java.lang.Throwable $r11;
        byte[] $r3, $r4;
        java.security.MessageDigest $r6;
        java.lang.Exception $r8, $r10, $r12, $r13;
        java.util.ArrayList $r5;
        java.util.zip.ZipFile $r1, $r2;
        java.lang.StringBuilder $r9;
        java.lang.String $r0, $r7;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = null;

     label01:
        $r2 = new java.util.zip.ZipFile;

     label02:
        specialinvoke $r2.<java.util.zip.ZipFile: void <init>(java.lang.String)>($r0);

     label03:
        $r3 = staticinvoke <com.huawei.hms.utils.ReadApkFileUtil: byte[] a(java.util.zip.ZipFile)>($r2);

     label04:
        $r4 = $r3;

     label05:
        $r5 = staticinvoke <com.huawei.hms.utils.ReadApkFileUtil: java.util.ArrayList a(byte[])>($r3);

     label06:
        if $r5 == null goto label09;

     label07:
        $r3 = staticinvoke <com.huawei.hms.utils.ReadApkFileUtil: byte[] a(java.util.ArrayList)>($r5);

     label08:
        $r4 = $r3;

     label09:
        $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256");

        virtualinvoke $r6.<java.security.MessageDigest: void update(byte[])>($r4);

        $r3 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.huawei.hms.utils.ReadApkFileUtil: java.lang.String bytesToString(byte[])>($r3);

     label10:
        $r7 = <com.huawei.hms.utils.ReadApkFileUtil: java.lang.String e>;

     label11:
        if $r7 == null goto label17;

     label12:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r0);

     label13:
        if $z0 == 0 goto label17;

     label14:
        virtualinvoke $r2.<java.util.zip.ZipFile: void close()>();

     label15:
        return 1;

     label16:
        $r8 := @caughtexception;

        $r0 = <com.huawei.hms.utils.ReadApkFileUtil: java.lang.String a>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("close stream Exception!");

        $r7 = virtualinvoke $r8.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.huawei.hms.support.log.HMSLog: void i(java.lang.String,java.lang.String)>($r0, $r7);

        return 1;

     label17:
        virtualinvoke $r2.<java.util.zip.ZipFile: void close()>();

     label18:
        goto label30;

     label19:
        $r10 := @caughtexception;

        $r0 = <com.huawei.hms.utils.ReadApkFileUtil: java.lang.String a>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        goto label29;

     label20:
        $r11 := @caughtexception;

        $r1 = $r2;

        goto label31;

     label21:
        $r12 := @caughtexception;

        $r1 = $r2;

        goto label24;

     label22:
        $r11 := @caughtexception;

        goto label31;

     label23:
        $r12 := @caughtexception;

     label24:
        $r0 = <com.huawei.hms.utils.ReadApkFileUtil: java.lang.String a>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("verifyApkHash Exception!");

        $r7 = virtualinvoke $r12.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.huawei.hms.support.log.HMSLog: void i(java.lang.String,java.lang.String)>($r0, $r7);

     label25:
        if $r1 == null goto label30;

     label26:
        virtualinvoke $r1.<java.util.zip.ZipFile: void close()>();

     label27:
        goto label30;

     label28:
        $r10 := @caughtexception;

        $r0 = <com.huawei.hms.utils.ReadApkFileUtil: java.lang.String a>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

     label29:
        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("close stream Exception!");

        $r7 = virtualinvoke $r10.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.huawei.hms.support.log.HMSLog: void i(java.lang.String,java.lang.String)>($r0, $r7);

     label30:
        return 0;

     label31:
        if $r1 == null goto label35;

     label32:
        virtualinvoke $r1.<java.util.zip.ZipFile: void close()>();

     label33:
        goto label35;

     label34:
        $r13 := @caughtexception;

        $r0 = <com.huawei.hms.utils.ReadApkFileUtil: java.lang.String a>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("close stream Exception!");

        $r7 = virtualinvoke $r13.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.huawei.hms.support.log.HMSLog: void i(java.lang.String,java.lang.String)>($r0, $r7);

     label35:
        throw $r11;

        catch java.lang.Exception from label02 to label03 with label23;
        catch java.lang.Throwable from label01 to label03 with label22;
        catch java.lang.Exception from label03 to label04 with label21;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Exception from label09 to label10 with label21;
        catch java.lang.Exception from label12 to label13 with label21;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label09 to label11 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Exception from label17 to label18 with label19;
        catch java.lang.Throwable from label24 to label25 with label22;
        catch java.lang.Exception from label26 to label27 with label28;
        catch java.lang.Exception from label32 to label33 with label34;
    }
