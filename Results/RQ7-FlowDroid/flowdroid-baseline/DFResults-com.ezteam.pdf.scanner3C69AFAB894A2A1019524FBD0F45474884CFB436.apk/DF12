Source: $i0 = virtualinvoke r3.<java.io.InputStream: int read(byte[])>(r11)
$i0 = virtualinvoke r3.<java.io.InputStream: int read(byte[])>(r11) in <com.itextpdf.text.pdf.PdfEFStream: void toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)>
Sink: virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r4) in <com.itextpdf.text.pdf.PdfIndirectReference: void toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)>

<com.itextpdf.text.pdf.PdfEFStream: void toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)>: $i0 = virtualinvoke r3.<java.io.InputStream: int read(byte[])>(r11)
<com.itextpdf.text.pdf.PdfEFStream: void toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)>: virtualinvoke $r25.<java.io.OutputStream: void write(byte[],int,int)>(r11, 0, $i0)
<com.itextpdf.text.pdf.PdfEFStream: void toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)>: $r25 = (java.io.OutputStream) r14
<com.itextpdf.text.pdf.PdfEFStream: void toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)>: r14 = $r24
<com.itextpdf.text.pdf.PdfEFStream: void toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)>: $l1 = virtualinvoke $r24.<com.itextpdf.text.pdf.OutputStreamCounter: long getCounter()>()
<com.itextpdf.text.pdf.OutputStreamCounter: long getCounter()>: l0 = r0.<com.itextpdf.text.pdf.OutputStreamCounter: long counter>
<com.itextpdf.text.pdf.OutputStreamCounter: long getCounter()>: return l0
<com.itextpdf.text.pdf.PdfEFStream: void toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)>: $i0 = (int) $l1
<com.itextpdf.text.pdf.PdfEFStream: void toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)>: r0.<com.itextpdf.text.pdf.PdfEFStream: int inputStreamLength> = $i0
<com.itextpdf.text.pdf.PdfEFStream: void toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)>: return
<com.itextpdf.text.pdf.PdfWriter$PdfBody: com.itextpdf.text.pdf.PdfWriter$PdfBody$PdfCrossReference addToObjStm(com.itextpdf.text.pdf.PdfObject,int)>: return $r3
<com.itextpdf.text.pdf.PdfWriter$PdfBody: com.itextpdf.text.pdf.PdfIndirectObject add(com.itextpdf.text.pdf.PdfObject,int,int,boolean)>: return r4
<com.itextpdf.text.pdf.PdfWriter$PdfBody: com.itextpdf.text.pdf.PdfIndirectObject add(com.itextpdf.text.pdf.PdfObject,int)>: return $r2
<com.itextpdf.text.pdf.PdfWriter$PdfBody: com.itextpdf.text.pdf.PdfIndirectObject add(com.itextpdf.text.pdf.PdfObject)>: return $r2
<com.itextpdf.text.pdf.PdfWriter: com.itextpdf.text.pdf.PdfIndirectObject addToBody(com.itextpdf.text.pdf.PdfObject)>: return $r2
<com.itextpdf.text.pdf.PdfFileSpecification: com.itextpdf.text.pdf.PdfFileSpecification fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)>: virtualinvoke r11.<com.itextpdf.text.pdf.PdfEFStream: void writeLength()>()
<com.itextpdf.text.pdf.PdfStream: void writeLength()>: $i0 = r0.<com.itextpdf.text.pdf.PdfStream: int inputStreamLength>
<com.itextpdf.text.pdf.PdfStream: void writeLength()>: specialinvoke $r6.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>($i0)
<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>: $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>: virtualinvoke r0.<com.itextpdf.text.pdf.PdfNumber: void setContent(java.lang.String)>($r1)
<com.itextpdf.text.pdf.PdfObject: void setContent(java.lang.String)>: $r2 = staticinvoke <com.itextpdf.text.pdf.PdfEncodings: byte[] convertToBytes(java.lang.String,java.lang.String)>($r1, null)
<com.itextpdf.text.pdf.PdfEncodings: byte[] convertToBytes(java.lang.String,java.lang.String)>: $r8 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>()
<com.itextpdf.text.pdf.PdfEncodings: byte[] convertToBytes(java.lang.String,java.lang.String)>: c4 = $r8[i3]
<com.itextpdf.text.pdf.PdfEncodings: byte[] convertToBytes(java.lang.String,java.lang.String)>: $i5 = (int) c4
<com.itextpdf.text.pdf.PdfEncodings: byte[] convertToBytes(java.lang.String,java.lang.String)>: $b0 = (byte) $i5
<com.itextpdf.text.pdf.PdfEncodings: byte[] convertToBytes(java.lang.String,java.lang.String)>: r2[i2] = $b0
<com.itextpdf.text.pdf.PdfEncodings: byte[] convertToBytes(java.lang.String,java.lang.String)>: return r2
<com.itextpdf.text.pdf.PdfObject: void setContent(java.lang.String)>: r0.<com.itextpdf.text.pdf.PdfObject: byte[] bytes> = $r2
<com.itextpdf.text.pdf.PdfObject: void setContent(java.lang.String)>: return
<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>: return
<com.itextpdf.text.pdf.PdfStream: void writeLength()>: virtualinvoke $r2.<com.itextpdf.text.pdf.PdfWriter: com.itextpdf.text.pdf.PdfIndirectObject addToBody(com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfIndirectReference,boolean)>($r6, $r3, 0)
<com.itextpdf.text.pdf.PdfWriter: com.itextpdf.text.pdf.PdfIndirectObject addToBody(com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfIndirectReference,boolean)>: $r3 = virtualinvoke r4.<com.itextpdf.text.pdf.PdfWriter$PdfBody: com.itextpdf.text.pdf.PdfIndirectObject add(com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfIndirectReference,boolean)>($r1, $r2, $z0)
<com.itextpdf.text.pdf.PdfWriter$PdfBody: com.itextpdf.text.pdf.PdfIndirectObject add(com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfIndirectReference,boolean)>: $r3 = virtualinvoke r0.<com.itextpdf.text.pdf.PdfWriter$PdfBody: com.itextpdf.text.pdf.PdfIndirectObject add(com.itextpdf.text.pdf.PdfObject,int,int,boolean)>($r1, $i0, $i1, $z0)
<com.itextpdf.text.pdf.PdfWriter$PdfBody: com.itextpdf.text.pdf.PdfIndirectObject add(com.itextpdf.text.pdf.PdfObject,int,int,boolean)>: specialinvoke r4.<com.itextpdf.text.pdf.PdfIndirectObject: void <init>(int,int,com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfWriter)>($i0, $i1, $r1, r2)
<com.itextpdf.text.pdf.PdfIndirectObject: void <init>(int,int,com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfWriter)>: r0.<com.itextpdf.text.pdf.PdfIndirectObject: com.itextpdf.text.pdf.PdfObject object> = $r1
<com.itextpdf.text.pdf.PdfIndirectObject: void <init>(int,int,com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfWriter)>: return
<com.itextpdf.text.pdf.PdfWriter$PdfBody: com.itextpdf.text.pdf.PdfIndirectObject add(com.itextpdf.text.pdf.PdfObject,int,int,boolean)>: virtualinvoke r0.<com.itextpdf.text.pdf.PdfWriter$PdfBody: void write(com.itextpdf.text.pdf.PdfIndirectObject,int,int)>(r4, $i0, $i1)
<com.itextpdf.text.pdf.PdfWriter$PdfBody: void write(com.itextpdf.text.pdf.PdfIndirectObject,int,int)>: virtualinvoke $r1.<com.itextpdf.text.pdf.PdfIndirectObject: void writeTo(java.io.OutputStream)>($r5)
<com.itextpdf.text.pdf.PdfIndirectObject: void writeTo(java.io.OutputStream)>: $r5 = r0.<com.itextpdf.text.pdf.PdfIndirectObject: com.itextpdf.text.pdf.PdfObject object>
<com.itextpdf.text.pdf.PdfIndirectObject: void writeTo(java.io.OutputStream)>: virtualinvoke $r5.<com.itextpdf.text.pdf.PdfObject: void toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)>($r2, $r1)
<com.itextpdf.text.pdf.PRIndirectReference: void toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)>: specialinvoke r0.<com.itextpdf.text.pdf.PdfIndirectReference: void toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)>(null, $r2)
<com.itextpdf.text.pdf.PdfIndirectReference: void toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)>: $r3 = virtualinvoke r0.<com.itextpdf.text.pdf.PdfIndirectReference: java.lang.String toString()>()
<com.itextpdf.text.pdf.PdfIndirectReference: void toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)>: $r4 = staticinvoke <com.itextpdf.text.pdf.PdfEncodings: byte[] convertToBytes(java.lang.String,java.lang.String)>($r3, null)
<com.itextpdf.text.pdf.PdfEncodings: byte[] convertToBytes(java.lang.String,java.lang.String)>: c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i2)
<com.itextpdf.text.pdf.PdfEncodings: byte[] convertToBytes(java.lang.String,java.lang.String)>: $b0 = (byte) c4
<com.itextpdf.text.pdf.PdfEncodings: byte[] convertToBytes(java.lang.String,java.lang.String)>: r2[i2] = $b0
<com.itextpdf.text.pdf.PdfEncodings: byte[] convertToBytes(java.lang.String,java.lang.String)>: return r2
<com.itextpdf.text.pdf.PdfIndirectReference: void toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)>: virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r4)
