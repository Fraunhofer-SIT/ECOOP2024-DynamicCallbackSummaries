    public boolean setField(java.lang.String, java.lang.String, java.lang.String, boolean) throws java.io.IOException, com.itextpdf.text.DocumentException
    {
        byte[] $r17;
        com.itextpdf.text.pdf.PdfNumber $r16;
        com.itextpdf.text.pdf.PdfWriter r4;
        java.util.Map r10;
        boolean $z0, $z1;
        com.itextpdf.text.pdf.PdfArray $r23;
        com.itextpdf.text.pdf.XfaForm r5;
        java.lang.Exception r21;
        com.itextpdf.text.pdf.PdfString $r24;
        java.lang.Object[] r32;
        com.itextpdf.text.pdf.PdfAppearance $r29;
        com.itextpdf.text.pdf.PdfIndirectReference $r30;
        com.itextpdf.text.pdf.PdfName r14, r15, r28;
        java.util.ArrayList r22;
        org.w3c.dom.Node $r7, r8;
        int i0, $i1;
        java.lang.String r1, r2, r3, $r6;
        com.itextpdf.text.pdf.XfaForm$Xml2SomDatasets $r9;
        com.itextpdf.text.pdf.PushbuttonField $r19;
        com.itextpdf.text.pdf.AcroFields r0;
        com.itextpdf.text.pdf.PdfFormField $r20;
        com.itextpdf.text.pdf.AcroFields$Item r12;
        com.itextpdf.text.DocumentException r31;
        com.itextpdf.text.pdf.PdfDictionary $r13, $r25, $r26, $r27;
        java.lang.Object $r11;
        com.itextpdf.text.Image $r18;

        r0 := @this: com.itextpdf.text.pdf.AcroFields;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        r4 = r0.<com.itextpdf.text.pdf.AcroFields: com.itextpdf.text.pdf.PdfWriter writer>;

        if r4 == null goto label35;

        r5 = r0.<com.itextpdf.text.pdf.AcroFields: com.itextpdf.text.pdf.XfaForm xfa>;

        $z1 = virtualinvoke r5.<com.itextpdf.text.pdf.XfaForm: boolean isXfaPresent()>();

        if $z1 == 0 goto label03;

        r5 = r0.<com.itextpdf.text.pdf.AcroFields: com.itextpdf.text.pdf.XfaForm xfa>;

        $r6 = virtualinvoke r5.<com.itextpdf.text.pdf.XfaForm: java.lang.String findFieldName(java.lang.String,com.itextpdf.text.pdf.AcroFields)>(r1, r0);

        r1 = $r6;

        if $r6 != null goto label01;

        return 0;

     label01:
        $r6 = staticinvoke <com.itextpdf.text.pdf.XfaForm$Xml2Som: java.lang.String getShortName(java.lang.String)>($r6);

        r5 = r0.<com.itextpdf.text.pdf.AcroFields: com.itextpdf.text.pdf.XfaForm xfa>;

        $r7 = virtualinvoke r5.<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Node findDatasetsNode(java.lang.String)>($r6);

        r8 = $r7;

        if $r7 != null goto label02;

        r5 = r0.<com.itextpdf.text.pdf.AcroFields: com.itextpdf.text.pdf.XfaForm xfa>;

        $r9 = virtualinvoke r5.<com.itextpdf.text.pdf.XfaForm: com.itextpdf.text.pdf.XfaForm$Xml2SomDatasets getDatasetsSom()>();

        r5 = r0.<com.itextpdf.text.pdf.AcroFields: com.itextpdf.text.pdf.XfaForm xfa>;

        $r7 = virtualinvoke r5.<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Node getDatasetsNode()>();

        r8 = virtualinvoke $r9.<com.itextpdf.text.pdf.XfaForm$Xml2SomDatasets: org.w3c.dom.Node insertNode(org.w3c.dom.Node,java.lang.String)>($r7, $r6);

     label02:
        r5 = r0.<com.itextpdf.text.pdf.AcroFields: com.itextpdf.text.pdf.XfaForm xfa>;

        virtualinvoke r5.<com.itextpdf.text.pdf.XfaForm: void setNodeText(org.w3c.dom.Node,java.lang.String)>(r8, r2);

     label03:
        r10 = r0.<com.itextpdf.text.pdf.AcroFields: java.util.Map fields>;

        $r11 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r12 = (com.itextpdf.text.pdf.AcroFields$Item) $r11;

        if r12 != null goto label04;

        return 0;

     label04:
        $r13 = virtualinvoke r12.<com.itextpdf.text.pdf.AcroFields$Item: com.itextpdf.text.pdf.PdfDictionary getMerged(int)>(0);

        r14 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName FT>;

        r14 = virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: com.itextpdf.text.pdf.PdfName getAsName(com.itextpdf.text.pdf.PdfName)>(r14);

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName TX>;

        $z1 = virtualinvoke r15.<com.itextpdf.text.pdf.PdfName: boolean equals(java.lang.Object)>(r14);

        if $z1 == 0 goto label06;

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName MAXLEN>;

        $r16 = virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: com.itextpdf.text.pdf.PdfNumber getAsNumber(com.itextpdf.text.pdf.PdfName)>(r15);

        i0 = 0;

        if $r16 == null goto label05;

        i0 = virtualinvoke $r16.<com.itextpdf.text.pdf.PdfNumber: int intValue()>();

     label05:
        if i0 <= 0 goto label06;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i1);

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label06:
        if r3 != null goto label07;

        r3 = r2;

     label07:
        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName TX>;

        $z1 = virtualinvoke r15.<com.itextpdf.text.pdf.PdfName: boolean equals(java.lang.Object)>(r14);

        if $z1 != 0 goto label28;

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName CH>;

        $z1 = virtualinvoke r15.<com.itextpdf.text.pdf.PdfName: boolean equals(java.lang.Object)>(r14);

        if $z1 != 0 goto label28;

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName BTN>;

        $z1 = virtualinvoke r15.<com.itextpdf.text.pdf.PdfName: boolean equals(java.lang.Object)>(r14);

        if $z1 == 0 goto label27;

        $r13 = virtualinvoke r12.<com.itextpdf.text.pdf.AcroFields$Item: com.itextpdf.text.pdf.PdfDictionary getMerged(int)>(0);

        r14 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName FF>;

        $r16 = virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: com.itextpdf.text.pdf.PdfNumber getAsNumber(com.itextpdf.text.pdf.PdfName)>(r14);

        if $r16 == null goto label08;

        i0 = virtualinvoke $r16.<com.itextpdf.text.pdf.PdfNumber: int intValue()>();

        goto label09;

     label08:
        i0 = 0;

     label09:
        i0 = 65536 & i0;

        if i0 == 0 goto label13;

     label10:
        $r17 = staticinvoke <com.itextpdf.text.pdf.codec.Base64: byte[] decode(java.lang.String)>(r2);

        $r18 = staticinvoke <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(byte[])>($r17);

     label11:
        $r19 = virtualinvoke r0.<com.itextpdf.text.pdf.AcroFields: com.itextpdf.text.pdf.PushbuttonField getNewPushbuttonFromField(java.lang.String)>(r1);

        virtualinvoke $r19.<com.itextpdf.text.pdf.PushbuttonField: void setImage(com.itextpdf.text.Image)>($r18);

        $r20 = virtualinvoke $r19.<com.itextpdf.text.pdf.PushbuttonField: com.itextpdf.text.pdf.PdfFormField getField()>();

        virtualinvoke r0.<com.itextpdf.text.pdf.AcroFields: boolean replacePushbuttonField(java.lang.String,com.itextpdf.text.pdf.PdfFormField)>(r1, $r20);

        return 1;

     label12:
        r21 := @caughtexception;

        return 0;

     label13:
        r14 = new com.itextpdf.text.pdf.PdfName;

        specialinvoke r14.<com.itextpdf.text.pdf.PdfName: void <init>(java.lang.String)>(r2);

        r22 = new java.util.ArrayList;

        specialinvoke r22.<java.util.ArrayList: void <init>()>();

        $r13 = virtualinvoke r12.<com.itextpdf.text.pdf.AcroFields$Item: com.itextpdf.text.pdf.PdfDictionary getValue(int)>(0);

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName OPT>;

        $r23 = virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: com.itextpdf.text.pdf.PdfArray getAsArray(com.itextpdf.text.pdf.PdfName)>(r15);

        if $r23 == null goto label17;

        i0 = 0;

     label14:
        $i1 = virtualinvoke $r23.<com.itextpdf.text.pdf.PdfArray: int size()>();

        if i0 >= $i1 goto label17;

        $r24 = virtualinvoke $r23.<com.itextpdf.text.pdf.PdfArray: com.itextpdf.text.pdf.PdfString getAsString(int)>(i0);

        if $r24 == null goto label15;

        $r6 = virtualinvoke $r24.<com.itextpdf.text.pdf.PdfString: java.lang.String toUnicodeString()>();

        virtualinvoke r22.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label16;

     label15:
        virtualinvoke r22.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

     label16:
        i0 = i0 + 1;

        goto label14;

     label17:
        i0 = virtualinvoke r22.<java.util.ArrayList: int indexOf(java.lang.Object)>(r2);

        if i0 < 0 goto label18;

        r14 = new com.itextpdf.text.pdf.PdfName;

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke r14.<com.itextpdf.text.pdf.PdfName: void <init>(java.lang.String)>(r2);

     label18:
        i0 = 0;

     label19:
        $i1 = virtualinvoke r12.<com.itextpdf.text.pdf.AcroFields$Item: int size()>();

        if i0 >= $i1 goto label26;

        $r13 = virtualinvoke r12.<com.itextpdf.text.pdf.AcroFields$Item: com.itextpdf.text.pdf.PdfDictionary getMerged(int)>(i0);

        $r25 = virtualinvoke r12.<com.itextpdf.text.pdf.AcroFields$Item: com.itextpdf.text.pdf.PdfDictionary getWidget(int)>(i0);

        $r26 = virtualinvoke r12.<com.itextpdf.text.pdf.AcroFields$Item: com.itextpdf.text.pdf.PdfDictionary getValue(int)>(i0);

        $r27 = virtualinvoke r12.<com.itextpdf.text.pdf.AcroFields$Item: com.itextpdf.text.pdf.PdfDictionary getValue(int)>(i0);

        specialinvoke r0.<com.itextpdf.text.pdf.AcroFields: void markUsed(com.itextpdf.text.pdf.PdfObject)>($r27);

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName V>;

        virtualinvoke $r26.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>(r15, r14);

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName V>;

        virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>(r15, r14);

        specialinvoke r0.<com.itextpdf.text.pdf.AcroFields: void markUsed(com.itextpdf.text.pdf.PdfObject)>($r25);

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AP>;

        $r26 = virtualinvoke $r25.<com.itextpdf.text.pdf.PdfDictionary: com.itextpdf.text.pdf.PdfDictionary getAsDict(com.itextpdf.text.pdf.PdfName)>(r15);

        if $r26 != null goto label20;

        return 0;

     label20:
        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName N>;

        $r27 = virtualinvoke $r26.<com.itextpdf.text.pdf.PdfDictionary: com.itextpdf.text.pdf.PdfDictionary getAsDict(com.itextpdf.text.pdf.PdfName)>(r15);

        $z1 = virtualinvoke r0.<com.itextpdf.text.pdf.AcroFields: boolean isInAP(com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.PdfName)>($r27, r14);

        if $z1 != 0 goto label21;

        if $r27 == null goto label21;

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AS>;

        r28 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName Off>;

        virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>(r15, r28);

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AS>;

        r28 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName Off>;

        virtualinvoke $r25.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>(r15, r28);

        goto label22;

     label21:
        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AS>;

        virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>(r15, r14);

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AS>;

        virtualinvoke $r25.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>(r15, r14);

     label22:
        $z1 = r0.<com.itextpdf.text.pdf.AcroFields: boolean generateAppearances>;

        if $z1 == 0 goto label25;

        $r29 = virtualinvoke r0.<com.itextpdf.text.pdf.AcroFields: com.itextpdf.text.pdf.PdfAppearance getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String,java.lang.String)>($r13, r3, r1);

        if $r27 == null goto label23;

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AS>;

        r15 = virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: com.itextpdf.text.pdf.PdfName getAsName(com.itextpdf.text.pdf.PdfName)>(r15);

        $r30 = virtualinvoke $r29.<com.itextpdf.text.pdf.PdfAppearance: com.itextpdf.text.pdf.PdfIndirectReference getIndirectReference()>();

        virtualinvoke $r27.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>(r15, $r30);

        goto label24;

     label23:
        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName N>;

        $r30 = virtualinvoke $r29.<com.itextpdf.text.pdf.PdfAppearance: com.itextpdf.text.pdf.PdfIndirectReference getIndirectReference()>();

        virtualinvoke $r26.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>(r15, $r30);

     label24:
        r4 = r0.<com.itextpdf.text.pdf.AcroFields: com.itextpdf.text.pdf.PdfWriter writer>;

        virtualinvoke r4.<com.itextpdf.text.pdf.PdfWriter: void releaseTemplate(com.itextpdf.text.pdf.PdfTemplate)>($r29);

     label25:
        i0 = i0 + 1;

        goto label19;

     label26:
        return 1;

     label27:
        return 0;

     label28:
        $r24 = new com.itextpdf.text.pdf.PdfString;

        specialinvoke $r24.<com.itextpdf.text.pdf.PdfString: void <init>(java.lang.String,java.lang.String)>(r2, "UnicodeBig");

        i0 = 0;

     label29:
        $i1 = virtualinvoke r12.<com.itextpdf.text.pdf.AcroFields$Item: int size()>();

        if i0 >= $i1 goto label34;

        $r13 = virtualinvoke r12.<com.itextpdf.text.pdf.AcroFields$Item: com.itextpdf.text.pdf.PdfDictionary getValue(int)>(i0);

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName V>;

        virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>(r15, $r24);

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName I>;

        virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: void remove(com.itextpdf.text.pdf.PdfName)>(r15);

        specialinvoke r0.<com.itextpdf.text.pdf.AcroFields: void markUsed(com.itextpdf.text.pdf.PdfObject)>($r13);

        $r13 = virtualinvoke r12.<com.itextpdf.text.pdf.AcroFields$Item: com.itextpdf.text.pdf.PdfDictionary getMerged(int)>(i0);

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName I>;

        virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: void remove(com.itextpdf.text.pdf.PdfName)>(r15);

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName V>;

        virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>(r15, $r24);

        $r25 = virtualinvoke r12.<com.itextpdf.text.pdf.AcroFields$Item: com.itextpdf.text.pdf.PdfDictionary getWidget(int)>(i0);

        $z0 = r0.<com.itextpdf.text.pdf.AcroFields: boolean generateAppearances>;

        if $z0 == 0 goto label32;

        $r29 = virtualinvoke r0.<com.itextpdf.text.pdf.AcroFields: com.itextpdf.text.pdf.PdfAppearance getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String,java.lang.String)>($r13, r3, r1);

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName CH>;

        $z0 = virtualinvoke r15.<com.itextpdf.text.pdf.PdfName: boolean equals(java.lang.Object)>(r14);

        if $z0 == 0 goto label30;

        $r16 = new com.itextpdf.text.pdf.PdfNumber;

        $i1 = r0.<com.itextpdf.text.pdf.AcroFields: int topFirst>;

        specialinvoke $r16.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>($i1);

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName TI>;

        virtualinvoke $r25.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>(r15, $r16);

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName TI>;

        virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>(r15, $r16);

     label30:
        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AP>;

        $r27 = virtualinvoke $r25.<com.itextpdf.text.pdf.PdfDictionary: com.itextpdf.text.pdf.PdfDictionary getAsDict(com.itextpdf.text.pdf.PdfName)>(r15);

        $r26 = $r27;

        if $r27 != null goto label31;

        $r27 = new com.itextpdf.text.pdf.PdfDictionary;

        specialinvoke $r27.<com.itextpdf.text.pdf.PdfDictionary: void <init>()>();

        $r26 = $r27;

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AP>;

        virtualinvoke $r25.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>(r15, $r27);

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AP>;

        virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>(r15, $r27);

     label31:
        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName N>;

        $r30 = virtualinvoke $r29.<com.itextpdf.text.pdf.PdfAppearance: com.itextpdf.text.pdf.PdfIndirectReference getIndirectReference()>();

        virtualinvoke $r26.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>(r15, $r30);

        r4 = r0.<com.itextpdf.text.pdf.AcroFields: com.itextpdf.text.pdf.PdfWriter writer>;

        virtualinvoke r4.<com.itextpdf.text.pdf.PdfWriter: void releaseTemplate(com.itextpdf.text.pdf.PdfTemplate)>($r29);

        goto label33;

     label32:
        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AP>;

        virtualinvoke $r25.<com.itextpdf.text.pdf.PdfDictionary: void remove(com.itextpdf.text.pdf.PdfName)>(r15);

        r15 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AP>;

        virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: void remove(com.itextpdf.text.pdf.PdfName)>(r15);

     label33:
        specialinvoke r0.<com.itextpdf.text.pdf.AcroFields: void markUsed(com.itextpdf.text.pdf.PdfObject)>($r25);

        i0 = i0 + 1;

        goto label29;

     label34:
        return 1;

     label35:
        r31 = new com.itextpdf.text.DocumentException;

        r32 = newarray (java.lang.Object)[0];

        r1 = staticinvoke <com.itextpdf.text.error_messages.MessageLocalization: java.lang.String getComposedMessage(java.lang.String,java.lang.Object[])>("this.acrofields.instance.is.read.only", r32);

        specialinvoke r31.<com.itextpdf.text.DocumentException: void <init>(java.lang.String)>(r1);

        throw r31;

        catch java.lang.Exception from label10 to label11 with label12;
    }
