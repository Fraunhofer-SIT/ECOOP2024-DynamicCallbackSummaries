[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loading sources and sinks from SourcesSinks/UnconstrainedSourcesSinks.xml...
[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loaded 273 sources and 91 sinks from the XML file
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.029398793 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230,400 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 21 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 21 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.startapp.android.publish.i.b$a, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.startapp.android.publish.i.b$a, because it is an interface and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 21 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 21 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.startapp.android.publish.i.b$a, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.startapp.android.publish.i.b$a, because it is an interface and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 5 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 21 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.startapp.android.publish.i.b$a, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.startapp.android.publish.i.b$a, because it is an interface and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 0 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Callback analysis terminated normally
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 273 sources, 91 sinks, and 140 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 67 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on storagepath2-data/androidApps/2016-AndroZoo-PlayStore/com.tabkh.apk with 273 sources and 91 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230,400 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 0.629545583 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 13452 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 41 sources and 5 sinks.
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper hits: 5660692
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper misses: 65766586
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - IFDS problem with 90990555 forward and 91245929 backward edges solved in 900 seconds, processing 5 results...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Current memory consumption: 130212 MB
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after cleanup: 77445 MB
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 1 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after path building: 87247 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Path reconstruction took 325 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r13.<java.io.OutputStream: void write(byte[])>($r12) in method <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("GT_REGISTRATION_ID", null) in method <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("GT_REGISTRATION_ID", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("identifier", $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject syncValues>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void <init>(com.onesignal.OneSignalStateSynchronizer,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: com.onesignal.OneSignalStateSynchronizer$UserState deepClone(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: com.onesignal.OneSignalStateSynchronizer$UserState access$1500(com.onesignal.OneSignalStateSynchronizer$UserState,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState getUserStateForModification()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState> = $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState getUserStateForModification()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalStateSynchronizer: void postNewSyncUserState()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void postNewSyncUserState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread: void runNewJob()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread: void runNewJob()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r1, 5000L)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>(0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<com.onesignal.OneSignalStateSynchronizer$UserState: void persistState()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void persistState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: com.onesignal.OneSignalStateSynchronizer$UserState
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = specialinvoke $r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r1, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = $r1.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject syncValues>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = staticinvoke <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject access$200(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>($r3, $r4, null, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject access$200(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject generateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>($r0, $r1, $r2, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject generateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>($r0, $r1, $r2, r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r1.<org.json.JSONObject: java.lang.Object get(java.lang.String)>(r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<org.json.JSONObject: void <init>(java.lang.String)>($r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(r8, $r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject generateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject access$200(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalRestClient: void putSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>($r5, $r2, $r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void putSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>($r0, "PUT", $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r13.<java.io.OutputStream: void write(byte[])>($r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = interfaceinvoke $r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("ONESIGNAL_SUBSCRIPTION", 1) in method <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = interfaceinvoke $r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("ONESIGNAL_SUBSCRIPTION", 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("subscribableStatus", $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject syncValues>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void <init>(com.onesignal.OneSignalStateSynchronizer,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: com.onesignal.OneSignalStateSynchronizer$UserState deepClone(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: com.onesignal.OneSignalStateSynchronizer$UserState access$1500(com.onesignal.OneSignalStateSynchronizer$UserState,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState getUserStateForModification()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState> = $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState getUserStateForModification()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalStateSynchronizer: void postNewSyncUserState()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void postNewSyncUserState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread: void runNewJob()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread: void runNewJob()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r1, 5000L)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>(0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<com.onesignal.OneSignalStateSynchronizer$UserState: void persistState()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void persistState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: com.onesignal.OneSignalStateSynchronizer$UserState
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = specialinvoke $r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r1, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = $r1.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject syncValues>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = staticinvoke <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject access$200(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>($r3, $r4, null, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject access$200(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject generateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>($r0, $r1, $r2, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject generateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>($r0, $r1, $r2, r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r1.<org.json.JSONObject: java.lang.Object get(java.lang.String)>(r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<org.json.JSONObject: void <init>(java.lang.String)>($r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(r8, $r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject generateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject access$200(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalRestClient: void putSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>($r5, $r2, $r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void putSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>($r0, "PUT", $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r13.<java.io.OutputStream: void write(byte[])>($r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r4, null) in method <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r4, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<org.json.JSONObject: void <init>(java.lang.String)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject syncValues> = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void <init>(com.onesignal.OneSignalStateSynchronizer,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: com.onesignal.OneSignalStateSynchronizer$UserState deepClone(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: com.onesignal.OneSignalStateSynchronizer$UserState access$1500(com.onesignal.OneSignalStateSynchronizer$UserState,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState getUserStateForModification()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState> = $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState getUserStateForModification()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalStateSynchronizer: void postNewSyncUserState()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void postNewSyncUserState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread: void runNewJob()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread: void runNewJob()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r1, 5000L)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>(0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<com.onesignal.OneSignalStateSynchronizer$UserState: void persistState()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void persistState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: com.onesignal.OneSignalStateSynchronizer$UserState
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = specialinvoke $r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r1, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = $r1.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject syncValues>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = staticinvoke <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject access$200(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>($r3, $r4, null, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject access$200(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject generateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>($r0, $r1, $r2, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject generateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>($r0, $r1, $r2, r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r1.<org.json.JSONObject: java.lang.Object get(java.lang.String)>(r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<org.json.JSONObject: void <init>(java.lang.String)>($r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(r8, $r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject generateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject access$200(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalRestClient: void putSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>($r5, $r2, $r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void putSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>($r0, "PUT", $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r13.<java.io.OutputStream: void write(byte[])>($r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = interfaceinvoke $r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("ONESIGNAL_SYNCED_SUBSCRIPTION", 1) in method <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = interfaceinvoke $r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("ONESIGNAL_SYNCED_SUBSCRIPTION", 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("subscribableStatus", $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject dependValues>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void <init>(com.onesignal.OneSignalStateSynchronizer,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: com.onesignal.OneSignalStateSynchronizer$UserState deepClone(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: com.onesignal.OneSignalStateSynchronizer$UserState access$1500(com.onesignal.OneSignalStateSynchronizer$UserState,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState getUserStateForModification()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState> = $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState getUserStateForModification()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalStateSynchronizer: void postNewSyncUserState()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void postNewSyncUserState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread: void runNewJob()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread: void runNewJob()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r1, 5000L)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>(0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = specialinvoke $r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r1, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.onesignal.OneSignalStateSynchronizer$UserState: void addDependFields()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void addDependFields()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = specialinvoke r0.<com.onesignal.OneSignalStateSynchronizer$UserState: int getNotificationTypes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: int getNotificationTypes()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject dependValues>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: int getNotificationTypes()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<org.json.JSONObject: int optInt(java.lang.String,int)>("subscribableStatus", 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: int getNotificationTypes()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void addDependFields()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("notification_types", $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void addDependFields()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject syncValues>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void addDependFields()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.onesignal.OneSignalStateSynchronizer$UserState
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.onesignal.OneSignalStateSynchronizer$UserState
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: com.onesignal.OneSignalStateSynchronizer$UserState
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = specialinvoke $r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r1, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.onesignal.OneSignalStateSynchronizer$UserState: void addDependFields()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void addDependFields()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.onesignal.OneSignalStateSynchronizer$UserState
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: com.onesignal.OneSignalStateSynchronizer$UserState
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<com.onesignal.OneSignalStateSynchronizer$UserState: void persistState()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void persistState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: com.onesignal.OneSignalStateSynchronizer$UserState
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = specialinvoke $r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r1, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = $r1.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject syncValues>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = staticinvoke <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject access$200(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>($r3, $r4, null, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject access$200(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject generateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>($r0, $r1, $r2, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject generateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>($r0, $r1, $r2, r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r1.<org.json.JSONObject: java.lang.Object get(java.lang.String)>(r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<org.json.JSONObject: void <init>(java.lang.String)>($r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(r8, $r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject generateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject access$200(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalRestClient: void putSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>($r5, $r2, $r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void putSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>($r0, "PUT", $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r13.<java.io.OutputStream: void write(byte[])>($r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $l0 = interfaceinvoke $r1.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("GT_UNSENT_ACTIVE_TIME", 0L) in method <com.onesignal.OneSignal: long GetUnsentActiveTime()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignal: long GetUnsentActiveTime()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l0 = interfaceinvoke $r1.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("GT_UNSENT_ACTIVE_TIME", 0L)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignal: long GetUnsentActiveTime()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> <com.onesignal.OneSignal: long unSentActiveTime> = $l0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignal: long GetUnsentActiveTime()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l0 = <com.onesignal.OneSignal: long unSentActiveTime>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignal: long GetUnsentActiveTime()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $l0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignal: void onAppLostFocus(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> l0 = $l2 + l0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignal: void onAppLostFocus(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignal: void sendOnFocus(long,boolean)>(l0, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignal: void sendOnFocus(long,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("active_time", $l0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignal: void sendOnFocus(long,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>($r3, r0, r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>($r0, "POST", $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r13.<java.io.OutputStream: void write(byte[])>($r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r4, null) in method <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r4, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<org.json.JSONObject: void <init>(java.lang.String)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject dependValues> = $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void <init>(com.onesignal.OneSignalStateSynchronizer,java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: com.onesignal.OneSignalStateSynchronizer$UserState deepClone(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: com.onesignal.OneSignalStateSynchronizer$UserState access$1500(com.onesignal.OneSignalStateSynchronizer$UserState,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState getUserStateForModification()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState> = $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState getUserStateForModification()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalStateSynchronizer: void postNewSyncUserState()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void postNewSyncUserState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread: void runNewJob()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread: void runNewJob()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r1, 5000L)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>(0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = specialinvoke $r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r1, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.onesignal.OneSignalStateSynchronizer$UserState: void addDependFields()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void addDependFields()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = specialinvoke r0.<com.onesignal.OneSignalStateSynchronizer$UserState: int getNotificationTypes()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: int getNotificationTypes()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject dependValues>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: int getNotificationTypes()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<org.json.JSONObject: int optInt(java.lang.String,int)>("subscribableStatus", 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: int getNotificationTypes()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void addDependFields()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("notification_types", $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void addDependFields()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject syncValues>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void addDependFields()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.onesignal.OneSignalStateSynchronizer$UserState
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.onesignal.OneSignalStateSynchronizer$UserState
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: com.onesignal.OneSignalStateSynchronizer$UserState
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = specialinvoke $r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r1, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<com.onesignal.OneSignalStateSynchronizer$UserState: void addDependFields()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void addDependFields()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.onesignal.OneSignalStateSynchronizer$UserState
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: com.onesignal.OneSignalStateSynchronizer$UserState
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<com.onesignal.OneSignalStateSynchronizer$UserState: void persistState()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void persistState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: void access$000(com.onesignal.OneSignalStateSynchronizer$UserState)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: com.onesignal.OneSignalStateSynchronizer$UserState
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = <com.onesignal.OneSignalStateSynchronizer: com.onesignal.OneSignalStateSynchronizer$UserState toSyncUserState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = staticinvoke <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r0, $r1, $z1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = specialinvoke $r0.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>($r1, $z0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = $r1.<com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject syncValues>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = staticinvoke <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject access$200(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>($r3, $r4, null, $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject access$200(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject generateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>($r0, $r1, $r2, $r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject generateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = staticinvoke <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>($r0, $r1, $r2, r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r1.<org.json.JSONObject: java.lang.Object get(java.lang.String)>(r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<org.json.JSONObject: void <init>(java.lang.String)>($r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(r8, $r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject synchronizedGenerateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject generateJsonDiff(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: org.json.JSONObject access$200(org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.util.Set)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject generateJsonDiff(com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer$UserState: org.json.JSONObject access$700(com.onesignal.OneSignalStateSynchronizer$UserState,com.onesignal.OneSignalStateSynchronizer$UserState,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalRestClient: void putSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>($r5, $r2, $r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void putSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>($r0, "PUT", $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r13.<java.io.OutputStream: void write(byte[])>($r12)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r9.<java.io.FileOutputStream: void write(byte[],int,int)>($r10, 0, $i0) in method <com.startapp.android.publish.i.r: boolean a(java.lang.String,java.lang.String,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r8.<java.io.InputStream: int read(byte[])>($r10) in method <com.startapp.android.publish.i.r: boolean a(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.i.r: boolean a(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r8.<java.io.InputStream: int read(byte[])>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.i.r: boolean a(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<java.io.FileOutputStream: void write(byte[],int,int)>($r10, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r3, 0, $i3) in method <com.nostra13.universalimageloader.utils.IoUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, 32768) in method <com.nostra13.universalimageloader.core.assist.ContentLengthInputStream: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.core.assist.ContentLengthInputStream: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, 32768)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.core.assist.ContentLengthInputStream: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.utils.IoUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r3, 0, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i3 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>(r3, 0, 32768) in method <com.nostra13.universalimageloader.utils.IoUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.utils.IoUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i3 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>(r3, 0, 32768)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.utils.IoUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r3, 0, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r32.<java.io.FileOutputStream: void write(byte[],int,int)>($r2, 0, $i0) in method <com.startapp.android.publish.i.r: void a(android.content.Context,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r30.<java.util.zip.ZipInputStream: int read(byte[],int,int)>($r2, 0, 1024) in method <com.startapp.android.publish.i.r: void a(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.i.r: void a(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r30.<java.util.zip.ZipInputStream: int read(byte[],int,int)>($r2, 0, 1024)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.i.r: void a(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r32.<java.io.FileOutputStream: void write(byte[],int,int)>($r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Data flow solver took 1253 seconds. Maximum memory consumption: 130212 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication - Found 4 leaks
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'SummaryStatistics'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Telemetry'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'Telemetry_sha256Hash_idx' for table 'Telemetry
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Callbacks'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallbackSummaries'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'CallbackSummaries_sha256Hash_idx' for table 'CallbackSummaries
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'AppSizes'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'AppSizes_sha256Hash_idx' for table 'AppSizes
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallgraphSizes'
