    public java.lang.Object coerceFromObject(java.lang.Object)
    {
        gnu.bytecode.Type $r7;
        gnu.text.FilePath $r3;
        gnu.math.RatNum $r10;
        gnu.math.DFloNum $r12;
        gnu.text.Path $r2;
        gnu.kawa.lispexpr.LangObjType r0;
        gnu.bytecode.ClassType $r6;
        gnu.math.Numeric $r8;
        gnu.math.RealNum $r9;
        int $i0;
        gnu.text.URIPath $r4;
        java.lang.Object $r1;
        java.lang.Class $r5;
        gnu.math.IntNum $r11;

        r0 := @this: gnu.kawa.lispexpr.LangObjType;

        $r1 := @parameter0: java.lang.Object;

        $i0 = r0.<gnu.kawa.lispexpr.LangObjType: int typeCode>;

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label07;
            case 6: goto label06;
            case 7: goto label11;
            case 8: goto label10;
            case 9: goto label09;
            case 10: goto label08;
            case 11: goto label01;
            case 12: goto label01;
            case 13: goto label01;
            case 14: goto label01;
            case 15: goto label12;
            default: goto label01;
        };

     label01:
        $r1 = specialinvoke r0.<gnu.bytecode.ObjectType: java.lang.Object coerceFromObject(java.lang.Object)>($r1);

        return $r1;

     label02:
        $r2 = staticinvoke <gnu.text.Path: gnu.text.Path valueOf(java.lang.Object)>($r1);

        return $r2;

     label03:
        $r3 = staticinvoke <gnu.text.FilePath: gnu.text.FilePath makeFilePath(java.lang.Object)>($r1);

        return $r3;

     label04:
        $r4 = staticinvoke <gnu.text.URIPath: gnu.text.URIPath makeURI(java.lang.Object)>($r1);

        return $r4;

     label05:
        $r5 = staticinvoke <gnu.kawa.lispexpr.LangObjType: java.lang.Class coerceToClass(java.lang.Object)>($r1);

        return $r5;

     label06:
        $r6 = staticinvoke <gnu.kawa.lispexpr.LangObjType: gnu.bytecode.ClassType coerceToClassType(java.lang.Object)>($r1);

        return $r6;

     label07:
        $r7 = staticinvoke <gnu.kawa.lispexpr.LangObjType: gnu.bytecode.Type coerceToType(java.lang.Object)>($r1);

        return $r7;

     label08:
        $r8 = staticinvoke <gnu.kawa.lispexpr.LangObjType: gnu.math.Numeric coerceNumeric(java.lang.Object)>($r1);

        return $r8;

     label09:
        $r9 = staticinvoke <gnu.kawa.lispexpr.LangObjType: gnu.math.RealNum coerceRealNum(java.lang.Object)>($r1);

        return $r9;

     label10:
        $r10 = staticinvoke <gnu.kawa.lispexpr.LangObjType: gnu.math.RatNum coerceRatNum(java.lang.Object)>($r1);

        return $r10;

     label11:
        $r11 = staticinvoke <gnu.kawa.lispexpr.LangObjType: gnu.math.IntNum coerceIntNum(java.lang.Object)>($r1);

        return $r11;

     label12:
        $r12 = staticinvoke <gnu.kawa.lispexpr.LangObjType: gnu.math.DFloNum coerceDFloNum(java.lang.Object)>($r1);

        return $r12;
    }
