    public static boolean b(java.io.File, java.lang.String)
    {
        java.lang.Throwable $r4, $r5, $r6, $r7;
        java.io.PrintWriter $r12;
        java.lang.RuntimeException $r2;
        java.io.File $r0;
        java.lang.Exception $r3, $r8, $r9;
        java.lang.String $r1, $r10, $r11;
        boolean $z0;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.lang.String;

     label01:
        $r10 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

     label02:
        goto label04;

     label03:
        $r10 = null;

     label04:
        $r11 = "mounted";

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label16;

        if $r0 == null goto label16;

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label16;

        if $r1 == null goto label16;

        $r12 = new java.io.PrintWriter;

     label05:
        specialinvoke $r12.<java.io.PrintWriter: void <init>(java.io.File)>($r0);

     label06:
        virtualinvoke $r12.<java.io.PrintWriter: void write(java.lang.String)>($r1);

        virtualinvoke $r12.<java.io.PrintWriter: void close()>();

     label07:
        return 1;

     label08:
        $r2 := @caughtexception;

        goto label03;

     label09:
        $r3 := @caughtexception;

        goto label03;

     label10:
        $r4 := @caughtexception;

        return 0;

     label11:
        $r5 := @caughtexception;

        return 0;

     label12:
        $r6 := @caughtexception;

        return 0;

     label13:
        $r7 := @caughtexception;

        return 0;

     label14:
        $r8 := @caughtexception;

        return 0;

     label15:
        $r9 := @caughtexception;

     label16:
        return 0;

        catch java.lang.RuntimeException from label01 to label02 with label08;
        catch java.lang.Exception from label01 to label02 with label09;
        catch java.io.FileNotFoundException from label05 to label06 with label10;
        catch java.nio.BufferOverflowException from label05 to label06 with label11;
        catch java.nio.BufferUnderflowException from label05 to label06 with label12;
        catch java.lang.SecurityException from label05 to label06 with label13;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label06 to label07 with label15;
    }
