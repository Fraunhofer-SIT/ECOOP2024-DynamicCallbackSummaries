[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loading sources and sinks from SourcesSinks/UnconstrainedSourcesSinks.xml...
[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loaded 273 sources and 91 sinks from the XML file
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.105677087 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230,400 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 25 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.support.multidex.MultiDexApplication
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 25 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 27 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 25 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 9 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 25 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 1 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Callback analysis terminated normally
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 273 sources, 91 sinks, and 237 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 47 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on storagepath2-data/androidApps/2022-AndroZoo-PlayStore/air.com.iswfx.connect5CF132FBCFA24E5FF89053EB6656FD02A18F7B75.apk with 273 sources and 91 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230,400 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 1.154172031 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 7167 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 27 sources and 6 sinks.
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper hits: 32720
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper misses: 4626016
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - IFDS problem with 8933652 forward and 2858241 backward edges solved in 67 seconds, processing 6 results...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Current memory consumption: 2772 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after cleanup: 937 MB
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 1 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 2 with 1 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 1 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after path building: 938 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Path reconstruction took 0 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r10.<java.io.FileOutputStream: void write(byte[],int,int)>($r7, 0, $i0) in method <com.dukascopy.dukascopyextension.media.file.FileUtils: java.lang.String getGoogleDriveFilePath(android.net.Uri,android.content.Context)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r6.<java.io.InputStream: int read(byte[])>($r7) in method <com.dukascopy.dukascopyextension.media.file.FileUtils: java.lang.String getGoogleDriveFilePath(android.net.Uri,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.dukascopy.dukascopyextension.media.file.FileUtils: java.lang.String getGoogleDriveFilePath(android.net.Uri,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r6.<java.io.InputStream: int read(byte[])>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.dukascopy.dukascopyextension.media.file.FileUtils: java.lang.String getGoogleDriveFilePath(android.net.Uri,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.FileOutputStream: void write(byte[],int,int)>($r7, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r14.<java.io.BufferedOutputStream: void write(byte[])>($r8) in method <com.dukascopy.dukascopyextension.media.file.FileUtils: void saveFileFromUri(android.content.Context,android.net.Uri,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r8) in method <com.dukascopy.dukascopyextension.media.file.FileUtils: void saveFileFromUri(android.content.Context,android.net.Uri,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.dukascopy.dukascopyextension.media.file.FileUtils: void saveFileFromUri(android.content.Context,android.net.Uri,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.dukascopy.dukascopyextension.media.file.FileUtils: void saveFileFromUri(android.content.Context,android.net.Uri,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<java.io.BufferedOutputStream: void write(byte[])>($r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r8) in method <com.dukascopy.dukascopyextension.media.file.FileUtils: void saveFileFromUri(android.content.Context,android.net.Uri,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.dukascopy.dukascopyextension.media.file.FileUtils: void saveFileFromUri(android.content.Context,android.net.Uri,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.dukascopy.dukascopyextension.media.file.FileUtils: void saveFileFromUri(android.content.Context,android.net.Uri,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<java.io.BufferedOutputStream: void write(byte[])>($r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r11.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1) in method <air.com.iswfx.connect.NotificationReceiver: void saveData(air.com.iswfx.connect.Messages,android.content.Context)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r6 = virtualinvoke $r10.<java.io.ObjectInputStream: java.lang.Object readObject()>() in method <air.com.iswfx.connect.NotificationReceiver: air.com.iswfx.connect.Messages readMessagesFromDisk(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.NotificationReceiver: air.com.iswfx.connect.Messages readMessagesFromDisk(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r10.<java.io.ObjectInputStream: java.lang.Object readObject()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.NotificationReceiver: air.com.iswfx.connect.Messages readMessagesFromDisk(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = (air.com.iswfx.connect.Messages) $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.NotificationReceiver: air.com.iswfx.connect.Messages readMessagesFromDisk(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.NotificationReceiver: void markAsReaded(air.com.iswfx.connect.MessageIDs,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<air.com.iswfx.connect.NotificationReceiver: void saveData(air.com.iswfx.connect.Messages,android.content.Context)>($r3, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.NotificationReceiver: void saveData(air.com.iswfx.connect.Messages,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r11.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r14.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r0) in method <air.com.iswfx.connect.FirebaseService: android.app.PendingIntent createIntent(android.content.Context,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,air.com.iswfx.connect.MessageIDs,boolean,boolean)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r5 = virtualinvoke $r9.<java.io.ObjectInputStream: java.lang.Object readObject()>() in method <air.com.iswfx.connect.FirebaseService: air.com.iswfx.connect.Messages readMessagesFromDisk()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: air.com.iswfx.connect.Messages readMessagesFromDisk()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r9.<java.io.ObjectInputStream: java.lang.Object readObject()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: air.com.iswfx.connect.Messages readMessagesFromDisk()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (air.com.iswfx.connect.Messages) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: air.com.iswfx.connect.Messages readMessagesFromDisk()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: void onMessageReceived(com.google.firebase.messaging.RemoteMessage)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: void onMessageReceived(com.google.firebase.messaging.RemoteMessage)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <air.com.iswfx.connect.FirebaseService: void showNotification(air.com.iswfx.connect.Messages,android.content.res.Resources,android.content.Context,java.lang.Boolean,java.lang.Boolean)>($r10, $r15, r0, $r16, $r17)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: void showNotification(air.com.iswfx.connect.Messages,android.content.res.Resources,android.content.Context,java.lang.Boolean,java.lang.Boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = staticinvoke <air.com.iswfx.connect.FirebaseService: air.com.iswfx.connect.MessageIDs createGroupID(air.com.iswfx.connect.Messages)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: air.com.iswfx.connect.MessageIDs createGroupID(air.com.iswfx.connect.Messages)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = $r0.<air.com.iswfx.connect.Messages: java.util.ArrayList messages>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: air.com.iswfx.connect.MessageIDs createGroupID(air.com.iswfx.connect.Messages)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: air.com.iswfx.connect.MessageIDs createGroupID(air.com.iswfx.connect.Messages)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = (air.com.iswfx.connect.Message) $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: air.com.iswfx.connect.MessageIDs createGroupID(air.com.iswfx.connect.Messages)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = $r4.<air.com.iswfx.connect.Message: java.lang.String num>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: air.com.iswfx.connect.MessageIDs createGroupID(air.com.iswfx.connect.Messages)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r5.<air.com.iswfx.connect.MessageId: void <init>(java.lang.String,java.lang.String)>($r6, $r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.MessageId: void <init>(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<air.com.iswfx.connect.MessageId: java.lang.String num> = $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.MessageId: void <init>(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: air.com.iswfx.connect.MessageIDs createGroupID(air.com.iswfx.connect.Messages)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<air.com.iswfx.connect.MessageIDs: void add(air.com.iswfx.connect.MessageId)>($r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.MessageIDs: void add(air.com.iswfx.connect.MessageId)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.MessageIDs: void add(air.com.iswfx.connect.MessageId)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<air.com.iswfx.connect.MessageIDs: java.util.ArrayList messages>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.MessageIDs: void add(air.com.iswfx.connect.MessageId)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: air.com.iswfx.connect.MessageIDs createGroupID(air.com.iswfx.connect.Messages)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: void showNotification(air.com.iswfx.connect.Messages,android.content.res.Resources,android.content.Context,java.lang.Boolean,java.lang.Boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = staticinvoke <air.com.iswfx.connect.FirebaseService: android.app.PendingIntent createIntent(android.content.Context,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,air.com.iswfx.connect.MessageIDs)>($r2, $r7, $r11, $r12, "", $r13)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: android.app.PendingIntent createIntent(android.content.Context,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,air.com.iswfx.connect.MessageIDs)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = staticinvoke <air.com.iswfx.connect.FirebaseService: android.app.PendingIntent createIntent(android.content.Context,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,air.com.iswfx.connect.MessageIDs,boolean,boolean)>($r6, $r0, $r1, $r2, "", $r4, 1, 1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: android.app.PendingIntent createIntent(android.content.Context,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,air.com.iswfx.connect.MessageIDs,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r14.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r10.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1) in method <air.com.iswfx.connect.FirebaseService: void saveData(air.com.iswfx.connect.Messages)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r5 = virtualinvoke $r9.<java.io.ObjectInputStream: java.lang.Object readObject()>() in method <air.com.iswfx.connect.FirebaseService: air.com.iswfx.connect.Messages readMessagesFromDisk()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: air.com.iswfx.connect.Messages readMessagesFromDisk()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r9.<java.io.ObjectInputStream: java.lang.Object readObject()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: air.com.iswfx.connect.Messages readMessagesFromDisk()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = (air.com.iswfx.connect.Messages) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: air.com.iswfx.connect.Messages readMessagesFromDisk()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: void onMessageReceived(com.google.firebase.messaging.RemoteMessage)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = $r9
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: void onMessageReceived(com.google.firebase.messaging.RemoteMessage)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<air.com.iswfx.connect.FirebaseService: void saveData(air.com.iswfx.connect.Messages)>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <air.com.iswfx.connect.FirebaseService: void saveData(air.com.iswfx.connect.Messages)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r10.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Data flow solver took 70 seconds. Maximum memory consumption: 2772 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication - Found 5 leaks
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'SummaryStatistics'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Telemetry'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'Telemetry_sha256Hash_idx' for table 'Telemetry
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Callbacks'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallbackSummaries'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'CallbackSummaries_sha256Hash_idx' for table 'CallbackSummaries
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'AppSizes'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'AppSizes_sha256Hash_idx' for table 'AppSizes
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallgraphSizes'
