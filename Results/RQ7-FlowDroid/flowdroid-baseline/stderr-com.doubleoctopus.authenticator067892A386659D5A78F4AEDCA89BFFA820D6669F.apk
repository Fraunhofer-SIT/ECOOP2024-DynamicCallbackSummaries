[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loading sources and sinks from SourcesSinks/UnconstrainedSourcesSinks.xml...
[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loaded 273 sources and 91 sinks from the XML file
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] WARN soot.Scene - Android API version '32' not available, using minApkVersion '23' instead
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.05557396 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230,400 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 19 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] ERROR soot.jimple.infoflow.android.SetupApplication - Unexpected resource type for layout class
[main] ERROR soot.jimple.infoflow.android.SetupApplication - Unexpected resource type for layout class
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 20 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.getFillAlpha, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.getClientVersion, because it is abstract and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.getFillAlpha, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.getClientVersion, because it is abstract and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.getFillAlpha, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.getClientVersion, because it is abstract and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.getFillAlpha, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.getClientVersion, because it is abstract and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.getFillAlpha, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.getClientVersion, because it is abstract and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.dy, because it is abstract and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.getFillAlpha, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.openContextMenu$write, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.getClientVersion, because it is abstract and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.setHint, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.setExpandedHintEnabled$write, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.setError, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.setEndIconMode, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.setPropertyName, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.BroadcastReceiverEntryPointCreator - Cannot create valid constructor for o.aT, because it is abstract and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 18 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 20 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for o.dy, because it is abstract and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.BroadcastReceiverEntryPointCreator - Cannot create valid constructor for o.aT, because it is abstract and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 1 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Callback analysis terminated normally
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 273 sources, 91 sinks, and 32 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 117 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on storagepath2-data/androidApps/2023-AndroZoo-PlayStore/com.doubleoctopus.authenticator067892A386659D5A78F4AEDCA89BFFA820D6669F.apk with 273 sources and 91 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230,400 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 3.979203277 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 42873 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 32 sources and 55 sinks.
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Map: java.lang.Object[] keys>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Map: java.lang.Object[] values>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Map: java.lang.Object[] values>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Map: java.lang.Object[] keys>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qs: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qs: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.lang.Float: float value>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=long fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=boolean fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=float fields=[<o.qs: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=double fields=[<o.qs: o.qN value_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<java.util.Collection: java.lang.Object[] innerArray>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qs: o.qN value_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qp: o.qN encryptedKeyset_>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf$read: o.rd extensions>, <o.rd: o.rO IconCompatParcelizer>, <o.rO: java.util.Map setContentView>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: int[] write>]
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.rf: o.rU unknownFields>, <o.rU: java.lang.Object[] setContentView>, <o.qN$ImmLeaksCleaner: byte[] read>]
[FlowDroid] ERROR heros.solver.CountingThreadPoolExecutor - Worker thread execution failed: null
java.lang.NullPointerException
	at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:889)
	at com.google.common.cache.LocalCache.get(LocalCache.java:3965)
	at com.google.common.cache.LocalCache.getOrLoad(LocalCache.java:3989)
	at com.google.common.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4950)
	at com.google.common.cache.LocalCache$LocalLoadingCache.getUnchecked(LocalCache.java:4956)
	at soot.jimple.toolkits.ide.icfg.AbstractJimpleBasedICFG.getOrCreateUnitGraph(AbstractJimpleBasedICFG.java:132)
	at soot.jimple.toolkits.ide.icfg.AbstractJimpleBasedICFG.isExitStmt(AbstractJimpleBasedICFG.java:155)
	at soot.jimple.toolkits.ide.icfg.AbstractJimpleBasedICFG.isExitStmt(AbstractJimpleBasedICFG.java:51)
	at soot.jimple.infoflow.solver.cfg.InfoflowCFG.isExitStmt(InfoflowCFG.java:201)
	at soot.jimple.infoflow.solver.cfg.InfoflowCFG.isExitStmt(InfoflowCFG.java:59)
	at soot.jimple.infoflow.solver.fastSolver.IFDSSolver$PathEdgeProcessingTask.runInternal(IFDSSolver.java:749)
	at soot.jimple.infoflow.solver.fastSolver.LocalWorklistTask.run(LocalWorklistTask.java:27)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
[FlowDroid] WARN soot.jimple.infoflow.data.AccessPathFactory - Primitive types cannot have fields: baseType=int fields=[<o.qN$ImmLeaksCleaner: byte[] read>]
Exception in thread "FlowDroid" java.lang.NullPointerException
	at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:889)
	at com.google.common.cache.LocalCache.get(LocalCache.java:3965)
	at com.google.common.cache.LocalCache.getOrLoad(LocalCache.java:3989)
	at com.google.common.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4950)
	at com.google.common.cache.LocalCache$LocalLoadingCache.getUnchecked(LocalCache.java:4956)
	at soot.jimple.toolkits.ide.icfg.AbstractJimpleBasedICFG.getOrCreateUnitGraph(AbstractJimpleBasedICFG.java:132)
	at soot.jimple.toolkits.ide.icfg.AbstractJimpleBasedICFG.isExitStmt(AbstractJimpleBasedICFG.java:155)
	at soot.jimple.toolkits.ide.icfg.AbstractJimpleBasedICFG.isExitStmt(AbstractJimpleBasedICFG.java:51)
	at soot.jimple.infoflow.solver.cfg.InfoflowCFG.isExitStmt(InfoflowCFG.java:201)
	at soot.jimple.infoflow.solver.cfg.InfoflowCFG.isExitStmt(InfoflowCFG.java:59)
	at soot.jimple.infoflow.solver.fastSolver.IFDSSolver$PathEdgeProcessingTask.runInternal(IFDSSolver.java:749)
	at soot.jimple.infoflow.solver.fastSolver.LocalWorklistTask.run(LocalWorklistTask.java:27)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] ERROR soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Exception during data flow analysis
java.lang.RuntimeException: There were exceptions during IFDS analysis. Exiting.
	at soot.jimple.infoflow.solver.fastSolver.IFDSSolver.runExecutorAndAwaitCompletion(IFDSSolver.java:262)
	at soot.jimple.infoflow.solver.fastSolver.IFDSSolver.awaitCompletionComputeValuesAndShutdown(IFDSSolver.java:229)
	at soot.jimple.infoflow.solver.fastSolver.IFDSSolver.solve(IFDSSolver.java:201)
	at soot.jimple.infoflow.AbstractInfoflow.runTaintAnalysis(AbstractInfoflow.java:936)
	at soot.jimple.infoflow.AbstractInfoflow.runAnalysis(AbstractInfoflow.java:634)
	at soot.jimple.infoflow.AbstractInfoflow.runAnalysis(AbstractInfoflow.java:567)
	at soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow.runAnalysis(SetupApplication.java:1316)
	at soot.jimple.infoflow.android.SetupApplication.processEntryPoint(SetupApplication.java:1605)
	at soot.jimple.infoflow.android.SetupApplication.runInfoflow(SetupApplication.java:1540)
	at soot.jimple.infoflow.android.SetupApplication.runInfoflow(SetupApplication.java:1487)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:121)
Caused by: java.lang.NullPointerException
	at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:889)
	at com.google.common.cache.LocalCache.get(LocalCache.java:3965)
	at com.google.common.cache.LocalCache.getOrLoad(LocalCache.java:3989)
	at com.google.common.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4950)
	at com.google.common.cache.LocalCache$LocalLoadingCache.getUnchecked(LocalCache.java:4956)
	at soot.jimple.toolkits.ide.icfg.AbstractJimpleBasedICFG.getOrCreateUnitGraph(AbstractJimpleBasedICFG.java:132)
	at soot.jimple.toolkits.ide.icfg.AbstractJimpleBasedICFG.isExitStmt(AbstractJimpleBasedICFG.java:155)
	at soot.jimple.toolkits.ide.icfg.AbstractJimpleBasedICFG.isExitStmt(AbstractJimpleBasedICFG.java:51)
	at soot.jimple.infoflow.solver.cfg.InfoflowCFG.isExitStmt(InfoflowCFG.java:201)
	at soot.jimple.infoflow.solver.cfg.InfoflowCFG.isExitStmt(InfoflowCFG.java:59)
	at soot.jimple.infoflow.solver.fastSolver.IFDSSolver$PathEdgeProcessingTask.runInternal(IFDSSolver.java:749)
	at soot.jimple.infoflow.solver.fastSolver.LocalWorklistTask.run(LocalWorklistTask.java:27)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
[main] INFO soot.jimple.infoflow.android.SetupApplication - Found 0 leaks
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'SummaryStatistics'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Telemetry'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'Telemetry_sha256Hash_idx' for table 'Telemetry
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Callbacks'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallbackSummaries'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'CallbackSummaries_sha256Hash_idx' for table 'CallbackSummaries
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'AppSizes'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'AppSizes_sha256Hash_idx' for table 'AppSizes
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallgraphSizes'
