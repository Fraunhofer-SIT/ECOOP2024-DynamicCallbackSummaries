    private boolean loadPlaylistFromDisk()
    {
        com.tune.ma.file.FileManager $r6;
        com.tune.ma.playlist.model.TunePlaylist $r1;
        com.tune.ma.configuration.TuneConfigurationManager $r3;
        com.tune.ma.utils.TuneJSONPlayer $r4;
        org.json.JSONObject $r5;
        com.tune.ma.TuneManager $r2;
        com.tune.ma.playlist.TunePlaylistManager r0;
        boolean $z0;

        r0 := @this: com.tune.ma.playlist.TunePlaylistManager;

        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r3 = virtualinvoke $r2.<com.tune.ma.TuneManager: com.tune.ma.configuration.TuneConfigurationManager getConfigurationManager()>();

        $z0 = virtualinvoke $r3.<com.tune.ma.configuration.TuneConfigurationManager: boolean usePlaylistPlayer()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r4 = virtualinvoke $r2.<com.tune.ma.TuneManager: com.tune.ma.utils.TuneJSONPlayer getPlaylistPlayer()>();

        $r5 = virtualinvoke $r4.<com.tune.ma.utils.TuneJSONPlayer: org.json.JSONObject getNext()>();

        goto label2;

     label1:
        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r6 = virtualinvoke $r2.<com.tune.ma.TuneManager: com.tune.ma.file.FileManager getFileManager()>();

        $r5 = interfaceinvoke $r6.<com.tune.ma.file.FileManager: org.json.JSONObject readPlaylist()>();

     label2:
        if $r5 == null goto label3;

        $r1 = new com.tune.ma.playlist.model.TunePlaylist;

        specialinvoke $r1.<com.tune.ma.playlist.model.TunePlaylist: void <init>(org.json.JSONObject)>($r5);

        virtualinvoke $r1.<com.tune.ma.playlist.model.TunePlaylist: void setFromDisk(boolean)>(1);

        virtualinvoke r0.<com.tune.ma.playlist.TunePlaylistManager: void setCurrentPlaylist(com.tune.ma.playlist.model.TunePlaylist)>($r1);

        return 1;

     label3:
        return 0;
    }
