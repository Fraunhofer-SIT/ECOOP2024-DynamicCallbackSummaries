    private void copy(java.io.InputStream, java.io.OutputStream, int) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        java.lang.Throwable $r6;
        byte[] $r5;
        java.lang.Object[] $r7;
        com.facebook.common.memory.ByteArrayPool $r3;
        com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer r0;
        java.io.IOException $r9;
        java.lang.Integer $r8;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        java.lang.String $r10;
        java.io.InputStream $r1;

        r0 := @this: com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.io.OutputStream;

        $i0 := @parameter2: int;

        $r3 = r0.<com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: com.facebook.common.memory.ByteArrayPool mByteArrayPool>;

        $r4 = interfaceinvoke $r3.<com.facebook.common.memory.ByteArrayPool: java.lang.Object get(int)>(16384);

        $r5 = (byte[]) $r4;

        $i1 = $i0;

     label1:
        if $i1 <= 0 goto label7;

     label2:
        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(16384, $i1);

        $i2 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r5, 0, $i2);

     label3:
        if $i2 < 0 goto label7;

        if $i2 <= 0 goto label1;

     label4:
        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i2);

     label5:
        $i1 = $i1 - $i2;

        goto label1;

     label6:
        $r6 := @caughtexception;

        $r3 = r0.<com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: com.facebook.common.memory.ByteArrayPool mByteArrayPool>;

        interfaceinvoke $r3.<com.facebook.common.memory.ByteArrayPool: void release(java.lang.Object)>($r5);

        throw $r6;

     label7:
        $r3 = r0.<com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: com.facebook.common.memory.ByteArrayPool mByteArrayPool>;

        interfaceinvoke $r3.<com.facebook.common.memory.ByteArrayPool: void release(java.lang.Object)>($r5);

        if $i1 > 0 goto label8;

        return;

     label8:
        $r7 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7[0] = $r8;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7[1] = $r8;

        $r9 = new java.io.IOException;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(null, "Failed to read %d bytes - finished %d short", $r7);

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
