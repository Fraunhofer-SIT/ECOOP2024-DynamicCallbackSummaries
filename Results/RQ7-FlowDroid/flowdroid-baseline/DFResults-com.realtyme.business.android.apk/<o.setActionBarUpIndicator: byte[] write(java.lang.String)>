    private byte[] write(java.lang.String)
    {
        java.lang.Throwable $r5;
        byte[] $r4;
        o.setActionBarUpIndicator r0;
        o.rotationZ $r3;
        java.lang.StringBuilder $r1;
        java.lang.Class $r6;
        java.lang.String $r2;
        boolean $z0;
        o.scaleMatrix$default $r7;

        r0 := @this: o.setActionBarUpIndicator;

        $r2 := @parameter0: java.lang.String;

        $r3 = r0.<o.setActionBarUpIndicator: o.rotationZ MediaDescriptionCompat>;

        $z0 = staticinvoke <o.setLayoutInformationMode: boolean setDefaultImpl(o.rotationZ,java.lang.String)>($r3, $r2);

        if $z0 == 0 goto label4;

        $r3 = r0.<o.setActionBarUpIndicator: o.rotationZ MediaDescriptionCompat>;

     label1:
        $r4 = staticinvoke <o.createHelperKey: byte[] asInterface(o.rotationZ,java.lang.String)>($r3, $r2);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = staticinvoke <o.currentMotionScene: o.scaleMatrix$default getDefaultImpl(java.lang.Class)>($r6);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t initialize sec \'");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' from \'");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r7.<o.scaleMatrix$default: void onTransact(java.lang.Object,java.lang.Throwable)>($r2, $r5);

     label4:
        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }
