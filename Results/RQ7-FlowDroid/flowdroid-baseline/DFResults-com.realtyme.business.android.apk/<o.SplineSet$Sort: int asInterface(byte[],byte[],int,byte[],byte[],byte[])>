    public final int asInterface(byte[], byte[], int, byte[], byte[], byte[])
    {
        java.lang.Throwable $r13;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        o.SplineSet$Sort r0;
        o.leftToLeft $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r12;
        org.bouncycastle.crypto.params.KeyParameter $r14;
        o.rightToRight $r7;
        org.bouncycastle.crypto.modes.AEADBlockCipher $r8;
        java.lang.Exception $r9;
        org.bouncycastle.crypto.params.AEADParameters $r15;
        java.lang.Class $r10;
        java.lang.StringBuilder $r16;
        o.scaleMatrix$default $r11;

        r0 := @this: o.SplineSet$Sort;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $r3 := @parameter3: byte[];

        $r4 := @parameter4: byte[];

        $r5 := @parameter5: byte[];

        $r6 = $r1;

        entermonitor r0;

     label01:
        $r7 = r0.<o.SplineSet$Sort: o.rightToRight getDefaultImpl>;

     label02:
        if $r7 != null goto label16;

     label03:
        $i1 = r0.<o.SplineSet$Sort: int onTransact>;

     label04:
        if $i1 != 0 goto label07;

     label05:
        $i1 = lengthof $r5;

        $r1 = staticinvoke <o.makeCustomSplineSet: byte[] asBinder(byte[],int)>($r1, $i1);

     label06:
        $r6 = $r1;

     label07:
        $r15 = new org.bouncycastle.crypto.params.AEADParameters;

        $r14 = new org.bouncycastle.crypto.params.KeyParameter;

     label08:
        specialinvoke $r14.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r3);

     label09:
        $i1 = $i0 << 3;

     label10:
        specialinvoke $r15.<org.bouncycastle.crypto.params.AEADParameters: void <init>(org.bouncycastle.crypto.params.KeyParameter,int,byte[],byte[])>($r14, $i1, $r6, $r4);

        $r8 = r0.<o.SplineSet$Sort: org.bouncycastle.crypto.modes.AEADBlockCipher setDefaultImpl>;

        interfaceinvoke $r8.<org.bouncycastle.crypto.modes.AEADBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, $r15);

        $i1 = lengthof $r5;

     label11:
        $i1 = $i1 + $i0;

     label12:
        $r1 = newarray (byte)[$i1];

        $i2 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r1, 0, $i2);

        $i2 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, $i2, $i0);

        $r8 = r0.<o.SplineSet$Sort: org.bouncycastle.crypto.modes.AEADBlockCipher setDefaultImpl>;

        $i0 = interfaceinvoke $r8.<org.bouncycastle.crypto.modes.AEADBlockCipher: int processBytes(byte[],int,int,byte[],int)>($r1, 0, $i1, $r1, 0);

        $r8 = r0.<o.SplineSet$Sort: org.bouncycastle.crypto.modes.AEADBlockCipher setDefaultImpl>;

        interfaceinvoke $r8.<org.bouncycastle.crypto.modes.AEADBlockCipher: int doFinal(byte[],int)>($r1, $i0);

        $i0 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r5, 0, $i0);

        $r8 = r0.<o.SplineSet$Sort: org.bouncycastle.crypto.modes.AEADBlockCipher setDefaultImpl>;

        interfaceinvoke $r8.<org.bouncycastle.crypto.modes.AEADBlockCipher: void reset()>();

        $i0 = lengthof $r5;

     label13:
        exitmonitor r0;

        return $i0;

     label14:
        $r9 := @caughtexception;

     label15:
        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = staticinvoke <o.currentMotionScene: o.scaleMatrix$default getDefaultImpl(java.lang.Class)>($r10);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AES decrypt exception: ");

        $r12 = virtualinvoke $r9.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r11.<o.scaleMatrix$default: void asBinder(java.lang.Object)>($r12);

        $r17 = new o.leftToLeft;

        specialinvoke $r17.<o.leftToLeft: void <init>(java.lang.Throwable)>($r9);

        throw $r17;

     label16:
        $i0 = r0.<o.SplineSet$Sort: int onTransact>;

        if $i0 != 0 goto label18;

        $r7 = r0.<o.SplineSet$Sort: o.rightToRight getDefaultImpl>;

        $i0 = lengthof $r5;

        $i1 = lengthof $r3;

        $i2 = lengthof $r1;

        $i3 = lengthof $r4;

        $i4 = lengthof $r2;

        $i5 = lengthof $r5;

        $i0 = interfaceinvoke $r7.<o.rightToRight: int getDefaultImpl(byte[],int,byte[],int,byte[],int,byte[],int,byte[],int,byte[],int)>($r5, $i0, $r3, $i1, $r1, $i2, $r4, $i3, $r2, $i4, $r5, $i5);

     label17:
        exitmonitor r0;

        return $i0;

     label18:
        $i0 = r0.<o.SplineSet$Sort: int onTransact>;

        if $i0 != 1 goto label20;

        $r7 = r0.<o.SplineSet$Sort: o.rightToRight getDefaultImpl>;

        $i0 = lengthof $r5;

        $i1 = lengthof $r3;

        $i2 = lengthof $r1;

        $i3 = lengthof $r4;

        $i4 = lengthof $r2;

        $i5 = lengthof $r5;

        $i0 = interfaceinvoke $r7.<o.rightToRight: int setDefaultImpl(byte[],int,byte[],int,byte[],int,byte[],int,byte[],int,byte[],int)>($r5, $i0, $r3, $i1, $r1, $i2, $r4, $i3, $r2, $i4, $r5, $i5);

     label19:
        exitmonitor r0;

        return $i0;

     label20:
        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = staticinvoke <o.currentMotionScene: o.scaleMatrix$default getDefaultImpl(java.lang.Class)>($r10);

        virtualinvoke $r11.<o.scaleMatrix$default: void asBinder(java.lang.Object)>("unknown AES algo");

     label21:
        exitmonitor r0;

        return -1;

     label22:
        $r13 := @caughtexception;

        exitmonitor r0;

        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.Throwable from label03 to label13 with label22;
        catch java.lang.Throwable from label15 to label17 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
    }
