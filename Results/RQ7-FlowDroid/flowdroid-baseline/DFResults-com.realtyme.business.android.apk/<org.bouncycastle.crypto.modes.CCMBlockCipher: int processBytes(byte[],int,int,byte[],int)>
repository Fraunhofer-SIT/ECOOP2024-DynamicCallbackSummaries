    public int processBytes(byte[], int, int, byte[], int)
    {
        byte[] $r1, $r2;
        org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream $r3;
        org.bouncycastle.crypto.DataLengthException $r4;
        int $i0, $i1, $i2, $i3;
        org.bouncycastle.crypto.modes.CCMBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.CCMBlockCipher;

        $r1 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r2 := @parameter3: byte[];

        $i2 := @parameter4: int;

        $i2 = lengthof $r1;

        $i3 = 0 + $i0;

        if $i2 < $i3 goto label1;

        $r3 = r0.<org.bouncycastle.crypto.modes.CCMBlockCipher: org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream data>;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0);

        return 0;

     label1:
        $r4 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r4.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("Input buffer too short");

        throw $r4;
    }
