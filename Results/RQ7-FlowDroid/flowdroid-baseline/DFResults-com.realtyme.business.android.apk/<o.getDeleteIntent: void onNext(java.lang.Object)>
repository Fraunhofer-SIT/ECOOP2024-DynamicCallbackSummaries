    public final void onNext(java.lang.Object)
    {
        o.getDeleteIntent r0;
        java.lang.Throwable $r3;
        o.FrameMetricsAggregator$MetricType $r2;
        java.lang.Object $r1;
        o.isAtLeastR $r4;
        boolean $z0;

        r0 := @this: o.getDeleteIntent;

        $r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<o.getDeleteIntent: boolean isDisposed()>();

        if $z0 != 0 goto label4;

     label1:
        $r2 = r0.<o.getDeleteIntent: o.FrameMetricsAggregator$MetricType onTransact>;

        interfaceinvoke $r2.<o.FrameMetricsAggregator$MetricType: void accept(java.lang.Object)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <o.asBinder: void getDefaultImpl(java.lang.Throwable)>($r3);

        $r1 = virtualinvoke r0.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r4 = (o.isAtLeastR) $r1;

        interfaceinvoke $r4.<o.isAtLeastR: void cancel()>();

        virtualinvoke r0.<o.getDeleteIntent: void onError(java.lang.Throwable)>($r3);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
