    public final void setDefaultImpl(java.lang.Object)
    {
        java.lang.Throwable $r7;
        o.onBind $r3;
        o.BundleCompat$BundleCompatBaseImpl $r4;
        o.BundleCompat $r5;
        java.lang.NullPointerException $r6;
        o.NotificationCompat$Action$WearableExtender$setDefaultImpl r0;
        java.lang.Object $r1, $r2;

        r0 := @this: o.NotificationCompat$Action$WearableExtender$setDefaultImpl;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r3 = <o.onBind: o.onBind DISPOSED>;

        if $r2 == $r3 goto label7;

        $r3 = <o.onBind: o.onBind DISPOSED>;

        $r2 = virtualinvoke r0.<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)>($r3);

        $r4 = (o.BundleCompat$BundleCompatBaseImpl) $r2;

        $r3 = <o.onBind: o.onBind DISPOSED>;

        if $r4 == $r3 goto label7;

        if $r1 != null goto label3;

     label1:
        $r5 = r0.<o.NotificationCompat$Action$WearableExtender$setDefaultImpl: o.BundleCompat asInterface>;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("onSuccess called with null. Null values are generally not allowed in 2.x operators and sources.");

        interfaceinvoke $r5.<o.BundleCompat: void onTransact(java.lang.Throwable)>($r6);

     label2:
        goto label4;

     label3:
        $r5 = r0.<o.NotificationCompat$Action$WearableExtender$setDefaultImpl: o.BundleCompat asInterface>;

        interfaceinvoke $r5.<o.BundleCompat: void asInterface(java.lang.Object)>($r1);

     label4:
        if $r4 == null goto label7;

        interfaceinvoke $r4.<o.BundleCompat$BundleCompatBaseImpl: void dispose()>();

        return;

     label5:
        $r7 := @caughtexception;

        if $r4 == null goto label6;

        interfaceinvoke $r4.<o.BundleCompat$BundleCompatBaseImpl: void dispose()>();

     label6:
        throw $r7;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
