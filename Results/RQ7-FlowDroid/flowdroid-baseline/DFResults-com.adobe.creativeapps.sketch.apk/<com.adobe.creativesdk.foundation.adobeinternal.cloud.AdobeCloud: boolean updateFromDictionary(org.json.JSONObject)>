    public boolean updateFromDictionary(org.json.JSONObject) throws com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudException
    {
        java.lang.Throwable r2;
        com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType $r11;
        com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud r0;
        java.net.URL $r5;
        java.util.ArrayList r10;
        org.json.JSONObject $r1, $r7, $r8;
        java.lang.Object $r4;
        com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeEntitlementServices $r9;
        java.lang.String $r3, $r6;
        boolean $z0;

        r0 := @this: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud;

        $r1 := @parameter0: org.json.JSONObject;

        if $r1 != null goto label01;

        return 0;

     label01:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("id", null);

        r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String guid> = $r3;

        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("etag", null);

        r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String eTag> = $r3;

        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("name", null);

        r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String name> = $r3;

        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("cloudDescription", null);

        r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String cloudDescription> = $r3;

        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("region", null);

        r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String region> = $r3;

        $r4 = virtualinvoke $r1.<org.json.JSONObject: java.lang.Object opt(java.lang.String)>("iconUrl");

        if $r4 == null goto label08;

        $r4 = virtualinvoke $r1.<org.json.JSONObject: java.lang.Object opt(java.lang.String)>("iconUrl");

        $z0 = $r4 instanceof java.net.URL;

        if $z0 == 0 goto label08;

        $r4 = virtualinvoke $r1.<org.json.JSONObject: java.lang.Object opt(java.lang.String)>("iconUrl");

        $r5 = (java.net.URL) $r4;

        r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.net.URL logoURL> = $r5;

     label02:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("status", null);

        if $r3 == null goto label15;

        $r6 = "Provisioned";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label03;

        $r6 = "online";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label14;

     label03:
        $z0 = 1;

     label04:
        r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: boolean available> = $z0;

        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean optBoolean(java.lang.String,boolean)>("private", 0);

        r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: boolean privateCloud> = $z0;

        r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: boolean quotaEnabled> = 1;

        $r7 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>("parameters");

        if $r7 == null goto label05;

        $r8 = staticinvoke <com.adobe.creativesdk.foundation.internal.storage.model.util.AdobeStorageCopyUtils: org.json.JSONObject deepMutableCopyOfDictionary(org.json.JSONObject)>($r7);

        r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: org.json.JSONObject parameters> = $r8;

        $z0 = virtualinvoke $r7.<org.json.JSONObject: boolean optBoolean(java.lang.String)>("quota");

        if $z0 == 0 goto label05;

        $z0 = virtualinvoke $r7.<org.json.JSONObject: boolean optBoolean(java.lang.String)>("quota");

        r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: boolean quotaEnabled> = $z0;

     label05:
        $r1 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>("features");

        $z0 = virtualinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: boolean isPrivateCloud()>();

        if $z0 == 0 goto label16;

        $r9 = staticinvoke <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeEntitlementServices: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeEntitlementServices getSharedServices()>();

        $z0 = virtualinvoke $r9.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeEntitlementServices: boolean hasAccessToPrivateStorageServices()>();

     label06:
        if $z0 == 0 goto label17;

        r10 = new java.util.ArrayList;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>("files");

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>("storage");

        $r3 = specialinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String uriForKey(java.util.ArrayList,org.json.JSONObject)>(r10, $r1);

        $r11 = <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType AdobeCloudServiceTypeStorage>;

        specialinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: void setServiceType(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType,java.lang.String,java.lang.String)>($r11, "files", $r3);

        $r11 = <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType AdobeCloudServiceTypeStorage>;

        specialinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: void setServiceType(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType,java.lang.String,java.lang.String)>($r11, "cloud-content", $r3);

        r10 = new java.util.ArrayList;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>("assets");

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>("storage");

        $r3 = specialinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String uriForKey(java.util.ArrayList,org.json.JSONObject)>(r10, $r1);

        $r11 = <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType AdobeCloudServiceTypeStorage>;

        specialinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: void setServiceType(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType,java.lang.String,java.lang.String)>($r11, "assets", $r3);

        r10 = new java.util.ArrayList;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>("files");

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>("archive");

        $r3 = specialinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String uriForKey(java.util.ArrayList,org.json.JSONObject)>(r10, $r1);

        $r11 = <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType AdobeCloudServiceTypeStorage>;

        specialinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: void setServiceType(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType,java.lang.String,java.lang.String)>($r11, "archive", $r3);

        r10 = new java.util.ArrayList;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>("libraries");

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>("storage");

        $r3 = specialinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String uriForKey(java.util.ArrayList,org.json.JSONObject)>(r10, $r1);

        $r11 = <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType AdobeCloudServiceTypeStorage>;

        specialinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: void setServiceType(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType,java.lang.String,java.lang.String)>($r11, "libraries", $r3);

        r10 = new java.util.ArrayList;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>("imageservices");

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>("service");

        $r3 = specialinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String uriForKey(java.util.ArrayList,org.json.JSONObject)>(r10, $r1);

        $r11 = <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType AdobeCloudServiceTypeImage>;

        specialinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: void setServiceType(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType,java.lang.String,java.lang.String)>($r11, "imageservices", $r3);

        r10 = new java.util.ArrayList;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>("clipboard");

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>("storage");

        $r3 = specialinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String uriForKey(java.util.ArrayList,org.json.JSONObject)>(r10, $r1);

        $r11 = <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType AdobeCloudServiceTypeClipBoard>;

        specialinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: void setServiceType(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudServiceType,java.lang.String,java.lang.String)>($r11, "clipboard", $r3);

     label07:
        return 1;

     label08:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("iconUrl", null);

        if $r3 == null goto label02;

        $r5 = new java.net.URL;

     label09:
        $r6 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("iconUrl", null);

        specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r6);

     label10:
        r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.net.URL logoURL> = $r5;

        $r5 = new java.net.URL;

     label11:
        specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3);

     label12:
        r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.net.URL logoURL> = $r5;

        goto label02;

     label13:
        r2 := @caughtexception;

        r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.net.URL logoURL> = null;

        goto label02;

     label14:
        $z0 = 0;

        goto label04;

     label15:
        $z0 = 0;

        goto label04;

     label16:
        $r9 = staticinvoke <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeEntitlementServices: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeEntitlementServices getSharedServices()>();

        $z0 = virtualinvoke $r9.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeEntitlementServices: boolean hasAccessToPublicStorageServices()>();

        goto label06;

     label17:
        r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: boolean quotaEnabled> = 0;

        goto label07;

        catch java.net.MalformedURLException from label09 to label10 with label13;
        catch java.net.MalformedURLException from label11 to label12 with label13;
    }
