    private static void writeToFile(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable $r1, $r8;
        java.io.PrintWriter $r4;
        byte[] $r5;
        java.lang.Exception r2;
        int $i0, $i1, $i2;
        java.lang.Object $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r0, r3;

        $r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.Throwable;

        $i0 = 0;

        $r4 = <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: java.io.PrintWriter pr>;

        if $r4 == null goto label14;

        $i1 = <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: int file_size>;

        if r3 == null goto label02;

     label01:
        $r5 = virtualinvoke r3.<java.lang.String: byte[] getBytes()>();

        $i0 = lengthof $r5;

     label02:
        $i0 = $i0 + $i1;

        <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: int file_size> = $i0;

        $i0 = <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: int file_size>;

        $i1 = <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: int MAX_LOG_FILE_SIZE>;

        $i2 = <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: int MB>;

        $i1 = $i1 * $i2;

        if $i0 <= $i1 goto label05;

        $r4 = <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: java.io.PrintWriter pr>;

     label03:
        virtualinvoke $r4.<java.io.PrintWriter: void close()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void readAndDumpFile(boolean)>(0);

     label04:
        $i0 = <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: int TRUNCATED_FILE_SIZE>;

        $i1 = <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: int MB>;

        $i0 = $i0 * $i1;

        <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: int file_size> = $i0;

     label05:
        $r6 = <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: java.lang.Object _mutex>;

     label06:
        entermonitor $r6;

     label07:
        $r4 = <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: java.io.PrintWriter pr>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        if r3 == null goto label10;

     label08:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r0);

        $r4 = <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: java.io.PrintWriter pr>;

        virtualinvoke $r4.<java.io.PrintWriter: void flush()>();

        exitmonitor $r6;

     label09:
        return;

     label10:
        r3 = "";

        goto label08;

     label11:
        $r8 := @caughtexception;

        exitmonitor $r6;

     label12:
        throw $r8;

     label13:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

     label14:
        return;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label09 with label11;
        catch java.lang.Throwable from label10 to label12 with label11;
        catch java.lang.Exception from label12 to label13 with label13;
    }
