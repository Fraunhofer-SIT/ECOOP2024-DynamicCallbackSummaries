    public com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloud()
    {
        com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud $r3;
        com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudException r1;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r2;
        java.lang.Class $r4;
        java.lang.String $r5;
        com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager r0;

        r0 := @this: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager;

     label1:
        $r3 = virtualinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloudWithError()>();

     label2:
        return $r3;

     label3:
        r1 := @caughtexception;

        $r2 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r4 = class "Lcom/adobe/creativesdk/foundation/adobeinternal/cloud/AdobeCloudManager;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r2, $r5, null, r1);

        return null;

        catch com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudException from label1 to label2 with label3;
    }
