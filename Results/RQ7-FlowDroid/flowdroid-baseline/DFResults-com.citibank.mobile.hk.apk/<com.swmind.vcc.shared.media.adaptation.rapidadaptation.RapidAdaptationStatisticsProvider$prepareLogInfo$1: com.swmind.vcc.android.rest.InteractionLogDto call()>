    public final com.swmind.vcc.android.rest.InteractionLogDto call()
    {
        java.util.zip.ZipOutputStream $r22;
        byte[] $r3, $r9;
        java.lang.Object[] $r19;
        java.io.BufferedInputStream $r26;
        com.swmind.vcc.shared.media.adaptation.rapidadaptation.RapidAdaptationStatisticsProvider $r5;
        java.io.BufferedOutputStream $r21;
        int $i0;
        com.swmind.vcc.shared.media.adaptation.rapidadaptation.RapidAdaptationStatisticsProvider$prepareLogInfo$1 r0;
        java.lang.String $r6, $r7;
        java.util.zip.ZipEntry $r27;
        boolean $z0;
        java.io.OutputStream $r8;
        java.lang.CharSequence $r11;
        java.util.Iterator $r16;
        com.swmind.vcc.android.rest.InteractionLogDto $r28;
        java.util.Collection $r15;
        java.io.FileWriter $r24;
        java.io.FileOutputStream $r20;
        java.io.FileInputStream $r25;
        java.io.File $r1, $r4, $r10, $r23;
        java.lang.Exception $r2;
        java.util.List $r14;
        java.lang.Object $r17;
        java.io.File[] $r12, $r13;
        java.io.InputStream $r18;

        r0 := @this: com.swmind.vcc.shared.media.adaptation.rapidadaptation.RapidAdaptationStatisticsProvider$prepareLogInfo$1;

        $r3 = null;

        $r1 = new java.io.File;

        $r4 = $r1;

        $r5 = r0.<com.swmind.vcc.shared.media.adaptation.rapidadaptation.RapidAdaptationStatisticsProvider$prepareLogInfo$1: com.swmind.vcc.shared.media.adaptation.rapidadaptation.RapidAdaptationStatisticsProvider this$0>;

        $r6 = staticinvoke <com.swmind.vcc.shared.media.adaptation.rapidadaptation.RapidAdaptationStatisticsProvider: java.lang.String access$getRapidAdaptationStatisticsDirectoryPath$p(com.swmind.vcc.shared.media.adaptation.rapidadaptation.RapidAdaptationStatisticsProvider)>($r5);

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r6);

     label01:
        virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

     label02:
        $r10 = new java.io.File;

        $r1 = $r10;

     label03:
        $r5 = r0.<com.swmind.vcc.shared.media.adaptation.rapidadaptation.RapidAdaptationStatisticsProvider$prepareLogInfo$1: com.swmind.vcc.shared.media.adaptation.rapidadaptation.RapidAdaptationStatisticsProvider this$0>;

        $r6 = staticinvoke <com.swmind.vcc.shared.media.adaptation.rapidadaptation.RapidAdaptationStatisticsProvider: java.lang.String access$getRapidAdaptationStatisticsDirectoryPath$p(com.swmind.vcc.shared.media.adaptation.rapidadaptation.RapidAdaptationStatisticsProvider)>($r5);

        $r7 = staticinvoke <ntyqtdac.\u254c: java.lang.String \u2500(int)>(1163);

        specialinvoke $r10.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r6, $r7);

     label04:
        $r20 = new java.io.FileOutputStream;

     label05:
        specialinvoke $r20.<java.io.FileOutputStream: void <init>(java.io.File)>($r10);

     label06:
        $r22 = new java.util.zip.ZipOutputStream;

        $r21 = new java.io.BufferedOutputStream;

        $r8 = (java.io.OutputStream) $r20;

     label07:
        specialinvoke $r21.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r8);

     label08:
        $r8 = (java.io.OutputStream) $r21;

     label09:
        specialinvoke $r22.<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>($r8);

     label10:
        $r9 = newarray (byte)[1024];

        $r23 = new java.io.File;

     label11:
        specialinvoke $r23.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "qualityReport.json");

     label12:
        $r24 = new java.io.FileWriter;

     label13:
        specialinvoke $r24.<java.io.FileWriter: void <init>(java.io.File,boolean)>($r23, 1);

        $r6 = r0.<com.swmind.vcc.shared.media.adaptation.rapidadaptation.RapidAdaptationStatisticsProvider$prepareLogInfo$1: java.lang.String $gsonString>;

     label14:
        $r11 = (java.lang.CharSequence) $r6;

     label15:
        virtualinvoke $r24.<java.io.FileWriter: java.io.Writer append(java.lang.CharSequence)>($r11);

        virtualinvoke $r24.<java.io.FileWriter: void flush()>();

        virtualinvoke $r24.<java.io.FileWriter: void close()>();

        $r5 = r0.<com.swmind.vcc.shared.media.adaptation.rapidadaptation.RapidAdaptationStatisticsProvider$prepareLogInfo$1: com.swmind.vcc.shared.media.adaptation.rapidadaptation.RapidAdaptationStatisticsProvider this$0>;

        $r12 = staticinvoke <com.swmind.vcc.shared.media.adaptation.rapidadaptation.RapidAdaptationStatisticsProvider: java.io.File[] access$lastTimberLogs(com.swmind.vcc.shared.media.adaptation.rapidadaptation.RapidAdaptationStatisticsProvider)>($r5);

     label16:
        $r13 = newarray (java.io.File)[1];

     label17:
        $r13[0] = $r23;

        $r14 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List mutableListOf(java.lang.Object[])>($r13);

     label18:
        if $r12 == null goto label20;

        $r15 = (java.util.Collection) $r14;

     label19:
        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Object[])>($r15, $r12);

     label20:
        $r16 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label21:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

     label22:
        if $z0 == 0 goto label36;

     label23:
        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.io.File) $r17;

     label24:
        $r25 = new java.io.FileInputStream;

     label25:
        specialinvoke $r25.<java.io.FileInputStream: void <init>(java.io.File)>($r10);

     label26:
        $r26 = new java.io.BufferedInputStream;

        $r18 = (java.io.InputStream) $r25;

     label27:
        specialinvoke $r26.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r18, 1024);

     label28:
        $r27 = new java.util.zip.ZipEntry;

     label29:
        $r6 = virtualinvoke $r10.<java.io.File: java.lang.String getName()>();

        specialinvoke $r27.<java.util.zip.ZipEntry: void <init>(java.lang.String)>($r6);

        virtualinvoke $r22.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r27);

     label30:
        $i0 = virtualinvoke $r26.<java.io.BufferedInputStream: int read(byte[],int,int)>($r9, 0, 1024);

     label31:
        if $i0 != -1 goto label34;

     label32:
        virtualinvoke $r26.<java.io.BufferedInputStream: void close()>();

     label33:
        goto label21;

     label34:
        virtualinvoke $r22.<java.util.zip.ZipOutputStream: void write(byte[],int,int)>($r9, 0, $i0);

     label35:
        goto label30;

     label36:
        virtualinvoke $r22.<java.util.zip.ZipOutputStream: void close()>();

        $r9 = staticinvoke <kotlin.io.FilesKt: byte[] readBytes(java.io.File)>($r1);

     label37:
        $r3 = $r9;

     label38:
        staticinvoke <kotlin.io.FilesKt: boolean deleteRecursively(java.io.File)>($r4);

     label39:
        goto label41;

     label40:
        $r19 = newarray (java.lang.Object)[0];

        staticinvoke <com.ailleron.timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("Error zipping adaptation media stats log", $r19);

     label41:
        $r28 = new com.swmind.vcc.android.rest.InteractionLogDto;

        specialinvoke $r28.<com.swmind.vcc.android.rest.InteractionLogDto: void <init>()>();

        if $r3 == null goto label43;

        virtualinvoke $r28.<com.swmind.vcc.android.rest.InteractionLogDto: void setLogData(byte[])>($r3);

        return $r28;

     label42:
        $r2 := @caughtexception;

        goto label40;

     label43:
        return $r28;

        catch java.lang.Exception from label01 to label02 with label42;
        catch java.lang.Exception from label03 to label04 with label42;
        catch java.lang.Exception from label05 to label06 with label42;
        catch java.lang.Exception from label07 to label08 with label42;
        catch java.lang.Exception from label09 to label10 with label42;
        catch java.lang.Exception from label11 to label12 with label42;
        catch java.lang.Exception from label13 to label14 with label42;
        catch java.lang.Exception from label15 to label16 with label42;
        catch java.lang.Exception from label17 to label18 with label42;
        catch java.lang.Exception from label19 to label22 with label42;
        catch java.lang.Exception from label23 to label24 with label42;
        catch java.lang.Exception from label25 to label26 with label42;
        catch java.lang.Exception from label27 to label28 with label42;
        catch java.lang.Exception from label29 to label31 with label42;
        catch java.lang.Exception from label32 to label33 with label42;
        catch java.lang.Exception from label34 to label35 with label42;
        catch java.lang.Exception from label36 to label37 with label42;
        catch java.lang.Exception from label38 to label39 with label42;
    }
