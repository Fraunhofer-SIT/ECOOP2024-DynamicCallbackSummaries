    public int read() throws java.io.IOException
    {
        int $i0, $i1;
        com.vasco.digipass.sdk.utils.utilities.obfuscated.bs r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r2;
        java.io.EOFException $r4;
        java.io.InputStream $r1;

        r0 := @this: com.vasco.digipass.sdk.utils.utilities.obfuscated.bs;

        $i0 = r0.<com.vasco.digipass.sdk.utils.utilities.obfuscated.bs: int d>;

        if $i0 != 0 goto label1;

        return -1;

     label1:
        $r1 = r0.<com.vasco.digipass.sdk.utils.utilities.obfuscated.bs: java.io.InputStream a>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $i0 < 0 goto label2;

        $i1 = r0.<com.vasco.digipass.sdk.utils.utilities.obfuscated.bs: int d>;

        $i1 = $i1 - 1;

        r0.<com.vasco.digipass.sdk.utils.utilities.obfuscated.bs: int d> = $i1;

        if $i1 != 0 goto label3;

        virtualinvoke r0.<com.vasco.digipass.sdk.utils.utilities.obfuscated.bs: void b(boolean)>(1);

        return $i0;

     label2:
        $r4 = new java.io.EOFException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DEF length ");

        $i0 = r0.<com.vasco.digipass.sdk.utils.utilities.obfuscated.bs: int c>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" object truncated by ");

        $i0 = r0.<com.vasco.digipass.sdk.utils.utilities.obfuscated.bs: int d>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.EOFException: void <init>(java.lang.String)>($r2);

        throw $r4;

     label3:
        return $i0;
    }
