    public java.lang.Object apply1(gnu.expr.ModuleMethod, java.lang.Object)
    {
        gnu.expr.ModuleMethod $r1;
        java.lang.Integer $r6;
        java.lang.ClassCastException $r7, $r9, $r10, $r11, $r12;
        gnu.lists.LList $r5;
        gnu.mapping.WrongType $r8;
        gnu.lists.Pair $r4;
        int $i0;
        java.lang.Boolean $r3;
        java.lang.Object $r2;
        kawa.lib.lists r0;
        boolean $z0;

        r0 := @this: kawa.lib.lists;

        $r1 := @parameter0: gnu.expr.ModuleMethod;

        $r2 := @parameter1: java.lang.Object;

        $i0 = $r1.<gnu.expr.ModuleMethod: int selector>;

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label01;
            case 3: goto label05;
            case 4: goto label01;
            case 5: goto label01;
            case 6: goto label08;
            case 7: goto label10;
            case 8: goto label01;
            case 9: goto label12;
            case 10: goto label01;
            case 11: goto label13;
            case 12: goto label01;
            case 13: goto label14;
            case 14: goto label01;
            case 15: goto label15;
            case 16: goto label01;
            case 17: goto label16;
            case 18: goto label01;
            case 19: goto label17;
            case 20: goto label01;
            case 21: goto label18;
            case 22: goto label01;
            case 23: goto label19;
            case 24: goto label01;
            case 25: goto label20;
            case 26: goto label01;
            case 27: goto label21;
            case 28: goto label01;
            case 29: goto label22;
            case 30: goto label01;
            case 31: goto label23;
            case 32: goto label01;
            case 33: goto label24;
            case 34: goto label01;
            case 35: goto label25;
            case 36: goto label01;
            case 37: goto label26;
            case 38: goto label01;
            case 39: goto label27;
            case 40: goto label01;
            case 41: goto label28;
            case 42: goto label01;
            case 43: goto label29;
            case 44: goto label01;
            case 45: goto label30;
            case 46: goto label01;
            case 47: goto label31;
            case 48: goto label01;
            case 49: goto label32;
            case 50: goto label01;
            case 51: goto label33;
            case 52: goto label01;
            case 53: goto label34;
            case 54: goto label01;
            case 55: goto label35;
            case 56: goto label01;
            case 57: goto label36;
            case 58: goto label01;
            case 59: goto label37;
            case 60: goto label01;
            case 61: goto label38;
            case 62: goto label01;
            case 63: goto label39;
            case 64: goto label40;
            case 65: goto label42;
            case 66: goto label01;
            case 67: goto label01;
            case 68: goto label44;
            case 69: goto label47;
            default: goto label01;
        };

     label01:
        $r2 = specialinvoke r0.<gnu.expr.ModuleBody: java.lang.Object apply1(gnu.expr.ModuleMethod,java.lang.Object)>($r1, $r2);

        return $r2;

     label02:
        $z0 = staticinvoke <kawa.lib.lists: boolean isPair(java.lang.Object)>($r2);

        if $z0 == 0 goto label04;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label03:
        return $r3;

     label04:
        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label03;

     label05:
        $z0 = staticinvoke <kawa.lib.lists: boolean isNull(java.lang.Object)>($r2);

        if $z0 == 0 goto label07;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label06:
        return $r3;

     label07:
        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label06;

     label08:
        $r4 = (gnu.lists.Pair) $r2;

     label09:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object car(gnu.lists.Pair)>($r4);

        return $r2;

     label10:
        $r4 = (gnu.lists.Pair) $r2;

     label11:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cdr(gnu.lists.Pair)>($r4);

        return $r2;

     label12:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object caar(java.lang.Object)>($r2);

        return $r2;

     label13:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cadr(java.lang.Object)>($r2);

        return $r2;

     label14:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cdar(java.lang.Object)>($r2);

        return $r2;

     label15:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cddr(java.lang.Object)>($r2);

        return $r2;

     label16:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object caaar(java.lang.Object)>($r2);

        return $r2;

     label17:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object caadr(java.lang.Object)>($r2);

        return $r2;

     label18:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cadar(java.lang.Object)>($r2);

        return $r2;

     label19:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object caddr(java.lang.Object)>($r2);

        return $r2;

     label20:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cdaar(java.lang.Object)>($r2);

        return $r2;

     label21:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cdadr(java.lang.Object)>($r2);

        return $r2;

     label22:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cddar(java.lang.Object)>($r2);

        return $r2;

     label23:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cdddr(java.lang.Object)>($r2);

        return $r2;

     label24:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object caaaar(java.lang.Object)>($r2);

        return $r2;

     label25:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object caaadr(java.lang.Object)>($r2);

        return $r2;

     label26:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object caadar(java.lang.Object)>($r2);

        return $r2;

     label27:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object caaddr(java.lang.Object)>($r2);

        return $r2;

     label28:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cadaar(java.lang.Object)>($r2);

        return $r2;

     label29:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cadadr(java.lang.Object)>($r2);

        return $r2;

     label30:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object caddar(java.lang.Object)>($r2);

        return $r2;

     label31:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cadddr(java.lang.Object)>($r2);

        return $r2;

     label32:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cdaaar(java.lang.Object)>($r2);

        return $r2;

     label33:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cdaadr(java.lang.Object)>($r2);

        return $r2;

     label34:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cdadar(java.lang.Object)>($r2);

        return $r2;

     label35:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cdaddr(java.lang.Object)>($r2);

        return $r2;

     label36:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cddaar(java.lang.Object)>($r2);

        return $r2;

     label37:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cddadr(java.lang.Object)>($r2);

        return $r2;

     label38:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cdddar(java.lang.Object)>($r2);

        return $r2;

     label39:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object cddddr(java.lang.Object)>($r2);

        return $r2;

     label40:
        $r5 = (gnu.lists.LList) $r2;

     label41:
        $i0 = staticinvoke <kawa.lib.lists: int length(gnu.lists.LList)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r6;

     label42:
        $r5 = (gnu.lists.LList) $r2;

     label43:
        $r5 = staticinvoke <kawa.lib.lists: gnu.lists.LList reverse(gnu.lists.LList)>($r5);

        return $r5;

     label44:
        $z0 = staticinvoke <kawa.lib.lists: boolean isList(java.lang.Object)>($r2);

        if $z0 == 0 goto label46;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label45:
        return $r3;

     label46:
        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label45;

     label47:
        $r5 = (gnu.lists.LList) $r2;

     label48:
        $r5 = staticinvoke <kawa.lib.lists: gnu.lists.LList reverse$Ex(gnu.lists.LList)>($r5);

        return $r5;

     label49:
        $r7 := @caughtexception;

        $r8 = new gnu.mapping.WrongType;

        specialinvoke $r8.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r7, "car", 1, $r2);

        throw $r8;

     label50:
        $r9 := @caughtexception;

        $r8 = new gnu.mapping.WrongType;

        specialinvoke $r8.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r9, "cdr", 1, $r2);

        throw $r8;

     label51:
        $r10 := @caughtexception;

        $r8 = new gnu.mapping.WrongType;

        specialinvoke $r8.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r10, "length", 1, $r2);

        throw $r8;

     label52:
        $r11 := @caughtexception;

        $r8 = new gnu.mapping.WrongType;

        specialinvoke $r8.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r11, "reverse", 1, $r2);

        throw $r8;

     label53:
        $r12 := @caughtexception;

        $r8 = new gnu.mapping.WrongType;

        specialinvoke $r8.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r12, "reverse!", 1, $r2);

        throw $r8;

        catch java.lang.ClassCastException from label08 to label09 with label49;
        catch java.lang.ClassCastException from label10 to label11 with label50;
        catch java.lang.ClassCastException from label40 to label41 with label51;
        catch java.lang.ClassCastException from label42 to label43 with label52;
        catch java.lang.ClassCastException from label47 to label48 with label53;
    }
