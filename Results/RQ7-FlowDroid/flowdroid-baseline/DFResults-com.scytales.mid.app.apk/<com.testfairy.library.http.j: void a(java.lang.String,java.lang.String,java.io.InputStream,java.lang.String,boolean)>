    public void a(java.lang.String, java.lang.String, java.io.InputStream, java.lang.String, boolean)
    {
        java.lang.Throwable $r2, $r3, $r4, $r5, $r11;
        byte[] $r10;
        java.io.ByteArrayOutputStream $r9;
        int $i0;
        java.lang.StringBuilder $r12;
        java.lang.String $r6, $r7, $r8;
        com.testfairy.library.http.j r0;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: com.testfairy.library.http.j;

        $r6 := @parameter0: java.lang.String;

        $r7 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.io.InputStream;

        $r8 := @parameter3: java.lang.String;

        $z0 := @parameter4: boolean;

        virtualinvoke r0.<com.testfairy.library.http.j: void b()>();

     label01:
        $r12 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Type: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r8 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

     label03:
        $r9 = r0.<com.testfairy.library.http.j: java.io.ByteArrayOutputStream b>;

        $r12 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Disposition: form-data; name=\"");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"; filename=\"");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\r\n");

        $r6 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r6.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r9.<java.io.OutputStream: void write(byte[])>($r10);

     label05:
        $r9 = r0.<com.testfairy.library.http.j: java.io.ByteArrayOutputStream b>;

     label06:
        $r10 = virtualinvoke $r8.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r9.<java.io.OutputStream: void write(byte[])>($r10);

     label07:
        $r9 = r0.<com.testfairy.library.http.j: java.io.ByteArrayOutputStream b>;

     label08:
        $r6 = "Content-Transfer-Encoding: binary\r\n\r\n";

     label09:
        $r10 = virtualinvoke $r6.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r9.<java.io.OutputStream: void write(byte[])>($r10);

     label10:
        $r10 = newarray (byte)[4096];

     label11:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r10);

     label12:
        if $i0 == -1 goto label16;

     label13:
        $r9 = r0.<com.testfairy.library.http.j: java.io.ByteArrayOutputStream b>;

     label14:
        virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>($r10, 0, $i0);

     label15:
        goto label11;

     label16:
        if $z0 != 0 goto label21;

     label17:
        $r9 = r0.<com.testfairy.library.http.j: java.io.ByteArrayOutputStream b>;

        $r12 = new java.lang.StringBuilder;

     label18:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n--");

     label19:
        $r6 = r0.<com.testfairy.library.http.j: java.lang.String a>;

     label20:
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r6 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r6.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r9.<java.io.OutputStream: void write(byte[])>($r10);

     label21:
        $r9 = r0.<com.testfairy.library.http.j: java.io.ByteArrayOutputStream b>;

     label22:
        virtualinvoke $r9.<java.io.OutputStream: void flush()>();

     label23:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label24:
        return;

     label25:
        $r11 := @caughtexception;

     label26:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label27:
        throw $r11;

     label28:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label29:
        return;

     label30:
        $r2 := @caughtexception;

        goto label28;

     label31:
        $r3 := @caughtexception;

        return;

     label32:
        $r4 := @caughtexception;

        goto label27;

     label33:
        $r5 := @caughtexception;

        return;

        catch java.io.IOException from label02 to label03 with label30;
        catch java.io.IOException from label04 to label05 with label30;
        catch java.io.IOException from label06 to label07 with label30;
        catch java.io.IOException from label09 to label10 with label30;
        catch java.io.IOException from label11 to label12 with label30;
        catch java.io.IOException from label14 to label15 with label30;
        catch java.io.IOException from label18 to label19 with label30;
        catch java.io.IOException from label20 to label21 with label30;
        catch java.io.IOException from label22 to label23 with label30;
        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label02 to label04 with label25;
        catch java.lang.Throwable from label04 to label08 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.lang.Throwable from label13 to label15 with label25;
        catch java.lang.Throwable from label17 to label18 with label25;
        catch java.lang.Throwable from label18 to label23 with label25;
        catch java.io.IOException from label23 to label24 with label31;
        catch java.io.IOException from label26 to label27 with label32;
        catch java.io.IOException from label28 to label29 with label33;
    }
