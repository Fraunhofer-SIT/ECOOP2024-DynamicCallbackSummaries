    private static byte[] values(java.io.InputStream) throws java.io.IOException
    {
        byte[] $r0;
        java.io.ByteArrayOutputStream $r3;
        java.lang.ClassCastException $r2;
        byte $b2;
        int $i0, $i1, $i3;
        java.io.InputStream $r1;

        $r1 := @parameter0: java.io.InputStream;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        $r0 = newarray (byte)[16384];

        $i0 = <o.bdp: int setCheckable>;

        $i1 = $i0 ^ 43;

        $i0 = $i0 & 43;

        $i0 = $i0 << 1;

        $i1 = $i1 + $i0;

        $i1 = $i1 % 128;

        <o.bdp: int setBackgroundResource> = $i1;

     label1:
        $i1 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r0, 0, 16384);

        if $i1 < 0 goto label2;

        $b2 = 60;

        goto label3;

     label2:
        $b2 = 65;

     label3:
        if $b2 == 60 goto label4;

        virtualinvoke $r3.<java.io.OutputStream: void flush()>();

        $r0 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i1 = <o.bdp: int setCheckable>;

        $i1 = $i1 + 120;

        $i1 = $i1 + -1;

        $i1 = $i1 % 128;

        <o.bdp: int setBackgroundResource> = $i1;

        return $r0;

     label4:
        $i0 = <o.bdp: int setCheckable>;

        $i3 = $i0 | 59;

        $i3 = $i3 << 1;

        $i0 = $i0 ^ 59;

        $i0 = $i3 - $i0;

        $i0 = $i0 % 128;

        <o.bdp: int setBackgroundResource> = $i0;

     label5:
        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r0, 0, $i1);

     label6:
        goto label1;

     label7:
        $r2 := @caughtexception;

        throw $r2;

        catch java.lang.ClassCastException from label5 to label6 with label7;
    }
