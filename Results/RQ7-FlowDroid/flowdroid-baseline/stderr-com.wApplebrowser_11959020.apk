[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loading sources and sinks from SourcesSinks/UnconstrainedSourcesSinks.xml...
[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loaded 273 sources and 91 sinks from the XML file
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.083751066 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230,400 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 65 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class androidx.core.content.FileProvider
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 70 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.FragmentEntryPointCreator - Cannot generate constructor for phantom class android.app.Fragment
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.BroadcastReceiverEntryPointCreator - Cannot create valid constructor for com.onesignal.OSSystemConditionController$OSSystemConditionObserver, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.appnext.banners.BaseBannerView, because it is abstract and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.startapp.common.a.c$a, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.startapp.common.a.c$a, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.appsgeyser.sdk.server.implementation.OnRequestDoneListener, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.BroadcastReceiverEntryPointCreator - Cannot create valid constructor for acr.browser.lightning.receiver.NetworkReceiver, because it is abstract and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 66 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] WARN soot.jimple.infoflow.android.SetupApplication - Aborted callback collection because of low memory
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] WARN soot.jimple.infoflow.android.SetupApplication - Callback analysis aborted early due to time or memory exhaustion
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 273 sources, 91 sinks, and 372 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 245 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on storagepath2-data/androidApps/2020-AndroZoo-PlayStore/com.wApplebrowser_11959020.apk with 273 sources and 91 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230,400 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 3.235384516 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 43973 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 176 sources and 22 sinks.
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper hits: 2654093
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper misses: 42796953
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - IFDS problem with 57950566 forward and 94669430 backward edges solved in 904 seconds, processing 15 results...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Current memory consumption: 88802 MB
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after cleanup: 18254 MB
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 1 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 2 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 3 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after path building: 112972 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Path reconstruction took 5120 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r23.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0) in method <org.altbeacon.beacon.service.ScanState: void save()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r3, $r1) in method <com.appsgeyser.sdk.configuration.PreferencesCoder: java.lang.String getPrefString(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.configuration.PreferencesCoder: java.lang.String getPrefString(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r3, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.configuration.PreferencesCoder: java.lang.String getPrefString(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.configuration.Configuration: java.lang.String getTemplateVersion()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.server.StatController: void sendRequestAsyncByKey(java.lang.String,java.util.HashMap,android.content.Context,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("templateversion", $r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.server.StatController: void sendRequestAsyncByKey(java.lang.String,java.util.HashMap,android.content.Context,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r1.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: java.util.HashMap bannerDetails>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = staticinvoke <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable bannerViewRepeatRequestRunnable>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.mopub.mobileads.CustomEventInterstitialAdapter
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = staticinvoke <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter mCustomEventInterstitialAdapter>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<com.mopub.mobileads.CustomEventInterstitialAdapter: void setAdapterListener(com.mopub.mobileads.CustomEventInterstitialAdapter$CustomEventInterstitialAdapterListener)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void setAdapterListener(com.mopub.mobileads.CustomEventInterstitialAdapter$CustomEventInterstitialAdapterListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = staticinvoke <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter mCustomEventInterstitialAdapter>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, $l1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanState: void save()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r22
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, $l1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<org.altbeacon.beacon.service.ScanJob: void stopScanning()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanHelper mScanHelper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<org.altbeacon.beacon.service.ScanHelper: org.altbeacon.beacon.service.scanner.CycledLeScanner getCycledScanner()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanHelper: org.altbeacon.beacon.service.scanner.CycledLeScanner getCycledScanner()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanHelper mScanHelper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanState: void save()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r23.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r9) in method <com.startapp.common.a.f: java.util.List a(android.content.Context,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.util.List a(android.content.Context,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r9)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.util.List a(android.content.Context,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.util.List a(android.content.Context,boolean,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.d.b: void setLocation(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <com.startapp.common.a.f: java.lang.String a(java.util.List)>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = (android.location.Location) $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $f0 = virtualinvoke $r4.<android.location.Location: float getAccuracy()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.d.b: void setLocation(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.startapp.android.publish.adsCommon.d.b: java.lang.String location> = $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.d.b: void setLocation(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.adsCommon.d.b)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.c: void a(android.content.Context,java.lang.String[],com.startapp.android.publish.adsCommon.d.b)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.i: void b(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.startapp.android.publish.adsCommon.i: com.startapp.android.publish.adsCommon.d.b j>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.i: void b(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.startapp.android.publish.adsCommon.i
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.i$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.startapp.android.publish.adsCommon.i$1: com.startapp.android.publish.adsCommon.i a>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.i$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = staticinvoke <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable bannerViewRepeatRequestRunnable>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = specialinvoke r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: int getTimeoutDelayMilliseconds()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: int getTimeoutDelayMilliseconds()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: com.mopub.mobileads.MoPubInterstitial mMoPubInterstitial>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: int getTimeoutDelayMilliseconds()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<com.mopub.mobileads.MoPubInterstitial: java.lang.Integer getAdTimeoutDelay(int)>(30000)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: java.lang.Integer getAdTimeoutDelay(int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: int getTimeoutDelayMilliseconds()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: com.mopub.mobileads.MoPubInterstitial mMoPubInterstitial>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: int getTimeoutDelayMilliseconds()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.mopub.mobileads.CustomEventInterstitialAdapter
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: boolean isInvalidated()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: boolean isInvalidated()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return z0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, $l1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanState: void save()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r22
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, $l1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<org.altbeacon.beacon.service.ScanJob: void stopScanning()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanHelper mScanHelper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<org.altbeacon.beacon.service.ScanHelper: org.altbeacon.beacon.service.scanner.CycledLeScanner getCycledScanner()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanHelper: org.altbeacon.beacon.service.scanner.CycledLeScanner getCycledScanner()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanHelper mScanHelper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanState: void save()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r23.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $d0 = virtualinvoke $r4.<android.location.Location: double getLongitude()>() in method <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $d0 = virtualinvoke $r4.<android.location.Location: double getLongitude()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.d.b: void setLocation(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.startapp.android.publish.adsCommon.d.b: java.lang.String location> = $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.d.b: void setLocation(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.startapp.android.publish.adsCommon.d.b
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.adsCommon.d.b)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: android.content.Context
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.c: void a(android.content.Context,java.lang.String[],com.startapp.android.publish.adsCommon.d.b)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: android.content.Context
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.i: void b(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.startapp.android.publish.adsCommon.i: com.startapp.android.publish.adsCommon.d.b j>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.i: void b(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.startapp.android.publish.adsCommon.i
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.i$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.startapp.android.publish.adsCommon.i$1: com.startapp.android.publish.adsCommon.i a>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.i$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.startapp.android.publish.adsCommon.i$1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = staticinvoke <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable bannerViewRepeatRequestRunnable>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.mopub.mobileads.CustomEventInterstitialAdapter
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = staticinvoke <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter mCustomEventInterstitialAdapter>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: com.mopub.mobileads.MoPubInterstitial
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<com.mopub.mobileads.CustomEventInterstitialAdapter: void setAdapterListener(com.mopub.mobileads.CustomEventInterstitialAdapter$CustomEventInterstitialAdapterListener)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void setAdapterListener(com.mopub.mobileads.CustomEventInterstitialAdapter$CustomEventInterstitialAdapterListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = staticinvoke <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter mCustomEventInterstitialAdapter>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, $l1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanState: void save()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r22
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, $l1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<org.altbeacon.beacon.service.ScanJob: void stopScanning()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanHelper mScanHelper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<org.altbeacon.beacon.service.ScanHelper: org.altbeacon.beacon.service.scanner.CycledLeScanner getCycledScanner()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanHelper: org.altbeacon.beacon.service.scanner.CycledLeScanner getCycledScanner()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanHelper mScanHelper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanState: void save()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r23.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r3 = virtualinvoke $r2.<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>() in method <com.appsgeyser.sdk.utils.DeviceInfoGetter: java.lang.String getOperatorName(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.utils.DeviceInfoGetter: java.lang.String getOperatorName(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r2.<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.utils.DeviceInfoGetter: java.lang.String getOperatorName(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.utils.DeviceInfoGetter: java.util.HashMap getDeviceInfoMap(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.utils.DeviceInfoGetter: java.util.HashMap getDeviceInfoMap(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("operator", $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.utils.DeviceInfoGetter: java.util.HashMap getDeviceInfoMap(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.server.StatController: void sendRequestAsyncByKey(java.lang.String,java.util.HashMap,android.content.Context,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.util.HashMap: void putAll(java.util.Map)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.server.StatController: void sendRequestAsyncByKey(java.lang.String,java.util.HashMap,android.content.Context,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.appsgeyser.sdk.server.StatController
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r1.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: java.util.HashMap bannerDetails>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = staticinvoke <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable bannerViewRepeatRequestRunnable>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.mopub.mobileads.CustomEventInterstitialAdapter
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = staticinvoke <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter mCustomEventInterstitialAdapter>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<com.mopub.mobileads.CustomEventInterstitialAdapter: void setAdapterListener(com.mopub.mobileads.CustomEventInterstitialAdapter$CustomEventInterstitialAdapterListener)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void setAdapterListener(com.mopub.mobileads.CustomEventInterstitialAdapter$CustomEventInterstitialAdapterListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = staticinvoke <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter mCustomEventInterstitialAdapter>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, $l1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanState: void save()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r22
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, $l1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<org.altbeacon.beacon.service.ScanJob: void stopScanning()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanHelper mScanHelper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<org.altbeacon.beacon.service.ScanHelper: org.altbeacon.beacon.service.scanner.CycledLeScanner getCycledScanner()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanHelper: org.altbeacon.beacon.service.scanner.CycledLeScanner getCycledScanner()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanHelper mScanHelper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanState: void save()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r23.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r7.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r0, $r1) in method <com.onesignal.OneSignalPrefs: java.lang.Object get(java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalPrefs: java.lang.Object get(java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r7.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r0, $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalPrefs: java.lang.Object get(java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalPrefs: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = (java.lang.String) $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.OneSignalPrefs: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<org.json.JSONObject: void <init>(java.lang.String)>($r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.onesignal.UserState: org.json.JSONObject dependValues> = $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.UserState: void loadState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.UserState: void <init>(java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.UserStateEmail: void <init>(java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.UserStateEmailSynchronizer: com.onesignal.UserState newUserState(java.lang.String,boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.UserStateSynchronizer: com.onesignal.UserState getToSyncUserState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.onesignal.UserStateSynchronizer: com.onesignal.UserState toSyncUserState> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.UserStateSynchronizer: com.onesignal.UserState getToSyncUserState()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.UserStateSynchronizer: void internalSyncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.UserStateSynchronizer: void syncUserState(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = $r1.<com.onesignal.UserStateSynchronizer$NetworkHandlerThread: com.onesignal.UserStateSynchronizer this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1: com.onesignal.UserStateSynchronizer$NetworkHandlerThread this$1>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11 = staticinvoke <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: java.lang.Runnable bannerViewRepeatRequestRunnable>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.mopub.mobileads.CustomEventInterstitialAdapter
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = staticinvoke <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter mCustomEventInterstitialAdapter>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = staticinvoke <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = staticinvoke <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter mCustomEventInterstitialAdapter>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, $l1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanState: void save()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r22
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, $l1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<org.altbeacon.beacon.service.ScanJob: void stopScanning()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanHelper mScanHelper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<org.altbeacon.beacon.service.ScanHelper: org.altbeacon.beacon.service.scanner.CycledLeScanner getCycledScanner()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanHelper: org.altbeacon.beacon.service.scanner.CycledLeScanner getCycledScanner()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanHelper mScanHelper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanState: void save()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r23.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $d0 = virtualinvoke $r4.<android.location.Location: double getLatitude()>() in method <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $d0 = virtualinvoke $r4.<android.location.Location: double getLatitude()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.common.a.f: java.lang.String a(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.d.b: void setLocation(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.startapp.android.publish.adsCommon.d.b: java.lang.String location> = $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.d.b: void setLocation(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.startapp.android.publish.adsCommon.d.b
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.adsCommon.d.b)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: android.content.Context
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.c: void a(android.content.Context,java.lang.String[],com.startapp.android.publish.adsCommon.d.b)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: android.content.Context
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.i: void b(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<com.startapp.android.publish.adsCommon.i: com.startapp.android.publish.adsCommon.d.b j>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.i: void b(boolean)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.startapp.android.publish.adsCommon.i
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.i$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.startapp.android.publish.adsCommon.i$1: com.startapp.android.publish.adsCommon.i a>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.i$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.startapp.android.publish.adsCommon.i$1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r12 = staticinvoke <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable bannerViewRepeatRequestRunnable>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackAdmobAdapter$3: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.mopub.mobileads.CustomEventInterstitialAdapter
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = staticinvoke <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter mCustomEventInterstitialAdapter>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: com.mopub.mobileads.MoPubInterstitial
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<com.mopub.mobileads.CustomEventInterstitialAdapter: void setAdapterListener(com.mopub.mobileads.CustomEventInterstitialAdapter$CustomEventInterstitialAdapterListener)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void setAdapterListener(com.mopub.mobileads.CustomEventInterstitialAdapter$CustomEventInterstitialAdapterListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = staticinvoke <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter mCustomEventInterstitialAdapter>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r8.<com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, $l1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanState: void save()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r22
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> this := @this: android.os.Handler
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, $l1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke param0.<java.lang.Runnable: void run()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r0.<org.altbeacon.beacon.service.ScanJob: void stopScanning()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanHelper mScanHelper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r1.<org.altbeacon.beacon.service.ScanHelper: org.altbeacon.beacon.service.scanner.CycledLeScanner getCycledScanner()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanHelper: org.altbeacon.beacon.service.scanner.CycledLeScanner getCycledScanner()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanHelper mScanHelper>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void stopScanning()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: org.altbeacon.beacon.service.ScanJob
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanJob$1: void run()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.ScanState: void save()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r23.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r17.<java.io.FileWriter: void write(java.lang.String)>($r4) in method <acr.browser.lightning.constant.DownloadsPage$2: void onItem(java.util.List)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("downloadLocation", $r1) in method <acr.browser.lightning.preference.PreferenceManager: java.lang.String getDownloadDirectory()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <acr.browser.lightning.preference.PreferenceManager: java.lang.String getDownloadDirectory()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("downloadLocation", $r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <acr.browser.lightning.preference.PreferenceManager: java.lang.String getDownloadDirectory()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <acr.browser.lightning.constant.DownloadsPage$2: void onItem(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <acr.browser.lightning.constant.DownloadsPage$2: void onItem(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <acr.browser.lightning.constant.DownloadsPage$2: void onItem(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r17.<java.io.FileWriter: void write(java.lang.String)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r23.<java.io.FileOutputStream: void write(byte[],int,int)>($r20, 0, $i0) in method <com.startapp.android.publish.adsCommon.Utils.f: boolean a(java.lang.String,java.lang.String,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r18.<java.io.InputStream: int read(byte[])>($r20) in method <com.startapp.android.publish.adsCommon.Utils.f: boolean a(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.Utils.f: boolean a(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r18.<java.io.InputStream: int read(byte[])>($r20)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.Utils.f: boolean a(java.lang.String,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r23.<java.io.FileOutputStream: void write(byte[],int,int)>($r20, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, 0, $i1) in method <acr.browser.lightning.reading.Converter: java.lang.String detectCharset(java.lang.String,java.io.ByteArrayOutputStream,java.io.BufferedInputStream,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i1 = virtualinvoke $r2.<java.io.BufferedInputStream: int read(byte[])>($r4) in method <acr.browser.lightning.reading.Converter: java.lang.String detectCharset(java.lang.String,java.io.ByteArrayOutputStream,java.io.BufferedInputStream,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <acr.browser.lightning.reading.Converter: java.lang.String detectCharset(java.lang.String,java.io.ByteArrayOutputStream,java.io.BufferedInputStream,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = virtualinvoke $r2.<java.io.BufferedInputStream: int read(byte[])>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <acr.browser.lightning.reading.Converter: java.lang.String detectCharset(java.lang.String,java.io.ByteArrayOutputStream,java.io.BufferedInputStream,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, 0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r13.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r6, 0, $i2) in method <acr.browser.lightning.reading.Converter: java.lang.String streamToString(java.io.InputStream,int,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i2 = virtualinvoke $r12.<java.io.BufferedInputStream: int read(byte[])>($r6) in method <acr.browser.lightning.reading.Converter: java.lang.String streamToString(java.io.InputStream,int,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <acr.browser.lightning.reading.Converter: java.lang.String streamToString(java.io.InputStream,int,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i2 = virtualinvoke $r12.<java.io.BufferedInputStream: int read(byte[])>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <acr.browser.lightning.reading.Converter: java.lang.String streamToString(java.io.InputStream,int,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r13.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r6, 0, $i2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r23.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r24) in method <org.altbeacon.beacon.service.MonitoringStatus: void saveMonitoringStatusIfOn()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = virtualinvoke $r26.<java.io.ObjectInputStream: java.lang.Object readObject()>() in method <org.altbeacon.beacon.service.MonitoringStatus: void restoreMonitoringStatus()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.MonitoringStatus: void restoreMonitoringStatus()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = virtualinvoke $r26.<java.io.ObjectInputStream: java.lang.Object readObject()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.MonitoringStatus: void restoreMonitoringStatus()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11 = (java.util.Map) $r10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.MonitoringStatus: void restoreMonitoringStatus()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r20.<java.util.Map: void putAll(java.util.Map)>($r11)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.MonitoringStatus: void restoreMonitoringStatus()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r20 = r0.<org.altbeacon.beacon.service.MonitoringStatus: java.util.Map mRegionsStatesMap>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.MonitoringStatus: void restoreMonitoringStatus()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.MonitoringStatus: void restoreOrInitializeMonitoringStatus()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.MonitoringStatus: java.util.Map getRegionsStateMap()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<org.altbeacon.beacon.service.MonitoringStatus: java.util.Map mRegionsStatesMap>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.MonitoringStatus: java.util.Map getRegionsStateMap()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.MonitoringStatus: void saveMonitoringStatusIfOn()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r13 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.MonitoringStatus: void saveMonitoringStatusIfOn()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.MonitoringStatus: void saveMonitoringStatusIfOn()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.MonitoringStatus: void saveMonitoringStatusIfOn()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r16 = (org.altbeacon.beacon.Region) $r15
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.MonitoringStatus: void saveMonitoringStatusIfOn()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r15)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.altbeacon.beacon.service.MonitoringStatus: void saveMonitoringStatusIfOn()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r23.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r24)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r22.<java.io.FileOutputStream: void write(byte[],int,int)>($r0, 0, $i0) in method <com.startapp.android.publish.adsCommon.Utils.f: void a(android.content.Context,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r20.<java.util.zip.ZipInputStream: int read(byte[],int,int)>($r0, 0, 1024) in method <com.startapp.android.publish.adsCommon.Utils.f: void a(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.Utils.f: void a(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r20.<java.util.zip.ZipInputStream: int read(byte[],int,int)>($r0, 0, 1024)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.startapp.android.publish.adsCommon.Utils.f: void a(android.content.Context,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r22.<java.io.FileOutputStream: void write(byte[],int,int)>($r0, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i0) in method <org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream,int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1) in method <org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>($r10, 0, $i0) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader makeAdsSdkClassLoader(android.content.Context)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r8.<java.io.InputStream: int read(byte[])>($r10) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader makeAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader makeAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r8.<java.io.InputStream: int read(byte[])>($r10)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader makeAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>($r10, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r6.<java.io.OutputStream: void write(byte[],int,int)>($r7, 0, $i0) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: dalvik.system.DexClassLoader makeLegacyAdsSdkClassLoader(android.content.Context)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r7) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: dalvik.system.DexClassLoader makeLegacyAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: dalvik.system.DexClassLoader makeLegacyAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: dalvik.system.DexClassLoader makeLegacyAdsSdkClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r6.<java.io.OutputStream: void write(byte[],int,int)>($r7, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, 0, $i0) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader createInMemoryClassLoader(android.content.Context)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r4) in method <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader createInMemoryClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader createInMemoryClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: java.lang.ClassLoader createInMemoryClassLoader(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i1) in method <org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream,int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1) in method <org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, 0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Data flow solver took 6049 seconds. Maximum memory consumption: 112972 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication - Found 12 leaks
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'SummaryStatistics'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Telemetry'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'Telemetry_sha256Hash_idx' for table 'Telemetry
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Callbacks'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallbackSummaries'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'CallbackSummaries_sha256Hash_idx' for table 'CallbackSummaries
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'AppSizes'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'AppSizes_sha256Hash_idx' for table 'AppSizes
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallgraphSizes'
