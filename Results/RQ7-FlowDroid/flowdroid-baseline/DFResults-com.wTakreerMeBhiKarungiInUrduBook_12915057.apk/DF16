Source: $i0 = interfaceinvoke $r7.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r0, $i0)
$i0 = interfaceinvoke $r7.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r0, $i0) in <com.onesignal.OneSignalPrefs: java.lang.Object get(java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>
Sink: virtualinvoke $r23.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0) in <org.altbeacon.beacon.service.ScanState: void save()>

<com.onesignal.OneSignalPrefs: java.lang.Object get(java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>: $i0 = interfaceinvoke $r7.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r0, $i0)
<com.onesignal.OneSignalPrefs: java.lang.Object get(java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
<com.onesignal.OneSignalPrefs: java.lang.Object get(java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>: return $r8
<com.onesignal.OneSignalPrefs: int getInt(java.lang.String,java.lang.String,int)>: $r2 = (java.lang.Integer) $r3
<com.onesignal.OneSignalPrefs: int getInt(java.lang.String,java.lang.String,int)>: $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>()
<com.onesignal.OneSignalPrefs: int getInt(java.lang.String,java.lang.String,int)>: return $i0
<com.onesignal.UserState: void loadState()>: $i0 = $i1
<com.onesignal.UserState: void loadState()>: virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("subscribableStatus", $i0)
<com.onesignal.UserState: void loadState()>: $r4 = r0.<com.onesignal.UserState: org.json.JSONObject syncValues>
<com.onesignal.UserState: void loadState()>: return
<com.onesignal.UserState: void <init>(java.lang.String,boolean)>: return
<com.onesignal.UserStateEmail: void <init>(java.lang.String,boolean)>: return
<com.onesignal.UserStateEmailSynchronizer: com.onesignal.UserState newUserState(java.lang.String,boolean)>: return $r2
<com.onesignal.UserStateSynchronizer: void initUserState()>: r0.<com.onesignal.UserStateSynchronizer: com.onesignal.UserState currentUserState> = $r2
<com.onesignal.UserStateSynchronizer: void initUserState()>: throw $r3
<com.onesignal.UserStateSynchronizer: void internalSyncUserState(boolean)>: specialinvoke r0.<com.onesignal.UserStateSynchronizer: void externalUserIdUpdateHandlersPerformOnSuccess()>()
<com.onesignal.UserStateSynchronizer: void externalUserIdUpdateHandlersPerformOnSuccess()>: $r4 = virtualinvoke r0.<com.onesignal.UserStateSynchronizer: java.lang.String getChannelString()>()
<com.onesignal.UserStateSynchronizer: java.lang.String getChannelString()>: return $r2
<com.onesignal.UserStateSynchronizer: void externalUserIdUpdateHandlersPerformOnSuccess()>: r0 := @this: com.onesignal.UserStateSynchronizer
<com.onesignal.UserStateSynchronizer: void internalSyncUserState(boolean)>: throw $r8
<com.onesignal.UserStateSynchronizer: void syncUserState(boolean)>: return
<com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1: void run()>: $r2 = $r1.<com.onesignal.UserStateSynchronizer$NetworkHandlerThread: com.onesignal.UserStateSynchronizer this$0>
<com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1: void run()>: $r1 = r0.<com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1: com.onesignal.UserStateSynchronizer$NetworkHandlerThread this$1>
<com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1: void run()>: r0 := @this: com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>: return 1
<com.tappx.a.s3$a: void run()>: $r3 = staticinvoke <com.tappx.a.s3: java.lang.Runnable b(com.tappx.a.s3)>($r1)
<com.tappx.a.s3: java.lang.Runnable b(com.tappx.a.s3)>: r1 = $r0.<com.tappx.a.s3: java.lang.Runnable e>
<com.tappx.a.s3: java.lang.Runnable b(com.tappx.a.s3)>: $r0 := @parameter0: com.tappx.a.s3
<com.tappx.a.s3$a: void run()>: $r1 = r0.<com.tappx.a.s3$a: com.tappx.a.s3 a>
<com.tappx.a.s3$a: void run()>: return
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>: return 1
<com.mopub.mobileads.MoPubInterstitial: boolean attemptStateTransition(com.mopub.mobileads.MoPubInterstitial$InterstitialState,boolean)>: $r8 = r0.<com.mopub.mobileads.MoPubInterstitial: java.lang.Runnable mAdExpiration>
<com.mopub.mobileads.MoPubInterstitial: boolean attemptStateTransition(com.mopub.mobileads.MoPubInterstitial$InterstitialState,boolean)>: return 1
<com.mopub.mobileads.MoPubInterstitial$1: void run()>: $r3 = r0.<com.mopub.mobileads.MoPubInterstitial$1: com.mopub.mobileads.MoPubInterstitial this$0>
<com.mopub.mobileads.MoPubInterstitial$1: void run()>: r0 := @this: com.mopub.mobileads.MoPubInterstitial$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>: this := @this: android.os.Handler
<com.mopub.common.privacy.ConsentDialogActivity: void onStart()>: $r2 = r0.<com.mopub.common.privacy.ConsentDialogActivity: java.lang.Runnable mEnableCloseButtonRunnable>
<com.mopub.common.privacy.ConsentDialogActivity: void onStart()>: return
<dummyMainClass: com.mopub.common.privacy.ConsentDialogActivity dummyMainMethod_com_mopub_common_privacy_ConsentDialogActivity(android.content.Intent)>: virtualinvoke $r0.<com.mopub.common.privacy.ConsentDialogActivity: void onStart()>()
<com.mopub.common.privacy.ConsentDialogActivity: void onStart()>: $r2 = r0.<com.mopub.common.privacy.ConsentDialogActivity: java.lang.Runnable mEnableCloseButtonRunnable>
<com.mopub.common.privacy.ConsentDialogActivity: void onStart()>: virtualinvoke $r1.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r2, 10000L)
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>: interfaceinvoke param0.<java.lang.Runnable: void run()>()
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: return r1
<org.altbeacon.beacon.service.ScanJob$1: void run()>: virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
<org.altbeacon.beacon.service.ScanState: void save()>: throw $r22
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: return r1
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: return r1
<org.altbeacon.beacon.service.ScanJob$1: void run()>: virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
<org.altbeacon.beacon.service.ScanState: void save()>: $r21 = r0.<org.altbeacon.beacon.service.ScanState: org.altbeacon.beacon.service.MonitoringStatus mMonitoringStatus>
<org.altbeacon.beacon.service.ScanState: void save()>: virtualinvoke $r21.<org.altbeacon.beacon.service.MonitoringStatus: void saveMonitoringStatusIfOn()>()
<org.altbeacon.beacon.service.MonitoringStatus: void saveMonitoringStatusIfOn()>: return
<org.altbeacon.beacon.service.ScanState: void save()>: $r21 = r0.<org.altbeacon.beacon.service.ScanState: org.altbeacon.beacon.service.MonitoringStatus mMonitoringStatus>
<org.altbeacon.beacon.service.ScanState: void save()>: throw $r22
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: return r1
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r8 = staticinvoke <org.altbeacon.beacon.service.ScanJob: android.os.Handler access$400(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: android.os.Handler access$400(org.altbeacon.beacon.service.ScanJob)>: return r1
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: return r1
<org.altbeacon.beacon.service.ScanJob$1: void run()>: virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
<org.altbeacon.beacon.service.ScanState: void save()>: virtualinvoke $r23.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0)
