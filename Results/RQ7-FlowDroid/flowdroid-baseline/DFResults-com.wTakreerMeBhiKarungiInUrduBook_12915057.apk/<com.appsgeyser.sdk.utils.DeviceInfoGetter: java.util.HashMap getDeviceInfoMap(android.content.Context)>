    public static java.util.HashMap getDeviceInfoMap(android.content.Context)
    {
        java.lang.Throwable $r2;
        android.content.Context $r0;
        int $i0;
        java.util.HashMap $r3;
        java.lang.String $r1;
        java.io.UnsupportedEncodingException $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>(9);

     label1:
        $i0 = staticinvoke <com.appsgeyser.sdk.utils.DeviceInfoGetter: int getScreenSizeDpi(android.content.Context)>($r0);

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8");

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("dpi", $r1);

        $r1 = staticinvoke <com.appsgeyser.sdk.utils.DeviceInfoGetter: java.lang.String getScreenResolution(android.content.Context)>($r0);

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8");

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("screenresolution", $r1);

        $i0 = staticinvoke <com.appsgeyser.sdk.utils.DeviceInfoGetter: int getAndroidOsVersionInt()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8");

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("androidversion", $r1);

        $z0 = staticinvoke <com.appsgeyser.sdk.utils.DeviceInfoGetter: boolean isTablet(android.content.Context)>($r0);

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8");

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("istablet", $r1);

        $r1 = staticinvoke <com.appsgeyser.sdk.utils.DeviceInfoGetter: java.lang.String getManufacturer()>();

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8");

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("manufacturer", $r1);

        $r1 = staticinvoke <com.appsgeyser.sdk.utils.DeviceInfoGetter: java.lang.String getDeviceName()>();

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8");

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("devicename", $r1);

        $r1 = staticinvoke <com.appsgeyser.sdk.utils.DeviceInfoGetter: java.lang.String getConnectType(android.content.Context)>($r0);

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8");

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("connectiontype", $r1);

        $r1 = staticinvoke <com.appsgeyser.sdk.utils.DeviceInfoGetter: java.lang.String getOperatorName(android.content.Context)>($r0);

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8");

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("operator", $r1);

     label2:
        return $r3;

     label3:
        $r2 := @caughtexception;

        $r4 = (java.io.UnsupportedEncodingException) $r2;

        virtualinvoke $r4.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return null;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
