Source: $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r3, $r1)
$r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r3, $r1) in <com.appsgeyser.sdk.configuration.PreferencesCoder: java.lang.String getPrefString(java.lang.String,java.lang.String)>
Sink: virtualinvoke $r23.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0) in <org.altbeacon.beacon.service.ScanState: void save()>

<com.appsgeyser.sdk.configuration.PreferencesCoder: java.lang.String getPrefString(java.lang.String,java.lang.String)>: $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r3, $r1)
<com.appsgeyser.sdk.configuration.PreferencesCoder: java.lang.String getPrefString(java.lang.String,java.lang.String)>: return $r3
<com.appsgeyser.sdk.configuration.Configuration: java.lang.String getTemplateVersion()>: return $r1
<com.appsgeyser.sdk.server.StatController: void sendRequestAsyncByKey(java.lang.String,java.util.HashMap,android.content.Context,boolean)>: virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("templateversion", $r6)
<com.appsgeyser.sdk.server.StatController: void sendRequestAsyncByKey(java.lang.String,java.util.HashMap,android.content.Context,boolean)>: return
<com.appsgeyser.sdk.inapp.InAppPurchaseController: void lambda$acknowledgeDisableAdsPurchase$1$InAppPurchaseController(com.android.billingclient.api.Purchase,com.android.billingclient.api.BillingResult)>: $r3 = r0.<com.appsgeyser.sdk.inapp.InAppPurchaseController: java.util.HashMap reportingDetails>
<com.appsgeyser.sdk.inapp.InAppPurchaseController: void lambda$acknowledgeDisableAdsPurchase$1$InAppPurchaseController(com.android.billingclient.api.Purchase,com.android.billingclient.api.BillingResult)>: return
<com.appsgeyser.sdk.inapp.'-$$Lambda$InAppPurchaseController$R9IiAlFHgWXav9fz58GjvCy222Q': void onAcknowledgePurchaseResponse(com.android.billingclient.api.BillingResult)>: $r2 = r0.<com.appsgeyser.sdk.inapp.'-$$Lambda$InAppPurchaseController$R9IiAlFHgWXav9fz58GjvCy222Q': com.appsgeyser.sdk.inapp.InAppPurchaseController f$0>
<com.appsgeyser.sdk.inapp.'-$$Lambda$InAppPurchaseController$R9IiAlFHgWXav9fz58GjvCy222Q': void onAcknowledgePurchaseResponse(com.android.billingclient.api.BillingResult)>: r0 := @this: com.appsgeyser.sdk.inapp.-$$Lambda$InAppPurchaseController$R9IiAlFHgWXav9fz58GjvCy222Q
<com.android.billingclient.api.BillingClientImpl$19: void run()>: $r1 = r0.<com.android.billingclient.api.BillingClientImpl$19: com.android.billingclient.api.AcknowledgePurchaseResponseListener val$listener>
<com.android.billingclient.api.BillingClientImpl$19: void run()>: r0 := @this: com.android.billingclient.api.BillingClientImpl$19
<com.android.billingclient.api.BillingClientImpl$20: void run()>: $r2 = r0.<com.android.billingclient.api.BillingClientImpl$20: java.lang.Runnable val$onTimeout>
<com.android.billingclient.api.BillingClientImpl$20: void run()>: r0 := @this: com.android.billingclient.api.BillingClientImpl$20
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>: return 1
<com.mopub.mobileads.MoPubInterstitial: boolean attemptStateTransition(com.mopub.mobileads.MoPubInterstitial$InterstitialState,boolean)>: $r8 = r0.<com.mopub.mobileads.MoPubInterstitial: java.lang.Runnable mAdExpiration>
<com.mopub.mobileads.MoPubInterstitial: boolean attemptStateTransition(com.mopub.mobileads.MoPubInterstitial$InterstitialState,boolean)>: throw $r12
<com.mopub.mobileads.MoPubInterstitial: boolean attemptStateTransition(com.mopub.mobileads.MoPubInterstitial$InterstitialState)>: return $z0
<com.mopub.mobileads.MoPubInterstitial: boolean show()>: return $z0
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$5: void lambda$onInterstitialLoaded$0$FastTrackMopubAdapter$5(com.appsgeyser.sdk.ui.AppsgeyserProgressDialog)>: $r1 = staticinvoke <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: com.mopub.mobileads.MoPubInterstitial access$1000(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter)>($r4)
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: com.mopub.mobileads.MoPubInterstitial access$1000(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter)>: r1 = $r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: com.mopub.mobileads.MoPubInterstitial interstitialAd>
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: com.mopub.mobileads.MoPubInterstitial access$1000(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter)>: return r1
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$5: void lambda$onInterstitialLoaded$0$FastTrackMopubAdapter$5(com.appsgeyser.sdk.ui.AppsgeyserProgressDialog)>: $r4 = r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$5: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter this$0>
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$5: void lambda$onInterstitialLoaded$0$FastTrackMopubAdapter$5(com.appsgeyser.sdk.ui.AppsgeyserProgressDialog)>: return
<com.appsgeyser.sdk.ads.fastTrack.adapters.'-$$Lambda$FastTrackMopubAdapter$5$M4E6jp8M6B8clExu65dwsjsbQe0': void run()>: $r1 = r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.'-$$Lambda$FastTrackMopubAdapter$5$M4E6jp8M6B8clExu65dwsjsbQe0': com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$5 f$0>
<com.appsgeyser.sdk.ads.fastTrack.adapters.'-$$Lambda$FastTrackMopubAdapter$5$M4E6jp8M6B8clExu65dwsjsbQe0': void run()>: r0 := @this: com.appsgeyser.sdk.ads.fastTrack.adapters.-$$Lambda$FastTrackMopubAdapter$5$M4E6jp8M6B8clExu65dwsjsbQe0
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>: this := @this: android.os.Handler
<com.appnext.core.AdsService: void addPack(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>: $r8 = r0.<com.appnext.core.AdsService: java.lang.Runnable gg>
<com.appnext.core.AdsService: void addPack(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>: return
<com.appnext.core.AdsService: void onHandleIntent(android.content.Intent)>: return
<dummyMainClass: com.appnext.core.AdsService dummyMainMethod_com_appnext_core_AdsService(android.content.Intent)>: virtualinvoke $r0.<com.appnext.core.AdsService: void onHandleIntent(android.content.Intent)>(null)
<com.appnext.core.AdsService: void onHandleIntent(android.content.Intent)>: virtualinvoke r0.<com.appnext.core.AdsService: void addPack(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>($r2, $r3, $r5)
<com.appnext.core.AdsService: void addPack(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>: $r8 = r0.<com.appnext.core.AdsService: java.lang.Runnable gg>
<com.appnext.core.AdsService: void addPack(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>: virtualinvoke $r7.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r8, 10000L)
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>: interfaceinvoke param0.<java.lang.Runnable: void run()>()
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: return r1
<org.altbeacon.beacon.service.ScanJob$1: void run()>: virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
<org.altbeacon.beacon.service.ScanState: void save()>: throw $r22
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: return r1
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: return r1
<org.altbeacon.beacon.service.ScanJob$1: void run()>: virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
<org.altbeacon.beacon.service.ScanState: void save()>: $r21 = r0.<org.altbeacon.beacon.service.ScanState: org.altbeacon.beacon.service.MonitoringStatus mMonitoringStatus>
<org.altbeacon.beacon.service.ScanState: void save()>: virtualinvoke $r21.<org.altbeacon.beacon.service.MonitoringStatus: void saveMonitoringStatusIfOn()>()
<org.altbeacon.beacon.service.MonitoringStatus: void saveMonitoringStatusIfOn()>: return
<org.altbeacon.beacon.service.ScanState: void save()>: $r21 = r0.<org.altbeacon.beacon.service.ScanState: org.altbeacon.beacon.service.MonitoringStatus mMonitoringStatus>
<org.altbeacon.beacon.service.ScanState: void save()>: throw $r22
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: return r1
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r8 = staticinvoke <org.altbeacon.beacon.service.ScanJob: android.os.Handler access$400(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: android.os.Handler access$400(org.altbeacon.beacon.service.ScanJob)>: return r1
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: return r1
<org.altbeacon.beacon.service.ScanJob$1: void run()>: virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
<org.altbeacon.beacon.service.ScanState: void save()>: virtualinvoke $r23.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0)
