Source: $r1 = interfaceinvoke $r7.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r0, $r1)
$r1 = interfaceinvoke $r7.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r0, $r1) in <com.onesignal.OneSignalPrefs: java.lang.Object get(java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>
Sink: virtualinvoke $r23.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0) in <org.altbeacon.beacon.service.ScanState: void save()>

<com.onesignal.OneSignalPrefs: java.lang.Object get(java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>: $r1 = interfaceinvoke $r7.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r0, $r1)
<com.onesignal.OneSignalPrefs: java.lang.Object get(java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>: return $r1
<com.onesignal.OneSignalPrefs: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>: $r3 = (java.lang.String) $r2
<com.onesignal.OneSignalPrefs: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>: return $r3
<com.onesignal.UserState: void loadState()>: specialinvoke $r8.<org.json.JSONObject: void <init>(java.lang.String)>($r2)
<com.onesignal.UserState: void loadState()>: r0.<com.onesignal.UserState: org.json.JSONObject dependValues> = $r8
<com.onesignal.UserState: void loadState()>: return
<com.onesignal.UserState: void <init>(java.lang.String,boolean)>: return
<com.onesignal.UserStateEmail: void <init>(java.lang.String,boolean)>: return
<com.onesignal.UserStateEmailSynchronizer: com.onesignal.UserState newUserState(java.lang.String,boolean)>: return $r2
<com.onesignal.UserStateSynchronizer: com.onesignal.UserState getToSyncUserState()>: r0.<com.onesignal.UserStateSynchronizer: com.onesignal.UserState toSyncUserState> = $r1
<com.onesignal.UserStateSynchronizer: com.onesignal.UserState getToSyncUserState()>: return $r1
<com.onesignal.UserStateSynchronizer: void internalSyncUserState(boolean)>: throw $r8
<com.onesignal.UserStateSynchronizer: void syncUserState(boolean)>: return
<com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1: void run()>: $r2 = $r1.<com.onesignal.UserStateSynchronizer$NetworkHandlerThread: com.onesignal.UserStateSynchronizer this$0>
<com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1: void run()>: $r1 = r0.<com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1: com.onesignal.UserStateSynchronizer$NetworkHandlerThread this$1>
<com.onesignal.UserStateSynchronizer$NetworkHandlerThread$1: void run()>: return
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>: this := @this: android.os.Handler
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4: void run()>: $r11 = staticinvoke <com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter)>($r1)
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter)>: r1 = $r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: java.lang.Runnable bannerViewRepeatRequestRunnable>
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter: java.lang.Runnable access$300(com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter)>: return r1
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4: void run()>: $r1 = r0.<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter this$0>
<com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4: void run()>: r0 := @this: com.appsgeyser.sdk.ads.fastTrack.adapters.FastTrackMopubAdapter$4
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>: this := @this: android.os.Handler
<com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>: $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
<com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>: r0 := @this: com.mopub.mobileads.CustomEventInterstitialAdapter
<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>: $r8 = staticinvoke <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>($r7)
<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>: r1 = $r0.<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter mCustomEventInterstitialAdapter>
<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>: return r1
<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>: $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>: $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>: $r8 = staticinvoke <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>($r7)
<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>: return r1
<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>: $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>: $r7 = r0.<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: com.mopub.mobileads.MoPubInterstitial this$0>
<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>: $r8 = staticinvoke <com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>($r7)
<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>: r1 = $r0.<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter mCustomEventInterstitialAdapter>
<com.mopub.mobileads.MoPubInterstitial: com.mopub.mobileads.CustomEventInterstitialAdapter access$200(com.mopub.mobileads.MoPubInterstitial)>: return r1
<com.mopub.mobileads.MoPubInterstitial$MoPubInterstitialView: void loadCustomEvent(java.lang.String,java.util.Map)>: virtualinvoke $r8.<com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>()
<com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>: $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
<com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>: virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, $l1)
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>: interfaceinvoke param0.<java.lang.Runnable: void run()>()
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: return r1
<org.altbeacon.beacon.service.ScanJob$1: void run()>: virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
<org.altbeacon.beacon.service.ScanState: void save()>: throw $r22
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: $r0 := @parameter0: org.altbeacon.beacon.service.ScanJob
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: return
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>: this := @this: android.os.Handler
<com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>: $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
<com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>: $r6 = r0.<com.mopub.mobileads.CustomEventInterstitialAdapter: java.lang.Runnable mTimeout>
<com.mopub.mobileads.CustomEventInterstitialAdapter: void loadInterstitial()>: virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, $l1)
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>: interfaceinvoke param0.<java.lang.Runnable: void run()>()
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: staticinvoke <org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>: specialinvoke $r0.<org.altbeacon.beacon.service.ScanJob: void stopScanning()>()
<org.altbeacon.beacon.service.ScanJob: void stopScanning()>: $r1 = r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanHelper mScanHelper>
<org.altbeacon.beacon.service.ScanJob: void stopScanning()>: $r2 = virtualinvoke $r1.<org.altbeacon.beacon.service.ScanHelper: org.altbeacon.beacon.service.scanner.CycledLeScanner getCycledScanner()>()
<org.altbeacon.beacon.service.ScanHelper: org.altbeacon.beacon.service.scanner.CycledLeScanner getCycledScanner()>: return r1
<org.altbeacon.beacon.service.ScanJob: void stopScanning()>: $r1 = r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanHelper mScanHelper>
<org.altbeacon.beacon.service.ScanJob: void stopScanning()>: r0 := @this: org.altbeacon.beacon.service.ScanJob
<org.altbeacon.beacon.service.ScanJob: void access$100(org.altbeacon.beacon.service.ScanJob)>: $r0 := @parameter0: org.altbeacon.beacon.service.ScanJob
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r4 = r0.<org.altbeacon.beacon.service.ScanJob$1: org.altbeacon.beacon.service.ScanJob this$0>
<org.altbeacon.beacon.service.ScanJob$1: void run()>: $r6 = staticinvoke <org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>($r4)
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: r1 = $r0.<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState mScanState>
<org.altbeacon.beacon.service.ScanJob: org.altbeacon.beacon.service.ScanState access$200(org.altbeacon.beacon.service.ScanJob)>: return r1
<org.altbeacon.beacon.service.ScanJob$1: void run()>: virtualinvoke $r6.<org.altbeacon.beacon.service.ScanState: void save()>()
<org.altbeacon.beacon.service.ScanState: void save()>: virtualinvoke $r23.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0)
