Source: $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.agent")
$r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.agent") in <com.getvictorious.d: java.lang.String f()>
Sink: interfaceinvoke $r1.<java.io.ObjectOutput: void writeObject(java.lang.Object)>($r0) in <com.getvictorious.utils.f: byte[] a(java.lang.Object)>

<com.getvictorious.d: java.lang.String f()>: $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.agent")
<com.getvictorious.d: java.lang.String f()>: return $r0
<com.getvictorious.net.ApiRequest: void <init>(java.lang.Class,boolean,boolean,int)>: $r6[0] = $r7
<com.getvictorious.net.ApiRequest: void <init>(java.lang.Class,boolean,boolean,int)>: $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s:%s %s:%s %s:%d", $r6)
<com.getvictorious.net.ApiRequest: void <init>(java.lang.Class,boolean,boolean,int)>: r0.<com.getvictorious.net.ApiRequest: java.lang.String mUserAgent> = $r5
<com.getvictorious.net.ApiRequest: void <init>(java.lang.Class,boolean,boolean,int)>: return
<com.getvictorious.net.GetRequest: void <init>(java.lang.Class,boolean)>: return
<com.getvictorious.net.UserInfoFetchRequest: void <init>(java.lang.String[])>: return
<com.getvictorious.net.Requests: com.getvictorious.utils.g getUsers(com.getvictorious.b.a.a,java.lang.String[])>: $r3 = virtualinvoke $r4.<com.getvictorious.net.VolleyTask: com.getvictorious.utils.g execute(com.getvictorious.net.ApiRequest)>($r2)
<com.getvictorious.net.VolleyTask: com.getvictorious.utils.g execute(com.getvictorious.net.ApiRequest)>: specialinvoke $r14.<com.getvictorious.net.VolleyTask$1: void <init>(com.getvictorious.net.VolleyTask,int,java.lang.String,com.a.b.v,com.a.b.u,com.getvictorious.net.ApiRequest)>(r0, $i0, $r5, $r2, $r2, $r1)
<com.getvictorious.net.VolleyTask$1: void <init>(com.getvictorious.net.VolleyTask,int,java.lang.String,com.a.b.v,com.a.b.u,com.getvictorious.net.ApiRequest)>: r0.<com.getvictorious.net.VolleyTask$1: com.getvictorious.net.ApiRequest val$request> = $r5
<com.getvictorious.net.VolleyTask$1: void <init>(com.getvictorious.net.VolleyTask,int,java.lang.String,com.a.b.v,com.a.b.u,com.getvictorious.net.ApiRequest)>: return
<com.getvictorious.net.VolleyTask: com.getvictorious.utils.g execute(com.getvictorious.net.ApiRequest)>: r0.<com.getvictorious.net.VolleyTask: com.a.b.a.k mStringRequest> = $r14
<com.getvictorious.net.VolleyTask: com.getvictorious.utils.g execute(com.getvictorious.net.ApiRequest)>: return r0
<com.getvictorious.net.Requests: com.getvictorious.utils.g getUsers(com.getvictorious.b.a.a,java.lang.String[])>: return $r3
<com.getvictorious.fragments.ProfileFragment: void callRequests()>: r0.<com.getvictorious.fragments.ProfileFragment: com.getvictorious.utils.g mCurrentUserTask> = $r9
<com.getvictorious.fragments.ProfileFragment: void callRequests()>: specialinvoke $r10.<com.getvictorious.fragments.ProfileFragment$UserFollowCountsCallback: void <init>(com.getvictorious.fragments.ProfileFragment)>(r0)
<com.getvictorious.fragments.ProfileFragment$UserFollowCountsCallback: void <init>(com.getvictorious.fragments.ProfileFragment)>: specialinvoke r0.<com.getvictorious.b.a.d: void <init>(java.lang.Object)>($r1)
<com.getvictorious.b.a.d: void <init>(java.lang.Object)>: specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1)
<com.getvictorious.b.a.d: void <init>(java.lang.Object)>: r0.<com.getvictorious.b.a.d: java.lang.ref.WeakReference callerRef> = $r2
<com.getvictorious.b.a.d: void <init>(java.lang.Object)>: return
<com.getvictorious.fragments.ProfileFragment$UserFollowCountsCallback: void <init>(com.getvictorious.fragments.ProfileFragment)>: return
<com.getvictorious.fragments.ProfileFragment: void callRequests()>: $r9 = staticinvoke <com.getvictorious.net.Requests: com.getvictorious.utils.g getFollowCounts(com.getvictorious.b.a.a,java.lang.String)>($r10, $r8)
<com.getvictorious.net.Requests: com.getvictorious.utils.g getFollowCounts(com.getvictorious.b.a.a,java.lang.String)>: specialinvoke $r4.<com.getvictorious.net.VolleyTask: void <init>(com.getvictorious.b.a.a)>($r0)
<com.getvictorious.net.VolleyTask: void <init>(com.getvictorious.b.a.a)>: r0.<com.getvictorious.net.VolleyTask: com.getvictorious.b.a.a mCallback> = $r1
<com.getvictorious.net.VolleyTask: void <init>(com.getvictorious.b.a.a)>: return
<com.getvictorious.net.Requests: com.getvictorious.utils.g getFollowCounts(com.getvictorious.b.a.a,java.lang.String)>: $r3 = virtualinvoke $r4.<com.getvictorious.net.VolleyTask: com.getvictorious.utils.g execute(com.getvictorious.net.ApiRequest)>($r2)
<com.getvictorious.net.VolleyTask: com.getvictorious.utils.g execute(com.getvictorious.net.ApiRequest)>: $r3 = r0.<com.getvictorious.net.VolleyTask: com.getvictorious.b.a.a mCallback>
<com.getvictorious.net.VolleyTask: com.getvictorious.utils.g execute(com.getvictorious.net.ApiRequest)>: interfaceinvoke $r3.<com.getvictorious.b.a.a: void onFailure(com.getvictorious.b.b)>($r13)
<com.getvictorious.b.a.d: void onFailure(com.getvictorious.b.b)>: return
<com.getvictorious.net.VolleyTask: com.getvictorious.utils.g execute(com.getvictorious.net.ApiRequest)>: $r3 = r0.<com.getvictorious.net.VolleyTask: com.getvictorious.b.a.a mCallback>
<com.getvictorious.net.VolleyTask: com.getvictorious.utils.g execute(com.getvictorious.net.ApiRequest)>: $r3 = r0.<com.getvictorious.net.VolleyTask: com.getvictorious.b.a.a mCallback>
<com.getvictorious.net.VolleyTask: com.getvictorious.utils.g execute(com.getvictorious.net.ApiRequest)>: interfaceinvoke $r3.<com.getvictorious.b.a.a: void onFailure(com.getvictorious.b.b)>($r13)
<com.getvictorious.model.Model$LoginCallback: void onFailure(com.getvictorious.b.b)>: $r2 = r0.<com.getvictorious.model.Model$LoginCallback: com.getvictorious.model.Model this$0>
<com.getvictorious.model.Model$LoginCallback: void onFailure(com.getvictorious.b.b)>: virtualinvoke $r2.<com.getvictorious.model.Model: boolean loginFallback()>()
<com.getvictorious.model.Model: boolean loginFallback()>: $z0 = specialinvoke r0.<com.getvictorious.model.Model: boolean reuseToken()>()
<com.getvictorious.model.Model: boolean reuseToken()>: $r1 = virtualinvoke r0.<com.getvictorious.model.Model: com.getvictorious.model.festival.UserLogin getUserLogin()>()
<com.getvictorious.model.Model: com.getvictorious.model.festival.UserLogin getUserLogin()>: $r1 = r0.<com.getvictorious.model.Model: com.getvictorious.model.festival.UserLogin userLogin>
<com.getvictorious.model.Model: com.getvictorious.model.festival.UserLogin getUserLogin()>: return $r1
<com.getvictorious.model.Model: boolean reuseToken()>: virtualinvoke r0.<com.getvictorious.model.Model: void setUserLogin(com.getvictorious.model.festival.UserLogin)>($r1)
<com.getvictorious.model.Model: void setUserLogin(com.getvictorious.model.festival.UserLogin)>: r0.<com.getvictorious.model.Model: com.getvictorious.model.festival.UserLogin userLogin> = $r1
<com.getvictorious.model.Model: void setUserLogin(com.getvictorious.model.festival.UserLogin)>: virtualinvoke r0.<com.getvictorious.model.Model: void notifyChange(com.getvictorious.model.Model$Event,java.lang.Object)>($r4, $r1)
<com.getvictorious.model.Model: void notifyChange(com.getvictorious.model.Model$Event,java.lang.Object)>: interfaceinvoke $r6.<com.getvictorious.model.Model$ModelListener: void onModelChanged(com.getvictorious.model.Model,com.getvictorious.model.Model$Event,java.lang.Object)>(r0, $r1, $r2)
<com.getvictorious.fragments.ProfileFragment: void onModelChanged(com.getvictorious.model.Model,com.getvictorious.model.Model$Event,java.lang.Object)>: return
<com.getvictorious.model.Model: void notifyChange(com.getvictorious.model.Model$Event,java.lang.Object)>: interfaceinvoke $r6.<com.getvictorious.model.Model$ModelListener: void onModelChanged(com.getvictorious.model.Model,com.getvictorious.model.Model$Event,java.lang.Object)>(r0, $r1, $r2)
<com.getvictorious.fragments.ProfileFragment: void onModelChanged(com.getvictorious.model.Model,com.getvictorious.model.Model$Event,java.lang.Object)>: return
<com.getvictorious.model.Model: void notifyChange(com.getvictorious.model.Model$Event,java.lang.Object)>: return
<com.getvictorious.model.Model: void setUserLogin(com.getvictorious.model.festival.UserLogin)>: return
<com.getvictorious.model.Model: boolean reuseToken()>: $r1 = virtualinvoke r0.<com.getvictorious.model.Model: com.getvictorious.model.festival.UserLogin getUserLogin()>()
<com.getvictorious.model.Model: com.getvictorious.model.festival.UserLogin getUserLogin()>: $r1 = r0.<com.getvictorious.model.Model: com.getvictorious.model.festival.UserLogin userLogin>
<com.getvictorious.model.Model: com.getvictorious.model.festival.UserLogin getUserLogin()>: virtualinvoke $r1.<com.getvictorious.model.festival.UserLogin: void setToken(java.lang.String)>($r3)
<com.getvictorious.model.festival.UserLogin: void setToken(java.lang.String)>: return
<com.getvictorious.model.Model: com.getvictorious.model.festival.UserLogin getUserLogin()>: $r1 = r0.<com.getvictorious.model.Model: com.getvictorious.model.festival.UserLogin userLogin>
<com.getvictorious.model.Model: com.getvictorious.model.festival.UserLogin getUserLogin()>: return $r1
<com.getvictorious.model.Model: boolean reuseToken()>: r0 := @this: com.getvictorious.model.Model
<com.getvictorious.model.Model: boolean loginFallback()>: $z0 = specialinvoke r0.<com.getvictorious.model.Model: boolean reuseToken()>()
<com.getvictorious.model.Model: boolean reuseToken()>: $r1 = virtualinvoke r0.<com.getvictorious.model.Model: com.getvictorious.model.festival.UserLogin getUserLogin()>()
<com.getvictorious.model.Model: com.getvictorious.model.festival.UserLogin getUserLogin()>: $r1 = r0.<com.getvictorious.model.Model: com.getvictorious.model.festival.UserLogin userLogin>
<com.getvictorious.model.Model: com.getvictorious.model.festival.UserLogin getUserLogin()>: return $r1
<com.getvictorious.model.Model: boolean reuseToken()>: $r2 = virtualinvoke $r1.<com.getvictorious.model.festival.UserLogin: java.lang.String getToken()>()
<com.getvictorious.model.festival.UserLogin: java.lang.String getToken()>: return r1
<com.getvictorious.model.Model: boolean reuseToken()>: virtualinvoke r0.<com.getvictorious.model.Model: void setUserLogin(com.getvictorious.model.festival.UserLogin)>($r1)
<com.getvictorious.model.Model: void setUserLogin(com.getvictorious.model.festival.UserLogin)>: staticinvoke <com.getvictorious.utils.f: void a(com.getvictorious.model.festival.UserLogin,com.getvictorious.utils.f)>($r1, $r3)
<com.getvictorious.utils.f: void a(com.getvictorious.model.festival.UserLogin,com.getvictorious.utils.f)>: staticinvoke <com.getvictorious.utils.f: void a(com.getvictorious.model.festival.UserLogin,android.database.sqlite.SQLiteDatabase)>($r0, $r2)
<com.getvictorious.utils.f: void a(com.getvictorious.model.festival.UserLogin,android.database.sqlite.SQLiteDatabase)>: $r3 = staticinvoke <com.getvictorious.utils.f: byte[] a(java.lang.Object)>($r0)
<com.getvictorious.utils.f: byte[] a(java.lang.Object)>: interfaceinvoke $r1.<java.io.ObjectOutput: void writeObject(java.lang.Object)>($r0)
