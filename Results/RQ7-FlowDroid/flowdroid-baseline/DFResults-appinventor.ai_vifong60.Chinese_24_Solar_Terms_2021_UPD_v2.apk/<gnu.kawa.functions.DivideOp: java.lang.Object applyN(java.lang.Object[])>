    public java.lang.Object applyN(java.lang.Object[]) throws java.lang.Throwable
    {
        gnu.math.RatNum $r8;
        java.math.BigDecimal $r9, $r10;
        byte $b9;
        gnu.math.IntNum $r3, $r7;
        boolean $z0;
        java.math.RoundingMode r11;
        java.math.MathContext $r15;
        gnu.kawa.functions.DivideOp r0;
        gnu.math.Numeric $r5, $r6, $r12, r13;
        float $f0;
        java.lang.Object[] $r1;
        long $l7, $l8;
        gnu.math.RealNum r14;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6;
        java.lang.Number $r16;
        double $d0, d1, $d2;
        java.lang.Object r2, r4;

        r0 := @this: gnu.kawa.functions.DivideOp;

        $r1 := @parameter0: java.lang.Object[];

        $i0 = lengthof $r1;

        if $i0 != 0 goto label01;

        $r3 = staticinvoke <gnu.math.IntNum: gnu.math.IntNum one()>();

        return $r3;

     label01:
        r2 = $r1[0];

        r4 = (java.lang.Number) r2;

        if $i0 != 1 goto label02;

        $r3 = staticinvoke <gnu.math.IntNum: gnu.math.IntNum one()>();

        r2 = virtualinvoke r0.<gnu.kawa.functions.DivideOp: java.lang.Object apply2(java.lang.Object,java.lang.Object)>($r3, r4);

        return r2;

     label02:
        i2 = staticinvoke <gnu.kawa.functions.Arithmetic: int classifyValue(java.lang.Object)>(r4);

        $i1 = 1;

     label03:
        if $i1 >= $i0 goto label58;

        r2 = $r1[$i1];

        $i3 = staticinvoke <gnu.kawa.functions.Arithmetic: int classifyValue(java.lang.Object)>(r2);

        if i2 >= $i3 goto label04;

        i2 = $i3;

     label04:
        $i3 = i2;

        if i2 >= 4 goto label06;

        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        lookupswitch($i4)
        {
            case 4: goto label09;
            case 5: goto label09;
            default: goto label05;
        };

     label05:
        $i4 = r0.<gnu.kawa.functions.DivideOp: int rounding_mode>;

        if $i4 != 3 goto label10;

        if i2 == 1 goto label06;

        if i2 != 2 goto label10;

     label06:
        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        if $i4 != 5 goto label11;

        if i2 > 10 goto label11;

        $i3 = 10;

        if i2 == 8 goto label07;

        if i2 == 7 goto label07;

        i2 = 9;

     label07:
        lookupswitch($i3)
        {
            case 1: goto label13;
            case 2: goto label19;
            case 3: goto label08;
            case 4: goto label23;
            case 5: goto label29;
            case 6: goto label08;
            case 7: goto label08;
            case 8: goto label08;
            case 9: goto label41;
            default: goto label08;
        };

     label08:
        $r5 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.Numeric asNumeric(java.lang.Object)>(r4);

        $r6 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.Numeric asNumeric(java.lang.Object)>(r2);

        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        if $i4 != 8 goto label47;

        $z0 = virtualinvoke $r6.<gnu.math.Numeric: boolean isZero()>();

        if $z0 == 0 goto label47;

        $z0 = virtualinvoke $r6.<gnu.math.Numeric: boolean isExact()>();

        if $z0 != 0 goto label59;

        $r5 = virtualinvoke $r5.<gnu.math.Numeric: gnu.math.Numeric toInexact()>();

        return $r5;

     label09:
        i2 = 4;

        $i3 = 4;

        goto label06;

     label10:
        $i3 = 4;

        goto label06;

     label11:
        if $i3 == 8 goto label12;

        if $i3 != 7 goto label07;

     label12:
        $i3 = 9;

        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        if $i4 != 7 goto label07;

        i2 = 9;

        goto label07;

     label13:
        $i4 = staticinvoke <gnu.kawa.functions.Arithmetic: int asInt(java.lang.Object)>(r4);

        $i5 = staticinvoke <gnu.kawa.functions.Arithmetic: int asInt(java.lang.Object)>(r2);

        $i6 = r0.<gnu.kawa.functions.DivideOp: int op>;

        lookupswitch($i6)
        {
            case 8: goto label18;
            default: goto label14;
        };

     label14:
        $i4 = $i4 / $i5;

     label15:
        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

     label16:
        if i2 == $i3 goto label17;

        lookupswitch(i2)
        {
            case 1: goto label53;
            case 2: goto label54;
            case 3: goto label57;
            case 4: goto label17;
            case 5: goto label17;
            case 6: goto label17;
            case 7: goto label55;
            case 8: goto label56;
            default: goto label17;
        };

     label17:
        $i1 = $i1 + 1;

        goto label03;

     label18:
        $i4 = $i4 % $i5;

        goto label15;

     label19:
        $l7 = staticinvoke <gnu.kawa.functions.Arithmetic: long asLong(java.lang.Object)>(r4);

        $l8 = staticinvoke <gnu.kawa.functions.Arithmetic: long asLong(java.lang.Object)>(r2);

        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        lookupswitch($i4)
        {
            case 8: goto label22;
            default: goto label20;
        };

     label20:
        $l7 = $l7 / $l8;

     label21:
        r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        goto label16;

     label22:
        $l7 = $l7 % $l8;

        goto label21;

     label23:
        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        lookupswitch($i4)
        {
            case 4: goto label24;
            case 5: goto label16;
            case 6: goto label26;
            case 7: goto label26;
            case 8: goto label27;
            default: goto label16;
        };

     label24:
        $r3 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.IntNum asIntNum(java.lang.Object)>(r4);

        $r7 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.IntNum asIntNum(java.lang.Object)>(r2);

        $r8 = staticinvoke <gnu.math.RatNum: gnu.math.RatNum make(gnu.math.IntNum,gnu.math.IntNum)>($r3, $r7);

        r4 = $r8;

        $z0 = $r8 instanceof gnu.math.IntNum;

        if $z0 == 0 goto label28;

        i2 = 4;

     label25:
        $i3 = i2;

        goto label16;

     label26:
        $r3 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.IntNum asIntNum(java.lang.Object)>(r4);

        $r7 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.IntNum asIntNum(java.lang.Object)>(r2);

        $i4 = virtualinvoke r0.<gnu.kawa.functions.DivideOp: int getRoundingMode()>();

        r4 = staticinvoke <gnu.math.IntNum: gnu.math.IntNum quotient(gnu.math.IntNum,gnu.math.IntNum,int)>($r3, $r7, $i4);

        goto label16;

     label27:
        $r3 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.IntNum asIntNum(java.lang.Object)>(r4);

        $r7 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.IntNum asIntNum(java.lang.Object)>(r2);

        $i4 = virtualinvoke r0.<gnu.kawa.functions.DivideOp: int getRoundingMode()>();

        r4 = staticinvoke <gnu.math.IntNum: gnu.math.IntNum remainder(gnu.math.IntNum,gnu.math.IntNum,int)>($r3, $r7, $i4);

        goto label16;

     label28:
        i2 = 6;

        goto label25;

     label29:
        $r9 = staticinvoke <gnu.kawa.functions.Arithmetic: java.math.BigDecimal asBigDecimal(java.lang.Object)>(r4);

        $r10 = staticinvoke <gnu.kawa.functions.Arithmetic: java.math.BigDecimal asBigDecimal(java.lang.Object)>(r2);

        $i4 = virtualinvoke r0.<gnu.kawa.functions.DivideOp: int getRoundingMode()>();

        lookupswitch($i4)
        {
            case 1: goto label33;
            case 2: goto label34;
            case 3: goto label35;
            case 4: goto label30;
            case 5: goto label36;
            default: goto label30;
        };

     label30:
        r11 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;

     label31:
        $r15 = new java.math.MathContext;

        specialinvoke $r15.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(0, r11);

        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        lookupswitch($i4)
        {
            case 4: goto label32;
            case 5: goto label16;
            case 6: goto label38;
            case 7: goto label39;
            case 8: goto label40;
            default: goto label16;
        };

     label32:
        r4 = virtualinvoke $r9.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>($r10);

        goto label16;

     label33:
        r11 = <java.math.RoundingMode: java.math.RoundingMode FLOOR>;

        goto label31;

     label34:
        r11 = <java.math.RoundingMode: java.math.RoundingMode CEILING>;

        goto label31;

     label35:
        r11 = <java.math.RoundingMode: java.math.RoundingMode DOWN>;

        goto label31;

     label36:
        $i4 = virtualinvoke $r10.<java.math.BigDecimal: int signum()>();

        if $i4 >= 0 goto label37;

        r11 = <java.math.RoundingMode: java.math.RoundingMode CEILING>;

        goto label30;

     label37:
        r11 = <java.math.RoundingMode: java.math.RoundingMode FLOOR>;

        goto label30;

     label38:
        r4 = virtualinvoke $r9.<java.math.BigDecimal: java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal,java.math.MathContext)>($r10, $r15);

        goto label16;

     label39:
        $r9 = virtualinvoke $r9.<java.math.BigDecimal: java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal,java.math.MathContext)>($r10, $r15);

        r4 = virtualinvoke $r9.<java.math.BigDecimal: java.math.BigInteger toBigInteger()>();

        $i3 = 3;

        i2 = 3;

        goto label16;

     label40:
        r4 = virtualinvoke $r9.<java.math.BigDecimal: java.math.BigDecimal remainder(java.math.BigDecimal,java.math.MathContext)>($r10, $r15);

        goto label16;

     label41:
        $d0 = staticinvoke <gnu.kawa.functions.Arithmetic: double asDouble(java.lang.Object)>(r4);

        d1 = $d0;

        $d2 = staticinvoke <gnu.kawa.functions.Arithmetic: double asDouble(java.lang.Object)>(r2);

        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        lookupswitch($i4)
        {
            case 4: goto label42;
            case 5: goto label42;
            case 6: goto label43;
            case 7: goto label44;
            case 8: goto label45;
            default: goto label16;
        };

     label42:
        $d0 = $d0 / $d2;

        r4 = staticinvoke <gnu.math.DFloNum: gnu.math.DFloNum make(double)>($d0);

        goto label16;

     label43:
        $d0 = $d0 / $d2;

        $i4 = virtualinvoke r0.<gnu.kawa.functions.DivideOp: int getRoundingMode()>();

        $d0 = staticinvoke <gnu.math.RealNum: double toInt(double,int)>($d0, $i4);

        r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        goto label16;

     label44:
        $d0 = $d0 / $d2;

        i2 = virtualinvoke r0.<gnu.kawa.functions.DivideOp: int getRoundingMode()>();

        r4 = staticinvoke <gnu.math.RealNum: gnu.math.IntNum toExactInt(double,int)>($d0, i2);

        $i3 = 4;

        i2 = 4;

        goto label16;

     label45:
        $b9 = $d2 cmpl 0.0;

        if $b9 == 0 goto label46;

        d1 = $d0 / $d2;

        $i4 = virtualinvoke r0.<gnu.kawa.functions.DivideOp: int getRoundingMode()>();

        d1 = staticinvoke <gnu.math.RealNum: double toInt(double,int)>(d1, $i4);

        $d2 = d1 * $d2;

        d1 = $d0 - $d2;

     label46:
        r4 = staticinvoke <gnu.math.DFloNum: gnu.math.DFloNum make(double)>(d1);

        goto label16;

     label47:
        $r12 = virtualinvoke $r5.<gnu.math.Numeric: gnu.math.Numeric div(java.lang.Object)>($r6);

        r13 = $r12;

        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        if $i4 != 8 goto label48;

        r14 = (gnu.math.RealNum) $r12;

        $i4 = virtualinvoke r0.<gnu.kawa.functions.DivideOp: int getRoundingMode()>();

        r14 = virtualinvoke r14.<gnu.math.RealNum: gnu.math.RealNum toInt(int)>($i4);

        $r6 = virtualinvoke r14.<gnu.math.RealNum: gnu.math.Numeric mul(java.lang.Object)>($r6);

        r13 = virtualinvoke $r5.<gnu.math.Numeric: gnu.math.Numeric sub(java.lang.Object)>($r6);

     label48:
        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        lookupswitch($i4)
        {
            case 5: goto label52;
            case 6: goto label51;
            case 7: goto label50;
            default: goto label49;
        };

     label49:
        r4 = r13;

        goto label16;

     label50:
        r14 = (gnu.math.RealNum) r13;

        i2 = r0.<gnu.kawa.functions.DivideOp: int rounding_mode>;

        r4 = virtualinvoke r14.<gnu.math.RealNum: gnu.math.IntNum toExactInt(int)>(i2);

        i2 = 4;

        $i3 = 4;

        goto label16;

     label51:
        r14 = (gnu.math.RealNum) r13;

        $i4 = r0.<gnu.kawa.functions.DivideOp: int rounding_mode>;

        r4 = virtualinvoke r14.<gnu.math.RealNum: gnu.math.RealNum toInt(int)>($i4);

        goto label16;

     label52:
        r4 = virtualinvoke r13.<gnu.math.Numeric: gnu.math.Numeric toInexact()>();

        goto label16;

     label53:
        $r16 = (java.lang.Number) r4;

        $i3 = virtualinvoke $r16.<java.lang.Number: int intValue()>();

        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        goto label17;

     label54:
        $r16 = (java.lang.Number) r4;

        $l7 = virtualinvoke $r16.<java.lang.Number: long longValue()>();

        r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        goto label17;

     label55:
        $r16 = (java.lang.Number) r4;

        $f0 = virtualinvoke $r16.<java.lang.Number: float floatValue()>();

        r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        goto label17;

     label56:
        $r16 = (java.lang.Number) r4;

        $d0 = virtualinvoke $r16.<java.lang.Number: double doubleValue()>();

        r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        goto label17;

     label57:
        r4 = staticinvoke <gnu.kawa.functions.Arithmetic: java.math.BigInteger asBigInteger(java.lang.Object)>(r4);

        goto label17;

     label58:
        return r4;

     label59:
        return $r5;
    }
