    public static final void initialize(android.content.Context)
    {
        com.vk.api.sdk.VKDefaultValidationHandler $r3;
        android.content.Context $r0;
        int $i0;
        com.vk.api.sdk.VK $r2;
        com.vk.api.sdk.VKApiValidationHandler $r4;
        com.vk.api.sdk.VKApiConfig $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "context");

        $r2 = <com.vk.api.sdk.VK: com.vk.api.sdk.VK INSTANCE>;

        $i0 = specialinvoke $r2.<com.vk.api.sdk.VK: int getAppIdFromResources(android.content.Context)>($r0);

        $r1 = new com.vk.api.sdk.VKApiConfig;

        $r3 = new com.vk.api.sdk.VKDefaultValidationHandler;

        specialinvoke $r3.<com.vk.api.sdk.VKDefaultValidationHandler: void <init>(android.content.Context)>($r0);

        $r4 = (com.vk.api.sdk.VKApiValidationHandler) $r3;

        specialinvoke $r1.<com.vk.api.sdk.VKApiConfig: void <init>(android.content.Context,int,com.vk.api.sdk.VKApiValidationHandler,com.vk.api.sdk.VKApiCallListener,kotlin.Lazy,java.lang.String,com.vk.api.sdk.VKOkHttpProvider,com.vk.api.sdk.utils.log.Logger,com.vk.api.sdk.okhttp.LoggingPrefixer,kotlin.Lazy,kotlin.Lazy,java.lang.String,boolean,kotlin.Lazy,int,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.vk.api.sdk.VKKeyValueStorage,kotlin.Lazy,long,com.vk.api.sdk.utils.ApiMethodPriorityBackoff,kotlin.Lazy,kotlin.Lazy,kotlin.Lazy,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r0, $i0, $r4, null, null, null, null, null, null, null, null, null, 0, null, 0, null, null, null, null, 0L, null, null, null, null, 16777208, null);

        staticinvoke <com.vk.api.sdk.VK: void setConfig(com.vk.api.sdk.VKApiConfig)>($r1);

        $z0 = staticinvoke <com.vk.api.sdk.VK: boolean isLoggedIn()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r2.<com.vk.api.sdk.VK: void trackVisitor$core_release()>();

     label1:
        return;
    }
