    public void <init>(com.vk.api.sdk.okhttp.OkHttpExecutorConfig)
    {
        android.content.Context $r2;
        com.vk.api.sdk.okhttp.OkHttpExecutor$okHttpProvider$2 $r4;
        kotlin.jvm.functions.Function0 $r5;
        com.vk.api.sdk.okhttp.OkHttpExecutor r0;
        com.vk.api.sdk.okhttp.OkHttpExecutorConfig $r1;
        java.lang.Object $r3;
        com.vk.api.sdk.VKApiCredentials$Companion $r7;
        java.lang.String $r8, $r9;
        kotlin.Lazy $r6;

        r0 := @this: com.vk.api.sdk.okhttp.OkHttpExecutor;

        $r1 := @parameter0: com.vk.api.sdk.okhttp.OkHttpExecutorConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "config");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.vk.api.sdk.okhttp.OkHttpExecutor: com.vk.api.sdk.okhttp.OkHttpExecutorConfig config> = $r1;

        $r2 = virtualinvoke $r1.<com.vk.api.sdk.okhttp.OkHttpExecutorConfig: android.content.Context getContext()>();

        r0.<com.vk.api.sdk.okhttp.OkHttpExecutor: android.content.Context context> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.vk.api.sdk.okhttp.OkHttpExecutor: java.lang.Object lock> = $r3;

        $r4 = new com.vk.api.sdk.okhttp.OkHttpExecutor$okHttpProvider$2;

        specialinvoke $r4.<com.vk.api.sdk.okhttp.OkHttpExecutor$okHttpProvider$2: void <init>(com.vk.api.sdk.okhttp.OkHttpExecutor)>(r0);

        $r5 = (kotlin.jvm.functions.Function0) $r4;

        $r6 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r5);

        r0.<com.vk.api.sdk.okhttp.OkHttpExecutor: kotlin.Lazy okHttpProvider$delegate> = $r6;

        $r7 = <com.vk.api.sdk.VKApiCredentials: com.vk.api.sdk.VKApiCredentials$Companion Companion>;

        $r8 = virtualinvoke $r1.<com.vk.api.sdk.okhttp.OkHttpExecutorConfig: java.lang.String getAccessToken()>();

        $r9 = virtualinvoke $r1.<com.vk.api.sdk.okhttp.OkHttpExecutorConfig: java.lang.String getSecret()>();

        $r6 = virtualinvoke $r7.<com.vk.api.sdk.VKApiCredentials$Companion: kotlin.Lazy lazyFrom(java.lang.String,java.lang.String)>($r8, $r9);

        r0.<com.vk.api.sdk.okhttp.OkHttpExecutor: kotlin.Lazy credentialsProvider> = $r6;

        $r8 = virtualinvoke $r1.<com.vk.api.sdk.okhttp.OkHttpExecutorConfig: java.lang.String getCustomEndpoint()>();

        r0.<com.vk.api.sdk.okhttp.OkHttpExecutor: java.lang.String customEndpoint> = $r8;

        return;
    }
