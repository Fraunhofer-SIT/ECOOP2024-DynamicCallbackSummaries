Source: $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.language")
$r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.language") in <com.vk.api.sdk.utils.DefaultUserAgent$stringify$2: java.lang.String invoke()>
Sink: virtualinvoke $r5.<java.io.FileOutputStream: void write(byte[])>($r7) in <com.facebook.internal.instrument.InstrumentUtility: void writeFile(java.lang.String,java.lang.String)>

<com.vk.api.sdk.utils.DefaultUserAgent$stringify$2: java.lang.String invoke()>: $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.language")
<com.vk.api.sdk.utils.DefaultUserAgent$stringify$2: java.lang.String invoke()>: $r3[8] = $r5
<com.vk.api.sdk.utils.DefaultUserAgent$stringify$2: java.lang.String invoke()>: $r3[3] = $r5
<com.vk.api.sdk.utils.DefaultUserAgent$stringify$2: java.lang.String invoke()>: $r5 = <android.os.Build$VERSION: java.lang.String RELEASE>
<com.vk.api.sdk.utils.DefaultUserAgent$stringify$2: java.lang.String invoke()>: return $r5
<kotlin.SynchronizedLazyImpl: java.lang.Object getValue()>: throw $r6
<com.vk.api.sdk.VKScheduler: java.util.concurrent.ExecutorService getNetworkExecutor()>: return $r3
<com.vk.api.sdk.ui.VKCaptchaActivity: void loadImage()>: return
<com.vk.api.sdk.ui.VKCaptchaActivity: void onCreate(android.os.Bundle)>: return
<dummyMainClass: com.vk.api.sdk.ui.VKCaptchaActivity dummyMainMethod_com_vk_api_sdk_ui_VKCaptchaActivity(android.content.Intent)>: return $r0
<dummyMainClass: void dummyMainMethod(java.lang.String[])>: staticinvoke <dummyMainClass: com.facebook.FacebookActivity dummyMainMethod_com_facebook_FacebookActivity(android.content.Intent)>(null)
<dummyMainClass: com.facebook.FacebookActivity dummyMainMethod_com_facebook_FacebookActivity(android.content.Intent)>: virtualinvoke $r15.<com.facebook.appevents.aam.MetadataViewObserver: void onGlobalFocusChanged(android.view.View,android.view.View)>($r2, $r2)
<com.facebook.appevents.aam.MetadataViewObserver: void onGlobalFocusChanged(android.view.View,android.view.View)>: staticinvoke <com.facebook.internal.instrument.crashshield.CrashShieldHandler: void handleThrowable(java.lang.Throwable,java.lang.Object)>($r3, r0)
<com.facebook.internal.instrument.crashshield.CrashShieldHandler: void handleThrowable(java.lang.Throwable,java.lang.Object)>: virtualinvoke $r4.<com.facebook.internal.instrument.InstrumentData: void save()>()
<com.facebook.internal.instrument.InstrumentData: void save()>: $r2 = virtualinvoke r0.<com.facebook.internal.instrument.InstrumentData: java.lang.String toString()>()
<com.facebook.internal.instrument.InstrumentData: java.lang.String toString()>: $r1 = specialinvoke r0.<com.facebook.internal.instrument.InstrumentData: org.json.JSONObject getParameters()>()
<com.facebook.internal.instrument.InstrumentData: org.json.JSONObject getParameters()>: $r3 = specialinvoke r0.<com.facebook.internal.instrument.InstrumentData: org.json.JSONObject getExceptionReportParameters()>()
<com.facebook.internal.instrument.InstrumentData: org.json.JSONObject getExceptionReportParameters()>: $r3 = <android.os.Build$VERSION: java.lang.String RELEASE>
<com.facebook.internal.instrument.InstrumentData: org.json.JSONObject getExceptionReportParameters()>: virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("device_os_version", $r3)
<com.facebook.internal.instrument.InstrumentData: org.json.JSONObject getExceptionReportParameters()>: return $r2
<com.facebook.internal.instrument.InstrumentData: org.json.JSONObject getParameters()>: return $r3
<com.facebook.internal.instrument.InstrumentData: java.lang.String toString()>: $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>()
<com.facebook.internal.instrument.InstrumentData: java.lang.String toString()>: return $r2
<com.facebook.internal.instrument.InstrumentData: void save()>: staticinvoke <com.facebook.internal.instrument.InstrumentUtility: void writeFile(java.lang.String,java.lang.String)>($r1, $r2)
<com.facebook.internal.instrument.InstrumentUtility: void writeFile(java.lang.String,java.lang.String)>: $r7 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r6)
<com.facebook.internal.instrument.InstrumentUtility: void writeFile(java.lang.String,java.lang.String)>: virtualinvoke $r5.<java.io.FileOutputStream: void write(byte[])>($r7)
