    public void <init>(com.vk.api.sdk.VKApiConfig)
    {
        com.vk.api.sdk.okhttp.OkHttpExecutorConfig r0;
        android.content.Context $r3;
        java.lang.String $r4;
        com.vk.api.sdk.VKApiConfig $r1;
        com.vk.api.sdk.internal.Validation $r2;

        r0 := @this: com.vk.api.sdk.okhttp.OkHttpExecutorConfig;

        $r1 := @parameter0: com.vk.api.sdk.VKApiConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "apiConfig");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.vk.api.sdk.okhttp.OkHttpExecutorConfig: com.vk.api.sdk.VKApiConfig apiConfig> = $r1;

        $r2 = <com.vk.api.sdk.internal.Validation: com.vk.api.sdk.internal.Validation INSTANCE>;

        $r3 = virtualinvoke r0.<com.vk.api.sdk.okhttp.OkHttpExecutorConfig: android.content.Context getContext()>();

        virtualinvoke $r2.<com.vk.api.sdk.internal.Validation: void assertContextValid(android.content.Context)>($r3);

        $r2 = <com.vk.api.sdk.internal.Validation: com.vk.api.sdk.internal.Validation INSTANCE>;

        $r4 = virtualinvoke r0.<com.vk.api.sdk.okhttp.OkHttpExecutorConfig: java.lang.String getAccessToken()>();

        virtualinvoke $r2.<com.vk.api.sdk.internal.Validation: void assertAccessTokenValid(java.lang.String)>($r4);

        return;
    }
