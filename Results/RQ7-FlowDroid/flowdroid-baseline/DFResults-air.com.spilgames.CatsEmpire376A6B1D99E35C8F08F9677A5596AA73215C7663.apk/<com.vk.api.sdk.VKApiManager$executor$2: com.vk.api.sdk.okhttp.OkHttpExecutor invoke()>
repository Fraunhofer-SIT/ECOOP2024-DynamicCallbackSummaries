    public final com.vk.api.sdk.okhttp.OkHttpExecutor invoke()
    {
        com.vk.api.sdk.okhttp.OkHttpExecutorConfig $r2;
        com.vk.api.sdk.VKApiManager $r4;
        com.vk.api.sdk.VKApiManager$executor$2 r0;
        com.vk.api.sdk.okhttp.OkHttpExecutor $r1;
        com.vk.api.sdk.VKApiConfig $r3;

        r0 := @this: com.vk.api.sdk.VKApiManager$executor$2;

        $r1 = new com.vk.api.sdk.okhttp.OkHttpExecutor;

        $r2 = new com.vk.api.sdk.okhttp.OkHttpExecutorConfig;

        $r4 = r0.<com.vk.api.sdk.VKApiManager$executor$2: com.vk.api.sdk.VKApiManager this$0>;

        $r3 = virtualinvoke $r4.<com.vk.api.sdk.VKApiManager: com.vk.api.sdk.VKApiConfig getConfig()>();

        specialinvoke $r2.<com.vk.api.sdk.okhttp.OkHttpExecutorConfig: void <init>(com.vk.api.sdk.VKApiConfig)>($r3);

        specialinvoke $r1.<com.vk.api.sdk.okhttp.OkHttpExecutor: void <init>(com.vk.api.sdk.okhttp.OkHttpExecutorConfig)>($r2);

        return $r1;
    }
