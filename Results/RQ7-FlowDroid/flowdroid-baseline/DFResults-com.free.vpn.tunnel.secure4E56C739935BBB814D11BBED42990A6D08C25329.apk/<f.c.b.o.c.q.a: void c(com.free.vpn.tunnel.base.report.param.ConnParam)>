    public static void c(com.free.vpn.tunnel.base.report.param.ConnParam)
    {
        com.free.vpn.tunnel.base.report.param.ConnParam $r0;
        com.free.vpn.tunnel.base.report.event.ReportConnectEvent $r9;
        java.lang.Object[] $r11;
        java.util.HashMap $r1;
        java.lang.reflect.Field $r4;
        java.lang.Exception $r8;
        java.lang.reflect.Field[] $r3;
        int $i0, $i1;
        java.lang.Class $r2;
        java.lang.Object $r6;
        java.lang.StringBuilder $r10;
        java.lang.String $r5, $r7;
        boolean $z0;

        $r0 := @parameter0: com.free.vpn.tunnel.base.report.param.ConnParam;

        $r1 = new java.util.HashMap;

     label01:
        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $i0 = lengthof $r3;

     label02:
        $i1 = 0;

     label03:
        if $i1 >= $i0 goto label06;

     label04:
        $r4 = $r3[$i1];

        virtualinvoke $r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r5 = virtualinvoke $r4.<java.lang.reflect.Field: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r0);

        $r7 = (java.lang.String) $r6;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label05:
        $i1 = $i1 + 1;

        goto label03;

     label06:
        $r5 = virtualinvoke $r0.<com.free.vpn.tunnel.base.report.param.ConnParam: java.lang.String getConnResult()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r5, "1");

     label07:
        if $z0 == 0 goto label08;

        $r5 = "Connect_VPS_Success";

        goto label09;

     label08:
        $r5 = "Connect_VPS_Failed";

     label09:
        staticinvoke <com.flurry.android.FlurryAgent: com.flurry.android.FlurryEventRecordStatus logEvent(java.lang.String,java.util.Map)>($r5, $r1);

     label10:
        goto label12;

     label11:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

     label12:
        $r5 = staticinvoke <com.alibaba.fastjson.JSON: java.lang.String toJSONString(java.lang.Object)>($r0);

        $r9 = new com.free.vpn.tunnel.base.report.event.ReportConnectEvent;

        specialinvoke $r9.<com.free.vpn.tunnel.base.report.event.ReportConnectEvent: void <init>(com.free.vpn.tunnel.base.report.param.ConnParam)>($r0);

        staticinvoke <f.c.b.o.c.q.a: void i(java.lang.Object)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("report conn ev = ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[0];

        staticinvoke <d.b0.s: void N(java.lang.String,java.lang.Object[])>($r7, $r11);

        staticinvoke <f.c.b.o.c.q.a: void d(java.lang.String)>($r5);

        return;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }
