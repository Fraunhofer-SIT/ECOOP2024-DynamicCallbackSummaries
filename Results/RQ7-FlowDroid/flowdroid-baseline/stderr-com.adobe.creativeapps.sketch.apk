[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loading sources and sinks from SourcesSinks/UnconstrainedSourcesSinks.xml...
[main] INFO soot.jimple.infoflow.android.source.parsers.xml.XMLSourceSinkParser - Loaded 273 sources and 91 sinks from the XML file
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.193320464 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230,400 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 67 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.adobe.acira.accommonapplication.activity.BaseMainActivity, because it is abstract and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class com.adobe.creativesdk.foundation.internal.storage.controllers.SectionalListFolderCellView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Fragment without class name or id detected
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Fragment without class name or id detected
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Fragment without class name or id detected
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class com.adobe.creativesdk.foundation.internal.storage.controllers.SectionalListFolderCellView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Fragment without class name or id detected
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Fragment without class name or id detected
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Fragment without class name or id detected
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 73 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Cannot create valid constructor for io.fabric.sdk.android.ActivityLifecycleManager$Callbacks, because it is abstract and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.FragmentEntryPointCreator - Cannot generate constructor for phantom class android.support.v4.app.Fragment
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.FragmentEntryPointCreator - Cannot generate constructor for phantom class android.support.v4.app.Fragment
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.FragmentEntryPointCreator - Cannot generate constructor for phantom class android.support.v4.app.Fragment
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.FragmentEntryPointCreator - Cannot generate constructor for phantom class android.support.v4.app.Fragment
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.FragmentEntryPointCreator - Cannot generate constructor for phantom class android.support.v4.app.Fragment
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.adobe.acira.accommonapplication.activity.BaseMainActivity, because it is abstract and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.BroadcastReceiverEntryPointCreator - Cannot create valid constructor for com.adobe.creativeapps.sketch.receiver.NetworkBroadcastReceiver$INetworkStatusListener, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.adobe.permission.RuntimePermissionHandler$Callback, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.adobe.creativesdk.foundation.storage.AdobeSelection, because it is abstract and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.bumptech.glide.load.engine.cache.MemoryCache, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.bumptech.glide.load.engine.cache.DiskCache$Factory, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for com.bumptech.glide.manager.ConnectivityMonitorFactory, because it is an interface and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class com.adobe.creativesdk.foundation.internal.storage.controllers.SectionalListFolderCellView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Fragment without class name or id detected
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Fragment without class name or id detected
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Fragment without class name or id detected
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 91 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] WARN soot.jimple.infoflow.android.SetupApplication - Aborted callback collection because of low memory
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] WARN soot.jimple.infoflow.android.SetupApplication - Callback analysis aborted early due to time or memory exhaustion
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 273 sources, 91 sinks, and 536 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 254 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on storagepath2-data/androidApps/2020-AndroZoo-PlayStore/com.adobe.creativeapps.sketch.apk with 273 sources and 91 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 230,400 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 5.051964332 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 57441 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 75 sources and 55 sinks.
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper hits: 4188667
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper misses: 36485301
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - IFDS problem with 34977234 forward and 50948240 backward edges solved in 900 seconds, processing 8 results...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Current memory consumption: 35408 MB
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after cleanup: 8620 MB
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 1 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 2 with 3 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 3 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after path building: 12708 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Path reconstruction took 176 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r0) in method <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: java.lang.String toString(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r3 = interfaceinvoke $r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("profile", null) in method <com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession: org.json.JSONObject getUserProfileFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession: org.json.JSONObject getUserProfileFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("profile", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession: org.json.JSONObject getUserProfileFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r16.<org.json.JSONObject: void <init>(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession: org.json.JSONObject getUserProfileFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14.<com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession$1Output: org.json.JSONObject result> = $r16
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession: org.json.JSONObject getUserProfileFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r14.<com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession$1Output: org.json.JSONObject result>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession: org.json.JSONObject getUserProfileFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager getSharedCloudManager()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void updateNewClouds(org.json.JSONObject,java.util.List)>($r4, r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void updateNewClouds(org.json.JSONObject,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudUtils: boolean getCloudsFromUserProfile(org.json.JSONObject,java.util.List)>($r0, r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudUtils: boolean getCloudsFromUserProfile(org.json.JSONObject,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>("endpoints")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudUtils: boolean getCloudsFromUserProfile(org.json.JSONObject,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r6 = $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudUtils: boolean getCloudsFromUserProfile(org.json.JSONObject,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke r6.<org.json.JSONArray: org.json.JSONObject optJSONObject(int)>(i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudUtils: boolean getCloudsFromUserProfile(org.json.JSONObject,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z1 = virtualinvoke r8.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: boolean updateFromDictionary(org.json.JSONObject)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: boolean updateFromDictionary(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>("parameters")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: boolean updateFromDictionary(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = staticinvoke <com.adobe.creativesdk.foundation.internal.storage.model.util.AdobeStorageCopyUtils: org.json.JSONObject deepMutableCopyOfDictionary(org.json.JSONObject)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.storage.model.util.AdobeStorageCopyUtils: org.json.JSONObject deepMutableCopyOfDictionary(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>(r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.storage.model.util.AdobeStorageCopyUtils: org.json.JSONObject deepMutableCopyOfDictionary(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(r5, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.storage.model.util.AdobeStorageCopyUtils: org.json.JSONObject deepMutableCopyOfDictionary(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: boolean updateFromDictionary(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: org.json.JSONObject parameters> = $r8
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: boolean updateFromDictionary(org.json.JSONObject)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return 1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudUtils: boolean getCloudsFromUserProfile(org.json.JSONObject,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudUtils: boolean getCloudsFromUserProfile(org.json.JSONObject,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return 1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void updateNewClouds(org.json.JSONObject,java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void updateClouds(java.util.List)>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void updateClouds(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void updateClouds(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r7 = (com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud) $r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void updateClouds(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void setDefaultCloud(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>(r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void setDefaultCloud(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = staticinvoke <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: java.lang.String toString(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: java.lang.String toString(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r5 = virtualinvoke r1.<com.adobe.creativesdk.foundation.adobeinternal.cloud.DecompressibleInputStream: java.lang.Object readObject()>() in method <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud fromString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud fromString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r1.<com.adobe.creativesdk.foundation.adobeinternal.cloud.DecompressibleInputStream: java.lang.Object readObject()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud fromString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r6 = (com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud fromString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloudWithError()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloudWithError()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud defaultCloud> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloudWithError()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud defaultCloud>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloudWithError()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r3.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String toString()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloudWithError()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud defaultCloud>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloudWithError()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloud()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void updateClouds(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void setDefaultCloud(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>(r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void setDefaultCloud(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud defaultCloud> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void setDefaultCloud(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void updateClouds(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void setDefaultCloud(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>(r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void setDefaultCloud(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14 = staticinvoke <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: java.lang.String toString(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: java.lang.String toString(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, i3) in method <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0) in method <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: byte[] buf>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: byte[] buf>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i1, i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>(r6, 0, $i0) in method <com.behance.sdk.network.BehanceHttpsConnection: void sendFileInputStream(java.io.BufferedInputStream,com.behance.sdk.network.BehanceMultipartEntity,com.behance.sdk.network.BehanceMultiPartData,java.io.OutputStream,com.behance.sdk.network.BehanceRequestCancellationWrapper)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.BufferedInputStream: int read(byte[],int,int)>(r6, 0, 32768) in method <com.behance.sdk.network.BehanceHttpsConnection: void sendFileInputStream(java.io.BufferedInputStream,com.behance.sdk.network.BehanceMultipartEntity,com.behance.sdk.network.BehanceMultiPartData,java.io.OutputStream,com.behance.sdk.network.BehanceRequestCancellationWrapper)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.behance.sdk.network.BehanceHttpsConnection: void sendFileInputStream(java.io.BufferedInputStream,com.behance.sdk.network.BehanceMultipartEntity,com.behance.sdk.network.BehanceMultiPartData,java.io.OutputStream,com.behance.sdk.network.BehanceRequestCancellationWrapper)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.BufferedInputStream: int read(byte[],int,int)>(r6, 0, 32768)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.behance.sdk.network.BehanceHttpsConnection: void sendFileInputStream(java.io.BufferedInputStream,com.behance.sdk.network.BehanceMultipartEntity,com.behance.sdk.network.BehanceMultiPartData,java.io.OutputStream,com.behance.sdk.network.BehanceRequestCancellationWrapper)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>(r6, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r1.<java.io.BufferedInputStream: int read(byte[],int,int)>(r6, 0, 32768) in method <com.behance.sdk.network.BehanceHttpsConnection: void sendFileInputStream(java.io.BufferedInputStream,com.behance.sdk.network.BehanceMultipartEntity,com.behance.sdk.network.BehanceMultiPartData,java.io.OutputStream,com.behance.sdk.network.BehanceRequestCancellationWrapper)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.behance.sdk.network.BehanceHttpsConnection: void sendFileInputStream(java.io.BufferedInputStream,com.behance.sdk.network.BehanceMultipartEntity,com.behance.sdk.network.BehanceMultiPartData,java.io.OutputStream,com.behance.sdk.network.BehanceRequestCancellationWrapper)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r1.<java.io.BufferedInputStream: int read(byte[],int,int)>(r6, 0, 32768)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.behance.sdk.network.BehanceHttpsConnection: void sendFileInputStream(java.io.BufferedInputStream,com.behance.sdk.network.BehanceMultipartEntity,com.behance.sdk.network.BehanceMultiPartData,java.io.OutputStream,com.behance.sdk.network.BehanceRequestCancellationWrapper)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>(r6, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i0, $i1) in method <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0) in method <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: byte[] buf>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: void fillBuf()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r4
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: byte[] buf>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader: java.lang.String readLine()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, $i0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r3, 0, $i3) in method <com.nostra13.universalimageloader.utils.IoUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i1) in method <com.nostra13.universalimageloader.core.assist.ContentLengthInputStream: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.core.assist.ContentLengthInputStream: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.core.assist.ContentLengthInputStream: int read(byte[],int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $i0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.utils.IoUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r3, 0, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i3 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>(r3, 0, $i0) in method <com.nostra13.universalimageloader.utils.IoUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.utils.IoUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i3 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>(r3, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.nostra13.universalimageloader.utils.IoUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r3, 0, $i3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i0) in method <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r5.<java.io.BufferedInputStream: int read(byte[])>(r2) in method <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r5.<java.io.BufferedInputStream: int read(byte[])>(r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.facebook.internal.Utility: int copyAndCloseInputStream(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r4.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r0) in method <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r3 = interfaceinvoke $r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("profile", null) in method <com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession: org.json.JSONObject getUserProfileFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession: org.json.JSONObject getUserProfileFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = interfaceinvoke $r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("profile", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession: org.json.JSONObject getUserProfileFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r16.<org.json.JSONObject: void <init>(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession: org.json.JSONObject getUserProfileFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r14.<com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession$1Output: org.json.JSONObject result> = $r16
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession: org.json.JSONObject getUserProfileFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r14.<com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession$1Output: org.json.JSONObject result>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession: org.json.JSONObject getUserProfileFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: java.util.ArrayList getCloudsFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = virtualinvoke $r5.<org.json.JSONObject: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: java.util.ArrayList getCloudsFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: java.util.ArrayList getCloudsFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: java.util.ArrayList getCloudsFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r6, "AdobeCloudManager", $r8)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void warn(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void warn(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r5 = virtualinvoke r1.<com.adobe.creativesdk.foundation.adobeinternal.cloud.DecompressibleInputStream: java.lang.Object readObject()>() in method <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud fromString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud fromString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = virtualinvoke r1.<com.adobe.creativesdk.foundation.adobeinternal.cloud.DecompressibleInputStream: java.lang.Object readObject()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud fromString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r6 = (com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud) $r5
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud fromString(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r6
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloudWithError()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r7
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloudWithError()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud defaultCloud> = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloudWithError()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloud()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void updateClouds(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void refreshCloudsFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getBestGuessForDefaultCloud()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloudWithError()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud defaultCloud>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloudWithError()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r3.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String toString()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloudWithError()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud defaultCloud>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloudWithError()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloud()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void updateClouds(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void refreshCloudsFromCache()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getBestGuessForDefaultCloud()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloudWithError()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud getDefaultCloud()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void updateClouds(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void setDefaultCloud(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>(r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String toString()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void setDefaultCloud(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void updateClouds(java.util.List)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void setDefaultCloud(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>(r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void setDefaultCloud(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String toString()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $l0 = r0.<com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: long version>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String toString()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String toString()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("version", $r5)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String toString()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke r1.<java.util.HashMap: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud: java.lang.String toString()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void setDefaultCloud(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void setDefaultCloud(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloudManager: void setDefaultCloud(com.adobe.creativesdk.foundation.adobeinternal.cloud.AdobeCloud)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r5, "AdobeCloudManager", $r7)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void warn(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void warn(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, null) in method <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String internalFindKey(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String internalFindKey(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String internalFindKey(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = virtualinvoke $r6.<com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: java.lang.String decrypt(java.lang.String)>($r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: java.lang.String decrypt(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: java.lang.String decrypt(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = staticinvoke <android.util.Base64: byte[] decode(byte[],int)>($r4, 2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: java.lang.String decrypt(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: java.lang.String decrypt(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, "UTF-8")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: java.lang.String decrypt(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String internalFindKey(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String getAdobeID()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getAdobeID()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String adobeID> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getAdobeID()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String adobeID>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getAdobeID()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthManager: com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile getUserProfile()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthUserProfileImpl: void setAdobeID(java.lang.String)>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthUserProfileImpl: void setAdobeID(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthUserProfileImpl: java.lang.String adobeID> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthUserProfileImpl: void setAdobeID(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthManager: com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile getUserProfile()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthManager: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthUserProfileImpl mUserProfile>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthManager: com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile getUserProfile()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthManager: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthUserProfileImpl mUserProfile>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthManager: com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile getUserProfile()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.auth.AdobeUXAuthManagerRestricted: com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile getUserProfile()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.auth.AdobeUXAuthManager: com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile getUserProfile()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String trimmedAdobeId()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile: java.lang.String getAdobeID()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile: java.lang.String getAdobeID()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = r0.<com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile: java.lang.String adobeID>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile: java.lang.String getAdobeID()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String trimmedAdobeId()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("@")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String trimmedAdobeId()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r4[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String trimmedAdobeId()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String DesignLibraryFileDirectory(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = staticinvoke <com.adobe.creativesdk.foundation.adobeinternal.storage.dcx.AdobeDCXUtils: java.lang.String stringByAppendingLastPathComponent(java.lang.String,java.lang.String)>($r3, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.storage.dcx.AdobeDCXUtils: java.lang.String stringByAppendingLastPathComponent(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.storage.dcx.AdobeDCXUtils: java.lang.String stringByAppendingLastPathComponent(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.storage.dcx.AdobeDCXUtils: java.lang.String stringByAppendingLastPathComponent(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String DesignLibraryFileDirectory(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String DesignLibraryFileDirectory(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String DesignLibraryFileDirectory(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String DesignLibraryFileDirectory(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r7, $r3, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void warn(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void warn(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r1 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, null) in method <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String internalFindKey(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String internalFindKey(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String internalFindKey(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String getAdobeID()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getAdobeID()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String adobeID> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getAdobeID()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String adobeID>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getAdobeID()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthManager: com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile getUserProfile()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r3.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthUserProfileImpl: void setAdobeID(java.lang.String)>($r6)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthUserProfileImpl: void setAdobeID(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthUserProfileImpl: java.lang.String adobeID> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthUserProfileImpl: void setAdobeID(java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthManager: com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile getUserProfile()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthManager: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthUserProfileImpl mUserProfile>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthManager: com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile getUserProfile()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthManager: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthUserProfileImpl mUserProfile>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthManager: com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile getUserProfile()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.auth.AdobeUXAuthManagerRestricted: com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile getUserProfile()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.auth.AdobeUXAuthManager: com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile getUserProfile()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String trimmedAdobeId()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile: java.lang.String getAdobeID()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile: java.lang.String getAdobeID()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = r0.<com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile: java.lang.String adobeID>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.auth.AdobeAuthUserProfile: java.lang.String getAdobeID()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String trimmedAdobeId()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("@")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String trimmedAdobeId()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = $r4[0]
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String trimmedAdobeId()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String DesignLibraryFileDirectory(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = staticinvoke <com.adobe.creativesdk.foundation.adobeinternal.storage.dcx.AdobeDCXUtils: java.lang.String stringByAppendingLastPathComponent(java.lang.String,java.lang.String)>($r3, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.storage.dcx.AdobeDCXUtils: java.lang.String stringByAppendingLastPathComponent(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.storage.dcx.AdobeDCXUtils: java.lang.String stringByAppendingLastPathComponent(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.adobeinternal.storage.dcx.AdobeDCXUtils: java.lang.String stringByAppendingLastPathComponent(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String DesignLibraryFileDirectory(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = $r3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String DesignLibraryFileDirectory(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String DesignLibraryFileDirectory(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.color.internal.controller.library.ColorLibraryManager: java.lang.String DesignLibraryFileDirectory(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r7, $r3, $r4)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void warn(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void warn(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void writeToFile(java.lang.String,java.lang.String,java.lang.Throwable)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r4.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i0) in method <com.adobe.creativeapps.appcommon.utils.FileUtils: void copyFile(java.io.InputStream,java.io.OutputStream)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>(r2) in method <com.adobe.creativeapps.appcommon.utils.FileUtils: void copyFile(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativeapps.appcommon.utils.FileUtils: void copyFile(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>(r2)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <com.adobe.creativeapps.appcommon.utils.FileUtils: void copyFile(java.io.InputStream,java.io.OutputStream)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Data flow solver took 1087 seconds. Maximum memory consumption: 35408 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication - Found 8 leaks
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-baseline/DFResults-com.adobe.creativeapps.sketch.apk/<com.behance.sdk.network.BehanceHttpsConnection: void sendFileInputStream(java.io.BufferedInputStream,com.behance.sdk.network.BehanceMultipartEntity,com.behance.sdk.network.BehanceMultiPartData,java.io.OutputStream,com.behance.sdk.network.BehanceRequestCancellationWrapper)> (File name too long)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:295)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:236)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:185)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:194)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:142)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-baseline/DFResults-com.adobe.creativeapps.sketch.apk/<com.behance.sdk.network.BehanceHttpsConnection: void sendFileInputStream(java.io.BufferedInputStream,com.behance.sdk.network.BehanceMultipartEntity,com.behance.sdk.network.BehanceMultiPartData,java.io.OutputStream,com.behance.sdk.network.BehanceRequestCancellationWrapper)> (File name too long)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:295)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:236)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:185)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:194)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:154)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-baseline/DFResults-com.adobe.creativeapps.sketch.apk/<com.behance.sdk.network.BehanceHttpsConnection: void sendFileInputStream(java.io.BufferedInputStream,com.behance.sdk.network.BehanceMultipartEntity,com.behance.sdk.network.BehanceMultiPartData,java.io.OutputStream,com.behance.sdk.network.BehanceRequestCancellationWrapper)> (File name too long)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:295)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:236)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:185)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:194)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:154)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-baseline/DFResults-com.adobe.creativeapps.sketch.apk/<com.behance.sdk.network.BehanceHttpsConnection: void sendFileInputStream(java.io.BufferedInputStream,com.behance.sdk.network.BehanceMultipartEntity,com.behance.sdk.network.BehanceMultiPartData,java.io.OutputStream,com.behance.sdk.network.BehanceRequestCancellationWrapper)> (File name too long)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:295)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:236)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:185)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:194)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:142)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-baseline/DFResults-com.adobe.creativeapps.sketch.apk/<com.behance.sdk.network.BehanceHttpsConnection: void sendFileInputStream(java.io.BufferedInputStream,com.behance.sdk.network.BehanceMultipartEntity,com.behance.sdk.network.BehanceMultiPartData,java.io.OutputStream,com.behance.sdk.network.BehanceRequestCancellationWrapper)> (File name too long)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:295)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:236)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:185)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:194)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:154)
java.io.FileNotFoundException: storagepath2-data/research/paper-dynamiccallbacks/FlowDroidEval/flowdroid-baseline/DFResults-com.adobe.creativeapps.sketch.apk/<com.behance.sdk.network.BehanceHttpsConnection: void sendFileInputStream(java.io.BufferedInputStream,com.behance.sdk.network.BehanceMultipartEntity,com.behance.sdk.network.BehanceMultiPartData,java.io.OutputStream,com.behance.sdk.network.BehanceRequestCancellationWrapper)> (File name too long)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:295)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:236)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:185)
	at reproduction.dcidsubmit.FlowDroidSecondStep.printMethod(FlowDroidSecondStep.java:194)
	at reproduction.dcidsubmit.FlowDroidSecondStep.main(FlowDroidSecondStep.java:154)
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'SummaryStatistics'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Telemetry'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'Telemetry_sha256Hash_idx' for table 'Telemetry
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'Callbacks'
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallbackSummaries'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'CallbackSummaries_sha256Hash_idx' for table 'CallbackSummaries
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'AppSizes'
[main] INFO com.j256.ormlite.table.TableUtils - creating index 'AppSizes_sha256Hash_idx' for table 'AppSizes
[main] INFO com.j256.ormlite.table.TableUtils - creating table 'CallgraphSizes'
