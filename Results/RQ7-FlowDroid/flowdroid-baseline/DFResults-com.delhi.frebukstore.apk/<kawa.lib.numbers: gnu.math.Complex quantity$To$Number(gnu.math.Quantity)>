    public static gnu.math.Complex quantity$To$Number(gnu.math.Quantity)
    {
        byte $b0;
        gnu.math.Quantity $r0;
        double $d0, $d1;
        gnu.math.Complex $r1;

        $r0 := @parameter0: gnu.math.Quantity;

        virtualinvoke $r0.<gnu.math.Quantity: gnu.math.Unit unit()>();

        $d0 = virtualinvoke $r0.<gnu.math.Quantity: double doubleValue()>();

        $b0 = $d0 cmpg 1.0;

        if $b0 != 0 goto label2;

        $r1 = virtualinvoke $r0.<gnu.math.Quantity: gnu.math.Complex number()>();

     label1:
        return $r1;

     label2:
        $d0 = virtualinvoke $r0.<gnu.math.Quantity: double reValue()>();

        $d1 = virtualinvoke $r0.<gnu.math.Quantity: double imValue()>();

        $r1 = staticinvoke <gnu.math.Complex: gnu.math.Complex make(double,double)>($d0, $d1);

        goto label1;
    }
