    public java.lang.Object applyN(java.lang.Object[]) throws java.lang.Throwable
    {
        gnu.math.RatNum $r9;
        java.math.BigDecimal $r10, $r11;
        byte $b9;
        gnu.math.IntNum $r2, $r8;
        boolean $z0;
        java.math.RoundingMode $r12;
        java.math.MathContext $r16;
        gnu.kawa.functions.DivideOp r0;
        gnu.math.Numeric $r6, $r7, $r13, r14;
        float $f0;
        java.lang.Object[] $r1;
        long $l7, $l8;
        gnu.math.RealNum $r15;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6;
        java.lang.Number $r4;
        double $d0, d1, $d2;
        java.lang.Object $r3, $r5;

        r0 := @this: gnu.kawa.functions.DivideOp;

        $r1 := @parameter0: java.lang.Object[];

        $i0 = lengthof $r1;

        if $i0 != 0 goto label01;

        $r2 = staticinvoke <gnu.math.IntNum: gnu.math.IntNum one()>();

        return $r2;

     label01:
        $r3 = $r1[0];

        $r4 = (java.lang.Number) $r3;

        $r3 = $r4;

        if $i0 != 1 goto label02;

        $r2 = staticinvoke <gnu.math.IntNum: gnu.math.IntNum one()>();

        $r3 = virtualinvoke r0.<gnu.kawa.functions.DivideOp: java.lang.Object apply2(java.lang.Object,java.lang.Object)>($r2, $r4);

        return $r3;

     label02:
        i2 = staticinvoke <gnu.kawa.functions.Arithmetic: int classifyValue(java.lang.Object)>($r4);

        $i1 = 1;

     label03:
        if $i1 >= $i0 goto label61;

        $r5 = $r1[$i1];

        $i3 = staticinvoke <gnu.kawa.functions.Arithmetic: int classifyValue(java.lang.Object)>($r5);

        if i2 >= $i3 goto label10;

        $i4 = $i3;

     label04:
        i2 = $i4;

        $i3 = $i4;

        if $i4 >= 4 goto label06;

        $i5 = r0.<gnu.kawa.functions.DivideOp: int op>;

        lookupswitch($i5)
        {
            case 4: goto label11;
            case 5: goto label11;
            default: goto label05;
        };

     label05:
        $i5 = r0.<gnu.kawa.functions.DivideOp: int rounding_mode>;

        if $i5 != 3 goto label12;

        if $i4 == 1 goto label06;

        if $i4 != 2 goto label12;

     label06:
        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        if $i4 != 5 goto label13;

        if i2 > 10 goto label13;

        $i3 = 10;

        if i2 == 8 goto label07;

        if i2 == 7 goto label07;

        i2 = 9;

     label07:
        lookupswitch($i3)
        {
            case 1: goto label15;
            case 2: goto label21;
            case 3: goto label08;
            case 4: goto label25;
            case 5: goto label31;
            case 6: goto label08;
            case 7: goto label08;
            case 8: goto label08;
            case 9: goto label43;
            default: goto label08;
        };

     label08:
        $r6 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.Numeric asNumeric(java.lang.Object)>($r3);

        $r7 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.Numeric asNumeric(java.lang.Object)>($r5);

        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        if $i4 != 8 goto label50;

        $z0 = virtualinvoke $r7.<gnu.math.Numeric: boolean isZero()>();

        if $z0 == 0 goto label50;

        $z0 = virtualinvoke $r7.<gnu.math.Numeric: boolean isExact()>();

        if $z0 == 0 goto label49;

     label09:
        return $r6;

     label10:
        $i4 = i2;

        goto label04;

     label11:
        i2 = 4;

        $i3 = 4;

        goto label06;

     label12:
        $i3 = 4;

        goto label06;

     label13:
        if $i3 == 8 goto label14;

        if $i3 != 7 goto label07;

     label14:
        $i3 = 9;

        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        if $i4 != 7 goto label07;

        i2 = 9;

        goto label07;

     label15:
        $i4 = staticinvoke <gnu.kawa.functions.Arithmetic: int asInt(java.lang.Object)>($r3);

        $i5 = staticinvoke <gnu.kawa.functions.Arithmetic: int asInt(java.lang.Object)>($r5);

        $i6 = r0.<gnu.kawa.functions.DivideOp: int op>;

        lookupswitch($i6)
        {
            case 8: goto label20;
            default: goto label16;
        };

     label16:
        $i4 = $i4 / $i5;

     label17:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

     label18:
        if i2 == $i3 goto label19;

        lookupswitch(i2)
        {
            case 1: goto label56;
            case 2: goto label57;
            case 3: goto label60;
            case 4: goto label19;
            case 5: goto label19;
            case 6: goto label19;
            case 7: goto label58;
            case 8: goto label59;
            default: goto label19;
        };

     label19:
        $i1 = $i1 + 1;

        goto label03;

     label20:
        $i4 = $i4 % $i5;

        goto label17;

     label21:
        $l7 = staticinvoke <gnu.kawa.functions.Arithmetic: long asLong(java.lang.Object)>($r3);

        $l8 = staticinvoke <gnu.kawa.functions.Arithmetic: long asLong(java.lang.Object)>($r5);

        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        lookupswitch($i4)
        {
            case 8: goto label24;
            default: goto label22;
        };

     label22:
        $l7 = $l7 / $l8;

     label23:
        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        goto label18;

     label24:
        $l7 = $l7 % $l8;

        goto label23;

     label25:
        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        lookupswitch($i4)
        {
            case 4: goto label28;
            case 5: goto label18;
            case 6: goto label26;
            case 7: goto label26;
            case 8: goto label27;
            default: goto label18;
        };

     label26:
        $r2 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.IntNum asIntNum(java.lang.Object)>($r3);

        $r8 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.IntNum asIntNum(java.lang.Object)>($r5);

        $i4 = virtualinvoke r0.<gnu.kawa.functions.DivideOp: int getRoundingMode()>();

        $r3 = staticinvoke <gnu.math.IntNum: gnu.math.IntNum quotient(gnu.math.IntNum,gnu.math.IntNum,int)>($r2, $r8, $i4);

        goto label18;

     label27:
        $r2 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.IntNum asIntNum(java.lang.Object)>($r3);

        $r8 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.IntNum asIntNum(java.lang.Object)>($r5);

        $i4 = virtualinvoke r0.<gnu.kawa.functions.DivideOp: int getRoundingMode()>();

        $r3 = staticinvoke <gnu.math.IntNum: gnu.math.IntNum remainder(gnu.math.IntNum,gnu.math.IntNum,int)>($r2, $r8, $i4);

        goto label18;

     label28:
        $r2 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.IntNum asIntNum(java.lang.Object)>($r3);

        $r8 = staticinvoke <gnu.kawa.functions.Arithmetic: gnu.math.IntNum asIntNum(java.lang.Object)>($r5);

        $r9 = staticinvoke <gnu.math.RatNum: gnu.math.RatNum make(gnu.math.IntNum,gnu.math.IntNum)>($r2, $r8);

        $r3 = $r9;

        $z0 = $r9 instanceof gnu.math.IntNum;

        if $z0 == 0 goto label30;

        $b9 = 4;

     label29:
        i2 = $b9;

        $i3 = $b9;

        goto label18;

     label30:
        $b9 = 6;

        goto label29;

     label31:
        $r10 = staticinvoke <gnu.kawa.functions.Arithmetic: java.math.BigDecimal asBigDecimal(java.lang.Object)>($r3);

        $r11 = staticinvoke <gnu.kawa.functions.Arithmetic: java.math.BigDecimal asBigDecimal(java.lang.Object)>($r5);

        $i4 = virtualinvoke r0.<gnu.kawa.functions.DivideOp: int getRoundingMode()>();

        lookupswitch($i4)
        {
            case 1: goto label34;
            case 2: goto label35;
            case 3: goto label36;
            case 4: goto label32;
            case 5: goto label37;
            default: goto label32;
        };

     label32:
        $r12 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;

     label33:
        $r16 = new java.math.MathContext;

        specialinvoke $r16.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(0, $r12);

        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        lookupswitch($i4)
        {
            case 4: goto label39;
            case 5: goto label18;
            case 6: goto label40;
            case 7: goto label41;
            case 8: goto label42;
            default: goto label18;
        };

     label34:
        $r12 = <java.math.RoundingMode: java.math.RoundingMode FLOOR>;

        goto label33;

     label35:
        $r12 = <java.math.RoundingMode: java.math.RoundingMode CEILING>;

        goto label33;

     label36:
        $r12 = <java.math.RoundingMode: java.math.RoundingMode DOWN>;

        goto label33;

     label37:
        $i4 = virtualinvoke $r11.<java.math.BigDecimal: int signum()>();

        if $i4 >= 0 goto label38;

        $r12 = <java.math.RoundingMode: java.math.RoundingMode CEILING>;

        goto label32;

     label38:
        $r12 = <java.math.RoundingMode: java.math.RoundingMode FLOOR>;

        goto label32;

     label39:
        $r3 = virtualinvoke $r10.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>($r11);

        goto label18;

     label40:
        $r3 = virtualinvoke $r10.<java.math.BigDecimal: java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal,java.math.MathContext)>($r11, $r16);

        goto label18;

     label41:
        $r10 = virtualinvoke $r10.<java.math.BigDecimal: java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal,java.math.MathContext)>($r11, $r16);

        $r3 = virtualinvoke $r10.<java.math.BigDecimal: java.math.BigInteger toBigInteger()>();

        $i3 = 3;

        i2 = 3;

        goto label18;

     label42:
        $r3 = virtualinvoke $r10.<java.math.BigDecimal: java.math.BigDecimal remainder(java.math.BigDecimal,java.math.MathContext)>($r11, $r16);

        goto label18;

     label43:
        $d0 = staticinvoke <gnu.kawa.functions.Arithmetic: double asDouble(java.lang.Object)>($r3);

        d1 = $d0;

        $d2 = staticinvoke <gnu.kawa.functions.Arithmetic: double asDouble(java.lang.Object)>($r5);

        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        lookupswitch($i4)
        {
            case 4: goto label44;
            case 5: goto label44;
            case 6: goto label45;
            case 7: goto label46;
            case 8: goto label47;
            default: goto label18;
        };

     label44:
        $d0 = $d0 / $d2;

        $r3 = staticinvoke <gnu.math.DFloNum: gnu.math.DFloNum make(double)>($d0);

        goto label18;

     label45:
        $d0 = $d0 / $d2;

        $i4 = virtualinvoke r0.<gnu.kawa.functions.DivideOp: int getRoundingMode()>();

        $d0 = staticinvoke <gnu.math.RealNum: double toInt(double,int)>($d0, $i4);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        goto label18;

     label46:
        $d0 = $d0 / $d2;

        i2 = virtualinvoke r0.<gnu.kawa.functions.DivideOp: int getRoundingMode()>();

        $r3 = staticinvoke <gnu.math.RealNum: gnu.math.IntNum toExactInt(double,int)>($d0, i2);

        $i3 = 4;

        i2 = 4;

        goto label18;

     label47:
        $b9 = $d2 cmpl 0.0;

        if $b9 == 0 goto label48;

        d1 = $d0 / $d2;

        $i4 = virtualinvoke r0.<gnu.kawa.functions.DivideOp: int getRoundingMode()>();

        d1 = staticinvoke <gnu.math.RealNum: double toInt(double,int)>(d1, $i4);

        $d2 = d1 * $d2;

        d1 = $d0 - $d2;

     label48:
        $r3 = staticinvoke <gnu.math.DFloNum: gnu.math.DFloNum make(double)>(d1);

        goto label18;

     label49:
        $r6 = virtualinvoke $r6.<gnu.math.Numeric: gnu.math.Numeric toInexact()>();

        goto label09;

     label50:
        $r13 = virtualinvoke $r6.<gnu.math.Numeric: gnu.math.Numeric div(java.lang.Object)>($r7);

        r14 = $r13;

        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        if $i4 != 8 goto label51;

        $r15 = (gnu.math.RealNum) $r13;

        $i4 = virtualinvoke r0.<gnu.kawa.functions.DivideOp: int getRoundingMode()>();

        $r15 = virtualinvoke $r15.<gnu.math.RealNum: gnu.math.RealNum toInt(int)>($i4);

        $r7 = virtualinvoke $r15.<gnu.math.RealNum: gnu.math.Numeric mul(java.lang.Object)>($r7);

        r14 = virtualinvoke $r6.<gnu.math.Numeric: gnu.math.Numeric sub(java.lang.Object)>($r7);

     label51:
        $i4 = r0.<gnu.kawa.functions.DivideOp: int op>;

        lookupswitch($i4)
        {
            case 5: goto label55;
            case 6: goto label54;
            case 7: goto label53;
            default: goto label52;
        };

     label52:
        $r3 = r14;

        goto label18;

     label53:
        $r15 = (gnu.math.RealNum) r14;

        i2 = r0.<gnu.kawa.functions.DivideOp: int rounding_mode>;

        $r3 = virtualinvoke $r15.<gnu.math.RealNum: gnu.math.IntNum toExactInt(int)>(i2);

        i2 = 4;

        $i3 = 4;

        goto label18;

     label54:
        $r15 = (gnu.math.RealNum) r14;

        $i4 = r0.<gnu.kawa.functions.DivideOp: int rounding_mode>;

        $r3 = virtualinvoke $r15.<gnu.math.RealNum: gnu.math.RealNum toInt(int)>($i4);

        goto label18;

     label55:
        $r3 = virtualinvoke r14.<gnu.math.Numeric: gnu.math.Numeric toInexact()>();

        goto label18;

     label56:
        $r4 = (java.lang.Number) $r3;

        $i3 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        goto label19;

     label57:
        $r4 = (java.lang.Number) $r3;

        $l7 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        goto label19;

     label58:
        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        goto label19;

     label59:
        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        goto label19;

     label60:
        $r3 = staticinvoke <gnu.kawa.functions.Arithmetic: java.math.BigInteger asBigInteger(java.lang.Object)>($r3);

        goto label19;

     label61:
        return $r3;
    }
