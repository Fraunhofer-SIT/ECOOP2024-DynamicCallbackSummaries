    public static java.lang.String readString(gnu.text.Lexer, int, int) throws java.io.IOException, gnu.text.SyntaxException
    {
        java.lang.Throwable $r5;
        byte b7;
        int $i0, $i1, i3, $i5, $i6;
        gnu.text.LineBufferedReader $r1;
        java.lang.String $r3, $r7;
        boolean $z0;
        gnu.mapping.InPort $r2;
        char c2, $c4;
        gnu.kawa.lispexpr.LispReader $r6;
        char[] $r4;
        gnu.text.Lexer $r0;

        $r0 := @parameter0: gnu.text.Lexer;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i1 = $r0.<gnu.text.Lexer: int tokenBufferLength>;

        $r1 = virtualinvoke $r0.<gnu.text.Lexer: gnu.text.LineBufferedReader getPort()>();

        c2 = 0;

        i3 = $i0;

        $z0 = $r1 instanceof gnu.mapping.InPort;

        if $z0 == 0 goto label01;

        $r2 = (gnu.mapping.InPort) $r1;

        c2 = $r2.<gnu.mapping.InPort: char readState>;

        $r2 = (gnu.mapping.InPort) $r1;

        $c4 = (char) $i0;

        $r2.<gnu.mapping.InPort: char readState> = $c4;

     label01:
        if i3 != 13 goto label10;

     label02:
        $i5 = virtualinvoke $r1.<gnu.text.LineBufferedReader: int read()>();

     label03:
        i3 = $i5;

        if $i5 == 10 goto label01;

     label04:
        if i3 != $i0 goto label18;

     label05:
        $r7 = new java.lang.String;

     label06:
        $r4 = $r0.<gnu.text.Lexer: char[] tokenBuffer>;

        $i0 = $r0.<gnu.text.Lexer: int tokenBufferLength>;

     label07:
        $i0 = $i0 - $i1;

     label08:
        specialinvoke $r7.<java.lang.String: void <init>(char[],int,int)>($r4, $i1, $i0);

        $r3 = virtualinvoke $r7.<java.lang.String: java.lang.String intern()>();

     label09:
        $r0.<gnu.text.Lexer: int tokenBufferLength> = $i1;

        $z0 = $r1 instanceof gnu.mapping.InPort;

        if $z0 == 0 goto label36;

        $r2 = (gnu.mapping.InPort) $r1;

        $r2.<gnu.mapping.InPort: char readState> = c2;

        return $r3;

     label10:
        $i5 = $r1.<gnu.text.LineBufferedReader: int pos>;

        $i6 = $r1.<gnu.text.LineBufferedReader: int limit>;

     label11:
        if $i5 >= $i6 goto label16;

        if i3 == 10 goto label16;

     label12:
        $r4 = $r1.<gnu.text.LineBufferedReader: char[] buffer>;

        i3 = $r1.<gnu.text.LineBufferedReader: int pos>;

     label13:
        $i5 = i3 + 1;

     label14:
        $r1.<gnu.text.LineBufferedReader: int pos> = $i5;

        i3 = $r4[i3];

     label15:
        goto label04;

     label16:
        i3 = virtualinvoke $r1.<gnu.text.LineBufferedReader: int read()>();

     label17:
        goto label04;

     label18:
        lookupswitch(i3)
        {
            case 13: goto label25;
            case 92: goto label30;
            default: goto label19;
        };

     label19:
        if i3 >= 0 goto label21;

     label20:
        virtualinvoke $r0.<gnu.text.Lexer: void eofError(java.lang.String)>("unexpected EOF in string literal");

     label21:
        virtualinvoke $r0.<gnu.text.Lexer: void tokenBufferAppend(int)>(i3);

     label22:
        goto label01;

     label23:
        $r5 := @caughtexception;

        $r0.<gnu.text.Lexer: int tokenBufferLength> = $i1;

        $z0 = $r1 instanceof gnu.mapping.InPort;

        if $z0 == 0 goto label24;

        $r2 = (gnu.mapping.InPort) $r1;

        $r2.<gnu.mapping.InPort: char readState> = c2;

     label24:
        throw $r5;

     label25:
        $z0 = virtualinvoke $r1.<gnu.text.LineBufferedReader: boolean getConvertCR()>();

     label26:
        if $z0 == 0 goto label29;

        b7 = 10;

     label27:
        virtualinvoke $r0.<gnu.text.Lexer: void tokenBufferAppend(int)>(b7);

     label28:
        goto label01;

     label29:
        b7 = 13;

        i3 = 32;

        goto label27;

     label30:
        $z0 = $r0 instanceof gnu.kawa.lispexpr.LispReader;

     label31:
        if $z0 == 0 goto label34;

     label32:
        $r6 = (gnu.kawa.lispexpr.LispReader) $r0;

        i3 = virtualinvoke $r6.<gnu.kawa.lispexpr.LispReader: int readEscape()>();

     label33:
        if i3 != -2 goto label19;

        i3 = 10;

        goto label01;

     label34:
        i3 = virtualinvoke $r1.<gnu.text.LineBufferedReader: int read()>();

     label35:
        goto label33;

     label36:
        return $r3;

        catch java.lang.Throwable from label02 to label03 with label23;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label10 to label11 with label23;
        catch java.lang.Throwable from label12 to label13 with label23;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label20 to label22 with label23;
        catch java.lang.Throwable from label25 to label26 with label23;
        catch java.lang.Throwable from label27 to label28 with label23;
        catch java.lang.Throwable from label30 to label31 with label23;
        catch java.lang.Throwable from label32 to label33 with label23;
        catch java.lang.Throwable from label34 to label35 with label23;
    }
