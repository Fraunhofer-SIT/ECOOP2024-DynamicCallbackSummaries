    static java.lang.Object lambda1(java.lang.Object)
    {
        java.lang.Object[] $r1;
        kawa.lang.SyntaxPattern $r2;
        gnu.expr.Language $r4;
        kawa.lang.TemplateScope $r5;
        java.lang.Object $r0;
        gnu.expr.QuoteExp $r3;
        kawa.lang.SyntaxTemplate $r6;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <kawa.lang.SyntaxPattern: java.lang.Object[] allocVars(int,java.lang.Object[])>(3, null);

        $r2 = <kawa.lib.std_syntax: kawa.lang.SyntaxPattern Lit11>;

        $z0 = virtualinvoke $r2.<kawa.lang.Pattern: boolean match(java.lang.Object,java.lang.Object[],int)>($r0, $r1, 0);

        if $z0 == 0 goto label1;

        $r3 = new gnu.expr.QuoteExp;

        $r4 = staticinvoke <gnu.expr.Language: gnu.expr.Language getDefaultLanguage()>();

        $r0 = virtualinvoke $r4.<gnu.expr.Language: java.lang.Object booleanObject(boolean)>(1);

        specialinvoke $r3.<gnu.expr.QuoteExp: void <init>(java.lang.Object)>($r0);

        return $r3;

     label1:
        $r2 = <kawa.lib.std_syntax: kawa.lang.SyntaxPattern Lit12>;

        $z0 = virtualinvoke $r2.<kawa.lang.Pattern: boolean match(java.lang.Object,java.lang.Object[],int)>($r0, $r1, 0);

        if $z0 == 0 goto label2;

        $r5 = staticinvoke <kawa.lang.TemplateScope: kawa.lang.TemplateScope make()>();

        $r6 = <kawa.lib.std_syntax: kawa.lang.SyntaxTemplate Lit13>;

        $r0 = virtualinvoke $r6.<kawa.lang.SyntaxTemplate: java.lang.Object execute(java.lang.Object[],kawa.lang.TemplateScope)>($r1, $r5);

        return $r0;

     label2:
        $r2 = <kawa.lib.std_syntax: kawa.lang.SyntaxPattern Lit14>;

        $z0 = virtualinvoke $r2.<kawa.lang.Pattern: boolean match(java.lang.Object,java.lang.Object[],int)>($r0, $r1, 0);

        if $z0 == 0 goto label3;

        $r5 = staticinvoke <kawa.lang.TemplateScope: kawa.lang.TemplateScope make()>();

        $r6 = <kawa.lib.std_syntax: kawa.lang.SyntaxTemplate Lit15>;

        $r0 = virtualinvoke $r6.<kawa.lang.SyntaxTemplate: java.lang.Object execute(java.lang.Object[],kawa.lang.TemplateScope)>($r1, $r5);

        return $r0;

     label3:
        $r0 = staticinvoke <kawa.standard.syntax_case: java.lang.Object error(java.lang.String,java.lang.Object)>("syntax-case", $r0);

        return $r0;
    }
