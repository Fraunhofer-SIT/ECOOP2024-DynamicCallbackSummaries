    public void process(int)
    {
        java.lang.Throwable $r14, $r15;
        gnu.expr.LitTable $r16;
        gnu.text.SyntaxException $r11;
        long $l3;
        gnu.expr.Language $r3;
        gnu.text.SourceMessages $r5, $r12;
        java.util.Stack $r6;
        byte $b2;
        int $i0, $i1;
        gnu.expr.ModuleExp $r2;
        java.lang.String $r10;
        boolean $z0;
        gnu.expr.ModuleInfo $r7;
        gnu.bytecode.ArrayClassLoader $r17;
        java.io.IOException $r20;
        java.lang.RuntimeException $r19;
        gnu.expr.ModuleManager $r8;
        gnu.expr.Compilation r0, $r1;
        java.lang.StringBuilder $r13, $r18;
        java.lang.ClassLoader $r9;
        gnu.text.Lexer $r4;

        r0 := @this: gnu.expr.Compilation;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <gnu.expr.Compilation: gnu.expr.Compilation setSaveCurrent(gnu.expr.Compilation)>(r0);

     label01:
        $r2 = virtualinvoke r0.<gnu.expr.Compilation: gnu.expr.ModuleExp getModule()>();

     label02:
        if $i0 < 4 goto label17;

     label03:
        $i1 = virtualinvoke r0.<gnu.expr.Compilation: int getState()>();

     label04:
        if $i1 >= 3 goto label17;

     label05:
        virtualinvoke r0.<gnu.expr.Compilation: void setState(int)>(3);

     label06:
        $r3 = r0.<gnu.expr.Compilation: gnu.expr.Language language>;

     label07:
        virtualinvoke $r3.<gnu.expr.Language: boolean parse(gnu.expr.Compilation,int)>(r0, 0);

     label08:
        $r4 = r0.<gnu.expr.Compilation: gnu.text.Lexer lexer>;

     label09:
        virtualinvoke $r4.<gnu.text.Lexer: void close()>();

     label10:
        r0.<gnu.expr.Compilation: gnu.text.Lexer lexer> = null;

        $r5 = r0.<gnu.expr.Compilation: gnu.text.SourceMessages messages>;

     label11:
        $z0 = virtualinvoke $r5.<gnu.text.SourceMessages: boolean seenErrors()>();

     label12:
        if $z0 == 0 goto label16;

        $b2 = 100;

     label13:
        virtualinvoke r0.<gnu.expr.Compilation: void setState(int)>($b2);

     label14:
        $r6 = r0.<gnu.expr.Compilation: java.util.Stack pendingImports>;

     label15:
        if $r6 == null goto label17;

        staticinvoke <gnu.expr.Compilation: void restoreCurrent(gnu.expr.Compilation)>($r1);

        return;

     label16:
        $b2 = 4;

        goto label13;

     label17:
        if $i0 < 6 goto label27;

     label18:
        $i1 = virtualinvoke r0.<gnu.expr.Compilation: int getState()>();

     label19:
        if $i1 >= 6 goto label27;

     label20:
        virtualinvoke r0.<gnu.expr.Compilation: void addMainClass(gnu.expr.ModuleExp)>($r2);

     label21:
        $r3 = r0.<gnu.expr.Compilation: gnu.expr.Language language>;

     label22:
        virtualinvoke $r3.<gnu.expr.Language: void resolve(gnu.expr.Compilation)>(r0);

     label23:
        $r5 = r0.<gnu.expr.Compilation: gnu.text.SourceMessages messages>;

     label24:
        $z0 = virtualinvoke $r5.<gnu.text.SourceMessages: boolean seenErrors()>();

     label25:
        if $z0 == 0 goto label74;

        $b2 = 100;

     label26:
        virtualinvoke r0.<gnu.expr.Compilation: void setState(int)>($b2);

     label27:
        $z0 = r0.<gnu.expr.Compilation: boolean explicit>;

     label28:
        if $z0 != 0 goto label36;

     label29:
        $z0 = r0.<gnu.expr.Compilation: boolean immediate>;

     label30:
        if $z0 != 0 goto label36;

     label31:
        $r7 = r0.<gnu.expr.Compilation: gnu.expr.ModuleInfo minfo>;

     label32:
        $r8 = staticinvoke <gnu.expr.ModuleManager: gnu.expr.ModuleManager getInstance()>();

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $z0 = virtualinvoke $r7.<gnu.expr.ModuleInfo: boolean checkCurrent(gnu.expr.ModuleManager,long)>($r8, $l3);

     label33:
        if $z0 == 0 goto label36;

     label34:
        $r7 = r0.<gnu.expr.Compilation: gnu.expr.ModuleInfo minfo>;

     label35:
        virtualinvoke $r7.<gnu.expr.ModuleInfo: void cleanupAfterCompilation()>();

        virtualinvoke r0.<gnu.expr.Compilation: void setState(int)>(14);

     label36:
        if $i0 < 8 goto label44;

     label37:
        $i1 = virtualinvoke r0.<gnu.expr.Compilation: int getState()>();

     label38:
        if $i1 >= 8 goto label44;

     label39:
        virtualinvoke r0.<gnu.expr.Compilation: void walkModule(gnu.expr.ModuleExp)>($r2);

     label40:
        $r5 = r0.<gnu.expr.Compilation: gnu.text.SourceMessages messages>;

     label41:
        $z0 = virtualinvoke $r5.<gnu.text.SourceMessages: boolean seenErrors()>();

     label42:
        if $z0 == 0 goto label75;

        $b2 = 100;

     label43:
        virtualinvoke r0.<gnu.expr.Compilation: void setState(int)>($b2);

     label44:
        if $i0 < 10 goto label55;

     label45:
        $i1 = virtualinvoke r0.<gnu.expr.Compilation: int getState()>();

     label46:
        if $i1 >= 10 goto label55;

     label47:
        $r16 = new gnu.expr.LitTable;

     label48:
        specialinvoke $r16.<gnu.expr.LitTable: void <init>(gnu.expr.Compilation)>(r0);

     label49:
        r0.<gnu.expr.Compilation: gnu.expr.LitTable litTable> = $r16;

     label50:
        virtualinvoke $r2.<gnu.expr.ModuleExp: void setCanRead(boolean)>(1);

        staticinvoke <gnu.expr.FindCapturedVars: void findCapturedVars(gnu.expr.Expression,gnu.expr.Compilation)>($r2, r0);

        virtualinvoke $r2.<gnu.expr.ModuleExp: void allocFields(gnu.expr.Compilation)>(r0);

        virtualinvoke $r2.<gnu.expr.ModuleExp: void allocChildMethods(gnu.expr.Compilation)>(r0);

     label51:
        $r5 = r0.<gnu.expr.Compilation: gnu.text.SourceMessages messages>;

     label52:
        $z0 = virtualinvoke $r5.<gnu.text.SourceMessages: boolean seenErrors()>();

     label53:
        if $z0 == 0 goto label76;

        $b2 = 100;

     label54:
        virtualinvoke r0.<gnu.expr.Compilation: void setState(int)>($b2);

     label55:
        if $i0 < 12 goto label69;

     label56:
        $i1 = virtualinvoke r0.<gnu.expr.Compilation: int getState()>();

     label57:
        if $i1 >= 12 goto label69;

     label58:
        $z0 = r0.<gnu.expr.Compilation: boolean immediate>;

     label59:
        if $z0 == 0 goto label64;

     label60:
        $r9 = staticinvoke <gnu.bytecode.ObjectType: java.lang.ClassLoader getContextClassLoader()>();

     label61:
        $r17 = new gnu.bytecode.ArrayClassLoader;

     label62:
        specialinvoke $r17.<gnu.bytecode.ArrayClassLoader: void <init>(java.lang.ClassLoader)>($r9);

     label63:
        r0.<gnu.expr.Compilation: gnu.bytecode.ArrayClassLoader loader> = $r17;

     label64:
        virtualinvoke r0.<gnu.expr.Compilation: void generateBytecode()>();

     label65:
        $r5 = r0.<gnu.expr.Compilation: gnu.text.SourceMessages messages>;

     label66:
        $z0 = virtualinvoke $r5.<gnu.text.SourceMessages: boolean seenErrors()>();

     label67:
        if $z0 == 0 goto label77;

        $b2 = 100;

     label68:
        virtualinvoke r0.<gnu.expr.Compilation: void setState(int)>($b2);

     label69:
        if $i0 < 14 goto label73;

     label70:
        $i0 = virtualinvoke r0.<gnu.expr.Compilation: int getState()>();

     label71:
        if $i0 >= 14 goto label73;

     label72:
        $r8 = staticinvoke <gnu.expr.ModuleManager: gnu.expr.ModuleManager getInstance()>();

        $r10 = virtualinvoke $r8.<gnu.expr.ModuleManager: java.lang.String getCompilationDirectory()>();

        virtualinvoke r0.<gnu.expr.Compilation: void outputClass(java.lang.String)>($r10);

        virtualinvoke r0.<gnu.expr.Compilation: void setState(int)>(14);

     label73:
        staticinvoke <gnu.expr.Compilation: void restoreCurrent(gnu.expr.Compilation)>($r1);

        return;

     label74:
        $b2 = 6;

        goto label26;

     label75:
        $b2 = 8;

        goto label43;

     label76:
        $b2 = 10;

        goto label54;

     label77:
        $b2 = 12;

        goto label68;

     label78:
        $r11 := @caughtexception;

     label79:
        virtualinvoke r0.<gnu.expr.Compilation: void setState(int)>(100);

        $r5 = virtualinvoke $r11.<gnu.text.SyntaxException: gnu.text.SourceMessages getMessages()>();

        $r12 = virtualinvoke r0.<gnu.expr.Compilation: gnu.text.SourceMessages getMessages()>();

     label80:
        if $r5 == $r12 goto label85;

     label81:
        $r19 = new java.lang.RuntimeException;

     label82:
        $r18 = new java.lang.StringBuilder;

     label83:
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("confussing syntax error: ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r19;

     label84:
        $r14 := @caughtexception;

        staticinvoke <gnu.expr.Compilation: void restoreCurrent(gnu.expr.Compilation)>($r1);

        throw $r14;

     label85:
        staticinvoke <gnu.expr.Compilation: void restoreCurrent(gnu.expr.Compilation)>($r1);

        return;

     label86:
        $r15 := @caughtexception;

     label87:
        $r20 = (java.io.IOException) $r15;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

        $r18 = new java.lang.StringBuilder;

     label88:
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("caught ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gnu.expr.Compilation: void error(char,java.lang.String)>(102, $r10);

        virtualinvoke r0.<gnu.expr.Compilation: void setState(int)>(100);

     label89:
        staticinvoke <gnu.expr.Compilation: void restoreCurrent(gnu.expr.Compilation)>($r1);

        return;

        catch gnu.text.SyntaxException from label01 to label02 with label78;
        catch gnu.text.SyntaxException from label03 to label04 with label78;
        catch gnu.text.SyntaxException from label05 to label06 with label78;
        catch gnu.text.SyntaxException from label07 to label08 with label78;
        catch gnu.text.SyntaxException from label09 to label10 with label78;
        catch gnu.text.SyntaxException from label11 to label12 with label78;
        catch gnu.text.SyntaxException from label13 to label14 with label78;
        catch java.io.IOException from label01 to label02 with label86;
        catch java.io.IOException from label03 to label04 with label86;
        catch java.io.IOException from label05 to label06 with label86;
        catch java.io.IOException from label07 to label08 with label86;
        catch java.io.IOException from label09 to label10 with label86;
        catch java.io.IOException from label11 to label12 with label86;
        catch java.io.IOException from label13 to label14 with label86;
        catch java.lang.Throwable from label01 to label02 with label84;
        catch java.lang.Throwable from label03 to label04 with label84;
        catch java.lang.Throwable from label05 to label12 with label84;
        catch java.lang.Throwable from label13 to label15 with label84;
        catch gnu.text.SyntaxException from label18 to label19 with label78;
        catch gnu.text.SyntaxException from label20 to label21 with label78;
        catch gnu.text.SyntaxException from label22 to label23 with label78;
        catch gnu.text.SyntaxException from label24 to label25 with label78;
        catch gnu.text.SyntaxException from label26 to label27 with label78;
        catch gnu.text.SyntaxException from label32 to label33 with label78;
        catch gnu.text.SyntaxException from label35 to label36 with label78;
        catch gnu.text.SyntaxException from label37 to label38 with label78;
        catch gnu.text.SyntaxException from label39 to label40 with label78;
        catch gnu.text.SyntaxException from label41 to label42 with label78;
        catch gnu.text.SyntaxException from label43 to label44 with label78;
        catch gnu.text.SyntaxException from label45 to label46 with label78;
        catch gnu.text.SyntaxException from label48 to label49 with label78;
        catch gnu.text.SyntaxException from label50 to label51 with label78;
        catch gnu.text.SyntaxException from label52 to label53 with label78;
        catch gnu.text.SyntaxException from label54 to label55 with label78;
        catch gnu.text.SyntaxException from label56 to label57 with label78;
        catch gnu.text.SyntaxException from label60 to label61 with label78;
        catch gnu.text.SyntaxException from label62 to label63 with label78;
        catch gnu.text.SyntaxException from label64 to label65 with label78;
        catch gnu.text.SyntaxException from label66 to label67 with label78;
        catch gnu.text.SyntaxException from label68 to label69 with label78;
        catch gnu.text.SyntaxException from label70 to label71 with label78;
        catch gnu.text.SyntaxException from label72 to label73 with label78;
        catch java.io.IOException from label18 to label19 with label86;
        catch java.io.IOException from label20 to label21 with label86;
        catch java.io.IOException from label22 to label23 with label86;
        catch java.io.IOException from label24 to label25 with label86;
        catch java.io.IOException from label26 to label27 with label86;
        catch java.io.IOException from label32 to label33 with label86;
        catch java.io.IOException from label35 to label36 with label86;
        catch java.io.IOException from label37 to label38 with label86;
        catch java.io.IOException from label39 to label40 with label86;
        catch java.io.IOException from label41 to label42 with label86;
        catch java.io.IOException from label43 to label44 with label86;
        catch java.io.IOException from label45 to label46 with label86;
        catch java.io.IOException from label48 to label49 with label86;
        catch java.io.IOException from label50 to label51 with label86;
        catch java.io.IOException from label52 to label53 with label86;
        catch java.io.IOException from label54 to label55 with label86;
        catch java.io.IOException from label56 to label57 with label86;
        catch java.io.IOException from label60 to label61 with label86;
        catch java.io.IOException from label62 to label63 with label86;
        catch java.io.IOException from label64 to label65 with label86;
        catch java.io.IOException from label66 to label67 with label86;
        catch java.io.IOException from label68 to label69 with label86;
        catch java.io.IOException from label70 to label71 with label86;
        catch java.io.IOException from label72 to label73 with label86;
        catch java.lang.Throwable from label18 to label19 with label84;
        catch java.lang.Throwable from label20 to label25 with label84;
        catch java.lang.Throwable from label26 to label28 with label84;
        catch java.lang.Throwable from label29 to label30 with label84;
        catch java.lang.Throwable from label31 to label33 with label84;
        catch java.lang.Throwable from label34 to label36 with label84;
        catch java.lang.Throwable from label37 to label38 with label84;
        catch java.lang.Throwable from label39 to label42 with label84;
        catch java.lang.Throwable from label43 to label44 with label84;
        catch java.lang.Throwable from label45 to label46 with label84;
        catch java.lang.Throwable from label47 to label48 with label84;
        catch java.lang.Throwable from label48 to label53 with label84;
        catch java.lang.Throwable from label54 to label55 with label84;
        catch java.lang.Throwable from label56 to label57 with label84;
        catch java.lang.Throwable from label58 to label59 with label84;
        catch java.lang.Throwable from label60 to label62 with label84;
        catch java.lang.Throwable from label62 to label67 with label84;
        catch java.lang.Throwable from label68 to label69 with label84;
        catch java.lang.Throwable from label70 to label71 with label84;
        catch java.lang.Throwable from label72 to label73 with label84;
        catch java.lang.Throwable from label79 to label80 with label84;
        catch java.lang.Throwable from label81 to label82 with label84;
        catch java.lang.Throwable from label82 to label83 with label84;
        catch java.lang.Throwable from label83 to label84 with label84;
        catch java.lang.Throwable from label87 to label88 with label84;
        catch java.lang.Throwable from label88 to label89 with label84;
    }
