    public static final java.lang.Object evalModule1(gnu.mapping.Environment, gnu.expr.Compilation, java.net.URL, gnu.mapping.OutPort) throws gnu.text.SyntaxException
    {
        java.lang.Throwable $r17, $r18;
        gnu.mapping.OutPort $r3;
        gnu.mapping.Environment $r0;
        java.net.URL $r2;
        gnu.text.SourceMessages $r7;
        java.lang.Thread r9, $r15;
        java.lang.Boolean $r13;
        gnu.expr.ModuleExp $r4;
        boolean $z0;
        gnu.expr.ModuleInfo $r5;
        java.lang.RuntimeException $r10;
        gnu.expr.Compilation $r1, $r6;
        java.lang.Class $r14;
        java.lang.ClassLoader r8, $r16;

        $r0 := @parameter0: gnu.mapping.Environment;

        $r1 := @parameter1: gnu.expr.Compilation;

        $r2 := @parameter2: java.net.URL;

        $r3 := @parameter3: gnu.mapping.OutPort;

        $r4 = virtualinvoke $r1.<gnu.expr.Compilation: gnu.expr.ModuleExp getModule()>();

        $r5 = $r1.<gnu.expr.Compilation: gnu.expr.ModuleInfo minfo>;

        $r4.<gnu.expr.ModuleExp: gnu.expr.ModuleInfo info> = $r5;

        $r0 = staticinvoke <gnu.mapping.Environment: gnu.mapping.Environment setSaveCurrent(gnu.mapping.Environment)>($r0);

        $r6 = staticinvoke <gnu.expr.Compilation: gnu.expr.Compilation setSaveCurrent(gnu.expr.Compilation)>($r1);

        $r7 = virtualinvoke $r1.<gnu.expr.Compilation: gnu.text.SourceMessages getMessages()>();

        r8 = null;

        r9 = null;

        $z0 = <gnu.expr.ModuleExp: boolean alwaysCompile>;

        if $z0 == 0 goto label01;

        $z0 = <gnu.expr.ModuleExp: boolean neverCompile>;

        if $z0 == 0 goto label01;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("alwaysCompile and neverCompile are both true!");

        throw $r10;

     label01:
        $z0 = <gnu.expr.ModuleExp: boolean neverCompile>;

        if $z0 == 0 goto label02;

        $r1.<gnu.expr.Compilation: boolean mustCompile> = 0;

     label02:
        virtualinvoke $r1.<gnu.expr.Compilation: void process(int)>(6);

        $r5 = $r1.<gnu.expr.Compilation: gnu.expr.ModuleInfo minfo>;

        virtualinvoke $r5.<gnu.expr.ModuleInfo: void loadByStages(int)>(8);

     label03:
        goto label05;

     label04:
        staticinvoke <gnu.mapping.Environment: void restoreCurrent(gnu.mapping.Environment)>($r0);

        staticinvoke <gnu.expr.Compilation: void restoreCurrent(gnu.expr.Compilation)>($r6);

        return null;

     label05:
        $z0 = virtualinvoke $r7.<gnu.text.SourceMessages: boolean seenErrors()>();

     label06:
        if $z0 != 0 goto label04;

     label07:
        $z0 = $r1.<gnu.expr.Compilation: boolean mustCompile>;

     label08:
        if $z0 != 0 goto label13;

     label09:
        $z0 = <gnu.expr.Compilation: boolean debugPrintFinalExpr>;

     label10:
        goto label11;

     label11:
        $r13 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label12:
        staticinvoke <gnu.mapping.Environment: void restoreCurrent(gnu.mapping.Environment)>($r0);

        staticinvoke <gnu.expr.Compilation: void restoreCurrent(gnu.expr.Compilation)>($r6);

        return $r13;

     label13:
        $r14 = staticinvoke <gnu.expr.ModuleExp: java.lang.Class evalToClass(gnu.expr.Compilation,java.net.URL)>($r1, null);

     label14:
        if $r14 != null goto label15;

        staticinvoke <gnu.mapping.Environment: void restoreCurrent(gnu.mapping.Environment)>($r0);

        staticinvoke <gnu.expr.Compilation: void restoreCurrent(gnu.expr.Compilation)>($r6);

        return null;

     label15:
        $r15 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

     label16:
        r9 = $r15;

     label17:
        $r16 = virtualinvoke $r15.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label18:
        r8 = $r16;

     label19:
        $r16 = virtualinvoke $r14.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r15.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($r16);

     label20:
        $r4.<gnu.expr.ModuleExp: gnu.expr.Expression body> = null;

        $r4.<gnu.expr.ModuleExp: gnu.bytecode.Variable thisVariable> = null;

     label21:
        goto label26;

     label22:
        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label23:
        staticinvoke <gnu.mapping.Environment: void restoreCurrent(gnu.mapping.Environment)>($r0);

        staticinvoke <gnu.expr.Compilation: void restoreCurrent(gnu.expr.Compilation)>($r6);

        if r9 == null goto label24;

        virtualinvoke r9.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r8);

     label24:
        return $r13;

     label25:
        $r17 := @caughtexception;

        r9 = null;

        goto label20;

     label26:
        $z0 = virtualinvoke $r7.<gnu.text.SourceMessages: boolean seenErrors()>();

     label27:
        if $z0 != 0 goto label22;

        staticinvoke <gnu.mapping.Environment: void restoreCurrent(gnu.mapping.Environment)>($r0);

        staticinvoke <gnu.expr.Compilation: void restoreCurrent(gnu.expr.Compilation)>($r6);

        if r9 == null goto label28;

        virtualinvoke r9.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r8);

     label28:
        return $r14;

     label29:
        $r18 := @caughtexception;

        staticinvoke <gnu.mapping.Environment: void restoreCurrent(gnu.mapping.Environment)>($r0);

        staticinvoke <gnu.expr.Compilation: void restoreCurrent(gnu.expr.Compilation)>($r6);

        if r9 == null goto label30;

        virtualinvoke r9.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r8);

     label30:
        throw $r18;

        catch java.lang.Throwable from label02 to label03 with label29;
        catch java.lang.Throwable from label05 to label06 with label29;
        catch java.lang.Throwable from label07 to label08 with label29;
        catch java.lang.Throwable from label09 to label10 with label29;
        catch java.lang.Throwable from label11 to label12 with label29;
        catch java.lang.Throwable from label13 to label14 with label29;
        catch java.lang.Throwable from label15 to label16 with label25;
        catch java.lang.Throwable from label17 to label18 with label25;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label20 to label21 with label29;
        catch java.lang.Throwable from label22 to label23 with label29;
        catch java.lang.Throwable from label26 to label27 with label29;
    }
