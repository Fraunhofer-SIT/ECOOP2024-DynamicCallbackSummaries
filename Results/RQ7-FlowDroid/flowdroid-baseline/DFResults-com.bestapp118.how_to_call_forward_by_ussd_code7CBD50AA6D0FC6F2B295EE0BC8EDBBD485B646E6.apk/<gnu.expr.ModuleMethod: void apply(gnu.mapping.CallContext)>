    public void apply(gnu.mapping.CallContext) throws java.lang.Throwable
    {
        java.lang.Object[] $r3;
        java.lang.Error $r4;
        gnu.expr.ModuleMethod r0;
        gnu.mapping.CallContext $r2;
        int $i0;
        java.lang.Object $r1, $r7, $r8, $r9;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: gnu.expr.ModuleMethod;

        $r2 := @parameter0: gnu.mapping.CallContext;

        $i0 = $r2.<gnu.mapping.CallContext: int pc>;

        if $i0 == 0 goto label6;

        if $i0 == 1 goto label5;

        if $i0 == 2 goto label4;

        if $i0 == 3 goto label3;

        if $i0 == 4 goto label2;

        if $i0 != 5 goto label1;

        $r3 = $r2.<gnu.mapping.CallContext: java.lang.Object[] values>;

        $r1 = virtualinvoke r0.<gnu.expr.ModuleMethod: java.lang.Object applyN(java.lang.Object[])>($r3);

        goto label7;

     label1:
        $r4 = new java.lang.Error;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("internal error - apply ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.Error: void <init>(java.lang.String)>($r6);

        throw $r4;

     label2:
        $r7 = $r2.<gnu.mapping.CallContext: java.lang.Object value1>;

        $r8 = $r2.<gnu.mapping.CallContext: java.lang.Object value2>;

        $r9 = $r2.<gnu.mapping.CallContext: java.lang.Object value3>;

        $r1 = $r2.<gnu.mapping.CallContext: java.lang.Object value4>;

        $r1 = virtualinvoke r0.<gnu.expr.ModuleMethod: java.lang.Object apply4(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r8, $r9, $r1);

        goto label7;

     label3:
        $r1 = $r2.<gnu.mapping.CallContext: java.lang.Object value1>;

        $r7 = $r2.<gnu.mapping.CallContext: java.lang.Object value2>;

        $r8 = $r2.<gnu.mapping.CallContext: java.lang.Object value3>;

        $r1 = virtualinvoke r0.<gnu.expr.ModuleMethod: java.lang.Object apply3(java.lang.Object,java.lang.Object,java.lang.Object)>($r1, $r7, $r8);

        goto label7;

     label4:
        $r1 = $r2.<gnu.mapping.CallContext: java.lang.Object value1>;

        $r7 = $r2.<gnu.mapping.CallContext: java.lang.Object value2>;

        $r1 = virtualinvoke r0.<gnu.expr.ModuleMethod: java.lang.Object apply2(java.lang.Object,java.lang.Object)>($r1, $r7);

        goto label7;

     label5:
        $r1 = $r2.<gnu.mapping.CallContext: java.lang.Object value1>;

        $r1 = virtualinvoke r0.<gnu.expr.ModuleMethod: java.lang.Object apply1(java.lang.Object)>($r1);

        goto label7;

     label6:
        $r1 = virtualinvoke r0.<gnu.expr.ModuleMethod: java.lang.Object apply0()>();

     label7:
        virtualinvoke $r2.<gnu.mapping.CallContext: void writeValue(java.lang.Object)>($r1);

        return;
    }
