    public java.lang.Object apply2(gnu.expr.ModuleMethod, java.lang.Object, java.lang.Object)
    {
        gnu.mapping.Values r11;
        gnu.expr.ModuleMethod $r1;
        java.lang.ClassCastException $r5, $r7, $r9, $r10;
        gnu.mapping.WrongType $r6;
        gnu.lists.Pair $r8;
        int $i0;
        java.lang.Object $r2, $r3;
        kawa.lib.lists r0;
        java.lang.Number $r4;

        r0 := @this: kawa.lib.lists;

        $r1 := @parameter0: gnu.expr.ModuleMethod;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        $i0 = $r1.<gnu.expr.ModuleMethod: int selector>;

        lookupswitch($i0)
        {
            case 2: goto label48;
            case 3: goto label01;
            case 4: goto label45;
            case 5: goto label42;
            case 6: goto label01;
            case 7: goto label01;
            case 8: goto label41;
            case 9: goto label01;
            case 10: goto label40;
            case 11: goto label01;
            case 12: goto label39;
            case 13: goto label01;
            case 14: goto label38;
            case 15: goto label01;
            case 16: goto label37;
            case 17: goto label01;
            case 18: goto label36;
            case 19: goto label01;
            case 20: goto label35;
            case 21: goto label01;
            case 22: goto label34;
            case 23: goto label01;
            case 24: goto label33;
            case 25: goto label01;
            case 26: goto label32;
            case 27: goto label01;
            case 28: goto label31;
            case 29: goto label01;
            case 30: goto label30;
            case 31: goto label01;
            case 32: goto label29;
            case 33: goto label01;
            case 34: goto label28;
            case 35: goto label01;
            case 36: goto label27;
            case 37: goto label01;
            case 38: goto label26;
            case 39: goto label01;
            case 40: goto label25;
            case 41: goto label01;
            case 42: goto label24;
            case 43: goto label01;
            case 44: goto label23;
            case 45: goto label01;
            case 46: goto label22;
            case 47: goto label01;
            case 48: goto label21;
            case 49: goto label01;
            case 50: goto label20;
            case 51: goto label01;
            case 52: goto label19;
            case 53: goto label01;
            case 54: goto label18;
            case 55: goto label01;
            case 56: goto label17;
            case 57: goto label01;
            case 58: goto label16;
            case 59: goto label01;
            case 60: goto label15;
            case 61: goto label01;
            case 62: goto label14;
            case 63: goto label01;
            case 64: goto label01;
            case 65: goto label01;
            case 66: goto label11;
            case 67: goto label08;
            case 68: goto label01;
            case 69: goto label01;
            case 70: goto label07;
            case 71: goto label06;
            case 72: goto label05;
            case 73: goto label01;
            case 74: goto label04;
            case 75: goto label03;
            case 76: goto label02;
            default: goto label01;
        };

     label01:
        $r2 = specialinvoke r0.<gnu.expr.ModuleBody: java.lang.Object apply2(gnu.expr.ModuleMethod,java.lang.Object,java.lang.Object)>($r1, $r2, $r3);

        return $r2;

     label02:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object assoc(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $r2;

     label03:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object assv(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $r2;

     label04:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object assq(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $r2;

     label05:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object member(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $r2;

     label06:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object memv(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $r2;

     label07:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object memq(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $r2;

     label08:
        $r4 = (java.lang.Number) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

     label09:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object listRef(java.lang.Object,int)>($r2, $i0);

        return $r2;

     label10:
        $r5 := @caughtexception;

        $r6 = new gnu.mapping.WrongType;

        specialinvoke $r6.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r5, "list-ref", 2, $r3);

        throw $r6;

     label11:
        $r4 = (java.lang.Number) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

     label12:
        $r2 = staticinvoke <kawa.lib.lists: java.lang.Object listTail(java.lang.Object,int)>($r2, $i0);

        return $r2;

     label13:
        $r7 := @caughtexception;

        $r6 = new gnu.mapping.WrongType;

        specialinvoke $r6.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r7, "list-tail", 2, $r3);

        throw $r6;

     label14:
        staticinvoke <kawa.lib.lists: void lambda28(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label15:
        staticinvoke <kawa.lib.lists: void lambda27(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label16:
        staticinvoke <kawa.lib.lists: void lambda26(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label17:
        staticinvoke <kawa.lib.lists: void lambda25(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label18:
        staticinvoke <kawa.lib.lists: void lambda24(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label19:
        staticinvoke <kawa.lib.lists: void lambda23(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label20:
        staticinvoke <kawa.lib.lists: void lambda22(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label21:
        staticinvoke <kawa.lib.lists: void lambda21(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label22:
        staticinvoke <kawa.lib.lists: void lambda20(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label23:
        staticinvoke <kawa.lib.lists: void lambda19(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label24:
        staticinvoke <kawa.lib.lists: void lambda18(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label25:
        staticinvoke <kawa.lib.lists: void lambda17(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label26:
        staticinvoke <kawa.lib.lists: void lambda16(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label27:
        staticinvoke <kawa.lib.lists: void lambda15(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label28:
        staticinvoke <kawa.lib.lists: void lambda14(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label29:
        staticinvoke <kawa.lib.lists: void lambda13(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label30:
        staticinvoke <kawa.lib.lists: void lambda12(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label31:
        staticinvoke <kawa.lib.lists: void lambda11(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label32:
        staticinvoke <kawa.lib.lists: void lambda10(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label33:
        staticinvoke <kawa.lib.lists: void lambda9(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label34:
        staticinvoke <kawa.lib.lists: void lambda8(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label35:
        staticinvoke <kawa.lib.lists: void lambda7(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label36:
        staticinvoke <kawa.lib.lists: void lambda6(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label37:
        staticinvoke <kawa.lib.lists: void lambda5(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label38:
        staticinvoke <kawa.lib.lists: void lambda4(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label39:
        staticinvoke <kawa.lib.lists: void lambda3(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label40:
        staticinvoke <kawa.lib.lists: void lambda2(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label41:
        staticinvoke <kawa.lib.lists: void lambda1(java.lang.Object,java.lang.Object)>($r2, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label42:
        $r8 = (gnu.lists.Pair) $r2;

     label43:
        staticinvoke <kawa.lib.lists: void setCdr$Ex(gnu.lists.Pair,java.lang.Object)>($r8, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label44:
        $r9 := @caughtexception;

        $r6 = new gnu.mapping.WrongType;

        specialinvoke $r6.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r9, "set-cdr!", 1, $r2);

        throw $r6;

     label45:
        $r8 = (gnu.lists.Pair) $r2;

     label46:
        staticinvoke <kawa.lib.lists: void setCar$Ex(gnu.lists.Pair,java.lang.Object)>($r8, $r3);

        r11 = <gnu.mapping.Values: gnu.mapping.Values empty>;

        return r11;

     label47:
        $r10 := @caughtexception;

        $r6 = new gnu.mapping.WrongType;

        specialinvoke $r6.<gnu.mapping.WrongType: void <init>(java.lang.ClassCastException,java.lang.String,int,java.lang.Object)>($r10, "set-car!", 1, $r2);

        throw $r6;

     label48:
        $r8 = staticinvoke <kawa.lib.lists: gnu.lists.Pair cons(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $r8;

        catch java.lang.ClassCastException from label08 to label09 with label10;
        catch java.lang.ClassCastException from label11 to label12 with label13;
        catch java.lang.ClassCastException from label42 to label43 with label44;
        catch java.lang.ClassCastException from label45 to label46 with label47;
    }
