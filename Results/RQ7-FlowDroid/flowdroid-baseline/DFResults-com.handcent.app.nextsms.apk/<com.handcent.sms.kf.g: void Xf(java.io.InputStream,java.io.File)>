    public static void Xf(java.io.InputStream, java.io.File)
    {
        java.lang.Throwable $r1;
        java.io.PrintStream $r5;
        byte[] $r4;
        int $i0;
        java.io.FileOutputStream $r0;
        java.io.File $r3;
        java.io.InputStream $r2;

        $r2 := @parameter0: java.io.InputStream;

        $r3 := @parameter1: java.io.File;

        $r0 = new java.io.FileOutputStream;

     label01:
        specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);

     label02:
        $r4 = newarray (byte)[1024];

     label03:
        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r4);

     label04:
        if $i0 <= 0 goto label07;

     label05:
        virtualinvoke $r0.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i0);

     label06:
        goto label03;

     label07:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

        virtualinvoke $r0.<java.io.OutputStream: void close()>();

     label08:
        return;

     label09:
        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Error Writing/Reading Streams.");

        return;

     label10:
        $r1 := @caughtexception;

        goto label09;

        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label04 with label10;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.IOException from label07 to label08 with label10;
    }
