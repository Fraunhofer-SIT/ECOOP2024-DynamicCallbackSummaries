<?xml version="1.0" encoding="UTF-8"?><virtualedges><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setMaxLines(int)"></source><targets><direct subsignature="void invalidate()" index="-1" target-position="base"></direct><direct subsignature="void requestLayout()" index="-1" target-position="base"></direct><direct subsignature="void onMeasure(int,int)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.content.res.Resources getResources()"></source><targets><direct subsignature="android.app.Activity getCurrentActivity()" index="-1" target-position="base"></direct><direct subsignature="java.lang.String getDefaultUnit()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="boolean postDelayed(java.lang.Runnable,long)"></source><targets><direct subsignature="void run()" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setPadding(int,int,int,int)"></source><targets><direct subsignature="void invalidate()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="int checkSelfPermission(java.lang.String)"></source><targets><direct subsignature="android.app.Activity getCurrentActivity()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="java.lang.Object getSystemService(java.lang.String)"></source><targets><direct subsignature="android.app.Activity getCurrentActivity()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="java.io.FileOutputStream openFileOutput(java.lang.String,int)"></source><targets><direct subsignature="android.app.Activity getCurrentActivity()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="boolean deleteFile(java.lang.String)"></source><targets><direct subsignature="android.app.Activity getCurrentActivity()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setMinLines(int)"></source><targets><direct subsignature="void invalidate()" index="-1" target-position="base"></direct><direct subsignature="void requestLayout()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.os.AsyncTask execute(java.lang.Object[])"></source><targets><direct subsignature="java.lang.Object doInBackground(java.lang.Object[])" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setMinDate(long)"></source><targets><direct subsignature="void windowCreated(org.appcelerator.titanium.TiBaseActivity,android.os.Bundle)" index="0" target-position="argument"></direct><direct subsignature="boolean handleMessage(android.os.Message)" index="0" target-position="argument"></direct><direct subsignature="org.appcelerator.titanium.proxy.ActivityProxy getActivityProxy()" index="0" target-position="argument"></direct><direct subsignature="void initObject(org.appcelerator.kroll.KrollProxySupport)" index="0" target-position="argument"></direct><direct subsignature="org.appcelerator.kroll.KrollObject getKrollObject()" index="0" target-position="argument"></direct><direct subsignature="void handleCreationDict(org.appcelerator.kroll.KrollDict)" index="0" target-position="argument"></direct><direct subsignature="void onPropertyChanged(java.lang.String,java.lang.Object)" index="0" target-position="argument"></direct><direct subsignature="void handleOpen(org.appcelerator.kroll.KrollDict)" index="0" target-position="argument"></direct><direct subsignature="void onDraw(android.graphics.Canvas)" index="0" target-position="argument"></direct><direct subsignature="void setActivity(android.app.Activity)" index="0" target-position="argument"></direct><direct subsignature="boolean contains(java.lang.Object)" index="0" target-position="argument"></direct><direct subsignature="void eventListenerAdded(java.lang.String,int,org.appcelerator.kroll.KrollProxy)" index="0" target-position="argument"></direct><direct subsignature="void attachBaseContext(android.content.Context)" index="0" target-position="argument"></direct><direct subsignature="java.lang.Object call(org.appcelerator.kroll.KrollObject,java.lang.Object[])" index="0" target-position="argument"></direct><direct subsignature="boolean fireEvent(java.lang.String,java.lang.Object)" index="0" target-position="argument"></direct><direct subsignature="org.appcelerator.kroll.KrollDict getLangConversionTable()" index="0" target-position="argument"></direct><direct subsignature="android.app.Activity getWindowActivity()" index="0" target-position="argument"></direct><direct subsignature="void fillIntent(android.app.Activity,android.content.Intent)" index="0" target-position="argument"></direct><direct subsignature="org.appcelerator.kroll.KrollProxy getParentForBubbling()" index="0" target-position="argument"></direct><direct subsignature="void requestLayout()" index="0" target-position="argument"></direct><direct subsignature="boolean hasProperty(java.lang.String)" index="0" target-position="argument"></direct><direct subsignature="void setProperty(java.lang.String,java.lang.Object)" index="0" target-position="argument"></direct><direct subsignature="void setGCFlag()" index="0" target-position="argument"></direct><direct subsignature="void doRelease()" index="0" target-position="argument"></direct><direct subsignature="void initActivity(android.app.Activity)" index="0" target-position="argument"></direct><direct subsignature="void listenerAdded(java.lang.String,int,org.appcelerator.kroll.KrollProxy)" index="0" target-position="argument"></direct><direct subsignature="java.lang.Object callProperty(java.lang.String,java.lang.Object[])" index="0" target-position="argument"></direct><direct subsignature="boolean onSetAlpha(int)" index="0" target-position="argument"></direct><direct subsignature="void run()" index="0" target-position="argument"></direct><direct subsignature="void finalize()" index="0" target-position="argument"></direct><direct subsignature="void onEventFired(java.lang.String,java.lang.Object)" index="0" target-position="argument"></direct><direct subsignature="void doRunModule(java.lang.String,java.lang.String,org.appcelerator.kroll.KrollProxySupport)" index="0" target-position="argument"></direct><direct subsignature="void invalidate()" index="0" target-position="argument"></direct><direct subsignature="void open(java.lang.Object)" index="0" target-position="argument"></direct><direct subsignature="org.appcelerator.titanium.view.TiUIView createView(android.app.Activity)" index="0" target-position="argument"></direct><direct subsignature="void onWindowActivityCreated()" index="0" target-position="argument"></direct><direct subsignature="void onHasListenersChanged(java.lang.String,boolean)" index="0" target-position="argument"></direct><direct subsignature="void initRuntime()" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setShadowLayer(float,float,float,int)"></source><targets><direct subsignature="void invalidate()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setContentView(android.view.View)"></source><targets><direct subsignature="void onMeasure(int,int)" index="0" target-position="argument"></direct><direct subsignature="void onLayout(boolean,int,int,int,int)" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="static" signature="&lt;java.net.ResponseCache: void setDefault(java.net.ResponseCache)&gt;"></source><targets><direct subsignature="java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map)" index="0" target-position="argument"></direct><direct subsignature="java.net.CacheRequest put(java.net.URI,java.net.URLConnection)" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void onBoundsChange(android.graphics.Rect)"></source><targets><direct subsignature="void draw(android.graphics.Canvas)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.content.ContentResolver getContentResolver()"></source><targets><direct subsignature="java.lang.String getAppGUID()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="java.io.File getDir(java.lang.String,int)"></source><targets><direct subsignature="android.app.Activity getCurrentActivity()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="java.lang.Object get()"></source><targets><direct subsignature="java.lang.Object initialValue()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)"></source><targets><direct subsignature="java.lang.String getDeployType()" index="-1" target-position="base"></direct><direct subsignature="android.app.Activity getCurrentActivity()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.content.pm.ApplicationInfo getApplicationInfo()"></source><targets><direct subsignature="void loadAppProperties()" index="-1" target-position="base"></direct><direct subsignature="org.appcelerator.kroll.common.TiDeployData getDeployData()" index="-1" target-position="base"></direct><direct subsignature="java.lang.String getDeployType()" index="-1" target-position="base"></direct><direct subsignature="android.app.Activity getCurrentActivity()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setSingleLine(boolean)"></source><targets><direct subsignature="void invalidate()" index="-1" target-position="base"></direct><direct subsignature="void requestLayout()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setGravity(int)"></source><targets><direct subsignature="void invalidate()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="static" signature="&lt;android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)&gt;"></source><targets><direct subsignature="void onChildViewAdded(android.view.View,android.view.View)" index="0" target-position="argument"></direct><direct subsignature="void onMeasure(int,int)" index="0" target-position="argument"></direct><direct subsignature="boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)" index="0" target-position="argument"></direct><direct subsignature="void requestLayout()" index="0" target-position="argument"></direct><direct subsignature="void onLayout(boolean,int,int,int,int)" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.view.Window getWindow()"></source><targets><direct subsignature="boolean isDestroyed()" index="-1" target-position="base"></direct><direct subsignature="void windowCreated(android.os.Bundle)" index="-1" target-position="base"></direct><direct subsignature="void onWindowFocusChanged(boolean)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void onUserInteraction()"></source><targets><direct subsignature="void onUserLeaveHint()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="com.google.android.gms.common.api.GoogleApiClient$Builder addConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)"></source><targets><direct subsignature="void onConnected(android.os.Bundle)" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setTextColor(int)"></source><targets><direct subsignature="void invalidate()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="java.lang.String getPackageName()"></source><targets><direct subsignature="java.lang.String getAppGUID()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.content.res.AssetManager getAssets()"></source><targets><direct subsignature="boolean isDestroyed()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="boolean isDestroyed()"></source><targets><direct subsignature="void loadScript()" index="-1" target-position="base"></direct><direct subsignature="void onUserInteraction()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setText(java.lang.CharSequence,android.widget.TextView$BufferType)"></source><targets><direct subsignature="void invalidate()" index="-1" target-position="base"></direct><direct subsignature="void requestLayout()" index="-1" target-position="base"></direct><direct subsignature="void onMeasure(int,int)" index="-1" target-position="base"></direct></targets></edge></virtualedges>