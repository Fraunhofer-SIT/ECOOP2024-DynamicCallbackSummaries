<?xml version="1.0" encoding="UTF-8"?><virtualedges><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="java.lang.Object get()"></source><targets><direct subsignature="java.lang.Object initialValue()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setRedirectHandler(org.apache.http.client.RedirectHandler)"></source><targets><direct subsignature="boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.content.res.Resources getResources()"></source><targets><direct subsignature="android.app.Activity getCurrentActivity()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="boolean isFinishing()"></source><targets><direct subsignature="void windowCreated()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.database.sqlite.SQLiteDatabase getReadableDatabase()"></source><targets><direct subsignature="void onCreate(android.database.sqlite.SQLiteDatabase)" index="-1" target-position="base"></direct><direct subsignature="void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.content.SharedPreferences getSharedPreferences(java.lang.String,int)"></source><targets><direct subsignature="java.lang.String getDeployType()" index="-1" target-position="base"></direct><direct subsignature="android.app.Activity getCurrentActivity()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)"></source><targets><direct subsignature="java.lang.String getDeployType()" index="-1" target-position="base"></direct><direct subsignature="android.app.Activity getCurrentActivity()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="static" signature="&lt;java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)&gt;"></source><targets><direct subsignature="void uncaughtException(java.lang.Thread,java.lang.Throwable)" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="java.lang.Object getSystemService(java.lang.String)"></source><targets><direct subsignature="java.lang.String getDeployType()" index="-1" target-position="base"></direct><direct subsignature="java.lang.String getAppGUID()" index="-1" target-position="base"></direct><direct subsignature="android.app.Activity getCurrentActivity()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void start()"></source><targets><direct subsignature="void run()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void addIdleHandler(android.os.MessageQueue$IdleHandler)"></source><targets><direct subsignature="boolean queueIdle()" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="static" signature="&lt;android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)&gt;"></source><targets><direct subsignature="void onChildViewAdded(android.view.View,android.view.View)" index="0" target-position="argument"></direct><direct subsignature="boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)" index="0" target-position="argument"></direct><direct subsignature="void setOnClickListener(android.view.View$OnClickListener)" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)"></source><targets><direct subsignature="java.lang.Object handleResponse(org.apache.http.HttpResponse)" index="2" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void write(byte[])"></source><targets><direct subsignature="void handleShow(org.appcelerator.kroll.KrollDict)" index="0" target-position="argument"></direct><direct subsignature="boolean handleMessage(android.os.Message)" index="0" target-position="argument"></direct><direct subsignature="void initObject(org.appcelerator.kroll.KrollProxySupport)" index="0" target-position="argument"></direct><direct subsignature="org.appcelerator.kroll.KrollObject getKrollObject()" index="0" target-position="argument"></direct><direct subsignature="void handleCreationDict(org.appcelerator.kroll.KrollDict)" index="0" target-position="argument"></direct><direct subsignature="void setActivity(android.app.Activity)" index="0" target-position="argument"></direct><direct subsignature="void onResume(android.app.Activity)" index="0" target-position="argument"></direct><direct subsignature="boolean contains(java.lang.Object)" index="0" target-position="argument"></direct><direct subsignature="java.lang.String toString()" index="0" target-position="argument"></direct><direct subsignature="boolean fireEvent(java.lang.String,java.lang.Object)" index="0" target-position="argument"></direct><direct subsignature="org.appcelerator.kroll.KrollDict getLangConversionTable()" index="0" target-position="argument"></direct><direct subsignature="void handleCreationArgs(org.appcelerator.kroll.KrollModule,java.lang.Object[])" index="0" target-position="argument"></direct><direct subsignature="org.appcelerator.kroll.KrollProxy getParentForBubbling()" index="0" target-position="argument"></direct><direct subsignature="void setOnClickListener(android.view.View$OnClickListener)" index="0" target-position="argument"></direct><direct subsignature="void processProperties(org.appcelerator.kroll.KrollDict)" index="0" target-position="argument"></direct><direct subsignature="void setProperty(java.lang.String,java.lang.Object)" index="0" target-position="argument"></direct><direct subsignature="void setGCFlag()" index="0" target-position="argument"></direct><direct subsignature="void doRelease()" index="0" target-position="argument"></direct><direct subsignature="void initActivity(android.app.Activity)" index="0" target-position="argument"></direct><direct subsignature="java.lang.Object callProperty(java.lang.String,java.lang.Object[])" index="0" target-position="argument"></direct><direct subsignature="void run()" index="0" target-position="argument"></direct><direct subsignature="void finalize()" index="0" target-position="argument"></direct><direct subsignature="void doRunModule(java.lang.String,java.lang.String,org.appcelerator.kroll.KrollProxySupport)" index="0" target-position="argument"></direct><direct subsignature="void open(java.lang.Object)" index="0" target-position="argument"></direct><direct subsignature="org.appcelerator.titanium.view.TiUIView createView(android.app.Activity)" index="0" target-position="argument"></direct><direct subsignature="void onHasListenersChanged(java.lang.String,boolean)" index="0" target-position="argument"></direct><direct subsignature="void initRuntime()" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="java.lang.Object put(java.lang.Object,java.lang.Object)"></source><targets><direct subsignature="int sizeOf(java.lang.Object,java.lang.Object)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="java.lang.String getPackageName()"></source><targets><direct subsignature="org.appcelerator.kroll.common.TiDeployData getDeployData()" index="-1" target-position="base"></direct><direct subsignature="android.app.Activity getCurrentActivity()" index="-1" target-position="base"></direct><direct subsignature="java.lang.String getDefaultUnit()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.content.res.AssetManager getAssets()"></source><targets><direct subsignature="java.lang.String getDeployType()" index="-1" target-position="base"></direct><direct subsignature="android.app.Activity getCurrentActivity()" index="-1" target-position="base"></direct><direct subsignature="java.lang.String getDefaultUnit()" index="-1" target-position="base"></direct><direct subsignature="void verifyCustomModules(org.appcelerator.titanium.TiRootActivity)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.content.ContentResolver getContentResolver()"></source><targets><direct subsignature="org.appcelerator.kroll.common.TiDeployData getDeployData()" index="-1" target-position="base"></direct><direct subsignature="java.lang.String getDeployType()" index="-1" target-position="base"></direct><direct subsignature="java.lang.String getAppGUID()" index="-1" target-position="base"></direct><direct subsignature="int getThreadStackSize()" index="-1" target-position="base"></direct><direct subsignature="boolean isFastDevMode()" index="-1" target-position="base"></direct><direct subsignature="org.appcelerator.kroll.util.TiTempFileHelper getTempFileHelper()" index="-1" target-position="base"></direct></targets></edge></virtualedges>