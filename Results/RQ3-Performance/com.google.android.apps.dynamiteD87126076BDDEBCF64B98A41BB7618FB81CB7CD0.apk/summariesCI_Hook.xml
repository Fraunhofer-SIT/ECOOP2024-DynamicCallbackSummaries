<?xml version="1.0" encoding="UTF-8"?><virtualedges><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setBackground(android.graphics.drawable.Drawable)"></source><targets><direct subsignature="boolean isStateful()" index="-1" target-position="base"></direct><direct subsignature="int getIntrinsicHeight()" index="-1" target-position="base"></direct><direct subsignature="boolean getPadding(android.graphics.Rect)" index="-1" target-position="base"></direct><direct subsignature="void setBackgroundDrawable(android.graphics.drawable.Drawable)" index="-1" target-position="base"></direct><direct subsignature="void onBoundsChange(android.graphics.Rect)" index="-1" target-position="base"></direct><direct subsignature="int getIntrinsicWidth()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.graphics.drawable.Drawable getDrawable(int)"></source><targets><direct subsignature="android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="boolean post(java.lang.Runnable)"></source><targets><direct subsignature="void run()" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="java.util.Iterator iterator()"></source><targets><direct subsignature="int size()" index="-1" target-position="base"></direct><direct subsignature="java.lang.Object get(int)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="boolean setVisible(boolean,boolean)"></source><targets><direct subsignature="boolean onStateChange(int[])" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void invalidateSelf()"></source><targets><direct subsignature="android.graphics.drawable.Drawable$ConstantState getConstantState()" index="-1" target-position="base"></direct><direct subsignature="void setTintList(android.content.res.ColorStateList)" index="-1" target-position="base"></direct><direct subsignature="boolean onStateChange(int[])" index="-1" target-position="base"></direct><direct subsignature="void setColorFilter(android.graphics.ColorFilter)" index="-1" target-position="base"></direct><direct subsignature="void setTintMode(android.graphics.PorterDuff$Mode)" index="-1" target-position="base"></direct><direct subsignature="boolean getPadding(android.graphics.Rect)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String)"></source><targets><direct subsignature="android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setInterpolator(android.animation.TimeInterpolator)"></source><targets><direct subsignature="float getInterpolation(float)" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="boolean setState(int[])"></source><targets><direct subsignature="boolean onStateChange(int[])" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setTextAppearance(android.content.Context,int)"></source><targets><direct subsignature="void setTypeface(android.graphics.Typeface,int)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="int[] getState()"></source><targets><direct subsignature="android.graphics.drawable.Drawable mutate()" index="-1" target-position="base"></direct><direct subsignature="android.graphics.drawable.Drawable$ConstantState getConstantState()" index="-1" target-position="base"></direct><direct subsignature="void setTintList(android.content.res.ColorStateList)" index="-1" target-position="base"></direct><direct subsignature="void setTint(int)" index="-1" target-position="base"></direct><direct subsignature="boolean onStateChange(int[])" index="-1" target-position="base"></direct><direct subsignature="void setColorFilter(android.graphics.ColorFilter)" index="-1" target-position="base"></direct><direct subsignature="void invalidateSelf()" index="-1" target-position="base"></direct><direct subsignature="boolean getPadding(android.graphics.Rect)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void run()"></source><targets><direct subsignature="void onConfigure(android.database.sqlite.SQLiteDatabase)" index="-1" target-position="base"></direct><direct subsignature="android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="int getLayoutDirection()"></source><targets><direct subsignature="void invalidateSelf()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="boolean isStateful()"></source><targets><direct subsignature="android.graphics.drawable.Drawable$ConstantState getConstantState()" index="-1" target-position="base"></direct><direct subsignature="boolean onStateChange(int[])" index="-1" target-position="base"></direct><direct subsignature="int getOpacity()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)"></source><targets><direct subsignature="android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="boolean getPadding(android.graphics.Rect)"></source><targets><direct subsignature="android.graphics.drawable.Drawable$ConstantState getConstantState()" index="-1" target-position="base"></direct><direct subsignature="boolean onStateChange(int[])" index="-1" target-position="base"></direct><direct subsignature="void invalidateSelf()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.database.sqlite.SQLiteDatabase getWritableDatabase()"></source><targets><direct subsignature="void onCreate(android.database.sqlite.SQLiteDatabase)" index="-1" target-position="base"></direct><direct subsignature="void onOpen(android.database.sqlite.SQLiteDatabase)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)"></source><targets><direct subsignature="void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)" index="-1" target-position="base"></direct><direct subsignature="void setTypeface(android.graphics.Typeface,int)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setTypeface(android.graphics.Typeface,int)"></source><targets><direct subsignature="void setTextAppearance(android.content.Context,int)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setImageTintList(android.content.res.ColorStateList)"></source><targets><direct subsignature="void setBackgroundDrawable(android.graphics.drawable.Drawable)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="java.lang.CharSequence getTitle()"></source><targets><direct subsignature="android.view.View findViewById(int)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void start()"></source><targets><direct subsignature="void run()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)"></source><targets><direct subsignature="android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="static" signature="&lt;java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)&gt;"></source><targets><direct subsignature="java.lang.Object run()" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="int getIntrinsicHeight()"></source><targets><direct subsignature="void setTintList(android.content.res.ColorStateList)" index="-1" target-position="base"></direct><direct subsignature="void setTintMode(android.graphics.PorterDuff$Mode)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="java.lang.Object get()"></source><targets><direct subsignature="java.lang.Object initialValue()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)"></source><targets><direct subsignature="void init(gqh)" index="0" target-position="argument"></direct><direct subsignature="void add(int,java.lang.Object)" index="0" target-position="argument"></direct><direct subsignature="boolean getBooleanFlagValue(java.lang.String,boolean,int)" index="0" target-position="argument"></direct><direct subsignature="boolean addAll(java.util.Collection)" index="0" target-position="argument"></direct><direct subsignature="java.util.concurrent.Future submit(java.lang.Runnable)" index="0" target-position="argument"></direct><direct subsignature="boolean isShutdown()" index="0" target-position="argument"></direct><direct subsignature="void resolveLayoutDirection(int)" index="0" target-position="argument"></direct><direct subsignature="java.lang.Object get(int)" index="0" target-position="argument"></direct><direct subsignature="android.graphics.drawable.Drawable newDrawable()" index="0" target-position="argument"></direct><direct subsignature="void execute(java.lang.Runnable)" index="0" target-position="argument"></direct><direct subsignature="boolean isEmpty()" index="0" target-position="argument"></direct><direct subsignature="boolean isTerminated()" index="0" target-position="argument"></direct><direct subsignature="java.util.Collection values()" index="0" target-position="argument"></direct><direct subsignature="boolean equals(java.lang.Object)" index="0" target-position="argument"></direct><direct subsignature="boolean onStateChange(int[])" index="0" target-position="argument"></direct><direct subsignature="void run()" index="0" target-position="argument"></direct><direct subsignature="boolean add(java.lang.Object)" index="0" target-position="argument"></direct><direct subsignature="android.os.IBinder asBinder()" index="0" target-position="argument"></direct><direct subsignature="int size()" index="0" target-position="argument"></direct><direct subsignature="java.util.Iterator iterator()" index="0" target-position="argument"></direct><direct subsignature="java.lang.Object get(java.lang.Object)" index="0" target-position="argument"></direct><direct subsignature="java.util.Set keySet()" index="0" target-position="argument"></direct><direct subsignature="java.lang.Object[] toArray()" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.content.res.Resources$Theme getTheme()"></source><targets><direct subsignature="android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)"></source><targets><direct subsignature="android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.app.FragmentManager getFragmentManager()"></source><targets><direct subsignature="void setContentView(int)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="boolean isVisible()"></source><targets><direct subsignature="int getIntrinsicHeight()" index="-1" target-position="base"></direct><direct subsignature="int getIntrinsicWidth()" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])"></source><targets><direct subsignature="android.view.View findViewById(int)" index="-1" target-position="base"></direct><direct subsignature="android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)" index="-1" target-position="base"></direct></targets></edge></virtualedges>