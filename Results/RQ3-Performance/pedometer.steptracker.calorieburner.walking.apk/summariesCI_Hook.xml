<?xml version="1.0" encoding="UTF-8"?><virtualedges><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setContentView(int)"></source><targets><direct subsignature="com.github.mikephil.charting.data.BarData getBarData()" index="0" target-position="argument"></direct><direct subsignature="int getMaxVisibleCount()" index="0" target-position="argument"></direct><direct subsignature="android.os.Parcelable onSaveInstanceState()" index="0" target-position="argument"></direct><direct subsignature="void onMeasure(int,int)" index="0" target-position="argument"></direct><direct subsignature="com.github.mikephil.charting.data.ChartData getData()" index="0" target-position="argument"></direct><direct subsignature="void initPreferenceDetails()" index="0" target-position="argument"></direct><direct subsignature="void onSizeChanged(int,int,int,int)" index="0" target-position="argument"></direct><direct subsignature="void onLayout(boolean,int,int,int,int)" index="0" target-position="argument"></direct><direct subsignature="float getY()" index="0" target-position="argument"></direct><direct subsignature="void onDraw(android.graphics.Canvas)" index="0" target-position="argument"></direct><direct subsignature="boolean isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency)" index="0" target-position="argument"></direct><direct subsignature="void calculateOffsets()" index="0" target-position="argument"></direct><direct subsignature="void calcMinMax()" index="0" target-position="argument"></direct><direct subsignature="void computeScroll()" index="0" target-position="argument"></direct><direct subsignature="void invalidate()" index="0" target-position="argument"></direct><direct subsignature="void init()" index="0" target-position="argument"></direct><direct subsignature="com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)" index="0" target-position="argument"></direct><direct subsignature="boolean isDrawBarShadowEnabled()" index="0" target-position="argument"></direct><direct subsignature="void notifyDataSetChanged()" index="0" target-position="argument"></direct><direct subsignature="boolean isDrawValueAboveBarEnabled()" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void onMeasure(int,int)"></source><targets><direct subsignature="void onDraw(android.graphics.Canvas)" index="-1" target-position="base"></direct><direct subsignature="void onSizeChanged(int,int,int,int)" index="-1" target-position="base"></direct><direct subsignature="boolean verifyDrawable(android.graphics.drawable.Drawable)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setupWithViewPager(android.support.v4.view.ViewPager)"></source><targets><direct subsignature="java.lang.CharSequence getPageTitle(int)" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void setAdapter(android.support.v4.view.PagerAdapter)"></source><targets><direct subsignature="android.support.v4.app.Fragment getItem(int)" index="0" target-position="argument"></direct><direct subsignature="int getCount()" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void addListener(android.animation.Animator$AnimatorListener)"></source><targets><direct subsignature="void onAnimationEnd(android.animation.Animator)" index="0" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="void onBoundsChange(android.graphics.Rect)"></source><targets><direct subsignature="void draw(android.graphics.Canvas)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="static" signature="&lt;android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])&gt;"></source><targets><direct subsignature="void set(java.lang.Object,java.lang.Object)" index="1" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="android.view.MenuInflater getMenuInflater()"></source><targets><direct subsignature="boolean onCreateOptionsMenu(android.view.Menu)" index="-1" target-position="base"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="static" signature="&lt;android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,int[])&gt;"></source><targets><direct subsignature="void set(java.lang.Object,java.lang.Object)" index="1" target-position="argument"></direct></targets></edge><edge type="GENERIC_FAKE"><source invoketype="instance" subsignature="boolean postDelayed(java.lang.Runnable,long)"></source><targets><direct subsignature="void run()" index="0" target-position="argument"></direct></targets></edge></virtualedges>